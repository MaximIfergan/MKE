Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  4.30it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]# =============================      Start mke evaluation      =============================  0%|          | 0/13025 [00:00<?, ?it/s]  0%|          | 1/13025 [00:02<9:46:54,  2.70s/it]  0%|          | 2/13025 [00:04<7:35:23,  2.10s/it]  0%|          | 3/13025 [00:06<6:51:04,  1.89s/it]  0%|          | 4/13025 [00:07<6:40:16,  1.84s/it]  0%|          | 5/13025 [00:09<6:48:47,  1.88s/it]  0%|          | 7/13025 [00:12<5:30:54,  1.53s/it]  0%|          | 9/13025 [00:14<5:02:24,  1.39s/it]  0%|          | 10/13025 [00:16<5:50:41,  1.62s/it]  0%|          | 11/13025 [00:18<6:02:24,  1.67s/it]  0%|          | 13/13025 [00:20<4:50:00,  1.34s/it]  0%|          | 14/13025 [00:22<5:07:02,  1.42s/it]  0%|          | 15/13025 [00:23<5:27:46,  1.51s/it]  0%|          | 17/13025 [00:25<4:32:30,  1.26s/it]  0%|          | 18/13025 [00:27<4:50:56,  1.34s/it]  0%|          | 20/13025 [00:28<4:06:01,  1.14s/it]  0%|          | 22/13025 [00:30<3:45:17,  1.04s/it]  0%|          | 24/13025 [00:32<3:32:30,  1.02it/s]  0%|          | 27/13025 [00:34<2:54:34,  1.24it/s]  0%|          | 28/13025 [00:35<3:25:45,  1.05it/s]  0%|          | 29/13025 [00:37<3:53:41,  1.08s/it]  0%|          | 30/13025 [00:39<4:26:43,  1.23s/it]  0%|          | 32/13025 [00:40<3:55:06,  1.09s/it]  0%|          | 33/13025 [00:42<4:22:59,  1.21s/it]  0%|          | 34/13025 [00:44<4:46:59,  1.33s/it]  0%|          | 37/13025 [00:45<3:23:58,  1.06it/s]  0%|          | 38/13025 [00:47<3:52:46,  1.08s/it]  0%|          | 39/13025 [00:49<4:12:21,  1.17s/it]  0%|          | 41/13025 [00:50<3:43:20,  1.03s/it]  0%|          | 43/13025 [00:52<3:28:40,  1.04it/s]  0%|          | 45/13025 [00:54<3:19:31,  1.08it/s]  0%|          | 46/13025 [00:55<3:53:11,  1.08s/it]  0%|          | 47/13025 [00:57<4:20:25,  1.20s/it]  0%|          | 49/13025 [00:59<3:53:15,  1.08s/it]  0%|          | 50/13025 [01:01<4:24:17,  1.22s/it]  0%|          | 52/13025 [01:02<3:53:20,  1.08s/it]  0%|          | 53/13025 [01:04<4:22:00,  1.21s/it]  0%|          | 57/13025 [01:06<2:48:39,  1.28it/s]  0%|          | 58/13025 [01:07<3:22:53,  1.07it/s]  0%|          | 59/13025 [01:10<4:18:42,  1.20s/it]  0%|          | 60/13025 [01:12<5:17:48,  1.47s/it]  0%|          | 61/13025 [01:14<6:00:43,  1.67s/it]  0%|          | 63/13025 [01:17<5:08:40,  1.43s/it]  1%|          | 66/13025 [01:18<3:44:05,  1.04s/it]  1%|          | 71/13025 [01:20<2:24:01,  1.50it/s]  1%|          | 74/13025 [01:22<2:18:15,  1.56it/s]  1%|          | 76/13025 [01:23<2:28:18,  1.46it/s]  1%|          | 77/13025 [01:25<2:59:25,  1.20it/s]  1%|          | 78/13025 [01:27<3:31:16,  1.02it/s]  1%|          | 79/13025 [01:28<3:58:36,  1.11s/it]  1%|          | 80/13025 [01:30<4:26:07,  1.23s/it]  1%|          | 81/13025 [01:32<4:51:52,  1.35s/it]  1%|          | 83/13025 [01:34<4:05:43,  1.14s/it]  1%|          | 84/13025 [01:35<4:32:52,  1.27s/it]  1%|          | 87/13025 [01:37<3:20:27,  1.08it/s]  1%|          | 90/13025 [01:39<2:46:23,  1.30it/s]  1%|          | 92/13025 [01:40<2:49:59,  1.27it/s]  1%|          | 93/13025 [01:42<3:27:13,  1.04it/s]  1%|          | 94/13025 [01:44<3:56:57,  1.10s/it]  1%|          | 95/13025 [01:46<4:26:38,  1.24s/it]  1%|          | 97/13025 [01:47<3:56:28,  1.10s/it]  1%|          | 98/13025 [01:49<4:20:55,  1.21s/it]  1%|          | 100/13025 [01:51<3:47:33,  1.06s/it]  1%|          | 102/13025 [01:52<3:29:31,  1.03it/s]  1%|          | 104/13025 [01:54<3:20:25,  1.07it/s]  1%|          | 105/13025 [01:56<3:51:04,  1.07s/it]  1%|          | 106/13025 [01:57<4:20:31,  1.21s/it]  1%|          | 108/13025 [01:59<3:48:06,  1.06s/it]  1%|          | 109/13025 [02:01<4:17:44,  1.20s/it]  1%|          | 110/13025 [02:02<4:47:46,  1.34s/it]  1%|          | 112/13025 [02:04<4:09:09,  1.16s/it]  1%|          | 116/13025 [02:06<2:46:09,  1.29it/s]  1%|          | 117/13025 [02:07<3:15:18,  1.10it/s]  1%|          | 121/13025 [02:10<2:38:17,  1.36it/s]  1%|          | 122/13025 [02:12<3:34:45,  1.00it/s]  1%|          | 124/13025 [02:15<3:44:19,  1.04s/it]  1%|          | 125/13025 [02:17<4:30:24,  1.26s/it]  1%|          | 126/13025 [02:19<4:50:08,  1.35s/it]  1%|          | 128/13025 [02:20<4:12:37,  1.18s/it]  1%|          | 129/13025 [02:22<4:34:36,  1.28s/it]  1%|          | 130/13025 [02:24<4:53:55,  1.37s/it]  1%|          | 131/13025 [02:25<5:06:02,  1.42s/it]  1%|          | 133/13025 [02:27<4:16:08,  1.19s/it]  1%|          | 134/13025 [02:29<4:39:47,  1.30s/it]  1%|          | 138/13025 [02:30<2:49:21,  1.27it/s]  1%|          | 141/13025 [02:32<2:29:24,  1.44it/s]  1%|          | 143/13025 [02:33<2:36:23,  1.37it/s]  1%|          | 144/13025 [02:35<3:09:14,  1.13it/s]  1%|          | 145/13025 [02:37<3:40:54,  1.03s/it]  1%|          | 146/13025 [02:38<4:07:43,  1.15s/it]  1%|          | 147/13025 [02:40<4:35:59,  1.29s/it]  1%|          | 150/13025 [02:42<3:19:12,  1.08it/s]  1%|          | 151/13025 [02:44<3:48:39,  1.07s/it]  1%|          | 152/13025 [02:45<4:16:16,  1.19s/it]  1%|          | 156/13025 [02:47<2:46:54,  1.28it/s]  1%|          | 159/13025 [02:49<2:28:48,  1.44it/s]  1%|▏         | 164/13025 [02:50<1:52:22,  1.91it/s]  1%|▏         | 165/13025 [02:52<2:22:12,  1.51it/s]  1%|▏         | 166/13025 [02:54<2:53:53,  1.23it/s]  1%|▏         | 168/13025 [02:55<2:56:27,  1.21it/s]  1%|▏         | 169/13025 [02:57<3:28:43,  1.03it/s]  1%|▏         | 171/13025 [02:59<3:20:30,  1.07it/s]  1%|▏         | 172/13025 [03:00<3:51:12,  1.08s/it]  1%|▏         | 173/13025 [03:02<4:14:41,  1.19s/it]  1%|▏         | 176/13025 [03:04<3:08:46,  1.13it/s]  1%|▏         | 177/13025 [03:05<3:40:48,  1.03s/it]  1%|▏         | 180/13025 [03:07<2:53:24,  1.23it/s]  1%|▏         | 181/13025 [03:09<3:30:43,  1.02it/s]  1%|▏         | 186/13025 [03:11<2:32:05,  1.41it/s]  1%|▏         | 187/13025 [03:14<3:18:52,  1.08it/s]  1%|▏         | 188/13025 [03:16<4:08:43,  1.16s/it]  1%|▏         | 189/13025 [03:18<4:33:10,  1.28s/it]  1%|▏         | 191/13025 [03:19<3:59:01,  1.12s/it]  1%|▏         | 192/13025 [03:21<4:19:19,  1.21s/it]  1%|▏         | 193/13025 [03:23<4:42:07,  1.32s/it]  2%|▏         | 196/13025 [03:24<3:22:59,  1.05it/s]  2%|▏         | 197/13025 [03:26<3:49:04,  1.07s/it]  2%|▏         | 198/13025 [03:27<4:13:12,  1.18s/it]  2%|▏         | 200/13025 [03:29<3:46:12,  1.06s/it]  2%|▏         | 202/13025 [03:31<3:28:50,  1.02it/s]  2%|▏         | 203/13025 [03:33<3:59:14,  1.12s/it]  2%|▏         | 205/13025 [03:34<3:36:20,  1.01s/it]  2%|▏         | 206/13025 [03:36<4:01:34,  1.13s/it]  2%|▏         | 208/13025 [03:37<3:33:30,  1.00it/s]  2%|▏         | 209/13025 [03:39<3:59:42,  1.12s/it]  2%|▏         | 210/13025 [03:40<4:22:31,  1.23s/it]  2%|▏         | 211/13025 [03:42<4:49:13,  1.35s/it]  2%|▏         | 212/13025 [03:44<5:12:16,  1.46s/it]  2%|▏         | 213/13025 [03:46<5:25:26,  1.52s/it]  2%|▏         | 214/13025 [03:47<5:37:33,  1.58s/it]  2%|▏         | 216/13025 [03:49<4:27:42,  1.25s/it]  2%|▏         | 218/13025 [03:51<3:49:12,  1.07s/it]  2%|▏         | 220/13025 [03:52<3:30:04,  1.02it/s]  2%|▏         | 221/13025 [03:54<3:57:57,  1.12s/it]  2%|▏         | 222/13025 [03:56<4:23:28,  1.23s/it]  2%|▏         | 223/13025 [03:57<4:41:35,  1.32s/it]  2%|▏         | 224/13025 [03:59<5:02:42,  1.42s/it]  2%|▏         | 225/13025 [04:01<5:17:09,  1.49s/it]  2%|▏         | 228/13025 [04:02<3:29:45,  1.02it/s]  2%|▏         | 231/13025 [04:04<2:49:30,  1.26it/s]  2%|▏         | 232/13025 [04:06<3:22:18,  1.05it/s]  2%|▏         | 233/13025 [04:07<3:53:05,  1.09s/it]  2%|▏         | 234/13025 [04:09<4:33:09,  1.28s/it]  2%|▏         | 236/13025 [04:12<4:27:33,  1.26s/it]  2%|▏         | 237/13025 [04:14<5:16:09,  1.48s/it]  2%|▏         | 238/13025 [04:16<5:56:23,  1.67s/it]  2%|▏         | 239/13025 [04:18<5:54:08,  1.66s/it]  2%|▏         | 241/13025 [04:19<4:36:26,  1.30s/it]  2%|▏         | 242/13025 [04:21<4:50:05,  1.36s/it]  2%|▏         | 244/13025 [04:23<4:04:04,  1.15s/it]  2%|▏         | 245/13025 [04:24<4:24:26,  1.24s/it]  2%|▏         | 246/13025 [04:26<4:47:06,  1.35s/it]  2%|▏         | 248/13025 [04:28<4:01:08,  1.13s/it]  2%|▏         | 249/13025 [04:29<4:19:10,  1.22s/it]  2%|▏         | 255/13025 [04:31<2:08:22,  1.66it/s]  2%|▏         | 258/13025 [04:32<2:04:35,  1.71it/s]  2%|▏         | 261/13025 [04:34<2:01:55,  1.74it/s]  2%|▏         | 263/13025 [04:36<2:12:57,  1.60it/s]  2%|▏         | 264/13025 [04:37<2:43:34,  1.30it/s]  2%|▏         | 265/13025 [04:39<3:15:06,  1.09it/s]  2%|▏         | 266/13025 [04:41<3:49:12,  1.08s/it]  2%|▏         | 269/13025 [04:42<2:58:29,  1.19it/s]  2%|▏         | 271/13025 [04:44<2:54:01,  1.22it/s]  2%|▏         | 272/13025 [04:46<3:26:33,  1.03it/s]  2%|▏         | 275/13025 [04:47<2:45:12,  1.29it/s]  2%|▏         | 277/13025 [04:49<2:45:07,  1.29it/s]  2%|▏         | 278/13025 [04:50<3:10:17,  1.12it/s]  2%|▏         | 279/13025 [04:52<3:41:33,  1.04s/it]  2%|▏         | 282/13025 [04:53<2:50:21,  1.25it/s]  2%|▏         | 285/13025 [04:55<2:28:45,  1.43it/s]  2%|▏         | 286/13025 [04:57<3:01:43,  1.17it/s]  2%|▏         | 287/13025 [04:58<3:28:32,  1.02it/s]  2%|▏         | 288/13025 [05:00<3:53:43,  1.10s/it]  2%|▏         | 290/13025 [05:01<3:30:11,  1.01it/s]  2%|▏         | 294/13025 [05:03<2:24:09,  1.47it/s]  2%|▏         | 297/13025 [05:05<2:14:07,  1.58it/s]  2%|▏         | 301/13025 [05:06<1:52:58,  1.88it/s]  2%|▏         | 303/13025 [05:08<2:07:31,  1.66it/s]  2%|▏         | 304/13025 [05:10<2:45:59,  1.28it/s]  2%|▏         | 307/13025 [05:12<2:41:36,  1.31it/s]  2%|▏         | 311/13025 [05:14<2:25:35,  1.46it/s]  2%|▏         | 314/13025 [05:17<2:31:47,  1.40it/s]  2%|▏         | 315/13025 [05:18<2:58:30,  1.19it/s]  2%|▏         | 316/13025 [05:20<3:19:48,  1.06it/s]  2%|▏         | 317/13025 [05:21<3:43:11,  1.05s/it]  2%|▏         | 318/13025 [05:23<4:10:26,  1.18s/it]  2%|▏         | 320/13025 [05:25<3:42:53,  1.05s/it]  2%|▏         | 321/13025 [05:26<4:09:44,  1.18s/it]  2%|▏         | 322/13025 [05:28<4:32:20,  1.29s/it]  2%|▏         | 323/13025 [05:30<4:55:58,  1.40s/it]  2%|▏         | 324/13025 [05:31<5:11:21,  1.47s/it]  3%|▎         | 327/13025 [05:33<3:27:22,  1.02it/s]  3%|▎         | 328/13025 [05:35<3:53:29,  1.10s/it]  3%|▎         | 330/13025 [05:36<3:29:51,  1.01it/s]  3%|▎         | 334/13025 [05:38<2:24:24,  1.46it/s]  3%|▎         | 335/13025 [05:39<2:55:16,  1.21it/s]  3%|▎         | 337/13025 [05:41<2:54:44,  1.21it/s]  3%|▎         | 338/13025 [05:43<3:28:58,  1.01it/s]  3%|▎         | 339/13025 [05:44<3:58:31,  1.13s/it]  3%|▎         | 340/13025 [05:46<4:18:43,  1.22s/it]  3%|▎         | 341/13025 [05:48<4:43:41,  1.34s/it]  3%|▎         | 342/13025 [05:49<4:59:02,  1.41s/it]  3%|▎         | 343/13025 [05:51<5:16:26,  1.50s/it]  3%|▎         | 345/13025 [05:53<4:09:27,  1.18s/it]  3%|▎         | 350/13025 [05:54<2:19:50,  1.51it/s]  3%|▎         | 351/13025 [05:56<2:47:16,  1.26it/s]  3%|▎         | 352/13025 [05:57<3:18:08,  1.07it/s]  3%|▎         | 353/13025 [05:59<3:39:21,  1.04s/it]  3%|▎         | 354/13025 [06:00<4:02:31,  1.15s/it]  3%|▎         | 356/13025 [06:02<3:33:43,  1.01s/it]  3%|▎         | 357/13025 [06:04<4:03:32,  1.15s/it]  3%|▎         | 358/13025 [06:05<4:24:46,  1.25s/it]  3%|▎         | 359/13025 [06:07<4:42:23,  1.34s/it]  3%|▎         | 361/13025 [06:08<3:54:19,  1.11s/it]  3%|▎         | 362/13025 [06:11<4:48:24,  1.37s/it]  3%|▎         | 363/13025 [06:13<5:32:36,  1.58s/it]  3%|▎         | 364/13025 [06:15<6:06:20,  1.74s/it]  3%|▎         | 366/13025 [06:17<5:06:31,  1.45s/it]  3%|▎         | 372/13025 [06:19<2:27:23,  1.43it/s]  3%|▎         | 373/13025 [06:20<2:53:44,  1.21it/s]  3%|▎         | 374/13025 [06:22<3:21:01,  1.05it/s]  3%|▎         | 375/13025 [06:24<3:49:49,  1.09s/it]  3%|▎         | 377/13025 [06:25<3:29:37,  1.01it/s]  3%|▎         | 378/13025 [06:27<3:56:45,  1.12s/it]  3%|▎         | 379/13025 [06:29<4:20:10,  1.23s/it]  3%|▎         | 380/13025 [06:30<4:40:07,  1.33s/it]  3%|▎         | 381/13025 [06:32<4:54:38,  1.40s/it]  3%|▎         | 382/13025 [06:34<5:08:28,  1.46s/it]  3%|▎         | 385/13025 [06:35<3:25:26,  1.03it/s]  3%|▎         | 387/13025 [06:37<3:14:13,  1.08it/s]  3%|▎         | 389/13025 [06:39<3:08:47,  1.12it/s]  3%|▎         | 391/13025 [06:40<3:04:50,  1.14it/s]  3%|▎         | 392/13025 [06:42<3:32:28,  1.01s/it]  3%|▎         | 394/13025 [06:43<3:18:09,  1.06it/s]  3%|▎         | 395/13025 [06:45<3:47:01,  1.08s/it]  3%|▎         | 398/13025 [06:47<2:52:34,  1.22it/s]  3%|▎         | 399/13025 [06:48<3:24:06,  1.03it/s]  3%|▎         | 400/13025 [06:50<3:50:49,  1.10s/it]  3%|▎         | 402/13025 [06:51<3:29:17,  1.01it/s]  3%|▎         | 404/13025 [06:53<3:16:28,  1.07it/s]  3%|▎         | 406/13025 [06:55<3:10:01,  1.11it/s]  3%|▎         | 408/13025 [06:56<3:03:01,  1.15it/s]  3%|▎         | 411/13025 [06:58<2:36:24,  1.34it/s]  3%|▎         | 417/13025 [07:00<1:44:48,  2.01it/s]  3%|▎         | 418/13025 [07:01<2:10:48,  1.61it/s]  3%|▎         | 422/13025 [07:03<1:52:28,  1.87it/s]  3%|▎         | 424/13025 [07:05<2:05:58,  1.67it/s]  3%|▎         | 425/13025 [07:06<2:36:42,  1.34it/s]  3%|▎         | 429/13025 [07:08<2:09:11,  1.63it/s]  3%|▎         | 431/13025 [07:10<2:33:57,  1.36it/s]  3%|▎         | 435/13025 [07:13<2:20:08,  1.50it/s]  3%|▎         | 436/13025 [07:15<2:57:08,  1.18it/s]  3%|▎         | 437/13025 [07:17<3:34:25,  1.02s/it]  3%|▎         | 438/13025 [07:18<3:58:02,  1.13s/it]  3%|▎         | 441/13025 [07:20<3:03:24,  1.14it/s]  3%|▎         | 442/13025 [07:22<3:32:04,  1.01s/it]  3%|▎         | 443/13025 [07:23<3:56:00,  1.13s/it]  3%|▎         | 444/13025 [07:25<4:19:37,  1.24s/it]  3%|▎         | 446/13025 [07:27<3:49:36,  1.10s/it]  3%|▎         | 447/13025 [07:28<4:16:40,  1.22s/it]  3%|▎         | 452/13025 [07:30<2:23:50,  1.46it/s]  3%|▎         | 454/13025 [07:32<2:29:42,  1.40it/s]  3%|▎         | 455/13025 [07:33<3:00:16,  1.16it/s]  4%|▎         | 456/13025 [07:35<3:28:14,  1.01it/s]  4%|▎         | 458/13025 [07:36<3:15:33,  1.07it/s]  4%|▎         | 459/13025 [07:38<3:44:19,  1.07s/it]  4%|▎         | 460/13025 [07:40<4:08:26,  1.19s/it]  4%|▎         | 465/13025 [07:41<2:17:26,  1.52it/s]  4%|▎         | 467/13025 [07:43<2:26:28,  1.43it/s]  4%|▎         | 468/13025 [07:45<2:58:22,  1.17it/s]  4%|▎         | 469/13025 [07:46<3:29:40,  1.00s/it]  4%|▎         | 471/13025 [07:48<3:14:40,  1.07it/s]  4%|▎         | 472/13025 [07:50<3:44:58,  1.08s/it]  4%|▎         | 473/13025 [07:51<4:08:37,  1.19s/it]  4%|▎         | 474/13025 [07:53<4:28:16,  1.28s/it]  4%|▎         | 475/13025 [07:54<4:47:44,  1.38s/it]  4%|▎         | 476/13025 [07:56<5:02:14,  1.45s/it]  4%|▎         | 477/13025 [07:58<5:11:07,  1.49s/it]  4%|▎         | 479/13025 [07:59<4:10:06,  1.20s/it]  4%|▎         | 480/13025 [08:01<4:32:09,  1.30s/it]  4%|▎         | 481/13025 [08:03<4:52:24,  1.40s/it]  4%|▎         | 482/13025 [08:04<5:04:27,  1.46s/it]  4%|▎         | 485/13025 [08:06<3:24:26,  1.02it/s]  4%|▎         | 488/13025 [08:07<2:44:00,  1.27it/s]  4%|▍         | 489/13025 [08:09<3:27:01,  1.01it/s]  4%|▍         | 494/13025 [08:12<2:26:49,  1.42it/s]  4%|▍         | 495/13025 [08:14<3:08:32,  1.11it/s]  4%|▍         | 497/13025 [08:16<3:26:41,  1.01it/s]  4%|▍         | 498/13025 [08:18<3:48:01,  1.09s/it]  4%|▍         | 500/13025 [08:20<3:30:24,  1.01s/it]  4%|▍         | 501/13025 [08:21<3:55:52,  1.13s/it]  4%|▍         | 502/13025 [08:23<4:20:20,  1.25s/it]  4%|▍         | 503/13025 [08:25<4:41:55,  1.35s/it]  4%|▍         | 505/13025 [08:26<4:01:44,  1.16s/it]  4%|▍         | 506/13025 [08:28<4:23:35,  1.26s/it]  4%|▍         | 507/13025 [08:30<4:39:48,  1.34s/it]  4%|▍         | 508/13025 [08:31<4:56:08,  1.42s/it]  4%|▍         | 509/13025 [08:33<5:06:14,  1.47s/it]  4%|▍         | 510/13025 [08:35<5:17:12,  1.52s/it]  4%|▍         | 512/13025 [08:36<4:13:16,  1.21s/it]  4%|▍         | 513/13025 [08:38<4:32:09,  1.31s/it]  4%|▍         | 515/13025 [08:39<3:50:52,  1.11s/it]  4%|▍         | 516/13025 [08:41<4:18:49,  1.24s/it]  4%|▍         | 518/13025 [08:43<3:42:47,  1.07s/it]  4%|▍         | 519/13025 [08:44<4:06:58,  1.18s/it]  4%|▍         | 520/13025 [08:46<4:27:08,  1.28s/it]  4%|▍         | 521/13025 [08:48<4:49:00,  1.39s/it]  4%|▍         | 522/13025 [08:49<5:03:10,  1.45s/it]  4%|▍         | 524/13025 [08:51<4:02:44,  1.17s/it]  4%|▍         | 525/13025 [08:52<4:26:04,  1.28s/it]  4%|▍         | 528/13025 [08:54<3:07:36,  1.11it/s]  4%|▍         | 529/13025 [08:56<3:37:11,  1.04s/it]  4%|▍         | 531/13025 [08:57<3:18:59,  1.05it/s]  4%|▍         | 532/13025 [08:59<3:45:34,  1.08s/it]  4%|▍         | 533/13025 [09:00<4:07:12,  1.19s/it]  4%|▍         | 535/13025 [09:02<3:37:02,  1.04s/it]  4%|▍         | 536/13025 [09:04<4:01:52,  1.16s/it]  4%|▍         | 537/13025 [09:05<4:28:21,  1.29s/it]  4%|▍         | 539/13025 [09:07<3:49:06,  1.10s/it]  4%|▍         | 541/13025 [09:09<3:26:51,  1.01it/s]  4%|▍         | 543/13025 [09:11<3:35:19,  1.04s/it]  4%|▍         | 546/13025 [09:13<3:09:07,  1.10it/s]  4%|▍         | 549/13025 [09:15<2:55:54,  1.18it/s]  4%|▍         | 550/13025 [09:17<3:34:12,  1.03s/it]  4%|▍         | 551/13025 [09:19<3:54:49,  1.13s/it]  4%|▍         | 552/13025 [09:20<4:13:49,  1.22s/it]  4%|▍         | 553/13025 [09:22<4:35:32,  1.33s/it]  4%|▍         | 555/13025 [09:24<3:46:59,  1.09s/it]  4%|▍         | 556/13025 [09:25<4:11:30,  1.21s/it]  4%|▍         | 557/13025 [09:27<4:32:53,  1.31s/it]  4%|▍         | 558/13025 [09:28<4:47:21,  1.38s/it]  4%|▍         | 560/13025 [09:30<3:58:06,  1.15s/it]  4%|▍         | 561/13025 [09:32<4:24:11,  1.27s/it]  4%|▍         | 562/13025 [09:33<4:40:13,  1.35s/it]  4%|▍         | 563/13025 [09:35<4:55:51,  1.42s/it]  4%|▍         | 564/13025 [09:37<5:05:54,  1.47s/it]  4%|▍         | 566/13025 [09:38<4:10:15,  1.21s/it]  4%|▍         | 569/13025 [09:40<3:07:02,  1.11it/s]  4%|▍         | 570/13025 [09:42<3:37:40,  1.05s/it]  4%|▍         | 572/13025 [09:43<3:22:52,  1.02it/s]  4%|▍         | 573/13025 [09:45<3:49:56,  1.11s/it]  4%|▍         | 575/13025 [09:47<3:28:30,  1.00s/it]  4%|▍         | 576/13025 [09:48<3:55:19,  1.13s/it]  4%|▍         | 578/13025 [09:50<3:34:49,  1.04s/it]  4%|▍         | 579/13025 [09:52<3:59:12,  1.15s/it]  4%|▍         | 580/13025 [09:53<4:23:27,  1.27s/it]  4%|▍         | 581/13025 [09:55<4:41:29,  1.36s/it]  4%|▍         | 582/13025 [09:57<4:53:47,  1.42s/it]  4%|▍         | 585/13025 [09:58<3:19:10,  1.04it/s]  4%|▍         | 586/13025 [10:00<3:49:14,  1.11s/it]  5%|▍         | 588/13025 [10:02<3:27:43,  1.00s/it]  5%|▍         | 589/13025 [10:03<3:52:15,  1.12s/it]  5%|▍         | 590/13025 [10:05<4:20:59,  1.26s/it]  5%|▍         | 593/13025 [10:07<3:07:27,  1.11it/s]  5%|▍         | 595/13025 [10:08<3:04:44,  1.12it/s]  5%|▍         | 596/13025 [10:10<3:56:16,  1.14s/it]  5%|▍         | 597/13025 [10:13<4:44:29,  1.37s/it]  5%|▍         | 598/13025 [10:15<5:25:24,  1.57s/it]  5%|▍         | 600/13025 [10:17<4:37:07,  1.34s/it]  5%|▍         | 601/13025 [10:19<4:52:33,  1.41s/it]  5%|▍         | 602/13025 [10:20<5:03:45,  1.47s/it]  5%|▍         | 603/13025 [10:22<5:12:14,  1.51s/it]  5%|▍         | 604/13025 [10:24<5:21:44,  1.55s/it]  5%|▍         | 605/13025 [10:25<5:29:54,  1.59s/it]  5%|▍         | 606/13025 [10:27<5:35:12,  1.62s/it]  5%|▍         | 608/13025 [10:29<4:22:06,  1.27s/it]  5%|▍         | 609/13025 [10:30<4:43:06,  1.37s/it]  5%|▍         | 610/13025 [10:32<4:57:21,  1.44s/it]  5%|▍         | 611/13025 [10:34<5:08:09,  1.49s/it]  5%|▍         | 612/13025 [10:35<5:18:52,  1.54s/it]  5%|▍         | 615/13025 [10:37<3:23:19,  1.02it/s]  5%|▍         | 617/13025 [10:38<3:10:33,  1.09it/s]  5%|▍         | 618/13025 [10:40<3:38:50,  1.06s/it]  5%|▍         | 620/13025 [10:42<3:20:54,  1.03it/s]  5%|▍         | 622/13025 [10:43<3:09:49,  1.09it/s]  5%|▍         | 623/13025 [10:45<3:42:10,  1.07s/it]  5%|▍         | 625/13025 [10:47<3:25:23,  1.01it/s]  5%|▍         | 626/13025 [10:48<3:52:13,  1.12s/it]  5%|▍         | 627/13025 [10:50<4:15:53,  1.24s/it]  5%|▍         | 628/13025 [10:52<4:37:49,  1.34s/it]  5%|▍         | 629/13025 [10:53<4:57:06,  1.44s/it]  5%|▍         | 630/13025 [10:55<5:09:39,  1.50s/it]  5%|▍         | 631/13025 [10:57<5:17:05,  1.54s/it]  5%|▍         | 634/13025 [10:58<3:24:24,  1.01it/s]  5%|▍         | 636/13025 [11:00<3:14:04,  1.06it/s]  5%|▍         | 638/13025 [11:02<3:05:48,  1.11it/s]  5%|▍         | 641/13025 [11:03<2:35:54,  1.32it/s]  5%|▍         | 644/13025 [11:05<2:20:46,  1.47it/s]  5%|▍         | 646/13025 [11:06<2:27:54,  1.39it/s]  5%|▍         | 648/13025 [11:08<2:35:23,  1.33it/s]  5%|▍         | 649/13025 [11:11<3:29:01,  1.01s/it]  5%|▍         | 651/13025 [11:13<3:38:40,  1.06s/it]  5%|▌         | 653/13025 [11:15<3:45:43,  1.09s/it]  5%|▌         | 654/13025 [11:17<4:23:02,  1.28s/it]  5%|▌         | 656/13025 [11:19<3:54:27,  1.14s/it]  5%|▌         | 657/13025 [11:21<4:14:16,  1.23s/it]  5%|▌         | 659/13025 [11:22<3:45:19,  1.09s/it]  5%|▌         | 660/13025 [11:24<4:10:26,  1.22s/it]  5%|▌         | 662/13025 [11:26<3:40:58,  1.07s/it]  5%|▌         | 663/13025 [11:27<4:02:24,  1.18s/it]  5%|▌         | 664/13025 [11:29<4:26:17,  1.29s/it]  5%|▌         | 665/13025 [11:31<4:46:04,  1.39s/it]  5%|▌         | 668/13025 [11:32<3:14:35,  1.06it/s]  5%|▌         | 669/13025 [11:34<3:42:37,  1.08s/it]  5%|▌         | 670/13025 [11:35<4:07:22,  1.20s/it]  5%|▌         | 672/13025 [11:37<3:36:50,  1.05s/it]  5%|▌         | 673/13025 [11:39<4:02:34,  1.18s/it]  5%|▌         | 675/13025 [11:40<3:35:35,  1.05s/it]  5%|▌         | 677/13025 [11:42<3:18:55,  1.03it/s]  5%|▌         | 679/13025 [11:44<3:06:32,  1.10it/s]  5%|▌         | 680/13025 [11:45<3:35:28,  1.05s/it]  5%|▌         | 681/13025 [11:47<3:59:06,  1.16s/it]  5%|▌         | 683/13025 [11:48<3:32:01,  1.03s/it]  5%|▌         | 684/13025 [11:50<3:56:16,  1.15s/it]  5%|▌         | 685/13025 [11:52<4:19:07,  1.26s/it]  5%|▌         | 686/13025 [11:53<4:43:15,  1.38s/it]  5%|▌         | 688/13025 [11:55<3:53:21,  1.13s/it]  5%|▌         | 689/13025 [11:57<4:17:54,  1.25s/it]  5%|▌         | 690/13025 [11:58<4:37:32,  1.35s/it]  5%|▌         | 691/13025 [12:00<4:50:11,  1.41s/it]  5%|▌         | 692/13025 [12:01<5:00:52,  1.46s/it]  5%|▌         | 693/13025 [12:03<5:08:03,  1.50s/it]  5%|▌         | 695/13025 [12:05<4:04:19,  1.19s/it]  5%|▌         | 696/13025 [12:06<4:26:51,  1.30s/it]  5%|▌         | 697/13025 [12:08<4:41:39,  1.37s/it]  5%|▌         | 698/13025 [12:10<5:19:44,  1.56s/it]  5%|▌         | 699/13025 [12:12<6:03:39,  1.77s/it]  5%|▌         | 700/13025 [12:14<6:18:54,  1.84s/it]  5%|▌         | 701/13025 [12:17<6:48:52,  1.99s/it]  5%|▌         | 702/13025 [12:18<6:31:25,  1.91s/it]  5%|▌         | 706/13025 [12:20<3:19:44,  1.03it/s]  5%|▌         | 707/13025 [12:22<3:47:58,  1.11s/it]  5%|▌         | 708/13025 [12:23<4:10:02,  1.22s/it]  5%|▌         | 709/13025 [12:25<4:30:59,  1.32s/it]  5%|▌         | 710/13025 [12:27<4:50:30,  1.42s/it]  5%|▌         | 711/13025 [12:28<5:03:09,  1.48s/it]  5%|▌         | 713/13025 [12:30<4:05:10,  1.19s/it]  5%|▌         | 714/13025 [12:32<4:26:20,  1.30s/it]  5%|▌         | 716/13025 [12:33<3:46:55,  1.11s/it]  6%|▌         | 717/13025 [12:35<4:10:57,  1.22s/it]  6%|▌         | 718/13025 [12:37<4:30:56,  1.32s/it]  6%|▌         | 719/13025 [12:38<4:45:21,  1.39s/it]  6%|▌         | 721/13025 [12:40<3:58:06,  1.16s/it]  6%|▌         | 722/13025 [12:42<4:22:45,  1.28s/it]  6%|▌         | 723/13025 [12:43<4:39:34,  1.36s/it]  6%|▌         | 726/13025 [12:45<3:12:59,  1.06it/s]  6%|▌         | 727/13025 [12:46<3:41:49,  1.08s/it]  6%|▌         | 728/13025 [12:48<4:09:23,  1.22s/it]  6%|▌         | 729/13025 [12:50<4:30:35,  1.32s/it]  6%|▌         | 733/13025 [12:51<2:41:34,  1.27it/s]  6%|▌         | 734/13025 [12:53<3:11:41,  1.07it/s]  6%|▌         | 735/13025 [12:55<3:38:10,  1.07s/it]  6%|▌         | 736/13025 [12:56<4:04:40,  1.19s/it]  6%|▌         | 737/13025 [12:58<4:28:36,  1.31s/it]  6%|▌         | 738/13025 [13:00<4:43:22,  1.38s/it]  6%|▌         | 739/13025 [13:01<5:00:19,  1.47s/it]  6%|▌         | 740/13025 [13:03<5:10:01,  1.51s/it]  6%|▌         | 742/13025 [13:05<4:06:54,  1.21s/it]  6%|▌         | 744/13025 [13:06<3:38:03,  1.07s/it]  6%|▌         | 745/13025 [13:08<4:00:59,  1.18s/it]  6%|▌         | 746/13025 [13:10<4:51:55,  1.43s/it]  6%|▌         | 747/13025 [13:12<5:39:04,  1.66s/it]  6%|▌         | 749/13025 [13:15<4:55:29,  1.44s/it]  6%|▌         | 750/13025 [13:17<5:27:08,  1.60s/it]  6%|▌         | 751/13025 [13:18<5:31:25,  1.62s/it]  6%|▌         | 753/13025 [13:20<4:23:21,  1.29s/it]  6%|▌         | 755/13025 [13:22<3:47:34,  1.11s/it]  6%|▌         | 756/13025 [13:23<4:12:01,  1.23s/it]  6%|▌         | 758/13025 [13:25<3:34:47,  1.05s/it]  6%|▌         | 759/13025 [13:27<4:00:31,  1.18s/it]  6%|▌         | 761/13025 [13:28<3:32:03,  1.04s/it]  6%|▌         | 762/13025 [13:30<3:56:04,  1.16s/it]  6%|▌         | 764/13025 [13:31<3:29:38,  1.03s/it]  6%|▌         | 765/13025 [13:33<3:58:28,  1.17s/it]  6%|▌         | 767/13025 [13:35<3:31:38,  1.04s/it]  6%|▌         | 769/13025 [13:36<3:18:20,  1.03it/s]  6%|▌         | 771/13025 [13:38<3:09:34,  1.08it/s]  6%|▌         | 773/13025 [13:40<3:01:00,  1.13it/s]  6%|▌         | 775/13025 [13:41<2:56:54,  1.15it/s]  6%|▌         | 776/13025 [13:43<3:28:08,  1.02s/it]  6%|▌         | 777/13025 [13:45<3:50:47,  1.13s/it]  6%|▌         | 778/13025 [13:46<4:14:00,  1.24s/it]  6%|▌         | 779/13025 [13:48<4:33:40,  1.34s/it]  6%|▌         | 780/13025 [13:49<4:46:06,  1.40s/it]  6%|▌         | 781/13025 [13:51<4:58:58,  1.47s/it]  6%|▌         | 783/13025 [13:53<4:02:50,  1.19s/it]  6%|▌         | 784/13025 [13:54<4:26:21,  1.31s/it]  6%|▌         | 785/13025 [13:56<4:42:30,  1.38s/it]  6%|▌         | 786/13025 [13:58<4:56:26,  1.45s/it]  6%|▌         | 787/13025 [13:59<5:05:52,  1.50s/it]  6%|▌         | 788/13025 [14:01<5:10:25,  1.52s/it]  6%|▌         | 790/13025 [14:02<4:03:40,  1.19s/it]  6%|▌         | 791/13025 [14:04<4:29:48,  1.32s/it]  6%|▌         | 793/13025 [14:06<3:49:39,  1.13s/it]  6%|▌         | 794/13025 [14:08<4:13:19,  1.24s/it]  6%|▌         | 795/13025 [14:09<4:45:57,  1.40s/it]  6%|▌         | 796/13025 [14:12<5:32:49,  1.63s/it]  6%|▌         | 797/13025 [14:14<6:10:40,  1.82s/it]  6%|▌         | 798/13025 [14:16<6:41:33,  1.97s/it]  6%|▌         | 799/13025 [14:18<6:27:35,  1.90s/it]  6%|▌         | 800/13025 [14:20<6:14:11,  1.84s/it]  6%|▌         | 801/13025 [14:21<6:01:27,  1.77s/it]  6%|▌         | 803/13025 [14:23<4:28:22,  1.32s/it]  6%|▌         | 804/13025 [14:25<4:43:57,  1.39s/it]  6%|▌         | 808/13025 [14:26<2:46:57,  1.22it/s]  6%|▌         | 809/13025 [14:28<3:14:31,  1.05it/s]  6%|▌         | 811/13025 [14:30<3:07:23,  1.09it/s]  6%|▌         | 813/13025 [14:31<2:57:45,  1.14it/s]  6%|▌         | 814/13025 [14:33<3:28:15,  1.02s/it]  6%|▋         | 815/13025 [14:34<3:56:43,  1.16s/it]  6%|▋         | 819/13025 [14:36<2:31:42,  1.34it/s]  6%|▋         | 821/13025 [14:38<2:37:25,  1.29it/s]  6%|▋         | 822/13025 [14:39<3:08:08,  1.08it/s]  6%|▋         | 824/13025 [14:41<3:04:09,  1.10it/s]  6%|▋         | 825/13025 [14:43<3:33:31,  1.05s/it]  6%|▋         | 826/13025 [14:45<4:01:32,  1.19s/it]  6%|▋         | 828/13025 [14:46<3:35:35,  1.06s/it]  6%|▋         | 830/13025 [14:48<3:18:31,  1.02it/s]  6%|▋         | 832/13025 [14:49<3:06:25,  1.09it/s]  6%|▋         | 834/13025 [14:51<3:00:01,  1.13it/s]  6%|▋         | 837/13025 [14:53<2:34:27,  1.32it/s]  6%|▋         | 840/13025 [14:54<2:18:13,  1.47it/s]  6%|▋         | 841/13025 [14:56<2:50:09,  1.19it/s]  6%|▋         | 842/13025 [14:58<3:18:45,  1.02it/s]  6%|▋         | 843/13025 [15:00<3:48:43,  1.13s/it]  6%|▋         | 845/13025 [15:01<3:29:32,  1.03s/it]  6%|▋         | 846/13025 [15:03<3:54:11,  1.15s/it]  7%|▋         | 847/13025 [15:05<4:16:17,  1.26s/it]  7%|▋         | 848/13025 [15:06<4:34:48,  1.35s/it]  7%|▋         | 849/13025 [15:08<4:52:30,  1.44s/it]  7%|▋         | 851/13025 [15:10<4:29:04,  1.33s/it]  7%|▋         | 853/13025 [15:12<4:11:59,  1.24s/it]  7%|▋         | 854/13025 [15:15<4:57:21,  1.47s/it]  7%|▋         | 855/13025 [15:17<5:20:24,  1.58s/it]  7%|▋         | 856/13025 [15:18<5:22:54,  1.59s/it]  7%|▋         | 857/13025 [15:20<5:20:01,  1.58s/it]  7%|▋         | 859/13025 [15:21<4:13:39,  1.25s/it]  7%|▋         | 861/13025 [15:23<3:42:04,  1.10s/it]  7%|▋         | 862/13025 [15:25<4:05:27,  1.21s/it]  7%|▋         | 863/13025 [15:26<4:25:16,  1.31s/it]  7%|▋         | 867/13025 [15:28<2:42:18,  1.25it/s]  7%|▋         | 871/13025 [15:30<2:06:55,  1.60it/s]  7%|▋         | 872/13025 [15:31<2:35:53,  1.30it/s]  7%|▋         | 874/13025 [15:33<2:38:36,  1.28it/s]  7%|▋         | 877/13025 [15:35<2:19:28,  1.45it/s]  7%|▋         | 878/13025 [15:36<2:48:43,  1.20it/s]  7%|▋         | 880/13025 [15:38<2:50:29,  1.19it/s]  7%|▋         | 881/13025 [15:40<3:19:08,  1.02it/s]  7%|▋         | 883/13025 [15:41<3:11:00,  1.06it/s]  7%|▋         | 884/13025 [15:43<3:37:35,  1.08s/it]  7%|▋         | 885/13025 [15:45<4:02:25,  1.20s/it]  7%|▋         | 887/13025 [15:46<3:33:30,  1.06s/it]  7%|▋         | 888/13025 [15:48<3:56:42,  1.17s/it]  7%|▋         | 889/13025 [15:50<4:20:55,  1.29s/it]  7%|▋         | 892/13025 [15:51<3:05:36,  1.09it/s]  7%|▋         | 894/13025 [15:53<3:00:24,  1.12it/s]  7%|▋         | 895/13025 [15:55<3:28:31,  1.03s/it]  7%|▋         | 896/13025 [15:56<3:53:57,  1.16s/it]  7%|▋         | 897/13025 [15:58<4:18:07,  1.28s/it]  7%|▋         | 898/13025 [16:00<4:38:49,  1.38s/it]  7%|▋         | 899/13025 [16:01<4:53:16,  1.45s/it]  7%|▋         | 900/13025 [16:03<4:57:51,  1.47s/it]  7%|▋         | 901/13025 [16:04<5:01:18,  1.49s/it]  7%|▋         | 902/13025 [16:06<5:01:10,  1.49s/it]  7%|▋         | 903/13025 [16:07<5:12:08,  1.55s/it]  7%|▋         | 904/13025 [16:09<5:32:23,  1.65s/it]  7%|▋         | 908/13025 [16:12<3:19:01,  1.01it/s]  7%|▋         | 909/13025 [16:14<4:08:31,  1.23s/it]  7%|▋         | 911/13025 [16:16<4:05:44,  1.22s/it]  7%|▋         | 913/13025 [16:18<3:40:18,  1.09s/it]  7%|▋         | 914/13025 [16:20<3:58:44,  1.18s/it]  7%|▋         | 915/13025 [16:21<4:20:15,  1.29s/it]  7%|▋         | 916/13025 [16:23<4:36:42,  1.37s/it]  7%|▋         | 919/13025 [16:25<3:13:07,  1.04it/s]  7%|▋         | 921/13025 [16:26<3:03:36,  1.10it/s]  7%|▋         | 923/13025 [16:28<2:57:23,  1.14it/s]  7%|▋         | 924/13025 [16:29<3:25:27,  1.02s/it]  7%|▋         | 925/13025 [16:31<3:51:41,  1.15s/it]  7%|▋         | 926/13025 [16:33<4:17:12,  1.28s/it]  7%|▋         | 929/13025 [16:34<3:03:58,  1.10it/s]  7%|▋         | 931/13025 [16:36<2:57:46,  1.13it/s]  7%|▋         | 932/13025 [16:38<3:26:05,  1.02s/it]  7%|▋         | 933/13025 [16:39<3:51:34,  1.15s/it]  7%|▋         | 935/13025 [16:41<3:26:43,  1.03s/it]  7%|▋         | 936/13025 [16:43<3:50:16,  1.14s/it]  7%|▋         | 937/13025 [16:44<4:17:30,  1.28s/it]  7%|▋         | 938/13025 [16:46<4:32:23,  1.35s/it]  7%|▋         | 939/13025 [16:48<4:51:56,  1.45s/it]  7%|▋         | 940/13025 [16:49<5:04:52,  1.51s/it]  7%|▋         | 943/13025 [16:51<3:17:49,  1.02it/s]  7%|▋         | 946/13025 [16:52<2:39:26,  1.26it/s]  7%|▋         | 947/13025 [16:54<3:06:41,  1.08it/s]  7%|▋         | 948/13025 [16:56<3:34:41,  1.07s/it]  7%|▋         | 950/13025 [16:57<3:20:07,  1.01it/s]  7%|▋         | 952/13025 [16:59<3:09:47,  1.06it/s]  7%|▋         | 953/13025 [17:01<3:36:33,  1.08s/it]  7%|▋         | 955/13025 [17:02<3:18:19,  1.01it/s]  7%|▋         | 956/13025 [17:04<3:45:58,  1.12s/it]  7%|▋         | 957/13025 [17:06<4:08:42,  1.24s/it]  7%|▋         | 959/13025 [17:07<3:37:36,  1.08s/it]  7%|▋         | 960/13025 [17:09<4:02:34,  1.21s/it]  7%|▋         | 961/13025 [17:11<4:53:52,  1.46s/it]  7%|▋         | 962/13025 [17:14<5:33:40,  1.66s/it]  7%|▋         | 964/13025 [17:16<4:48:11,  1.43s/it]  7%|▋         | 965/13025 [17:18<5:17:10,  1.58s/it]  7%|▋         | 967/13025 [17:19<4:17:00,  1.28s/it]  7%|▋         | 968/13025 [17:21<4:34:50,  1.37s/it]  7%|▋         | 969/13025 [17:23<4:47:45,  1.43s/it]  7%|▋         | 972/13025 [17:24<3:17:37,  1.02it/s]  7%|▋         | 973/13025 [17:26<3:43:19,  1.11s/it]  7%|▋         | 974/13025 [17:28<4:06:01,  1.22s/it]  7%|▋         | 975/13025 [17:29<4:25:25,  1.32s/it]  8%|▊         | 977/13025 [17:31<3:44:18,  1.12s/it]  8%|▊         | 978/13025 [17:33<4:07:32,  1.23s/it]  8%|▊         | 979/13025 [17:34<4:30:53,  1.35s/it]  8%|▊         | 981/13025 [17:36<3:42:45,  1.11s/it]  8%|▊         | 982/13025 [17:38<4:10:33,  1.25s/it]  8%|▊         | 983/13025 [17:39<4:31:45,  1.35s/it]  8%|▊         | 984/13025 [17:41<4:45:21,  1.42s/it]  8%|▊         | 988/13025 [17:43<2:45:37,  1.21it/s]  8%|▊         | 989/13025 [17:44<3:15:37,  1.03it/s]  8%|▊         | 991/13025 [17:46<3:04:33,  1.09it/s]  8%|▊         | 992/13025 [17:48<3:34:09,  1.07s/it]  8%|▊         | 993/13025 [17:49<4:01:10,  1.20s/it]  8%|▊         | 994/13025 [17:51<4:22:15,  1.31s/it]  8%|▊         | 996/13025 [17:53<3:44:40,  1.12s/it]  8%|▊         | 998/13025 [17:54<3:20:22,  1.00it/s]  8%|▊         | 999/13025 [17:56<3:46:24,  1.13s/it]  8%|▊         | 1000/13025 [17:57<4:09:24,  1.24s/it]  8%|▊         | 1001/13025 [17:59<4:28:09,  1.34s/it]  8%|▊         | 1002/13025 [18:01<4:43:50,  1.42s/it]  8%|▊         | 1004/13025 [18:02<3:52:23,  1.16s/it]  8%|▊         | 1005/13025 [18:04<4:15:16,  1.27s/it]  8%|▊         | 1007/13025 [18:06<3:38:52,  1.09s/it]  8%|▊         | 1008/13025 [18:07<4:00:34,  1.20s/it]  8%|▊         | 1010/13025 [18:09<3:43:57,  1.12s/it]  8%|▊         | 1011/13025 [18:11<4:35:28,  1.38s/it]  8%|▊         | 1014/13025 [18:14<3:38:51,  1.09s/it]  8%|▊         | 1015/13025 [18:16<4:22:50,  1.31s/it]  8%|▊         | 1016/13025 [18:18<4:39:14,  1.40s/it]  8%|▊         | 1017/13025 [18:19<4:49:45,  1.45s/it]  8%|▊         | 1019/13025 [18:21<3:58:19,  1.19s/it]  8%|▊         | 1021/13025 [18:23<3:31:13,  1.06s/it]  8%|▊         | 1022/13025 [18:24<3:53:03,  1.16s/it]  8%|▊         | 1023/13025 [18:26<4:12:27,  1.26s/it]  8%|▊         | 1024/13025 [18:27<4:31:39,  1.36s/it]  8%|▊         | 1025/13025 [18:29<4:46:18,  1.43s/it]  8%|▊         | 1026/13025 [18:31<5:00:51,  1.50s/it]  8%|▊         | 1027/13025 [18:33<5:10:56,  1.55s/it]  8%|▊         | 1028/13025 [18:34<5:16:39,  1.58s/it]  8%|▊         | 1029/13025 [18:36<5:18:43,  1.59s/it]  8%|▊         | 1031/13025 [18:37<4:04:43,  1.22s/it]  8%|▊         | 1032/13025 [18:39<4:22:47,  1.31s/it]  8%|▊         | 1037/13025 [18:41<2:17:24,  1.45it/s]  8%|▊         | 1038/13025 [18:42<2:46:20,  1.20it/s]  8%|▊         | 1039/13025 [18:44<3:13:38,  1.03it/s]  8%|▊         | 1040/13025 [18:45<3:42:32,  1.11s/it]  8%|▊         | 1041/13025 [18:47<4:06:05,  1.23s/it]  8%|▊         | 1042/13025 [18:49<4:25:50,  1.33s/it]  8%|▊         | 1044/13025 [18:50<3:45:20,  1.13s/it]  8%|▊         | 1045/13025 [18:52<4:08:54,  1.25s/it]  8%|▊         | 1048/13025 [18:54<2:59:59,  1.11it/s]  8%|▊         | 1049/13025 [18:55<3:27:36,  1.04s/it]  8%|▊         | 1054/13025 [18:57<2:06:42,  1.57it/s]  8%|▊         | 1055/13025 [18:59<2:35:11,  1.29it/s]  8%|▊         | 1056/13025 [19:00<3:04:02,  1.08it/s]  8%|▊         | 1059/13025 [19:02<2:34:09,  1.29it/s]  8%|▊         | 1060/13025 [19:04<3:01:33,  1.10it/s]  8%|▊         | 1061/13025 [19:05<3:30:29,  1.06s/it]  8%|▊         | 1062/13025 [19:07<3:57:27,  1.19s/it]  8%|▊         | 1063/13025 [19:09<4:25:39,  1.33s/it]  8%|▊         | 1064/13025 [19:11<5:14:39,  1.58s/it]  8%|▊         | 1066/13025 [19:13<4:36:13,  1.39s/it]  8%|▊         | 1067/13025 [19:16<5:17:15,  1.59s/it]  8%|▊         | 1069/13025 [19:17<4:25:47,  1.33s/it]  8%|▊         | 1070/13025 [19:19<4:41:12,  1.41s/it]  8%|▊         | 1071/13025 [19:21<4:55:50,  1.48s/it]  8%|▊         | 1074/13025 [19:22<3:20:47,  1.01s/it]  8%|▊         | 1075/13025 [19:24<3:47:10,  1.14s/it]  8%|▊         | 1076/13025 [19:26<4:10:43,  1.26s/it]  8%|▊         | 1077/13025 [19:27<4:23:03,  1.32s/it]  8%|▊         | 1080/13025 [19:29<3:05:30,  1.07it/s]  8%|▊         | 1081/13025 [19:31<3:32:51,  1.07s/it]  8%|▊         | 1083/13025 [19:32<3:16:33,  1.01it/s]  8%|▊         | 1084/13025 [19:34<3:42:23,  1.12s/it]  8%|▊         | 1085/13025 [19:36<4:05:45,  1.24s/it]  8%|▊         | 1086/13025 [19:37<4:21:56,  1.32s/it]  8%|▊         | 1088/13025 [19:39<3:42:58,  1.12s/it]  8%|▊         | 1090/13025 [19:41<3:20:40,  1.01s/it]  8%|▊         | 1091/13025 [19:42<3:42:50,  1.12s/it]  8%|▊         | 1092/13025 [19:44<4:03:50,  1.23s/it]  8%|▊         | 1093/13025 [19:45<4:26:29,  1.34s/it]  8%|▊         | 1094/13025 [19:47<4:41:08,  1.41s/it]  8%|▊         | 1095/13025 [19:49<4:52:45,  1.47s/it]  8%|▊         | 1097/13025 [19:50<3:57:34,  1.20s/it]  8%|▊         | 1098/13025 [19:52<4:17:17,  1.29s/it]  8%|▊         | 1099/13025 [19:53<4:34:34,  1.38s/it]  8%|▊         | 1100/13025 [19:55<4:47:33,  1.45s/it]  8%|▊         | 1101/13025 [19:57<5:00:22,  1.51s/it]  8%|▊         | 1103/13025 [19:58<4:01:47,  1.22s/it]  8%|▊         | 1105/13025 [20:00<3:33:15,  1.07s/it]  8%|▊         | 1107/13025 [20:02<3:16:52,  1.01it/s]  9%|▊         | 1110/13025 [20:04<2:39:53,  1.24it/s]  9%|▊         | 1111/13025 [20:05<3:09:25,  1.05it/s]  9%|▊         | 1112/13025 [20:07<3:36:48,  1.09s/it]  9%|▊         | 1115/13025 [20:09<2:57:41,  1.12it/s]  9%|▊         | 1116/13025 [20:11<3:44:16,  1.13s/it]  9%|▊         | 1118/13025 [20:13<3:44:45,  1.13s/it]  9%|▊         | 1119/13025 [20:16<4:32:14,  1.37s/it]  9%|▊         | 1120/13025 [20:17<4:46:51,  1.45s/it]  9%|▊         | 1121/13025 [20:19<4:55:18,  1.49s/it]  9%|▊         | 1123/13025 [20:21<4:02:21,  1.22s/it]  9%|▊         | 1126/13025 [20:22<3:03:16,  1.08it/s]  9%|▊         | 1127/13025 [20:24<3:31:09,  1.06s/it]  9%|▊         | 1129/13025 [20:26<3:16:20,  1.01it/s]  9%|▊         | 1130/13025 [20:27<3:42:08,  1.12s/it]  9%|▊         | 1131/13025 [20:29<4:04:47,  1.23s/it]  9%|▊         | 1132/13025 [20:31<4:19:47,  1.31s/it]  9%|▊         | 1133/13025 [20:32<4:33:02,  1.38s/it]  9%|▊         | 1134/13025 [20:34<4:49:20,  1.46s/it]  9%|▊         | 1135/13025 [20:35<4:47:48,  1.45s/it]  9%|▊         | 1138/13025 [20:37<3:11:59,  1.03it/s]  9%|▉         | 1141/13025 [20:39<2:37:10,  1.26it/s]  9%|▉         | 1143/13025 [20:40<2:39:09,  1.24it/s]  9%|▉         | 1145/13025 [20:42<2:38:15,  1.25it/s]  9%|▉         | 1146/13025 [20:44<3:06:34,  1.06it/s]  9%|▉         | 1149/13025 [20:45<2:33:48,  1.29it/s]  9%|▉         | 1150/13025 [20:47<3:03:54,  1.08it/s]  9%|▉         | 1151/13025 [20:49<3:31:58,  1.07s/it]  9%|▉         | 1154/13025 [20:50<2:45:34,  1.19it/s]  9%|▉         | 1155/13025 [20:52<3:15:08,  1.01it/s]  9%|▉         | 1160/13025 [20:54<2:03:14,  1.60it/s]  9%|▉         | 1162/13025 [20:55<2:12:33,  1.49it/s]  9%|▉         | 1163/13025 [20:57<2:40:46,  1.23it/s]  9%|▉         | 1166/13025 [20:59<2:21:33,  1.40it/s]  9%|▉         | 1167/13025 [21:00<2:51:33,  1.15it/s]  9%|▉         | 1169/13025 [21:02<2:49:49,  1.16it/s]  9%|▉         | 1170/13025 [21:04<3:18:49,  1.01s/it]  9%|▉         | 1172/13025 [21:05<3:07:26,  1.05it/s]  9%|▉         | 1173/13025 [21:07<3:35:55,  1.09s/it]  9%|▉         | 1174/13025 [21:09<4:14:49,  1.29s/it]  9%|▉         | 1175/13025 [21:11<5:04:19,  1.54s/it]  9%|▉         | 1177/13025 [21:14<4:33:34,  1.39s/it]  9%|▉         | 1180/13025 [21:16<3:38:15,  1.11s/it]  9%|▉         | 1182/13025 [21:18<3:26:22,  1.05s/it]  9%|▉         | 1186/13025 [21:19<2:27:48,  1.33it/s]  9%|▉         | 1187/13025 [21:21<2:52:33,  1.14it/s]  9%|▉         | 1188/13025 [21:23<3:20:20,  1.02s/it]  9%|▉         | 1189/13025 [21:25<3:45:56,  1.15s/it]  9%|▉         | 1190/13025 [21:26<4:02:39,  1.23s/it]  9%|▉         | 1192/13025 [21:28<3:31:08,  1.07s/it]  9%|▉         | 1196/13025 [21:29<2:22:56,  1.38it/s]  9%|▉         | 1197/13025 [21:31<2:49:29,  1.16it/s]  9%|▉         | 1199/13025 [21:32<2:45:13,  1.19it/s]  9%|▉         | 1200/13025 [21:34<3:13:11,  1.02it/s]  9%|▉         | 1202/13025 [21:36<3:01:52,  1.08it/s]  9%|▉         | 1204/13025 [21:37<2:54:40,  1.13it/s]  9%|▉         | 1205/13025 [21:39<3:24:58,  1.04s/it]  9%|▉         | 1206/13025 [21:41<3:52:02,  1.18s/it]  9%|▉         | 1208/13025 [21:42<3:24:47,  1.04s/it]  9%|▉         | 1209/13025 [21:44<3:49:10,  1.16s/it]  9%|▉         | 1210/13025 [21:46<4:13:10,  1.29s/it]  9%|▉         | 1215/13025 [21:47<2:16:34,  1.44it/s]  9%|▉         | 1216/13025 [21:49<2:39:47,  1.23it/s]  9%|▉         | 1219/13025 [21:50<2:18:42,  1.42it/s]  9%|▉         | 1220/13025 [21:52<2:42:30,  1.21it/s]  9%|▉         | 1221/13025 [21:53<3:06:41,  1.05it/s]  9%|▉         | 1223/13025 [21:55<2:56:47,  1.11it/s]  9%|▉         | 1225/13025 [21:57<2:52:11,  1.14it/s]  9%|▉         | 1228/13025 [21:58<2:26:32,  1.34it/s]  9%|▉         | 1229/13025 [22:00<2:56:47,  1.11it/s]  9%|▉         | 1232/13025 [22:02<2:28:00,  1.33it/s]  9%|▉         | 1233/13025 [22:03<2:57:02,  1.11it/s]  9%|▉         | 1234/13025 [22:05<3:22:39,  1.03s/it]  9%|▉         | 1235/13025 [22:06<3:45:13,  1.15s/it]  9%|▉         | 1237/13025 [22:08<3:22:06,  1.03s/it] 10%|▉         | 1238/13025 [22:10<4:01:13,  1.23s/it] 10%|▉         | 1241/13025 [22:12<3:18:14,  1.01s/it] 10%|▉         | 1242/13025 [22:15<4:00:01,  1.22s/it] 10%|▉         | 1243/13025 [22:17<4:39:21,  1.42s/it] 10%|▉         | 1245/13025 [22:18<3:48:01,  1.16s/it] 10%|▉         | 1246/13025 [22:20<4:06:53,  1.26s/it] 10%|▉         | 1249/13025 [22:21<3:00:55,  1.08it/s] 10%|▉         | 1252/13025 [22:23<2:31:22,  1.30it/s] 10%|▉         | 1253/13025 [22:25<2:59:20,  1.09it/s] 10%|▉         | 1257/13025 [22:26<2:09:24,  1.52it/s] 10%|▉         | 1260/13025 [22:28<2:02:56,  1.60it/s] 10%|▉         | 1261/13025 [22:30<2:30:22,  1.30it/s] 10%|▉         | 1265/13025 [22:31<1:59:39,  1.64it/s] 10%|▉         | 1267/13025 [22:33<2:09:07,  1.52it/s] 10%|▉         | 1270/13025 [22:35<2:02:43,  1.60it/s] 10%|▉         | 1271/13025 [22:36<2:29:59,  1.31it/s] 10%|▉         | 1273/13025 [22:38<2:30:56,  1.30it/s] 10%|▉         | 1274/13025 [22:39<2:59:28,  1.09it/s] 10%|▉         | 1276/13025 [22:41<2:53:12,  1.13it/s] 10%|▉         | 1278/13025 [22:43<2:48:59,  1.16it/s] 10%|▉         | 1281/13025 [22:44<2:23:29,  1.36it/s] 10%|▉         | 1282/13025 [22:46<2:53:15,  1.13it/s] 10%|▉         | 1285/13025 [22:48<2:24:09,  1.36it/s] 10%|▉         | 1286/13025 [22:49<2:52:33,  1.13it/s] 10%|▉         | 1290/13025 [22:51<2:08:49,  1.52it/s] 10%|▉         | 1291/13025 [22:53<2:36:36,  1.25it/s] 10%|▉         | 1292/13025 [22:54<3:04:32,  1.06it/s] 10%|▉         | 1294/13025 [22:56<2:56:48,  1.11it/s] 10%|▉         | 1295/13025 [22:57<3:24:15,  1.04s/it] 10%|▉         | 1297/13025 [22:59<3:08:06,  1.04it/s] 10%|▉         | 1302/13025 [23:01<2:01:05,  1.61it/s] 10%|█         | 1304/13025 [23:02<2:11:25,  1.49it/s] 10%|█         | 1305/13025 [23:04<2:40:42,  1.22it/s] 10%|█         | 1307/13025 [23:06<2:38:58,  1.23it/s] 10%|█         | 1309/13025 [23:07<2:37:36,  1.24it/s] 10%|█         | 1312/13025 [23:09<2:28:27,  1.32it/s] 10%|█         | 1314/13025 [23:12<2:51:23,  1.14it/s] 10%|█         | 1316/13025 [23:14<3:06:08,  1.05it/s] 10%|█         | 1317/13025 [23:16<3:47:45,  1.17s/it] 10%|█         | 1320/13025 [23:18<2:57:05,  1.10it/s] 10%|█         | 1321/13025 [23:20<3:20:13,  1.03s/it] 10%|█         | 1324/13025 [23:21<2:39:33,  1.22it/s] 10%|█         | 1325/13025 [23:23<3:03:49,  1.06it/s] 10%|█         | 1326/13025 [23:24<3:32:34,  1.09s/it] 10%|█         | 1327/13025 [23:26<3:59:12,  1.23s/it] 10%|█         | 1329/13025 [23:28<3:31:42,  1.09s/it] 10%|█         | 1331/13025 [23:30<3:13:13,  1.01it/s] 10%|█         | 1332/13025 [23:31<3:38:29,  1.12s/it] 10%|█         | 1333/13025 [23:33<4:00:56,  1.24s/it] 10%|█         | 1334/13025 [23:34<4:19:50,  1.33s/it] 10%|█         | 1335/13025 [23:36<4:35:07,  1.41s/it] 10%|█         | 1336/13025 [23:38<4:44:04,  1.46s/it] 10%|█         | 1337/13025 [23:39<4:50:44,  1.49s/it] 10%|█         | 1339/13025 [23:41<3:56:18,  1.21s/it] 10%|█         | 1341/13025 [23:43<3:30:32,  1.08s/it] 10%|█         | 1343/13025 [23:44<3:11:09,  1.02it/s] 10%|█         | 1345/13025 [23:46<3:00:10,  1.08it/s] 10%|█         | 1346/13025 [23:48<3:25:06,  1.05s/it] 10%|█         | 1347/13025 [23:49<3:46:51,  1.17s/it] 10%|█         | 1348/13025 [23:51<4:08:20,  1.28s/it] 10%|█         | 1349/13025 [23:52<4:25:14,  1.36s/it] 10%|█         | 1351/13025 [23:54<3:34:26,  1.10s/it] 10%|█         | 1353/13025 [23:55<3:11:24,  1.02it/s] 10%|█         | 1357/13025 [23:57<2:11:20,  1.48it/s] 10%|█         | 1360/13025 [23:59<2:01:28,  1.60it/s] 10%|█         | 1361/13025 [24:00<2:28:14,  1.31it/s] 10%|█         | 1362/13025 [24:02<2:57:13,  1.10it/s] 10%|█         | 1364/13025 [24:03<2:49:23,  1.15it/s] 10%|█         | 1365/13025 [24:05<3:15:25,  1.01s/it] 10%|█         | 1366/13025 [24:07<3:41:19,  1.14s/it] 10%|█         | 1367/13025 [24:08<4:02:59,  1.25s/it] 11%|█         | 1369/13025 [24:10<3:45:25,  1.16s/it] 11%|█         | 1371/13025 [24:12<3:44:07,  1.15s/it] 11%|█         | 1372/13025 [24:15<4:31:22,  1.40s/it] 11%|█         | 1373/13025 [24:17<5:08:50,  1.59s/it] 11%|█         | 1374/13025 [24:18<5:01:21,  1.55s/it] 11%|█         | 1375/13025 [24:20<4:55:12,  1.52s/it] 11%|█         | 1379/13025 [24:22<2:44:51,  1.18it/s] 11%|█         | 1380/13025 [24:23<3:11:39,  1.01it/s] 11%|█         | 1383/13025 [24:25<2:33:12,  1.27it/s] 11%|█         | 1384/13025 [24:26<3:00:28,  1.08it/s] 11%|█         | 1386/13025 [24:28<2:52:25,  1.13it/s] 11%|█         | 1387/13025 [24:30<3:17:43,  1.02s/it] 11%|█         | 1388/13025 [24:31<3:40:52,  1.14s/it] 11%|█         | 1389/13025 [24:33<4:00:17,  1.24s/it] 11%|█         | 1392/13025 [24:34<2:53:58,  1.11it/s] 11%|█         | 1393/13025 [24:36<3:22:20,  1.04s/it] 11%|█         | 1395/13025 [24:38<3:06:38,  1.04it/s] 11%|█         | 1396/13025 [24:39<3:32:22,  1.10s/it] 11%|█         | 1397/13025 [24:41<3:54:35,  1.21s/it] 11%|█         | 1398/13025 [24:42<4:04:55,  1.26s/it] 11%|█         | 1399/13025 [24:44<4:13:39,  1.31s/it] 11%|█         | 1400/13025 [24:45<4:27:08,  1.38s/it] 11%|█         | 1401/13025 [24:47<4:37:01,  1.43s/it] 11%|█         | 1402/13025 [24:48<4:44:49,  1.47s/it] 11%|█         | 1403/13025 [24:50<4:50:07,  1.50s/it] 11%|█         | 1408/13025 [24:52<2:17:12,  1.41it/s] 11%|█         | 1409/13025 [24:53<2:45:23,  1.17it/s] 11%|█         | 1413/13025 [24:55<2:02:23,  1.58it/s] 11%|█         | 1417/13025 [24:56<1:42:34,  1.89it/s] 11%|█         | 1418/13025 [24:58<2:08:08,  1.51it/s] 11%|█         | 1419/13025 [24:59<2:35:10,  1.25it/s] 11%|█         | 1420/13025 [25:01<3:05:45,  1.04it/s] 11%|█         | 1421/13025 [25:03<3:33:26,  1.10s/it] 11%|█         | 1422/13025 [25:04<3:57:44,  1.23s/it] 11%|█         | 1425/13025 [25:06<2:49:00,  1.14it/s] 11%|█         | 1427/13025 [25:08<2:46:39,  1.16it/s] 11%|█         | 1428/13025 [25:10<3:30:32,  1.09s/it] 11%|█         | 1429/13025 [25:12<4:15:21,  1.32s/it] 11%|█         | 1431/13025 [25:14<3:55:59,  1.22s/it] 11%|█         | 1433/13025 [25:16<3:48:49,  1.18s/it] 11%|█         | 1437/13025 [25:18<2:34:56,  1.25it/s] 11%|█         | 1438/13025 [25:20<2:59:06,  1.08it/s] 11%|█         | 1439/13025 [25:21<3:22:03,  1.05s/it] 11%|█         | 1441/13025 [25:23<3:06:23,  1.04it/s] 11%|█         | 1442/13025 [25:24<3:32:29,  1.10s/it] 11%|█         | 1445/13025 [25:26<2:43:08,  1.18it/s] 11%|█         | 1447/13025 [25:28<2:41:54,  1.19it/s] 11%|█         | 1450/13025 [25:29<2:21:05,  1.37it/s] 11%|█         | 1452/13025 [25:31<2:22:36,  1.35it/s] 11%|█         | 1454/13025 [25:33<2:26:40,  1.31it/s] 11%|█         | 1456/13025 [25:34<2:29:16,  1.29it/s] 11%|█         | 1459/13025 [25:36<2:12:08,  1.46it/s] 11%|█         | 1462/13025 [25:37<2:01:16,  1.59it/s] 11%|█         | 1463/13025 [25:39<2:27:08,  1.31it/s] 11%|█         | 1464/13025 [25:41<2:54:41,  1.10it/s] 11%|█         | 1465/13025 [25:42<3:21:16,  1.04s/it] 11%|█▏        | 1469/13025 [25:44<2:14:09,  1.44it/s] 11%|█▏        | 1472/13025 [25:45<2:04:31,  1.55it/s] 11%|█▏        | 1473/13025 [25:47<2:30:48,  1.28it/s] 11%|█▏        | 1476/13025 [25:48<2:10:20,  1.48it/s] 11%|█▏        | 1477/13025 [25:50<2:35:38,  1.24it/s] 11%|█▏        | 1479/13025 [25:52<2:35:20,  1.24it/s] 11%|█▏        | 1482/13025 [25:53<2:13:22,  1.44it/s] 11%|█▏        | 1483/13025 [25:55<2:39:54,  1.20it/s] 11%|█▏        | 1484/13025 [25:56<3:05:33,  1.04it/s] 11%|█▏        | 1485/13025 [25:58<3:29:15,  1.09s/it] 11%|█▏        | 1486/13025 [25:59<3:50:58,  1.20s/it] 11%|█▏        | 1487/13025 [26:01<4:08:30,  1.29s/it] 11%|█▏        | 1491/13025 [26:03<2:30:21,  1.28it/s] 11%|█▏        | 1492/13025 [26:04<2:59:44,  1.07it/s] 11%|█▏        | 1494/13025 [26:06<2:50:00,  1.13it/s] 11%|█▏        | 1495/13025 [26:07<3:14:51,  1.01s/it] 11%|█▏        | 1496/13025 [26:09<3:50:31,  1.20s/it] 12%|█▏        | 1498/13025 [26:12<3:45:40,  1.17s/it] 12%|█▏        | 1499/13025 [26:14<4:27:59,  1.40s/it] 12%|█▏        | 1500/13025 [26:16<5:04:42,  1.59s/it] 12%|█▏        | 1501/13025 [26:18<5:11:03,  1.62s/it] 12%|█▏        | 1505/13025 [26:19<2:49:32,  1.13it/s] 12%|█▏        | 1506/13025 [26:21<3:14:08,  1.01s/it] 12%|█▏        | 1507/13025 [26:22<3:37:05,  1.13s/it] 12%|█▏        | 1508/13025 [26:24<3:57:35,  1.24s/it] 12%|█▏        | 1511/13025 [26:26<2:49:14,  1.13it/s] 12%|█▏        | 1512/13025 [26:27<3:13:51,  1.01s/it] 12%|█▏        | 1513/13025 [26:29<3:36:26,  1.13s/it] 12%|█▏        | 1514/13025 [26:30<3:56:15,  1.23s/it] 12%|█▏        | 1517/13025 [26:32<2:49:35,  1.13it/s] 12%|█▏        | 1518/13025 [26:33<3:14:33,  1.01s/it] 12%|█▏        | 1520/13025 [26:35<2:57:36,  1.08it/s] 12%|█▏        | 1521/13025 [26:37<3:20:37,  1.05s/it] 12%|█▏        | 1525/13025 [26:38<2:14:46,  1.42it/s] 12%|█▏        | 1526/13025 [26:40<2:44:25,  1.17it/s] 12%|█▏        | 1527/13025 [26:41<3:09:37,  1.01it/s] 12%|█▏        | 1528/13025 [26:43<3:36:40,  1.13s/it] 12%|█▏        | 1529/13025 [26:45<3:57:52,  1.24s/it] 12%|█▏        | 1530/13025 [26:46<4:17:15,  1.34s/it] 12%|█▏        | 1531/13025 [26:48<4:31:26,  1.42s/it] 12%|█▏        | 1532/13025 [26:50<4:40:56,  1.47s/it] 12%|█▏        | 1533/13025 [26:51<4:48:45,  1.51s/it] 12%|█▏        | 1535/13025 [26:53<3:48:51,  1.20s/it] 12%|█▏        | 1536/13025 [26:54<4:05:50,  1.28s/it] 12%|█▏        | 1537/13025 [26:56<4:19:27,  1.36s/it] 12%|█▏        | 1540/13025 [26:58<2:57:39,  1.08it/s] 12%|█▏        | 1542/13025 [26:59<2:49:26,  1.13it/s] 12%|█▏        | 1543/13025 [27:01<3:16:23,  1.03s/it] 12%|█▏        | 1549/13025 [27:02<1:46:57,  1.79it/s] 12%|█▏        | 1550/13025 [27:04<2:14:15,  1.42it/s] 12%|█▏        | 1551/13025 [27:06<2:42:59,  1.17it/s] 12%|█▏        | 1553/13025 [27:07<2:41:56,  1.18it/s] 12%|█▏        | 1555/13025 [27:10<2:54:57,  1.09it/s] 12%|█▏        | 1556/13025 [27:12<3:39:56,  1.15s/it] 12%|█▏        | 1559/13025 [27:14<3:05:10,  1.03it/s] 12%|█▏        | 1560/13025 [27:16<3:44:44,  1.18s/it] 12%|█▏        | 1563/13025 [27:18<2:53:35,  1.10it/s] 12%|█▏        | 1566/13025 [27:19<2:27:08,  1.30it/s] 12%|█▏        | 1567/13025 [27:21<2:50:06,  1.12it/s] 12%|█▏        | 1568/13025 [27:23<3:14:59,  1.02s/it] 12%|█▏        | 1571/13025 [27:24<2:35:08,  1.23it/s] 12%|█▏        | 1573/13025 [27:26<2:34:55,  1.23it/s] 12%|█▏        | 1574/13025 [27:27<3:03:09,  1.04it/s] 12%|█▏        | 1575/13025 [27:29<3:29:28,  1.10s/it] 12%|█▏        | 1576/13025 [27:31<3:52:40,  1.22s/it] 12%|█▏        | 1577/13025 [27:32<4:09:47,  1.31s/it] 12%|█▏        | 1578/13025 [27:34<4:20:21,  1.36s/it] 12%|█▏        | 1580/13025 [27:36<3:35:42,  1.13s/it] 12%|█▏        | 1581/13025 [27:37<3:56:46,  1.24s/it] 12%|█▏        | 1582/13025 [27:39<4:14:09,  1.33s/it] 12%|█▏        | 1583/13025 [27:40<4:23:16,  1.38s/it] 12%|█▏        | 1584/13025 [27:42<4:31:00,  1.42s/it] 12%|█▏        | 1585/13025 [27:43<4:43:27,  1.49s/it] 12%|█▏        | 1586/13025 [27:45<4:52:36,  1.53s/it] 12%|█▏        | 1587/13025 [27:47<4:55:05,  1.55s/it] 12%|█▏        | 1588/13025 [27:48<4:56:52,  1.56s/it] 12%|█▏        | 1591/13025 [27:50<3:05:47,  1.03it/s] 12%|█▏        | 1592/13025 [27:51<3:27:09,  1.09s/it] 12%|█▏        | 1593/13025 [27:53<3:47:55,  1.20s/it] 12%|█▏        | 1594/13025 [27:54<4:05:05,  1.29s/it] 12%|█▏        | 1595/13025 [27:56<4:18:49,  1.36s/it] 12%|█▏        | 1596/13025 [27:58<4:29:00,  1.41s/it] 12%|█▏        | 1597/13025 [27:59<4:36:48,  1.45s/it] 12%|█▏        | 1598/13025 [28:01<4:42:42,  1.48s/it] 12%|█▏        | 1599/13025 [28:02<4:51:56,  1.53s/it] 12%|█▏        | 1601/13025 [28:04<3:51:12,  1.21s/it] 12%|█▏        | 1602/13025 [28:06<4:12:33,  1.33s/it] 12%|█▏        | 1606/13025 [28:07<2:27:47,  1.29it/s] 12%|█▏        | 1607/13025 [28:09<3:05:30,  1.03it/s] 12%|█▏        | 1609/13025 [28:11<3:16:07,  1.03s/it] 12%|█▏        | 1610/13025 [28:14<4:00:58,  1.27s/it] 12%|█▏        | 1612/13025 [28:16<3:45:20,  1.18s/it] 12%|█▏        | 1613/13025 [28:17<4:06:36,  1.30s/it] 12%|█▏        | 1618/13025 [28:19<2:19:07,  1.37it/s] 12%|█▏        | 1619/13025 [28:21<2:40:54,  1.18it/s] 12%|█▏        | 1620/13025 [28:22<3:02:46,  1.04it/s] 12%|█▏        | 1621/13025 [28:24<3:24:00,  1.07s/it] 12%|█▏        | 1622/13025 [28:25<3:42:23,  1.17s/it] 12%|█▏        | 1624/13025 [28:27<3:15:58,  1.03s/it] 12%|█▏        | 1625/13025 [28:28<3:39:48,  1.16s/it] 12%|█▏        | 1626/13025 [28:30<4:00:10,  1.26s/it] 12%|█▏        | 1627/13025 [28:32<4:15:09,  1.34s/it] 13%|█▎        | 1630/13025 [28:33<2:56:17,  1.08it/s] 13%|█▎        | 1631/13025 [28:35<3:23:01,  1.07s/it] 13%|█▎        | 1633/13025 [28:36<3:01:50,  1.04it/s] 13%|█▎        | 1634/13025 [28:38<3:24:04,  1.07s/it] 13%|█▎        | 1636/13025 [28:40<3:03:03,  1.04it/s] 13%|█▎        | 1637/13025 [28:41<3:27:33,  1.09s/it] 13%|█▎        | 1640/13025 [28:43<2:37:14,  1.21it/s] 13%|█▎        | 1642/13025 [28:44<2:33:34,  1.24it/s] 13%|█▎        | 1644/13025 [28:46<2:32:24,  1.24it/s] 13%|█▎        | 1646/13025 [28:47<2:33:02,  1.24it/s] 13%|█▎        | 1648/13025 [28:49<2:34:26,  1.23it/s] 13%|█▎        | 1649/13025 [28:51<3:02:12,  1.04it/s] 13%|█▎        | 1652/13025 [28:52<2:26:41,  1.29it/s] 13%|█▎        | 1656/13025 [28:54<1:58:02,  1.61it/s] 13%|█▎        | 1657/13025 [28:56<2:23:43,  1.32it/s] 13%|█▎        | 1658/13025 [28:57<2:49:53,  1.12it/s] 13%|█▎        | 1659/13025 [28:59<3:10:52,  1.01s/it] 13%|█▎        | 1661/13025 [29:00<2:58:01,  1.06it/s] 13%|█▎        | 1662/13025 [29:02<3:24:06,  1.08s/it] 13%|█▎        | 1663/13025 [29:04<3:46:26,  1.20s/it] 13%|█▎        | 1664/13025 [29:05<4:09:06,  1.32s/it] 13%|█▎        | 1666/13025 [29:07<3:30:32,  1.11s/it] 13%|█▎        | 1672/13025 [29:09<1:50:09,  1.72it/s] 13%|█▎        | 1673/13025 [29:11<2:34:04,  1.23it/s] 13%|█▎        | 1675/13025 [29:13<2:49:39,  1.11it/s] 13%|█▎        | 1678/13025 [29:15<2:39:27,  1.19it/s] 13%|█▎        | 1680/13025 [29:17<2:47:14,  1.13it/s] 13%|█▎        | 1681/13025 [29:19<3:09:37,  1.00s/it] 13%|█▎        | 1682/13025 [29:21<3:32:04,  1.12s/it] 13%|█▎        | 1683/13025 [29:22<3:49:25,  1.21s/it] 13%|█▎        | 1684/13025 [29:24<4:09:19,  1.32s/it] 13%|█▎        | 1685/13025 [29:26<4:23:32,  1.39s/it] 13%|█▎        | 1687/13025 [29:27<3:41:55,  1.17s/it] 13%|█▎        | 1688/13025 [29:29<4:01:45,  1.28s/it] 13%|█▎        | 1689/13025 [29:31<4:17:43,  1.36s/it] 13%|█▎        | 1692/13025 [29:32<2:57:29,  1.06it/s] 13%|█▎        | 1694/13025 [29:34<2:48:15,  1.12it/s] 13%|█▎        | 1696/13025 [29:36<2:45:50,  1.14it/s] 13%|█▎        | 1698/13025 [29:37<2:41:02,  1.17it/s] 13%|█▎        | 1699/13025 [29:39<3:05:58,  1.01it/s] 13%|█▎        | 1701/13025 [29:40<2:56:32,  1.07it/s] 13%|█▎        | 1703/13025 [29:42<2:48:59,  1.12it/s] 13%|█▎        | 1707/13025 [29:44<2:04:35,  1.51it/s] 13%|█▎        | 1709/13025 [29:45<2:12:04,  1.43it/s] 13%|█▎        | 1711/13025 [29:47<2:17:52,  1.37it/s] 13%|█▎        | 1712/13025 [29:48<2:43:27,  1.15it/s] 13%|█▎        | 1713/13025 [29:50<3:08:26,  1.00it/s] 13%|█▎        | 1715/13025 [29:52<2:56:52,  1.07it/s] 13%|█▎        | 1716/13025 [29:53<3:24:02,  1.08s/it] 13%|█▎        | 1718/13025 [29:55<3:05:24,  1.02it/s] 13%|█▎        | 1719/13025 [29:57<3:28:09,  1.10s/it] 13%|█▎        | 1720/13025 [29:58<3:51:46,  1.23s/it] 13%|█▎        | 1721/13025 [30:00<4:07:46,  1.32s/it] 13%|█▎        | 1723/13025 [30:01<3:28:25,  1.11s/it] 13%|█▎        | 1725/13025 [30:03<3:07:30,  1.00it/s] 13%|█▎        | 1726/13025 [30:05<3:32:11,  1.13s/it] 13%|█▎        | 1728/13025 [30:06<3:09:23,  1.01s/it] 13%|█▎        | 1730/13025 [30:08<2:56:44,  1.07it/s] 13%|█▎        | 1731/13025 [30:10<3:42:46,  1.18s/it] 13%|█▎        | 1732/13025 [30:12<4:26:34,  1.42s/it] 13%|█▎        | 1733/13025 [30:15<5:04:24,  1.62s/it] 13%|█▎        | 1735/13025 [30:17<4:22:16,  1.39s/it] 13%|█▎        | 1737/13025 [30:18<3:40:20,  1.17s/it] 13%|█▎        | 1740/13025 [30:20<2:47:41,  1.12it/s] 13%|█▎        | 1742/13025 [30:22<2:44:03,  1.15it/s] 13%|█▎        | 1745/13025 [30:23<2:21:09,  1.33it/s] 13%|█▎        | 1746/13025 [30:25<2:47:49,  1.12it/s] 13%|█▎        | 1747/13025 [30:26<3:12:41,  1.03s/it] 13%|█▎        | 1748/13025 [30:28<3:35:38,  1.15s/it] 13%|█▎        | 1751/13025 [30:30<2:42:00,  1.16it/s] 13%|█▎        | 1752/13025 [30:31<3:07:57,  1.00s/it] 13%|█▎        | 1753/13025 [30:33<3:33:59,  1.14s/it] 13%|█▎        | 1754/13025 [30:35<3:54:32,  1.25s/it] 13%|█▎        | 1755/13025 [30:36<4:12:25,  1.34s/it] 14%|█▎        | 1760/13025 [30:38<2:11:11,  1.43it/s] 14%|█▎        | 1761/13025 [30:40<2:39:04,  1.18it/s] 14%|█▎        | 1762/13025 [30:41<3:03:25,  1.02it/s] 14%|█▎        | 1766/13025 [30:43<2:10:03,  1.44it/s] 14%|█▎        | 1767/13025 [30:44<2:35:09,  1.21it/s] 14%|█▎        | 1769/13025 [30:46<2:34:23,  1.22it/s] 14%|█▎        | 1770/13025 [30:48<2:59:18,  1.05it/s] 14%|█▎        | 1771/13025 [30:49<3:24:22,  1.09s/it] 14%|█▎        | 1773/13025 [30:51<3:03:16,  1.02it/s] 14%|█▎        | 1774/13025 [30:52<3:31:22,  1.13s/it] 14%|█▎        | 1775/13025 [30:54<3:50:46,  1.23s/it] 14%|█▎        | 1776/13025 [30:56<4:08:34,  1.33s/it] 14%|█▎        | 1777/13025 [30:57<4:25:32,  1.42s/it] 14%|█▎        | 1778/13025 [30:59<4:35:21,  1.47s/it] 14%|█▎        | 1780/13025 [31:01<3:43:10,  1.19s/it] 14%|█▎        | 1781/13025 [31:02<3:59:49,  1.28s/it] 14%|█▎        | 1783/13025 [31:04<3:26:20,  1.10s/it] 14%|█▎        | 1785/13025 [31:05<3:04:20,  1.02it/s] 14%|█▎        | 1789/13025 [31:07<2:10:08,  1.44it/s] 14%|█▍        | 1791/13025 [31:09<2:18:32,  1.35it/s] 14%|█▍        | 1792/13025 [31:11<3:04:42,  1.01it/s] 14%|█▍        | 1794/13025 [31:13<3:12:10,  1.03s/it] 14%|█▍        | 1795/13025 [31:16<3:54:22,  1.25s/it] 14%|█▍        | 1796/13025 [31:17<4:18:41,  1.38s/it] 14%|█▍        | 1798/13025 [31:19<3:38:51,  1.17s/it] 14%|█▍        | 1799/13025 [31:21<3:56:35,  1.26s/it] 14%|█▍        | 1801/13025 [31:22<3:27:00,  1.11s/it] 14%|█▍        | 1803/13025 [31:24<3:07:14,  1.00s/it] 14%|█▍        | 1804/13025 [31:26<3:32:00,  1.13s/it] 14%|█▍        | 1805/13025 [31:27<3:50:08,  1.23s/it] 14%|█▍        | 1806/13025 [31:29<4:07:41,  1.32s/it] 14%|█▍        | 1807/13025 [31:30<4:21:16,  1.40s/it] 14%|█▍        | 1808/13025 [31:32<4:35:13,  1.47s/it] 14%|█▍        | 1809/13025 [31:34<4:40:49,  1.50s/it] 14%|█▍        | 1810/13025 [31:35<4:46:46,  1.53s/it] 14%|█▍        | 1811/13025 [31:37<4:51:54,  1.56s/it] 14%|█▍        | 1813/13025 [31:39<3:48:51,  1.22s/it] 14%|█▍        | 1814/13025 [31:40<4:09:12,  1.33s/it] 14%|█▍        | 1815/13025 [31:42<4:22:45,  1.41s/it] 14%|█▍        | 1817/13025 [31:43<3:35:38,  1.15s/it] 14%|█▍        | 1821/13025 [31:45<2:17:25,  1.36it/s] 14%|█▍        | 1822/13025 [31:47<2:43:24,  1.14it/s] 14%|█▍        | 1823/13025 [31:48<3:07:57,  1.01s/it] 14%|█▍        | 1824/13025 [31:50<3:34:02,  1.15s/it] 14%|█▍        | 1825/13025 [31:51<3:54:25,  1.26s/it] 14%|█▍        | 1826/13025 [31:53<4:11:39,  1.35s/it] 14%|█▍        | 1828/13025 [31:55<3:30:51,  1.13s/it] 14%|█▍        | 1829/13025 [31:56<3:53:42,  1.25s/it] 14%|█▍        | 1830/13025 [31:58<4:12:49,  1.36s/it] 14%|█▍        | 1833/13025 [32:00<2:54:43,  1.07it/s] 14%|█▍        | 1834/13025 [32:01<3:21:19,  1.08s/it] 14%|█▍        | 1836/13025 [32:03<3:00:15,  1.03it/s] 14%|█▍        | 1837/13025 [32:04<3:23:23,  1.09s/it] 14%|█▍        | 1839/13025 [32:06<3:05:34,  1.00it/s] 14%|█▍        | 1840/13025 [32:08<3:28:35,  1.12s/it] 14%|█▍        | 1841/13025 [32:10<4:05:25,  1.32s/it] 14%|█▍        | 1842/13025 [32:12<4:55:33,  1.59s/it] 14%|█▍        | 1843/13025 [32:14<5:19:30,  1.71s/it] 14%|█▍        | 1845/13025 [32:16<4:29:41,  1.45s/it] 14%|█▍        | 1847/13025 [32:18<3:47:57,  1.22s/it] 14%|█▍        | 1848/13025 [32:20<4:02:12,  1.30s/it] 14%|█▍        | 1849/13025 [32:21<4:16:08,  1.38s/it] 14%|█▍        | 1850/13025 [32:23<4:27:28,  1.44s/it] 14%|█▍        | 1852/13025 [32:25<3:39:14,  1.18s/it] 14%|█▍        | 1853/13025 [32:26<3:56:51,  1.27s/it] 14%|█▍        | 1854/13025 [32:28<4:11:02,  1.35s/it] 14%|█▍        | 1855/13025 [32:29<4:25:10,  1.42s/it] 14%|█▍        | 1856/13025 [32:31<4:35:25,  1.48s/it] 14%|█▍        | 1858/13025 [32:33<3:39:33,  1.18s/it] 14%|█▍        | 1860/13025 [32:34<3:15:23,  1.05s/it] 14%|█▍        | 1861/13025 [32:36<3:37:58,  1.17s/it] 14%|█▍        | 1863/13025 [32:37<3:12:13,  1.03s/it] 14%|█▍        | 1864/13025 [32:39<3:32:27,  1.14s/it] 14%|█▍        | 1865/13025 [32:41<3:52:40,  1.25s/it] 14%|█▍        | 1866/13025 [32:42<4:09:47,  1.34s/it] 14%|█▍        | 1867/13025 [32:44<4:21:19,  1.41s/it] 14%|█▍        | 1868/13025 [32:45<4:29:43,  1.45s/it] 14%|█▍        | 1873/13025 [32:47<2:09:54,  1.43it/s] 14%|█▍        | 1874/13025 [32:49<2:35:40,  1.19it/s] 14%|█▍        | 1876/13025 [32:50<2:31:23,  1.23it/s] 14%|█▍        | 1878/13025 [32:52<2:28:22,  1.25it/s] 14%|█▍        | 1879/13025 [32:53<2:52:41,  1.08it/s] 14%|█▍        | 1881/13025 [32:55<2:46:37,  1.11it/s] 14%|█▍        | 1882/13025 [32:56<3:10:03,  1.02s/it] 14%|█▍        | 1883/13025 [32:58<3:30:57,  1.14s/it] 14%|█▍        | 1884/13025 [32:59<3:50:42,  1.24s/it] 14%|█▍        | 1886/13025 [33:01<3:17:14,  1.06s/it] 14%|█▍        | 1888/13025 [33:03<3:03:50,  1.01it/s] 15%|█▍        | 1892/13025 [33:04<2:09:14,  1.44it/s] 15%|█▍        | 1895/13025 [33:06<2:01:23,  1.53it/s] 15%|█▍        | 1896/13025 [33:08<2:24:06,  1.29it/s] 15%|█▍        | 1898/13025 [33:10<2:38:13,  1.17it/s] 15%|█▍        | 1899/13025 [33:12<3:23:49,  1.10s/it] 15%|█▍        | 1900/13025 [33:14<4:01:13,  1.30s/it] 15%|█▍        | 1901/13025 [33:16<4:41:05,  1.52s/it] 15%|█▍        | 1902/13025 [33:18<4:47:03,  1.55s/it] 15%|█▍        | 1903/13025 [33:20<4:46:54,  1.55s/it] 15%|█▍        | 1904/13025 [33:21<4:45:45,  1.54s/it] 15%|█▍        | 1905/13025 [33:23<4:39:55,  1.51s/it] 15%|█▍        | 1906/13025 [33:24<4:50:55,  1.57s/it] 15%|█▍        | 1907/13025 [33:26<4:50:45,  1.57s/it] 15%|█▍        | 1911/13025 [33:28<2:37:19,  1.18it/s] 15%|█▍        | 1912/13025 [33:29<3:03:13,  1.01it/s] 15%|█▍        | 1913/13025 [33:31<3:27:57,  1.12s/it] 15%|█▍        | 1914/13025 [33:32<3:48:55,  1.24s/it] 15%|█▍        | 1918/13025 [33:34<2:22:34,  1.30it/s] 15%|█▍        | 1919/13025 [33:36<2:48:48,  1.10it/s] 15%|█▍        | 1920/13025 [33:37<3:10:46,  1.03s/it] 15%|█▍        | 1921/13025 [33:39<3:30:36,  1.14s/it] 15%|█▍        | 1923/13025 [33:40<3:08:02,  1.02s/it] 15%|█▍        | 1924/13025 [33:42<3:25:13,  1.11s/it] 15%|█▍        | 1928/13025 [33:43<2:13:10,  1.39it/s] 15%|█▍        | 1929/13025 [33:45<2:39:24,  1.16it/s] 15%|█▍        | 1930/13025 [33:47<3:05:22,  1.00s/it] 15%|█▍        | 1931/13025 [33:48<3:31:48,  1.15s/it] 15%|█▍        | 1932/13025 [33:50<3:51:11,  1.25s/it] 15%|█▍        | 1933/13025 [33:51<4:06:47,  1.33s/it] 15%|█▍        | 1934/13025 [33:53<4:16:27,  1.39s/it] 15%|█▍        | 1935/13025 [33:55<4:23:39,  1.43s/it] 15%|█▍        | 1937/13025 [33:56<3:35:43,  1.17s/it] 15%|█▍        | 1938/13025 [33:58<3:56:05,  1.28s/it] 15%|█▍        | 1939/13025 [33:59<4:07:43,  1.34s/it] 15%|█▍        | 1942/13025 [34:01<2:49:20,  1.09it/s] 15%|█▍        | 1943/13025 [34:03<3:13:32,  1.05s/it] 15%|█▍        | 1944/13025 [34:04<3:39:04,  1.19s/it] 15%|█▍        | 1945/13025 [34:06<4:00:50,  1.30s/it] 15%|█▍        | 1946/13025 [34:08<4:17:41,  1.40s/it] 15%|█▍        | 1947/13025 [34:09<4:42:09,  1.53s/it] 15%|█▍        | 1949/13025 [34:12<4:16:41,  1.39s/it] 15%|█▍        | 1950/13025 [34:14<4:49:01,  1.57s/it] 15%|█▍        | 1951/13025 [34:16<5:21:53,  1.74s/it] 15%|█▍        | 1952/13025 [34:18<5:19:20,  1.73s/it] 15%|█▍        | 1953/13025 [34:19<5:08:17,  1.67s/it] 15%|█▌        | 1955/13025 [34:21<3:56:16,  1.28s/it] 15%|█▌        | 1958/13025 [34:23<2:49:56,  1.09it/s] 15%|█▌        | 1959/13025 [34:24<3:17:21,  1.07s/it] 15%|█▌        | 1960/13025 [34:26<3:39:22,  1.19s/it] 15%|█▌        | 1961/13025 [34:28<3:53:54,  1.27s/it] 15%|█▌        | 1962/13025 [34:29<4:10:09,  1.36s/it] 15%|█▌        | 1963/13025 [34:31<4:22:41,  1.42s/it] 15%|█▌        | 1964/13025 [34:32<4:37:04,  1.50s/it] 15%|█▌        | 1965/13025 [34:34<4:48:14,  1.56s/it] 15%|█▌        | 1967/13025 [34:36<3:44:53,  1.22s/it] 15%|█▌        | 1969/13025 [34:37<3:15:29,  1.06s/it] 15%|█▌        | 1971/13025 [34:39<2:55:47,  1.05it/s] 15%|█▌        | 1972/13025 [34:41<3:20:29,  1.09s/it] 15%|█▌        | 1975/13025 [34:42<2:33:49,  1.20it/s] 15%|█▌        | 1976/13025 [34:44<3:02:51,  1.01it/s] 15%|█▌        | 1977/13025 [34:45<3:26:23,  1.12s/it] 15%|█▌        | 1980/13025 [34:47<2:39:04,  1.16it/s] 15%|█▌        | 1982/13025 [34:49<2:38:50,  1.16it/s] 15%|█▌        | 1985/13025 [34:51<2:15:17,  1.36it/s] 15%|█▌        | 1986/13025 [34:52<2:42:18,  1.13it/s] 15%|█▌        | 1988/13025 [34:54<2:40:47,  1.14it/s] 15%|█▌        | 1989/13025 [34:56<3:05:35,  1.01s/it] 15%|█▌        | 1993/13025 [34:57<2:10:10,  1.41it/s] 15%|█▌        | 1994/13025 [34:59<2:35:21,  1.18it/s] 15%|█▌        | 1996/13025 [35:01<2:36:01,  1.18it/s] 15%|█▌        | 1997/13025 [35:02<3:03:08,  1.00it/s] 15%|█▌        | 1998/13025 [35:04<3:28:20,  1.13s/it] 15%|█▌        | 2000/13025 [35:05<3:06:25,  1.01s/it] 15%|█▌        | 2001/13025 [35:07<3:31:37,  1.15s/it] 15%|█▌        | 2002/13025 [35:09<4:07:18,  1.35s/it] 15%|█▌        | 2007/13025 [35:11<2:27:15,  1.25it/s] 15%|█▌        | 2008/13025 [35:14<3:07:16,  1.02s/it] 15%|█▌        | 2009/13025 [35:16<3:52:28,  1.27s/it] 15%|█▌        | 2012/13025 [35:18<2:58:33,  1.03it/s] 15%|█▌        | 2013/13025 [35:20<3:18:52,  1.08s/it] 15%|█▌        | 2015/13025 [35:21<3:04:12,  1.00s/it] 16%|█▌        | 2019/13025 [35:23<2:12:13,  1.39it/s] 16%|█▌        | 2020/13025 [35:24<2:36:13,  1.17it/s] 16%|█▌        | 2021/13025 [35:26<3:02:17,  1.01it/s] 16%|█▌        | 2023/13025 [35:28<2:53:06,  1.06it/s] 16%|█▌        | 2024/13025 [35:30<3:17:51,  1.08s/it] 16%|█▌        | 2026/13025 [35:31<2:55:54,  1.04it/s] 16%|█▌        | 2029/13025 [35:33<2:24:07,  1.27it/s] 16%|█▌        | 2030/13025 [35:34<2:50:28,  1.07it/s] 16%|█▌        | 2032/13025 [35:36<2:41:52,  1.13it/s] 16%|█▌        | 2034/13025 [35:38<2:39:13,  1.15it/s] 16%|█▌        | 2036/13025 [35:39<2:37:13,  1.16it/s] 16%|█▌        | 2038/13025 [35:41<2:34:36,  1.18it/s] 16%|█▌        | 2040/13025 [35:42<2:32:35,  1.20it/s] 16%|█▌        | 2041/13025 [35:44<2:59:30,  1.02it/s] 16%|█▌        | 2042/13025 [35:46<3:25:31,  1.12s/it] 16%|█▌        | 2044/13025 [35:47<3:06:05,  1.02s/it] 16%|█▌        | 2045/13025 [35:49<3:32:51,  1.16s/it] 16%|█▌        | 2046/13025 [35:51<3:53:34,  1.28s/it] 16%|█▌        | 2049/13025 [35:52<2:42:30,  1.13it/s] 16%|█▌        | 2051/13025 [35:54<2:38:01,  1.16it/s] 16%|█▌        | 2052/13025 [35:56<3:07:02,  1.02s/it] 16%|█▌        | 2058/13025 [35:57<1:42:35,  1.78it/s] 16%|█▌        | 2059/13025 [35:59<2:06:26,  1.45it/s] 16%|█▌        | 2060/13025 [36:01<2:34:33,  1.18it/s] 16%|█▌        | 2061/13025 [36:02<3:00:06,  1.01it/s] 16%|█▌        | 2062/13025 [36:04<3:25:53,  1.13s/it] 16%|█▌        | 2065/13025 [36:06<2:38:53,  1.15it/s] 16%|█▌        | 2066/13025 [36:07<3:03:43,  1.01s/it] 16%|█▌        | 2068/13025 [36:09<2:52:33,  1.06it/s] 16%|█▌        | 2071/13025 [36:11<2:37:33,  1.16it/s] 16%|█▌        | 2072/13025 [36:14<3:26:12,  1.13s/it] 16%|█▌        | 2073/13025 [36:16<4:10:59,  1.38s/it] 16%|█▌        | 2075/13025 [36:18<3:37:28,  1.19s/it] 16%|█▌        | 2076/13025 [36:19<3:53:58,  1.28s/it] 16%|█▌        | 2079/13025 [36:21<2:54:30,  1.05it/s] 16%|█▌        | 2082/13025 [36:23<2:25:41,  1.25it/s] 16%|█▌        | 2083/13025 [36:24<2:49:59,  1.07it/s] 16%|█▌        | 2084/13025 [36:26<3:13:33,  1.06s/it] 16%|█▌        | 2087/13025 [36:28<2:34:08,  1.18it/s] 16%|█▌        | 2088/13025 [36:29<2:59:23,  1.02it/s] 16%|█▌        | 2089/13025 [36:31<3:23:43,  1.12s/it] 16%|█▌        | 2090/13025 [36:33<3:48:05,  1.25s/it] 16%|█▌        | 2091/13025 [36:34<4:07:02,  1.36s/it] 16%|█▌        | 2096/13025 [36:36<2:10:42,  1.39it/s] 16%|█▌        | 2097/13025 [36:38<2:33:08,  1.19it/s] 16%|█▌        | 2098/13025 [36:39<3:01:54,  1.00it/s] 16%|█▌        | 2100/13025 [36:41<2:53:19,  1.05it/s] 16%|█▌        | 2101/13025 [36:43<3:16:48,  1.08s/it] 16%|█▌        | 2103/13025 [36:44<2:59:55,  1.01it/s] 16%|█▌        | 2104/13025 [36:46<3:25:48,  1.13s/it] 16%|█▌        | 2109/13025 [36:48<1:58:18,  1.54it/s] 16%|█▌        | 2112/13025 [36:49<1:52:08,  1.62it/s] 16%|█▌        | 2113/13025 [36:51<2:17:52,  1.32it/s] 16%|█▌        | 2114/13025 [36:53<2:44:01,  1.11it/s] 16%|█▌        | 2115/13025 [36:54<3:12:47,  1.06s/it] 16%|█▋        | 2117/13025 [36:56<2:59:03,  1.02it/s] 16%|█▋        | 2118/13025 [36:58<3:22:46,  1.12s/it] 16%|█▋        | 2119/13025 [36:59<3:42:16,  1.22s/it] 16%|█▋        | 2120/13025 [37:01<3:55:28,  1.30s/it] 16%|█▋        | 2121/13025 [37:02<4:09:50,  1.37s/it] 16%|█▋        | 2122/13025 [37:04<4:22:52,  1.45s/it] 16%|█▋        | 2123/13025 [37:06<4:27:55,  1.47s/it] 16%|█▋        | 2126/13025 [37:07<2:56:19,  1.03it/s] 16%|█▋        | 2129/13025 [37:09<2:28:40,  1.22it/s] 16%|█▋        | 2130/13025 [37:11<3:14:41,  1.07s/it] 16%|█▋        | 2131/13025 [37:14<3:54:11,  1.29s/it] 16%|█▋        | 2132/13025 [37:16<4:37:39,  1.53s/it] 16%|█▋        | 2133/13025 [37:18<4:47:24,  1.58s/it] 16%|█▋        | 2134/13025 [37:19<4:48:56,  1.59s/it] 16%|█▋        | 2136/13025 [37:21<3:50:52,  1.27s/it] 16%|█▋        | 2139/13025 [37:23<2:49:14,  1.07it/s] 16%|█▋        | 2141/13025 [37:24<2:42:30,  1.12it/s] 16%|█▋        | 2142/13025 [37:26<3:04:53,  1.02s/it] 16%|█▋        | 2143/13025 [37:27<3:27:16,  1.14s/it] 16%|█▋        | 2144/13025 [37:29<3:47:33,  1.25s/it] 16%|█▋        | 2145/13025 [37:31<4:00:38,  1.33s/it] 16%|█▋        | 2146/13025 [37:32<4:06:15,  1.36s/it] 16%|█▋        | 2147/13025 [37:34<4:24:21,  1.46s/it] 16%|█▋        | 2148/13025 [37:35<4:35:25,  1.52s/it] 16%|█▋        | 2149/13025 [37:37<4:36:24,  1.52s/it] 17%|█▋        | 2150/13025 [37:39<4:42:30,  1.56s/it] 17%|█▋        | 2152/13025 [37:40<3:44:01,  1.24s/it] 17%|█▋        | 2153/13025 [37:42<4:01:17,  1.33s/it] 17%|█▋        | 2154/13025 [37:44<4:14:27,  1.40s/it] 17%|█▋        | 2156/13025 [37:45<3:26:47,  1.14s/it] 17%|█▋        | 2157/13025 [37:47<3:51:03,  1.28s/it] 17%|█▋        | 2158/13025 [37:49<4:05:58,  1.36s/it] 17%|█▋        | 2160/13025 [37:50<3:25:05,  1.13s/it] 17%|█▋        | 2161/13025 [37:52<3:43:53,  1.24s/it] 17%|█▋        | 2162/13025 [37:53<3:59:20,  1.32s/it] 17%|█▋        | 2163/13025 [37:55<4:14:48,  1.41s/it] 17%|█▋        | 2165/13025 [37:57<3:29:08,  1.16s/it] 17%|█▋        | 2166/13025 [37:58<3:50:49,  1.28s/it] 17%|█▋        | 2167/13025 [38:00<4:01:43,  1.34s/it] 17%|█▋        | 2169/13025 [38:01<3:20:47,  1.11s/it] 17%|█▋        | 2173/13025 [38:03<2:07:13,  1.42it/s] 17%|█▋        | 2174/13025 [38:04<2:31:40,  1.19it/s] 17%|█▋        | 2177/13025 [38:06<2:09:52,  1.39it/s] 17%|█▋        | 2178/13025 [38:08<2:38:16,  1.14it/s] 17%|█▋        | 2179/13025 [38:10<3:16:49,  1.09s/it] 17%|█▋        | 2181/13025 [38:12<3:19:52,  1.11s/it] 17%|█▋        | 2183/13025 [38:14<3:22:18,  1.12s/it] 17%|█▋        | 2185/13025 [38:16<3:19:22,  1.10s/it] 17%|█▋        | 2186/13025 [38:18<3:41:20,  1.23s/it] 17%|█▋        | 2188/13025 [38:20<3:15:32,  1.08s/it] 17%|█▋        | 2189/13025 [38:21<3:38:24,  1.21s/it] 17%|█▋        | 2190/13025 [38:23<3:54:32,  1.30s/it] 17%|█▋        | 2191/13025 [38:25<4:08:21,  1.38s/it] 17%|█▋        | 2192/13025 [38:26<4:17:46,  1.43s/it] 17%|█▋        | 2197/13025 [38:28<2:09:05,  1.40it/s] 17%|█▋        | 2198/13025 [38:30<2:34:07,  1.17it/s] 17%|█▋        | 2202/13025 [38:31<1:53:47,  1.59it/s] 17%|█▋        | 2204/13025 [38:33<2:02:28,  1.47it/s] 17%|█▋        | 2206/13025 [38:34<2:10:18,  1.38it/s] 17%|█▋        | 2207/13025 [38:36<2:35:01,  1.16it/s] 17%|█▋        | 2209/13025 [38:38<2:33:45,  1.17it/s] 17%|█▋        | 2210/13025 [38:39<2:59:03,  1.01it/s] 17%|█▋        | 2211/13025 [38:41<3:22:34,  1.12s/it] 17%|█▋        | 2212/13025 [38:42<3:40:46,  1.23s/it] 17%|█▋        | 2215/13025 [38:44<2:36:44,  1.15it/s] 17%|█▋        | 2217/13025 [38:46<2:33:09,  1.18it/s] 17%|█▋        | 2218/13025 [38:47<2:57:28,  1.01it/s] 17%|█▋        | 2221/13025 [38:49<2:25:03,  1.24it/s] 17%|█▋        | 2223/13025 [38:51<2:27:09,  1.22it/s] 17%|█▋        | 2226/13025 [38:52<2:06:36,  1.42it/s] 17%|█▋        | 2227/13025 [38:54<2:30:56,  1.19it/s] 17%|█▋        | 2230/13025 [38:55<2:07:08,  1.42it/s] 17%|█▋        | 2231/13025 [38:57<2:33:22,  1.17it/s] 17%|█▋        | 2233/13025 [38:58<2:30:50,  1.19it/s] 17%|█▋        | 2234/13025 [39:00<2:57:57,  1.01it/s] 17%|█▋        | 2235/13025 [39:02<3:21:02,  1.12s/it] 17%|█▋        | 2236/13025 [39:03<3:45:19,  1.25s/it] 17%|█▋        | 2237/13025 [39:05<4:02:13,  1.35s/it] 17%|█▋        | 2240/13025 [39:07<2:49:02,  1.06it/s] 17%|█▋        | 2241/13025 [39:09<3:26:04,  1.15s/it] 17%|█▋        | 2242/13025 [39:11<4:10:14,  1.39s/it] 17%|█▋        | 2244/13025 [39:13<3:50:37,  1.28s/it] 17%|█▋        | 2245/13025 [39:15<4:21:46,  1.46s/it] 17%|█▋        | 2248/13025 [39:17<3:04:40,  1.03s/it] 17%|█▋        | 2250/13025 [39:19<2:53:12,  1.04it/s] 17%|█▋        | 2251/13025 [39:20<3:19:03,  1.11s/it] 17%|█▋        | 2252/13025 [39:22<3:38:18,  1.22s/it] 17%|█▋        | 2254/13025 [39:24<3:09:50,  1.06s/it] 17%|█▋        | 2259/13025 [39:25<1:54:55,  1.56it/s] 17%|█▋        | 2260/13025 [39:27<2:19:30,  1.29it/s] 17%|█▋        | 2261/13025 [39:29<2:45:02,  1.09it/s] 17%|█▋        | 2262/13025 [39:30<3:08:54,  1.05s/it] 17%|█▋        | 2263/13025 [39:32<3:30:28,  1.17s/it] 17%|█▋        | 2265/13025 [39:33<3:09:35,  1.06s/it] 17%|█▋        | 2268/13025 [39:35<2:28:45,  1.21it/s] 17%|█▋        | 2269/13025 [39:37<2:50:24,  1.05it/s] 17%|█▋        | 2271/13025 [39:38<2:39:25,  1.12it/s] 17%|█▋        | 2274/13025 [39:40<2:13:44,  1.34it/s] 17%|█▋        | 2279/13025 [39:41<1:36:04,  1.86it/s] 18%|█▊        | 2280/13025 [39:43<1:58:22,  1.51it/s] 18%|█▊        | 2281/13025 [39:45<2:24:15,  1.24it/s] 18%|█▊        | 2283/13025 [39:46<2:24:19,  1.24it/s] 18%|█▊        | 2284/13025 [39:48<2:53:24,  1.03it/s] 18%|█▊        | 2285/13025 [39:50<3:18:12,  1.11s/it] 18%|█▊        | 2286/13025 [39:51<3:43:01,  1.25s/it] 18%|█▊        | 2287/13025 [39:53<3:55:16,  1.31s/it] 18%|█▊        | 2289/13025 [39:54<3:16:26,  1.10s/it] 18%|█▊        | 2290/13025 [39:56<3:34:01,  1.20s/it] 18%|█▊        | 2291/13025 [39:58<3:52:07,  1.30s/it] 18%|█▊        | 2293/13025 [39:59<3:16:40,  1.10s/it] 18%|█▊        | 2294/13025 [40:01<3:37:42,  1.22s/it] 18%|█▊        | 2295/13025 [40:02<3:55:36,  1.32s/it] 18%|█▊        | 2296/13025 [40:04<4:10:39,  1.40s/it] 18%|█▊        | 2298/13025 [40:06<3:28:47,  1.17s/it] 18%|█▊        | 2299/13025 [40:08<3:53:06,  1.30s/it] 18%|█▊        | 2300/13025 [40:09<4:16:26,  1.43s/it] 18%|█▊        | 2301/13025 [40:12<4:51:17,  1.63s/it] 18%|█▊        | 2302/13025 [40:14<5:20:45,  1.79s/it] 18%|█▊        | 2305/13025 [40:16<3:40:39,  1.23s/it] 18%|█▊        | 2306/13025 [40:18<3:59:46,  1.34s/it] 18%|█▊        | 2309/13025 [40:20<2:55:52,  1.02it/s] 18%|█▊        | 2316/13025 [40:21<1:34:43,  1.88it/s] 18%|█▊        | 2317/13025 [40:23<1:56:17,  1.53it/s] 18%|█▊        | 2321/13025 [40:24<1:39:27,  1.79it/s] 18%|█▊        | 2322/13025 [40:26<2:03:37,  1.44it/s] 18%|█▊        | 2325/13025 [40:28<1:54:01,  1.56it/s] 18%|█▊        | 2326/13025 [40:29<2:18:34,  1.29it/s] 18%|█▊        | 2327/13025 [40:31<2:43:53,  1.09it/s] 18%|█▊        | 2329/13025 [40:33<2:37:40,  1.13it/s] 18%|█▊        | 2331/13025 [40:34<2:34:55,  1.15it/s] 18%|█▊        | 2333/13025 [40:36<2:34:21,  1.15it/s] 18%|█▊        | 2334/13025 [40:38<3:02:31,  1.02s/it] 18%|█▊        | 2336/13025 [40:39<2:48:17,  1.06it/s] 18%|█▊        | 2337/13025 [40:41<3:12:37,  1.08s/it] 18%|█▊        | 2338/13025 [40:43<3:36:02,  1.21s/it] 18%|█▊        | 2339/13025 [40:44<3:57:55,  1.34s/it] 18%|█▊        | 2340/13025 [40:46<4:11:01,  1.41s/it] 18%|█▊        | 2341/13025 [40:48<4:23:50,  1.48s/it] 18%|█▊        | 2342/13025 [40:49<4:33:08,  1.53s/it] 18%|█▊        | 2343/13025 [40:51<4:42:41,  1.59s/it] 18%|█▊        | 2345/13025 [40:53<3:45:36,  1.27s/it] 18%|█▊        | 2346/13025 [40:55<4:05:31,  1.38s/it] 18%|█▊        | 2347/13025 [40:56<4:17:11,  1.45s/it] 18%|█▊        | 2350/13025 [40:58<2:49:52,  1.05it/s] 18%|█▊        | 2351/13025 [40:59<3:15:16,  1.10s/it] 18%|█▊        | 2352/13025 [41:01<3:34:01,  1.20s/it] 18%|█▊        | 2353/13025 [41:03<3:51:53,  1.30s/it] 18%|█▊        | 2357/13025 [41:04<2:21:51,  1.25it/s] 18%|█▊        | 2360/13025 [41:06<2:03:34,  1.44it/s] 18%|█▊        | 2363/13025 [41:08<1:54:26,  1.55it/s] 18%|█▊        | 2364/13025 [41:09<2:26:27,  1.21it/s] 18%|█▊        | 2365/13025 [41:12<3:11:56,  1.08s/it] 18%|█▊        | 2367/13025 [41:14<3:13:49,  1.09s/it] 18%|█▊        | 2371/13025 [41:16<2:29:03,  1.19it/s] 18%|█▊        | 2374/13025 [41:18<2:15:39,  1.31it/s] 18%|█▊        | 2375/13025 [41:20<2:34:31,  1.15it/s] 18%|█▊        | 2376/13025 [41:21<2:58:29,  1.01s/it] 18%|█▊        | 2379/13025 [41:23<2:27:28,  1.20it/s] 18%|█▊        | 2383/13025 [41:25<1:53:01,  1.57it/s] 18%|█▊        | 2384/13025 [41:26<2:17:58,  1.29it/s] 18%|█▊        | 2385/13025 [41:28<2:42:26,  1.09it/s] 18%|█▊        | 2386/13025 [41:30<3:07:38,  1.06s/it] 18%|█▊        | 2388/13025 [41:31<2:53:59,  1.02it/s] 18%|█▊        | 2389/13025 [41:33<3:15:01,  1.10s/it] 18%|█▊        | 2391/13025 [41:35<2:57:38,  1.00s/it] 18%|█▊        | 2392/13025 [41:36<3:22:44,  1.14s/it] 18%|█▊        | 2393/13025 [41:38<3:44:25,  1.27s/it] 18%|█▊        | 2394/13025 [41:40<4:02:27,  1.37s/it] 18%|█▊        | 2396/13025 [41:41<3:23:34,  1.15s/it] 18%|█▊        | 2397/13025 [41:43<3:46:16,  1.28s/it] 18%|█▊        | 2398/13025 [41:45<4:03:24,  1.37s/it] 18%|█▊        | 2399/13025 [41:46<4:17:37,  1.45s/it] 18%|█▊        | 2402/13025 [41:48<2:46:15,  1.06it/s] 18%|█▊        | 2403/13025 [41:49<3:10:01,  1.07s/it] 18%|█▊        | 2404/13025 [41:51<3:35:00,  1.21s/it] 18%|█▊        | 2405/13025 [41:53<3:51:22,  1.31s/it] 18%|█▊        | 2406/13025 [41:54<4:07:42,  1.40s/it] 19%|█▊        | 2410/13025 [41:56<2:23:03,  1.24it/s] 19%|█▊        | 2411/13025 [41:58<2:49:45,  1.04it/s] 19%|█▊        | 2412/13025 [41:59<3:13:02,  1.09s/it] 19%|█▊        | 2414/13025 [42:01<2:58:11,  1.01s/it] 19%|█▊        | 2415/13025 [42:03<3:21:43,  1.14s/it] 19%|█▊        | 2417/13025 [42:04<2:59:43,  1.02s/it] 19%|█▊        | 2419/13025 [42:06<2:48:18,  1.05it/s] 19%|█▊        | 2420/13025 [42:08<3:13:54,  1.10s/it] 19%|█▊        | 2421/13025 [42:10<3:55:24,  1.33s/it] 19%|█▊        | 2423/13025 [42:12<3:41:08,  1.25s/it] 19%|█▊        | 2424/13025 [42:14<4:13:07,  1.43s/it] 19%|█▊        | 2428/13025 [42:16<2:47:04,  1.06it/s] 19%|█▊        | 2429/13025 [42:18<3:06:45,  1.06s/it] 19%|█▊        | 2432/13025 [42:20<2:31:20,  1.17it/s] 19%|█▊        | 2433/13025 [42:21<2:54:47,  1.01it/s] 19%|█▊        | 2434/13025 [42:23<3:17:11,  1.12s/it] 19%|█▊        | 2436/13025 [42:25<3:02:22,  1.03s/it] 19%|█▊        | 2437/13025 [42:26<3:25:28,  1.16s/it] 19%|█▊        | 2440/13025 [42:28<2:36:24,  1.13it/s] 19%|█▊        | 2442/13025 [42:30<2:33:50,  1.15it/s] 19%|█▉        | 2443/13025 [42:31<2:58:02,  1.01s/it] 19%|█▉        | 2446/13025 [42:33<2:22:38,  1.24it/s] 19%|█▉        | 2447/13025 [42:35<2:47:15,  1.05it/s] 19%|█▉        | 2448/13025 [42:36<3:12:24,  1.09s/it] 19%|█▉        | 2450/13025 [42:38<2:55:30,  1.00it/s] 19%|█▉        | 2453/13025 [42:40<2:22:38,  1.24it/s] 19%|█▉        | 2454/13025 [42:41<2:47:08,  1.05it/s] 19%|█▉        | 2455/13025 [42:43<3:07:17,  1.06s/it] 19%|█▉        | 2460/13025 [42:45<1:51:32,  1.58it/s] 19%|█▉        | 2461/13025 [42:46<2:11:18,  1.34it/s] 19%|█▉        | 2463/13025 [42:48<2:14:43,  1.31it/s] 19%|█▉        | 2464/13025 [42:49<2:40:42,  1.10it/s] 19%|█▉        | 2465/13025 [42:51<3:03:38,  1.04s/it] 19%|█▉        | 2467/13025 [42:52<2:47:08,  1.05it/s] 19%|█▉        | 2468/13025 [42:54<3:13:12,  1.10s/it] 19%|█▉        | 2469/13025 [42:56<3:32:37,  1.21s/it] 19%|█▉        | 2470/13025 [42:57<3:50:14,  1.31s/it] 19%|█▉        | 2471/13025 [42:59<4:04:29,  1.39s/it] 19%|█▉        | 2472/13025 [43:00<4:17:31,  1.46s/it] 19%|█▉        | 2474/13025 [43:02<3:30:01,  1.19s/it] 19%|█▉        | 2475/13025 [43:04<3:43:41,  1.27s/it] 19%|█▉        | 2476/13025 [43:05<3:56:58,  1.35s/it] 19%|█▉        | 2477/13025 [43:07<4:08:05,  1.41s/it] 19%|█▉        | 2479/13025 [43:08<3:20:24,  1.14s/it] 19%|█▉        | 2480/13025 [43:11<4:03:27,  1.39s/it] 19%|█▉        | 2482/13025 [43:13<3:48:50,  1.30s/it] 19%|█▉        | 2486/13025 [43:15<2:40:26,  1.09it/s] 19%|█▉        | 2487/13025 [43:17<3:14:02,  1.10s/it] 19%|█▉        | 2488/13025 [43:19<3:32:45,  1.21s/it] 19%|█▉        | 2490/13025 [43:21<3:08:59,  1.08s/it] 19%|█▉        | 2491/13025 [43:22<3:30:19,  1.20s/it] 19%|█▉        | 2492/13025 [43:24<3:51:50,  1.32s/it] 19%|█▉        | 2493/13025 [43:26<4:06:41,  1.41s/it] 19%|█▉        | 2494/13025 [43:27<4:16:10,  1.46s/it] 19%|█▉        | 2496/13025 [43:29<3:28:33,  1.19s/it] 19%|█▉        | 2499/13025 [43:31<2:32:03,  1.15it/s] 19%|█▉        | 2500/13025 [43:32<2:59:38,  1.02s/it] 19%|█▉        | 2501/13025 [43:34<3:20:12,  1.14s/it] 19%|█▉        | 2503/13025 [43:36<2:58:44,  1.02s/it] 19%|█▉        | 2505/13025 [43:37<2:47:37,  1.05it/s] 19%|█▉        | 2506/13025 [43:39<3:13:10,  1.10s/it] 19%|█▉        | 2507/13025 [43:41<3:38:05,  1.24s/it] 19%|█▉        | 2508/13025 [43:42<3:54:29,  1.34s/it] 19%|█▉        | 2510/13025 [43:44<3:15:13,  1.11s/it] 19%|█▉        | 2512/13025 [43:45<2:52:52,  1.01it/s] 19%|█▉        | 2515/13025 [43:47<2:20:39,  1.25it/s] 19%|█▉        | 2516/13025 [43:49<2:49:41,  1.03it/s] 19%|█▉        | 2517/13025 [43:51<3:14:41,  1.11s/it] 19%|█▉        | 2518/13025 [43:52<3:30:52,  1.20s/it] 19%|█▉        | 2519/13025 [43:54<3:50:48,  1.32s/it] 19%|█▉        | 2521/13025 [43:55<3:09:56,  1.09s/it] 19%|█▉        | 2522/13025 [43:57<3:31:57,  1.21s/it] 19%|█▉        | 2523/13025 [43:59<3:53:58,  1.34s/it] 19%|█▉        | 2524/13025 [44:00<4:02:58,  1.39s/it] 19%|█▉        | 2526/13025 [44:02<3:22:08,  1.16s/it] 19%|█▉        | 2529/13025 [44:03<2:31:29,  1.15it/s] 19%|█▉        | 2531/13025 [44:05<2:29:57,  1.17it/s] 19%|█▉        | 2534/13025 [44:07<2:07:56,  1.37it/s] 19%|█▉        | 2536/13025 [44:09<2:18:54,  1.26it/s] 19%|█▉        | 2537/13025 [44:11<3:03:03,  1.05s/it] 19%|█▉        | 2538/13025 [44:13<3:45:17,  1.29s/it] 20%|█▉        | 2540/13025 [44:16<3:37:59,  1.25s/it] 20%|█▉        | 2543/13025 [44:17<2:43:35,  1.07it/s] 20%|█▉        | 2546/13025 [44:19<2:17:37,  1.27it/s] 20%|█▉        | 2548/13025 [44:20<2:17:35,  1.27it/s] 20%|█▉        | 2550/13025 [44:22<2:18:34,  1.26it/s] 20%|█▉        | 2552/13025 [44:24<2:19:37,  1.25it/s] 20%|█▉        | 2554/13025 [44:25<2:18:15,  1.26it/s] 20%|█▉        | 2557/13025 [44:27<2:04:30,  1.40it/s] 20%|█▉        | 2558/13025 [44:29<2:29:58,  1.16it/s] 20%|█▉        | 2559/13025 [44:30<2:52:08,  1.01it/s] 20%|█▉        | 2562/13025 [44:32<2:18:19,  1.26it/s] 20%|█▉        | 2563/13025 [44:34<2:45:43,  1.05it/s] 20%|█▉        | 2564/13025 [44:35<3:09:07,  1.08s/it] 20%|█▉        | 2568/13025 [44:37<2:05:35,  1.39it/s] 20%|█▉        | 2571/13025 [44:38<1:54:08,  1.53it/s] 20%|█▉        | 2573/13025 [44:40<2:02:03,  1.43it/s] 20%|█▉        | 2575/13025 [44:42<2:08:04,  1.36it/s] 20%|█▉        | 2576/13025 [44:43<2:33:09,  1.14it/s] 20%|█▉        | 2577/13025 [44:45<3:00:19,  1.04s/it] 20%|█▉        | 2580/13025 [44:47<2:22:23,  1.22it/s] 20%|█▉        | 2581/13025 [44:48<2:49:25,  1.03it/s] 20%|█▉        | 2584/13025 [44:50<2:19:42,  1.25it/s] 20%|█▉        | 2585/13025 [44:52<2:45:14,  1.05it/s] 20%|█▉        | 2586/13025 [44:54<3:11:23,  1.10s/it] 20%|█▉        | 2589/13025 [44:55<2:27:27,  1.18it/s] 20%|█▉        | 2592/13025 [44:57<2:07:26,  1.36it/s] 20%|█▉        | 2594/13025 [44:59<2:11:43,  1.32it/s] 20%|█▉        | 2597/13025 [45:00<1:59:07,  1.46it/s] 20%|█▉        | 2598/13025 [45:02<2:24:04,  1.21it/s] 20%|█▉        | 2599/13025 [45:04<2:50:16,  1.02it/s] 20%|█▉        | 2601/13025 [45:05<2:40:57,  1.08it/s] 20%|█▉        | 2602/13025 [45:07<3:06:27,  1.07s/it] 20%|█▉        | 2603/13025 [45:09<3:29:37,  1.21s/it] 20%|█▉        | 2604/13025 [45:11<4:12:04,  1.45s/it] 20%|██        | 2605/13025 [45:13<4:52:35,  1.68s/it] 20%|██        | 2606/13025 [45:15<5:21:44,  1.85s/it] 20%|██        | 2608/13025 [45:17<4:16:34,  1.48s/it] 20%|██        | 2610/13025 [45:19<3:32:56,  1.23s/it] 20%|██        | 2611/13025 [45:21<3:49:54,  1.32s/it] 20%|██        | 2613/13025 [45:22<3:16:06,  1.13s/it] 20%|██        | 2615/13025 [45:24<2:58:28,  1.03s/it] 20%|██        | 2616/13025 [45:26<3:19:12,  1.15s/it] 20%|██        | 2617/13025 [45:27<3:40:46,  1.27s/it] 20%|██        | 2618/13025 [45:29<3:55:58,  1.36s/it] 20%|██        | 2620/13025 [45:31<3:17:33,  1.14s/it] 20%|██        | 2621/13025 [45:32<3:35:04,  1.24s/it] 20%|██        | 2622/13025 [45:34<3:54:09,  1.35s/it] 20%|██        | 2624/13025 [45:36<3:14:26,  1.12s/it] 20%|██        | 2625/13025 [45:37<3:36:28,  1.25s/it] 20%|██        | 2626/13025 [45:39<3:52:17,  1.34s/it] 20%|██        | 2627/13025 [45:40<3:56:40,  1.37s/it] 20%|██        | 2629/13025 [45:42<3:16:29,  1.13s/it] 20%|██        | 2631/13025 [45:44<2:59:27,  1.04s/it] 20%|██        | 2632/13025 [45:45<3:22:05,  1.17s/it] 20%|██        | 2633/13025 [45:47<3:41:01,  1.28s/it] 20%|██        | 2634/13025 [45:49<3:56:45,  1.37s/it] 20%|██        | 2635/13025 [45:50<4:12:52,  1.46s/it] 20%|██        | 2636/13025 [45:52<4:19:06,  1.50s/it] 20%|██        | 2637/13025 [45:54<4:25:08,  1.53s/it] 20%|██        | 2640/13025 [45:55<2:52:59,  1.00it/s] 20%|██        | 2644/13025 [45:57<1:59:24,  1.45it/s] 20%|██        | 2645/13025 [45:59<2:26:19,  1.18it/s] 20%|██        | 2647/13025 [46:00<2:26:11,  1.18it/s] 20%|██        | 2651/13025 [46:02<1:51:46,  1.55it/s] 20%|██        | 2652/13025 [46:04<2:18:28,  1.25it/s] 20%|██        | 2653/13025 [46:05<2:43:52,  1.05it/s] 20%|██        | 2655/13025 [46:07<2:33:48,  1.12it/s] 20%|██        | 2657/13025 [46:09<2:39:06,  1.09it/s] 20%|██        | 2658/13025 [46:11<3:24:11,  1.18s/it] 20%|██        | 2660/13025 [46:13<3:16:51,  1.14s/it] 20%|██        | 2665/13025 [46:16<2:11:50,  1.31it/s] 20%|██        | 2666/13025 [46:17<2:34:56,  1.11it/s] 20%|██        | 2667/13025 [46:19<2:58:18,  1.03s/it] 20%|██        | 2668/13025 [46:21<3:19:01,  1.15s/it] 20%|██        | 2669/13025 [46:22<3:36:20,  1.25s/it] 21%|██        | 2673/13025 [46:24<2:17:08,  1.26it/s] 21%|██        | 2674/13025 [46:26<2:40:14,  1.08it/s] 21%|██        | 2676/13025 [46:27<2:34:59,  1.11it/s] 21%|██        | 2677/13025 [46:29<3:00:51,  1.05s/it] 21%|██        | 2678/13025 [46:31<3:21:51,  1.17s/it] 21%|██        | 2679/13025 [46:32<3:43:28,  1.30s/it] 21%|██        | 2680/13025 [46:34<3:57:31,  1.38s/it] 21%|██        | 2683/13025 [46:36<2:44:47,  1.05it/s] 21%|██        | 2684/13025 [46:37<3:09:23,  1.10s/it] 21%|██        | 2685/13025 [46:39<3:31:29,  1.23s/it] 21%|██        | 2686/13025 [46:41<3:48:04,  1.32s/it] 21%|██        | 2688/13025 [46:42<3:14:24,  1.13s/it] 21%|██        | 2689/13025 [46:44<3:36:41,  1.26s/it] 21%|██        | 2690/13025 [46:46<3:56:10,  1.37s/it] 21%|██        | 2693/13025 [46:47<2:45:02,  1.04it/s] 21%|██        | 2695/13025 [46:49<2:37:18,  1.09it/s] 21%|██        | 2699/13025 [46:51<1:56:37,  1.48it/s] 21%|██        | 2700/13025 [46:52<2:22:27,  1.21it/s] 21%|██        | 2703/13025 [46:54<2:03:41,  1.39it/s] 21%|██        | 2705/13025 [46:56<2:10:03,  1.32it/s] 21%|██        | 2706/13025 [46:57<2:35:15,  1.11it/s] 21%|██        | 2707/13025 [46:59<2:58:46,  1.04s/it] 21%|██        | 2709/13025 [47:01<2:46:12,  1.03it/s] 21%|██        | 2710/13025 [47:02<3:08:28,  1.10s/it] 21%|██        | 2713/13025 [47:04<2:23:12,  1.20it/s] 21%|██        | 2714/13025 [47:06<2:47:39,  1.02it/s] 21%|██        | 2715/13025 [47:07<3:07:19,  1.09s/it] 21%|██        | 2716/13025 [47:09<3:41:46,  1.29s/it] 21%|██        | 2718/13025 [47:11<3:34:06,  1.25s/it] 21%|██        | 2723/13025 [47:14<2:13:53,  1.28it/s] 21%|██        | 2725/13025 [47:16<2:32:26,  1.13it/s] 21%|██        | 2726/13025 [47:18<2:55:29,  1.02s/it] 21%|██        | 2727/13025 [47:20<3:17:09,  1.15s/it] 21%|██        | 2728/13025 [47:21<3:35:35,  1.26s/it] 21%|██        | 2730/13025 [47:23<3:08:42,  1.10s/it] 21%|██        | 2731/13025 [47:25<3:29:13,  1.22s/it] 21%|██        | 2733/13025 [47:26<3:03:56,  1.07s/it] 21%|██        | 2735/13025 [47:28<2:50:06,  1.01it/s] 21%|██        | 2736/13025 [47:30<3:14:13,  1.13s/it] 21%|██        | 2737/13025 [47:31<3:36:45,  1.26s/it] 21%|██        | 2738/13025 [47:33<3:53:51,  1.36s/it] 21%|██        | 2743/13025 [47:35<2:01:43,  1.41it/s] 21%|██        | 2744/13025 [47:36<2:25:50,  1.17it/s] 21%|██        | 2745/13025 [47:38<2:50:50,  1.00it/s] 21%|██        | 2746/13025 [47:40<3:12:56,  1.13s/it] 21%|██        | 2747/13025 [47:41<3:34:09,  1.25s/it] 21%|██        | 2748/13025 [47:43<3:49:52,  1.34s/it] 21%|██        | 2750/13025 [47:45<3:16:27,  1.15s/it] 21%|██        | 2751/13025 [47:46<3:31:17,  1.23s/it] 21%|██        | 2754/13025 [47:48<2:33:20,  1.12it/s] 21%|██        | 2756/13025 [47:50<2:29:56,  1.14it/s] 21%|██        | 2757/13025 [47:51<2:53:56,  1.02s/it] 21%|██        | 2760/13025 [47:53<2:17:55,  1.24it/s] 21%|██        | 2761/13025 [47:54<2:40:47,  1.06it/s] 21%|██        | 2762/13025 [47:56<3:07:01,  1.09s/it] 21%|██        | 2766/13025 [47:58<2:04:36,  1.37it/s] 21%|██▏       | 2769/13025 [47:59<1:53:49,  1.50it/s] 21%|██▏       | 2770/13025 [48:01<2:18:46,  1.23it/s] 21%|██▏       | 2771/13025 [48:03<2:44:21,  1.04it/s] 21%|██▏       | 2772/13025 [48:04<3:08:05,  1.10s/it] 21%|██▏       | 2778/13025 [48:06<1:38:35,  1.73it/s] 21%|██▏       | 2780/13025 [48:08<1:48:04,  1.58it/s] 21%|██▏       | 2782/13025 [48:09<1:57:15,  1.46it/s] 21%|██▏       | 2783/13025 [48:11<2:32:23,  1.12it/s] 21%|██▏       | 2785/13025 [48:14<2:44:11,  1.04it/s] 21%|██▏       | 2786/13025 [48:16<3:23:27,  1.19s/it] 21%|██▏       | 2790/13025 [48:18<2:21:57,  1.20it/s] 21%|██▏       | 2792/13025 [48:19<2:22:11,  1.20it/s] 21%|██▏       | 2795/13025 [48:21<2:04:23,  1.37it/s] 21%|██▏       | 2796/13025 [48:23<2:28:16,  1.15it/s] 21%|██▏       | 2799/13025 [48:24<2:06:38,  1.35it/s] 21%|██▏       | 2800/13025 [48:26<2:31:17,  1.13it/s] 22%|██▏       | 2802/13025 [48:28<2:27:13,  1.16it/s] 22%|██▏       | 2803/13025 [48:29<2:47:09,  1.02it/s] 22%|██▏       | 2805/13025 [48:31<2:38:10,  1.08it/s] 22%|██▏       | 2809/13025 [48:33<1:56:44,  1.46it/s] 22%|██▏       | 2810/13025 [48:34<2:20:49,  1.21it/s] 22%|██▏       | 2811/13025 [48:36<2:44:42,  1.03it/s] 22%|██▏       | 2812/13025 [48:37<3:05:49,  1.09s/it] 22%|██▏       | 2815/13025 [48:39<2:21:08,  1.21it/s] 22%|██▏       | 2816/13025 [48:41<2:47:17,  1.02it/s] 22%|██▏       | 2817/13025 [48:42<3:11:11,  1.12s/it] 22%|██▏       | 2821/13025 [48:44<2:06:20,  1.35it/s] 22%|██▏       | 2822/13025 [48:46<2:31:49,  1.12it/s] 22%|██▏       | 2826/13025 [48:47<1:53:43,  1.49it/s] 22%|██▏       | 2829/13025 [48:49<1:47:22,  1.58it/s] 22%|██▏       | 2830/13025 [48:51<2:10:44,  1.30it/s] 22%|██▏       | 2831/13025 [48:52<2:37:53,  1.08it/s] 22%|██▏       | 2832/13025 [48:54<2:57:13,  1.04s/it] 22%|██▏       | 2834/13025 [48:56<2:44:40,  1.03it/s] 22%|██▏       | 2835/13025 [48:57<3:09:58,  1.12s/it] 22%|██▏       | 2836/13025 [48:59<3:30:49,  1.24s/it] 22%|██▏       | 2837/13025 [49:01<3:42:35,  1.31s/it] 22%|██▏       | 2840/13025 [49:02<2:36:27,  1.08it/s] 22%|██▏       | 2843/13025 [49:04<2:10:56,  1.30it/s] 22%|██▏       | 2844/13025 [49:05<2:34:38,  1.10it/s] 22%|██▏       | 2846/13025 [49:07<2:27:45,  1.15it/s] 22%|██▏       | 2847/13025 [49:09<3:01:59,  1.07s/it] 22%|██▏       | 2848/13025 [49:11<3:44:55,  1.33s/it] 22%|██▏       | 2849/13025 [49:14<4:20:31,  1.54s/it] 22%|██▏       | 2850/13025 [49:16<4:51:35,  1.72s/it] 22%|██▏       | 2851/13025 [49:18<4:52:53,  1.73s/it] 22%|██▏       | 2853/13025 [49:19<3:47:45,  1.34s/it] 22%|██▏       | 2854/13025 [49:21<3:58:35,  1.41s/it] 22%|██▏       | 2855/13025 [49:22<4:07:31,  1.46s/it] 22%|██▏       | 2856/13025 [49:24<4:15:16,  1.51s/it] 22%|██▏       | 2857/13025 [49:26<4:20:15,  1.54s/it] 22%|██▏       | 2859/13025 [49:27<3:26:36,  1.22s/it] 22%|██▏       | 2860/13025 [49:29<3:42:44,  1.31s/it] 22%|██▏       | 2861/13025 [49:31<3:55:48,  1.39s/it] 22%|██▏       | 2863/13025 [49:32<3:09:07,  1.12s/it] 22%|██▏       | 2866/13025 [49:34<2:23:57,  1.18it/s] 22%|██▏       | 2867/13025 [49:35<2:48:52,  1.00it/s] 22%|██▏       | 2868/13025 [49:37<3:11:30,  1.13s/it] 22%|██▏       | 2869/13025 [49:39<3:29:59,  1.24s/it] 22%|██▏       | 2871/13025 [49:40<2:58:27,  1.05s/it] 22%|██▏       | 2872/13025 [49:42<3:16:49,  1.16s/it] 22%|██▏       | 2873/13025 [49:43<3:35:59,  1.28s/it] 22%|██▏       | 2874/13025 [49:45<3:51:19,  1.37s/it] 22%|██▏       | 2875/13025 [49:47<4:03:55,  1.44s/it] 22%|██▏       | 2876/13025 [49:48<4:13:36,  1.50s/it] 22%|██▏       | 2877/13025 [49:50<4:14:22,  1.50s/it] 22%|██▏       | 2879/13025 [49:51<3:14:50,  1.15s/it] 22%|██▏       | 2880/13025 [49:53<3:26:06,  1.22s/it] 22%|██▏       | 2882/13025 [49:54<2:56:14,  1.04s/it] 22%|██▏       | 2886/13025 [49:56<1:55:02,  1.47it/s] 22%|██▏       | 2889/13025 [49:57<1:44:31,  1.62it/s] 22%|██▏       | 2890/13025 [49:59<2:07:19,  1.33it/s] 22%|██▏       | 2891/13025 [50:00<2:32:48,  1.11it/s] 22%|██▏       | 2892/13025 [50:02<2:56:58,  1.05s/it] 22%|██▏       | 2894/13025 [50:04<2:44:17,  1.03it/s] 22%|██▏       | 2897/13025 [50:05<2:13:16,  1.27it/s] 22%|██▏       | 2900/13025 [50:07<1:56:52,  1.44it/s] 22%|██▏       | 2904/13025 [50:09<1:39:28,  1.70it/s] 22%|██▏       | 2906/13025 [50:11<2:00:30,  1.40it/s] 22%|██▏       | 2909/13025 [50:13<2:04:02,  1.36it/s] 22%|██▏       | 2911/13025 [50:16<2:20:16,  1.20it/s] 22%|██▏       | 2912/13025 [50:17<2:44:17,  1.03it/s] 22%|██▏       | 2913/13025 [50:19<3:01:45,  1.08s/it] 22%|██▏       | 2914/13025 [50:20<3:16:42,  1.17s/it] 22%|██▏       | 2916/13025 [50:22<2:56:50,  1.05s/it] 22%|██▏       | 2917/13025 [50:24<3:17:14,  1.17s/it] 22%|██▏       | 2919/13025 [50:25<2:55:43,  1.04s/it] 22%|██▏       | 2921/13025 [50:27<2:44:03,  1.03it/s] 22%|██▏       | 2922/13025 [50:29<3:08:04,  1.12s/it] 22%|██▏       | 2925/13025 [50:30<2:22:33,  1.18it/s] 22%|██▏       | 2926/13025 [50:32<2:47:46,  1.00it/s] 22%|██▏       | 2928/13025 [50:34<2:40:57,  1.05it/s] 22%|██▏       | 2929/13025 [50:36<3:07:42,  1.12s/it] 22%|██▏       | 2930/13025 [50:37<3:30:34,  1.25s/it] 23%|██▎       | 2932/13025 [50:39<3:02:25,  1.08s/it] 23%|██▎       | 2934/13025 [50:41<2:49:00,  1.00s/it] 23%|██▎       | 2935/13025 [50:42<3:13:15,  1.15s/it] 23%|██▎       | 2936/13025 [50:44<3:35:31,  1.28s/it] 23%|██▎       | 2937/13025 [50:46<3:53:40,  1.39s/it] 23%|██▎       | 2938/13025 [50:48<4:05:39,  1.46s/it] 23%|██▎       | 2939/13025 [50:49<4:13:53,  1.51s/it] 23%|██▎       | 2941/13025 [50:51<3:22:11,  1.20s/it] 23%|██▎       | 2943/13025 [50:53<2:59:09,  1.07s/it] 23%|██▎       | 2945/13025 [50:54<2:45:26,  1.02it/s] 23%|██▎       | 2947/13025 [50:56<2:34:18,  1.09it/s] 23%|██▎       | 2948/13025 [50:57<2:54:02,  1.04s/it] 23%|██▎       | 2949/13025 [50:59<3:16:03,  1.17s/it] 23%|██▎       | 2951/13025 [51:01<2:53:58,  1.04s/it] 23%|██▎       | 2952/13025 [51:02<3:17:13,  1.17s/it] 23%|██▎       | 2953/13025 [51:04<3:35:18,  1.28s/it] 23%|██▎       | 2954/13025 [51:06<3:51:18,  1.38s/it] 23%|██▎       | 2955/13025 [51:07<4:03:15,  1.45s/it] 23%|██▎       | 2956/13025 [51:09<4:36:32,  1.65s/it] 23%|██▎       | 2959/13025 [51:12<3:18:29,  1.18s/it] 23%|██▎       | 2960/13025 [51:14<3:50:21,  1.37s/it] 23%|██▎       | 2961/13025 [51:16<4:23:49,  1.57s/it] 23%|██▎       | 2963/13025 [51:18<3:36:59,  1.29s/it] 23%|██▎       | 2965/13025 [51:19<3:03:30,  1.09s/it] 23%|██▎       | 2970/13025 [51:21<1:50:06,  1.52it/s] 23%|██▎       | 2972/13025 [51:22<1:53:46,  1.47it/s] 23%|██▎       | 2973/13025 [51:24<2:16:00,  1.23it/s] 23%|██▎       | 2974/13025 [51:26<2:38:19,  1.06it/s] 23%|██▎       | 2975/13025 [51:27<3:03:08,  1.09s/it] 23%|██▎       | 2978/13025 [51:29<2:17:54,  1.21it/s] 23%|██▎       | 2982/13025 [51:30<1:44:32,  1.60it/s] 23%|██▎       | 2983/13025 [51:32<2:08:27,  1.30it/s] 23%|██▎       | 2984/13025 [51:34<2:32:26,  1.10it/s] 23%|██▎       | 2985/13025 [51:35<2:50:12,  1.02s/it] 23%|██▎       | 2988/13025 [51:37<2:13:04,  1.26it/s] 23%|██▎       | 2991/13025 [51:38<1:53:18,  1.48it/s] 23%|██▎       | 2992/13025 [51:40<2:14:31,  1.24it/s] 23%|██▎       | 2993/13025 [51:41<2:42:46,  1.03it/s] 23%|██▎       | 2995/13025 [51:43<2:32:07,  1.10it/s] 23%|██▎       | 2997/13025 [51:45<2:27:01,  1.14it/s] 23%|██▎       | 2998/13025 [51:46<2:49:48,  1.02s/it] 23%|██▎       | 3000/13025 [51:48<2:31:16,  1.10it/s] 23%|██▎       | 3001/13025 [51:49<2:54:35,  1.05s/it] 23%|██▎       | 3003/13025 [51:51<2:40:25,  1.04it/s] 23%|██▎       | 3004/13025 [51:52<3:03:43,  1.10s/it] 23%|██▎       | 3005/13025 [51:54<3:21:11,  1.20s/it] 23%|██▎       | 3006/13025 [51:56<3:35:46,  1.29s/it] 23%|██▎       | 3010/13025 [51:57<2:04:15,  1.34it/s] 23%|██▎       | 3011/13025 [51:59<2:29:19,  1.12it/s] 23%|██▎       | 3013/13025 [52:00<2:23:09,  1.17it/s] 23%|██▎       | 3016/13025 [52:02<1:56:18,  1.43it/s] 23%|██▎       | 3017/13025 [52:03<2:20:04,  1.19it/s] 23%|██▎       | 3019/13025 [52:05<2:18:16,  1.21it/s] 23%|██▎       | 3020/13025 [52:06<2:42:57,  1.02it/s] 23%|██▎       | 3021/13025 [52:08<3:05:41,  1.11s/it] 23%|██▎       | 3023/13025 [52:10<2:56:50,  1.06s/it] 23%|██▎       | 3026/13025 [52:12<2:28:54,  1.12it/s] 23%|██▎       | 3028/13025 [52:14<2:38:54,  1.05it/s] 23%|██▎       | 3029/13025 [52:16<3:14:44,  1.17s/it] 23%|██▎       | 3030/13025 [52:18<3:28:59,  1.25s/it] 23%|██▎       | 3031/13025 [52:20<3:45:39,  1.35s/it] 23%|██▎       | 3032/13025 [52:21<4:00:07,  1.44s/it] 23%|██▎       | 3033/13025 [52:23<4:07:33,  1.49s/it] 23%|██▎       | 3034/13025 [52:25<4:13:30,  1.52s/it] 23%|██▎       | 3035/13025 [52:26<4:14:40,  1.53s/it] 23%|██▎       | 3039/13025 [52:28<2:19:50,  1.19it/s] 23%|██▎       | 3040/13025 [52:29<2:42:32,  1.02it/s] 23%|██▎       | 3043/13025 [52:31<2:13:10,  1.25it/s] 23%|██▎       | 3045/13025 [52:33<2:13:22,  1.25it/s] 23%|██▎       | 3046/13025 [52:34<2:36:29,  1.06it/s] 23%|██▎       | 3048/13025 [52:36<2:29:04,  1.12it/s] 23%|██▎       | 3050/13025 [52:38<2:24:57,  1.15it/s] 23%|██▎       | 3051/13025 [52:39<2:45:05,  1.01it/s] 23%|██▎       | 3052/13025 [52:41<3:03:49,  1.11s/it] 23%|██▎       | 3053/13025 [52:42<3:23:05,  1.22s/it] 23%|██▎       | 3055/13025 [52:44<2:52:14,  1.04s/it] 23%|██▎       | 3057/13025 [52:45<2:39:32,  1.04it/s] 23%|██▎       | 3058/13025 [52:47<3:01:44,  1.09s/it] 23%|██▎       | 3059/13025 [52:49<3:20:34,  1.21s/it] 24%|██▎       | 3062/13025 [52:50<2:25:36,  1.14it/s] 24%|██▎       | 3063/13025 [52:52<2:45:42,  1.00it/s] 24%|██▎       | 3065/13025 [52:53<2:32:33,  1.09it/s] 24%|██▎       | 3067/13025 [52:55<2:26:22,  1.13it/s] 24%|██▎       | 3069/13025 [52:56<2:20:56,  1.18it/s] 24%|██▎       | 3073/13025 [52:58<1:45:22,  1.57it/s] 24%|██▎       | 3074/13025 [53:00<2:11:17,  1.26it/s] 24%|██▎       | 3075/13025 [53:01<2:29:05,  1.11it/s] 24%|██▎       | 3076/13025 [53:03<2:46:08,  1.00s/it] 24%|██▎       | 3078/13025 [53:04<2:34:10,  1.08it/s] 24%|██▎       | 3081/13025 [53:06<2:05:38,  1.32it/s] 24%|██▎       | 3082/13025 [53:07<2:30:13,  1.10it/s] 24%|██▎       | 3085/13025 [53:09<2:06:14,  1.31it/s] 24%|██▎       | 3086/13025 [53:11<2:43:58,  1.01it/s] 24%|██▎       | 3088/13025 [53:13<2:46:00,  1.00s/it] 24%|██▎       | 3089/13025 [53:16<3:29:31,  1.27s/it] 24%|██▎       | 3093/13025 [53:18<2:22:42,  1.16it/s] 24%|██▍       | 3094/13025 [53:19<2:40:44,  1.03it/s] 24%|██▍       | 3096/13025 [53:21<2:32:20,  1.09it/s] 24%|██▍       | 3098/13025 [53:22<2:26:30,  1.13it/s] 24%|██▍       | 3099/13025 [53:24<2:49:13,  1.02s/it] 24%|██▍       | 3100/13025 [53:26<3:10:55,  1.15s/it] 24%|██▍       | 3101/13025 [53:27<3:27:42,  1.26s/it] 24%|██▍       | 3104/13025 [53:29<2:28:12,  1.12it/s] 24%|██▍       | 3106/13025 [53:31<2:24:33,  1.14it/s] 24%|██▍       | 3109/13025 [53:32<2:01:51,  1.36it/s] 24%|██▍       | 3110/13025 [53:34<2:23:40,  1.15it/s] 24%|██▍       | 3111/13025 [53:35<2:48:03,  1.02s/it] 24%|██▍       | 3112/13025 [53:37<3:08:23,  1.14s/it] 24%|██▍       | 3113/13025 [53:39<3:25:09,  1.24s/it] 24%|██▍       | 3115/13025 [53:40<2:58:52,  1.08s/it] 24%|██▍       | 3116/13025 [53:42<3:18:11,  1.20s/it] 24%|██▍       | 3119/13025 [53:43<2:24:45,  1.14it/s] 24%|██▍       | 3120/13025 [53:45<2:50:19,  1.03s/it] 24%|██▍       | 3121/13025 [53:47<3:13:41,  1.17s/it] 24%|██▍       | 3122/13025 [53:48<3:28:39,  1.26s/it] 24%|██▍       | 3124/13025 [53:50<2:59:34,  1.09s/it] 24%|██▍       | 3125/13025 [53:52<3:20:12,  1.21s/it] 24%|██▍       | 3126/13025 [53:53<3:32:47,  1.29s/it] 24%|██▍       | 3128/13025 [53:55<2:59:10,  1.09s/it] 24%|██▍       | 3129/13025 [53:56<3:17:05,  1.19s/it] 24%|██▍       | 3130/13025 [53:58<3:33:35,  1.30s/it] 24%|██▍       | 3131/13025 [54:00<3:47:19,  1.38s/it] 24%|██▍       | 3134/13025 [54:01<2:29:59,  1.10it/s] 24%|██▍       | 3139/13025 [54:03<1:34:36,  1.74it/s] 24%|██▍       | 3140/13025 [54:04<1:59:01,  1.38it/s] 24%|██▍       | 3141/13025 [54:06<2:24:02,  1.14it/s] 24%|██▍       | 3145/13025 [54:08<1:48:32,  1.52it/s] 24%|██▍       | 3146/13025 [54:10<2:23:31,  1.15it/s] 24%|██▍       | 3148/13025 [54:12<2:38:40,  1.04it/s] 24%|██▍       | 3150/13025 [54:14<2:46:57,  1.01s/it] 24%|██▍       | 3154/13025 [54:17<2:12:48,  1.24it/s] 24%|██▍       | 3155/13025 [54:18<2:32:51,  1.08it/s] 24%|██▍       | 3156/13025 [54:20<2:51:39,  1.04s/it] 24%|██▍       | 3157/13025 [54:21<3:07:57,  1.14s/it] 24%|██▍       | 3158/13025 [54:23<3:22:55,  1.23s/it] 24%|██▍       | 3159/13025 [54:25<3:39:55,  1.34s/it] 24%|██▍       | 3160/13025 [54:26<3:54:44,  1.43s/it] 24%|██▍       | 3162/13025 [54:28<3:11:33,  1.17s/it] 24%|██▍       | 3163/13025 [54:30<3:28:34,  1.27s/it] 24%|██▍       | 3166/13025 [54:31<2:29:04,  1.10it/s] 24%|██▍       | 3167/13025 [54:33<2:51:01,  1.04s/it] 24%|██▍       | 3168/13025 [54:35<3:13:11,  1.18s/it] 24%|██▍       | 3169/13025 [54:36<3:31:35,  1.29s/it] 24%|██▍       | 3171/13025 [54:38<2:59:44,  1.09s/it] 24%|██▍       | 3177/13025 [54:39<1:34:14,  1.74it/s] 24%|██▍       | 3178/13025 [54:41<1:56:46,  1.41it/s] 24%|██▍       | 3179/13025 [54:43<2:20:31,  1.17it/s] 24%|██▍       | 3180/13025 [54:44<2:41:39,  1.02it/s] 24%|██▍       | 3183/13025 [54:46<2:08:33,  1.28it/s] 24%|██▍       | 3185/13025 [54:47<2:10:57,  1.25it/s] 24%|██▍       | 3186/13025 [54:49<2:35:57,  1.05it/s] 24%|██▍       | 3187/13025 [54:51<2:59:24,  1.09s/it] 24%|██▍       | 3189/13025 [54:53<2:44:59,  1.01s/it] 24%|██▍       | 3191/13025 [54:54<2:30:55,  1.09it/s] 25%|██▍       | 3192/13025 [54:56<2:49:46,  1.04s/it] 25%|██▍       | 3194/13025 [54:57<2:33:22,  1.07it/s] 25%|██▍       | 3197/13025 [54:59<2:04:06,  1.32it/s] 25%|██▍       | 3199/13025 [55:00<2:07:37,  1.28it/s] 25%|██▍       | 3200/13025 [55:02<2:34:01,  1.06it/s] 25%|██▍       | 3201/13025 [55:04<2:59:01,  1.09s/it] 25%|██▍       | 3202/13025 [55:05<3:19:56,  1.22s/it] 25%|██▍       | 3203/13025 [55:07<3:35:19,  1.32s/it] 25%|██▍       | 3204/13025 [55:09<3:54:06,  1.43s/it] 25%|██▍       | 3205/13025 [55:11<4:24:58,  1.62s/it] 25%|██▍       | 3206/13025 [55:13<4:54:52,  1.80s/it] 25%|██▍       | 3209/13025 [55:15<3:22:04,  1.24s/it] 25%|██▍       | 3210/13025 [55:17<3:47:33,  1.39s/it] 25%|██▍       | 3211/13025 [55:19<3:55:21,  1.44s/it] 25%|██▍       | 3212/13025 [55:21<4:02:38,  1.48s/it] 25%|██▍       | 3214/13025 [55:22<3:16:53,  1.20s/it] 25%|██▍       | 3215/13025 [55:24<3:31:45,  1.30s/it] 25%|██▍       | 3216/13025 [55:26<3:46:59,  1.39s/it] 25%|██▍       | 3218/13025 [55:27<3:08:11,  1.15s/it] 25%|██▍       | 3220/13025 [55:29<2:46:07,  1.02s/it] 25%|██▍       | 3221/13025 [55:30<3:08:05,  1.15s/it] 25%|██▍       | 3223/13025 [55:32<2:47:12,  1.02s/it] 25%|██▍       | 3224/13025 [55:34<3:06:01,  1.14s/it] 25%|██▍       | 3225/13025 [55:35<3:24:09,  1.25s/it] 25%|██▍       | 3226/13025 [55:37<3:39:02,  1.34s/it] 25%|██▍       | 3228/13025 [55:38<3:03:01,  1.12s/it] 25%|██▍       | 3230/13025 [55:40<2:45:36,  1.01s/it] 25%|██▍       | 3231/13025 [55:42<3:08:59,  1.16s/it] 25%|██▍       | 3232/13025 [55:44<3:27:04,  1.27s/it] 25%|██▍       | 3233/13025 [55:45<3:41:18,  1.36s/it] 25%|██▍       | 3234/13025 [55:47<3:48:07,  1.40s/it] 25%|██▍       | 3236/13025 [55:48<3:07:14,  1.15s/it] 25%|██▍       | 3237/13025 [55:50<3:22:45,  1.24s/it] 25%|██▍       | 3239/13025 [55:51<2:49:44,  1.04s/it] 25%|██▍       | 3240/13025 [55:53<3:05:10,  1.14s/it] 25%|██▍       | 3241/13025 [55:54<3:19:59,  1.23s/it] 25%|██▍       | 3242/13025 [55:56<3:33:53,  1.31s/it] 25%|██▍       | 3243/13025 [55:57<3:46:12,  1.39s/it] 25%|██▍       | 3244/13025 [55:59<3:56:26,  1.45s/it] 25%|██▍       | 3251/13025 [56:01<1:31:20,  1.78it/s] 25%|██▍       | 3252/13025 [56:02<1:53:38,  1.43it/s] 25%|██▍       | 3253/13025 [56:04<2:16:56,  1.19it/s] 25%|██▌       | 3258/13025 [56:06<1:33:14,  1.75it/s] 25%|██▌       | 3259/13025 [56:07<1:56:11,  1.40it/s] 25%|██▌       | 3262/13025 [56:09<1:54:32,  1.42it/s] 25%|██▌       | 3263/13025 [56:12<2:32:25,  1.07it/s] 25%|██▌       | 3264/13025 [56:14<3:11:39,  1.18s/it] 25%|██▌       | 3265/13025 [56:16<3:46:53,  1.39s/it] 25%|██▌       | 3267/13025 [56:18<3:11:08,  1.18s/it] 25%|██▌       | 3268/13025 [56:19<3:28:37,  1.28s/it] 25%|██▌       | 3270/13025 [56:21<2:58:43,  1.10s/it] 25%|██▌       | 3271/13025 [56:23<3:15:52,  1.20s/it] 25%|██▌       | 3272/13025 [56:24<3:30:45,  1.30s/it] 25%|██▌       | 3274/13025 [56:26<3:00:25,  1.11s/it] 25%|██▌       | 3279/13025 [56:28<1:47:52,  1.51it/s] 25%|██▌       | 3281/13025 [56:29<1:54:20,  1.42it/s] 25%|██▌       | 3282/13025 [56:31<2:15:18,  1.20it/s] 25%|██▌       | 3283/13025 [56:32<2:36:28,  1.04it/s] 25%|██▌       | 3285/13025 [56:34<2:27:44,  1.10it/s] 25%|██▌       | 3286/13025 [56:36<2:50:59,  1.05s/it] 25%|██▌       | 3287/13025 [56:37<3:05:49,  1.14s/it] 25%|██▌       | 3288/13025 [56:39<3:21:20,  1.24s/it] 25%|██▌       | 3291/13025 [56:40<2:23:45,  1.13it/s] 25%|██▌       | 3292/13025 [56:42<2:45:58,  1.02s/it] 25%|██▌       | 3294/13025 [56:44<2:32:58,  1.06it/s] 25%|██▌       | 3295/13025 [56:45<2:53:43,  1.07s/it] 25%|██▌       | 3296/13025 [56:47<3:13:14,  1.19s/it] 25%|██▌       | 3298/13025 [56:48<2:47:01,  1.03s/it] 25%|██▌       | 3300/13025 [56:50<2:35:23,  1.04it/s] 25%|██▌       | 3301/13025 [56:51<2:50:24,  1.05s/it] 25%|██▌       | 3302/13025 [56:53<3:10:55,  1.18s/it] 25%|██▌       | 3304/13025 [56:55<2:48:37,  1.04s/it] 25%|██▌       | 3305/13025 [56:56<3:05:09,  1.14s/it] 25%|██▌       | 3306/13025 [56:58<3:19:39,  1.23s/it] 25%|██▌       | 3307/13025 [56:59<3:31:47,  1.31s/it] 25%|██▌       | 3308/13025 [57:01<3:43:10,  1.38s/it] 25%|██▌       | 3309/13025 [57:02<3:54:52,  1.45s/it] 25%|██▌       | 3310/13025 [57:04<4:00:12,  1.48s/it] 25%|██▌       | 3312/13025 [57:06<3:12:58,  1.19s/it] 25%|██▌       | 3317/13025 [57:07<1:47:30,  1.50it/s] 25%|██▌       | 3318/13025 [57:09<2:17:04,  1.18it/s] 25%|██▌       | 3319/13025 [57:11<2:54:32,  1.08s/it] 25%|██▌       | 3320/13025 [57:14<3:30:38,  1.30s/it] 26%|██▌       | 3322/13025 [57:16<3:23:32,  1.26s/it] 26%|██▌       | 3324/13025 [57:18<3:06:11,  1.15s/it] 26%|██▌       | 3326/13025 [57:19<2:48:04,  1.04s/it] 26%|██▌       | 3328/13025 [57:21<2:36:06,  1.04it/s] 26%|██▌       | 3329/13025 [57:23<2:55:40,  1.09s/it] 26%|██▌       | 3330/13025 [57:24<3:13:23,  1.20s/it] 26%|██▌       | 3331/13025 [57:26<3:28:43,  1.29s/it] 26%|██▌       | 3333/13025 [57:28<2:59:00,  1.11s/it] 26%|██▌       | 3334/13025 [57:29<3:17:31,  1.22s/it] 26%|██▌       | 3335/13025 [57:31<3:33:35,  1.32s/it] 26%|██▌       | 3338/13025 [57:32<2:29:07,  1.08it/s] 26%|██▌       | 3339/13025 [57:34<2:48:51,  1.05s/it] 26%|██▌       | 3340/13025 [57:35<3:06:56,  1.16s/it] 26%|██▌       | 3341/13025 [57:37<3:25:50,  1.28s/it] 26%|██▌       | 3342/13025 [57:39<3:39:28,  1.36s/it] 26%|██▌       | 3343/13025 [57:40<3:52:10,  1.44s/it] 26%|██▌       | 3344/13025 [57:42<3:55:10,  1.46s/it] 26%|██▌       | 3346/13025 [57:43<3:03:39,  1.14s/it] 26%|██▌       | 3348/13025 [57:45<2:45:20,  1.03s/it] 26%|██▌       | 3349/13025 [57:47<3:08:05,  1.17s/it] 26%|██▌       | 3350/13025 [57:48<3:24:53,  1.27s/it] 26%|██▌       | 3351/13025 [57:50<3:38:55,  1.36s/it] 26%|██▌       | 3356/13025 [57:52<1:52:41,  1.43it/s] 26%|██▌       | 3357/13025 [57:53<2:16:48,  1.18it/s] 26%|██▌       | 3358/13025 [57:55<2:38:54,  1.01it/s] 26%|██▌       | 3359/13025 [57:57<3:02:36,  1.13s/it] 26%|██▌       | 3364/13025 [57:58<1:43:55,  1.55it/s] 26%|██▌       | 3369/13025 [58:00<1:20:06,  2.01it/s] 26%|██▌       | 3372/13025 [58:02<1:23:37,  1.92it/s] 26%|██▌       | 3373/13025 [58:03<1:46:06,  1.52it/s] 26%|██▌       | 3376/13025 [58:05<1:39:31,  1.62it/s] 26%|██▌       | 3377/13025 [58:06<2:00:38,  1.33it/s] 26%|██▌       | 3378/13025 [58:08<2:26:39,  1.10it/s] 26%|██▌       | 3379/13025 [58:10<3:03:01,  1.14s/it] 26%|██▌       | 3380/13025 [58:12<3:33:10,  1.33s/it] 26%|██▌       | 3381/13025 [58:15<4:07:48,  1.54s/it] 26%|██▌       | 3382/13025 [58:17<4:29:30,  1.68s/it] 26%|██▌       | 3384/13025 [58:18<3:30:50,  1.31s/it] 26%|██▌       | 3385/13025 [58:20<3:40:15,  1.37s/it] 26%|██▌       | 3386/13025 [58:21<3:49:24,  1.43s/it] 26%|██▌       | 3387/13025 [58:23<3:56:57,  1.48s/it] 26%|██▌       | 3389/13025 [58:25<3:11:19,  1.19s/it] 26%|██▌       | 3391/13025 [58:26<2:47:49,  1.05s/it] 26%|██▌       | 3392/13025 [58:28<3:07:05,  1.17s/it] 26%|██▌       | 3393/13025 [58:29<3:23:41,  1.27s/it] 26%|██▌       | 3395/13025 [58:31<2:53:36,  1.08s/it] 26%|██▌       | 3396/13025 [58:33<3:14:38,  1.21s/it] 26%|██▌       | 3397/13025 [58:34<3:28:00,  1.30s/it] 26%|██▌       | 3400/13025 [58:36<2:27:38,  1.09it/s] 26%|██▌       | 3401/13025 [58:38<2:48:58,  1.05s/it] 26%|██▌       | 3403/13025 [58:39<2:34:48,  1.04it/s] 26%|██▌       | 3406/13025 [58:41<2:03:49,  1.29it/s] 26%|██▌       | 3407/13025 [58:42<2:26:41,  1.09it/s] 26%|██▌       | 3409/13025 [58:44<2:20:53,  1.14it/s] 26%|██▌       | 3410/13025 [58:46<2:42:20,  1.01s/it] 26%|██▌       | 3411/13025 [58:47<3:05:14,  1.16s/it] 26%|██▌       | 3417/13025 [58:49<1:33:15,  1.72it/s] 26%|██▌       | 3418/13025 [58:50<1:56:06,  1.38it/s] 26%|██▌       | 3419/13025 [58:52<2:19:58,  1.14it/s] 26%|██▋       | 3420/13025 [58:54<2:44:23,  1.03s/it] 26%|██▋       | 3422/13025 [58:55<2:30:56,  1.06it/s] 26%|██▋       | 3423/13025 [58:57<2:49:13,  1.06s/it] 26%|██▋       | 3426/13025 [58:58<2:08:29,  1.25it/s] 26%|██▋       | 3427/13025 [59:00<2:31:42,  1.05it/s] 26%|██▋       | 3431/13025 [59:02<1:49:07,  1.47it/s] 26%|██▋       | 3432/13025 [59:03<2:13:04,  1.20it/s] 26%|██▋       | 3433/13025 [59:05<2:35:09,  1.03it/s] 26%|██▋       | 3435/13025 [59:07<2:24:47,  1.10it/s] 26%|██▋       | 3436/13025 [59:08<2:46:54,  1.04s/it] 26%|██▋       | 3438/13025 [59:10<2:50:23,  1.07s/it] 26%|██▋       | 3440/13025 [59:13<2:50:34,  1.07s/it] 26%|██▋       | 3441/13025 [59:15<3:23:52,  1.28s/it] 26%|██▋       | 3442/13025 [59:17<3:51:17,  1.45s/it] 26%|██▋       | 3444/13025 [59:18<3:13:04,  1.21s/it] 26%|██▋       | 3446/13025 [59:20<2:50:10,  1.07s/it] 27%|██▋       | 3452/13025 [59:22<1:34:23,  1.69it/s] 27%|██▋       | 3455/13025 [59:23<1:31:39,  1.74it/s] 27%|██▋       | 3456/13025 [59:25<1:52:06,  1.42it/s] 27%|██▋       | 3457/13025 [59:26<2:14:00,  1.19it/s] 27%|██▋       | 3458/13025 [59:28<2:35:35,  1.02it/s] 27%|██▋       | 3460/13025 [59:30<2:24:48,  1.10it/s] 27%|██▋       | 3461/13025 [59:31<2:45:11,  1.04s/it] 27%|██▋       | 3463/13025 [59:33<2:32:37,  1.04it/s] 27%|██▋       | 3464/13025 [59:34<2:55:45,  1.10s/it] 27%|██▋       | 3465/13025 [59:36<3:15:36,  1.23s/it] 27%|██▋       | 3469/13025 [59:38<2:01:48,  1.31it/s] 27%|██▋       | 3471/13025 [59:39<2:03:30,  1.29it/s] 27%|██▋       | 3474/13025 [59:41<1:49:10,  1.46it/s] 27%|██▋       | 3475/13025 [59:42<2:09:22,  1.23it/s] 27%|██▋       | 3476/13025 [59:44<2:29:20,  1.07it/s] 27%|██▋       | 3481/13025 [59:46<1:34:16,  1.69it/s] 27%|██▋       | 3483/13025 [59:47<1:42:41,  1.55it/s] 27%|██▋       | 3484/13025 [59:49<2:04:56,  1.27it/s] 27%|██▋       | 3485/13025 [59:50<2:28:50,  1.07it/s] 27%|██▋       | 3486/13025 [59:52<2:53:07,  1.09s/it] 27%|██▋       | 3488/13025 [59:54<2:38:33,  1.00it/s] 27%|██▋       | 3490/13025 [59:55<2:28:16,  1.07it/s] 27%|██▋       | 3491/13025 [59:57<2:47:00,  1.05s/it] 27%|██▋       | 3495/13025 [59:59<1:53:54,  1.39it/s] 27%|██▋       | 3496/13025 [1:00:00<2:17:30,  1.15it/s] 27%|██▋       | 3497/13025 [1:00:02<2:40:00,  1.01s/it] 27%|██▋       | 3498/13025 [1:00:04<3:00:59,  1.14s/it] 27%|██▋       | 3499/13025 [1:00:05<3:20:40,  1.26s/it] 27%|██▋       | 3502/13025 [1:00:07<2:24:49,  1.10it/s] 27%|██▋       | 3504/13025 [1:00:09<2:20:52,  1.13it/s] 27%|██▋       | 3507/13025 [1:00:11<2:05:58,  1.26it/s] 27%|██▋       | 3508/13025 [1:00:13<2:43:28,  1.03s/it] 27%|██▋       | 3509/13025 [1:00:15<3:17:18,  1.24s/it] 27%|██▋       | 3510/13025 [1:00:17<3:47:54,  1.44s/it] 27%|██▋       | 3512/13025 [1:00:19<3:11:31,  1.21s/it] 27%|██▋       | 3513/13025 [1:00:20<3:24:04,  1.29s/it] 27%|██▋       | 3514/13025 [1:00:22<3:35:59,  1.36s/it] 27%|██▋       | 3516/13025 [1:00:24<2:58:02,  1.12s/it] 27%|██▋       | 3517/13025 [1:00:25<3:13:17,  1.22s/it] 27%|██▋       | 3519/13025 [1:00:27<2:42:18,  1.02s/it] 27%|██▋       | 3521/13025 [1:00:28<2:29:51,  1.06it/s] 27%|██▋       | 3522/13025 [1:00:30<2:52:31,  1.09s/it] 27%|██▋       | 3526/13025 [1:00:32<1:56:13,  1.36it/s] 27%|██▋       | 3527/13025 [1:00:33<2:19:05,  1.14it/s] 27%|██▋       | 3528/13025 [1:00:35<2:37:49,  1.00it/s] 27%|██▋       | 3530/13025 [1:00:36<2:27:12,  1.07it/s] 27%|██▋       | 3531/13025 [1:00:38<2:48:38,  1.07s/it] 27%|██▋       | 3532/13025 [1:00:39<3:07:56,  1.19s/it] 27%|██▋       | 3533/13025 [1:00:41<3:23:57,  1.29s/it] 27%|██▋       | 3535/13025 [1:00:43<2:53:26,  1.10s/it] 27%|██▋       | 3539/13025 [1:00:44<1:54:37,  1.38it/s] 27%|██▋       | 3541/13025 [1:00:46<1:58:50,  1.33it/s] 27%|██▋       | 3542/13025 [1:00:47<2:16:28,  1.16it/s] 27%|██▋       | 3543/13025 [1:00:49<2:40:28,  1.02s/it] 27%|██▋       | 3544/13025 [1:00:51<2:58:11,  1.13s/it] 27%|██▋       | 3546/13025 [1:00:52<2:38:58,  1.01s/it] 27%|██▋       | 3549/13025 [1:00:54<2:04:24,  1.27it/s] 27%|██▋       | 3550/13025 [1:00:55<2:27:19,  1.07it/s] 27%|██▋       | 3552/13025 [1:00:57<2:21:28,  1.12it/s] 27%|██▋       | 3554/13025 [1:00:59<2:18:13,  1.14it/s] 27%|██▋       | 3555/13025 [1:01:00<2:33:56,  1.03it/s] 27%|██▋       | 3557/13025 [1:01:02<2:27:08,  1.07it/s] 27%|██▋       | 3558/13025 [1:01:03<2:48:39,  1.07s/it] 27%|██▋       | 3560/13025 [1:01:05<2:32:43,  1.03it/s] 27%|██▋       | 3561/13025 [1:01:06<2:47:41,  1.06s/it] 27%|██▋       | 3563/13025 [1:01:08<2:34:38,  1.02it/s] 27%|██▋       | 3564/13025 [1:01:10<3:17:19,  1.25s/it] 27%|██▋       | 3567/13025 [1:01:13<2:38:38,  1.01s/it] 27%|██▋       | 3569/13025 [1:01:15<2:45:00,  1.05s/it] 27%|██▋       | 3570/13025 [1:01:17<3:11:39,  1.22s/it] 27%|██▋       | 3571/13025 [1:01:18<3:24:27,  1.30s/it] 27%|██▋       | 3572/13025 [1:01:20<3:37:06,  1.38s/it] 27%|██▋       | 3573/13025 [1:01:22<3:44:46,  1.43s/it] 27%|██▋       | 3575/13025 [1:01:23<3:01:08,  1.15s/it] 27%|██▋       | 3578/13025 [1:01:25<2:13:34,  1.18it/s] 27%|██▋       | 3579/13025 [1:01:26<2:38:05,  1.00s/it] 27%|██▋       | 3580/13025 [1:01:28<2:54:39,  1.11s/it] 28%|██▊       | 3582/13025 [1:01:30<2:36:51,  1.00it/s] 28%|██▊       | 3584/13025 [1:01:31<2:26:24,  1.07it/s] 28%|██▊       | 3585/13025 [1:01:33<2:44:22,  1.04s/it] 28%|██▊       | 3586/13025 [1:01:34<3:04:29,  1.17s/it] 28%|██▊       | 3587/13025 [1:01:36<3:21:25,  1.28s/it] 28%|██▊       | 3588/13025 [1:01:38<3:34:59,  1.37s/it] 28%|██▊       | 3590/13025 [1:01:39<2:57:24,  1.13s/it] 28%|██▊       | 3592/13025 [1:01:41<2:38:15,  1.01s/it] 28%|██▊       | 3593/13025 [1:01:42<2:54:51,  1.11s/it] 28%|██▊       | 3595/13025 [1:01:44<2:38:15,  1.01s/it] 28%|██▊       | 3596/13025 [1:01:45<2:55:08,  1.11s/it] 28%|██▊       | 3597/13025 [1:01:47<3:09:48,  1.21s/it] 28%|██▊       | 3599/13025 [1:01:49<2:42:54,  1.04s/it] 28%|██▊       | 3603/13025 [1:01:50<1:51:12,  1.41it/s] 28%|██▊       | 3605/13025 [1:01:52<1:54:00,  1.38it/s] 28%|██▊       | 3606/13025 [1:01:53<2:15:25,  1.16it/s] 28%|██▊       | 3607/13025 [1:01:55<2:36:25,  1.00it/s] 28%|██▊       | 3610/13025 [1:01:56<2:01:40,  1.29it/s] 28%|██▊       | 3611/13025 [1:01:58<2:21:58,  1.11it/s] 28%|██▊       | 3612/13025 [1:01:59<2:42:53,  1.04s/it] 28%|██▊       | 3613/13025 [1:02:01<3:01:06,  1.15s/it] 28%|██▊       | 3614/13025 [1:02:03<3:16:21,  1.25s/it] 28%|██▊       | 3615/13025 [1:02:04<3:28:41,  1.33s/it] 28%|██▊       | 3616/13025 [1:02:06<3:37:10,  1.38s/it] 28%|██▊       | 3617/13025 [1:02:07<3:44:08,  1.43s/it] 28%|██▊       | 3618/13025 [1:02:09<3:58:09,  1.52s/it] 28%|██▊       | 3619/13025 [1:02:11<4:28:22,  1.71s/it] 28%|██▊       | 3623/13025 [1:02:13<2:35:32,  1.01it/s] 28%|██▊       | 3625/13025 [1:02:16<2:41:55,  1.03s/it] 28%|██▊       | 3628/13025 [1:02:18<2:17:39,  1.14it/s] 28%|██▊       | 3629/13025 [1:02:19<2:37:03,  1.00s/it] 28%|██▊       | 3630/13025 [1:02:21<2:54:06,  1.11s/it] 28%|██▊       | 3631/13025 [1:02:22<3:09:59,  1.21s/it] 28%|██▊       | 3632/13025 [1:02:24<3:22:11,  1.29s/it] 28%|██▊       | 3633/13025 [1:02:26<3:32:39,  1.36s/it] 28%|██▊       | 3634/13025 [1:02:27<3:43:04,  1.43s/it] 28%|██▊       | 3635/13025 [1:02:29<3:46:27,  1.45s/it] 28%|██▊       | 3636/13025 [1:02:30<3:49:22,  1.47s/it] 28%|██▊       | 3637/13025 [1:02:32<3:55:35,  1.51s/it] 28%|██▊       | 3638/13025 [1:02:33<3:59:54,  1.53s/it] 28%|██▊       | 3640/13025 [1:02:35<3:09:45,  1.21s/it] 28%|██▊       | 3641/13025 [1:02:37<3:26:00,  1.32s/it] 28%|██▊       | 3643/13025 [1:02:38<2:50:16,  1.09s/it] 28%|██▊       | 3644/13025 [1:02:40<3:05:25,  1.19s/it] 28%|██▊       | 3645/13025 [1:02:41<3:21:45,  1.29s/it] 28%|██▊       | 3646/13025 [1:02:43<3:34:48,  1.37s/it] 28%|██▊       | 3648/13025 [1:02:45<2:56:52,  1.13s/it] 28%|██▊       | 3650/13025 [1:02:46<2:36:20,  1.00s/it] 28%|██▊       | 3651/13025 [1:02:48<2:59:41,  1.15s/it] 28%|██▊       | 3652/13025 [1:02:50<3:19:59,  1.28s/it] 28%|██▊       | 3654/13025 [1:02:51<2:52:06,  1.10s/it] 28%|██▊       | 3655/13025 [1:02:53<3:10:11,  1.22s/it] 28%|██▊       | 3656/13025 [1:02:54<3:25:04,  1.31s/it] 28%|██▊       | 3657/13025 [1:02:56<3:36:44,  1.39s/it] 28%|██▊       | 3658/13025 [1:02:58<3:46:15,  1.45s/it] 28%|██▊       | 3660/13025 [1:02:59<2:56:01,  1.13s/it] 28%|██▊       | 3661/13025 [1:03:01<3:13:45,  1.24s/it] 28%|██▊       | 3663/13025 [1:03:02<2:43:02,  1.04s/it] 28%|██▊       | 3664/13025 [1:03:04<2:59:05,  1.15s/it] 28%|██▊       | 3666/13025 [1:03:05<2:39:27,  1.02s/it] 28%|██▊       | 3668/13025 [1:03:07<2:22:28,  1.09it/s] 28%|██▊       | 3669/13025 [1:03:08<2:46:08,  1.07s/it] 28%|██▊       | 3674/13025 [1:03:11<1:49:51,  1.42it/s] 28%|██▊       | 3676/13025 [1:03:13<2:06:17,  1.23it/s] 28%|██▊       | 3677/13025 [1:03:15<2:39:57,  1.03s/it] 28%|██▊       | 3678/13025 [1:03:17<2:59:37,  1.15s/it] 28%|██▊       | 3685/13025 [1:03:19<1:27:23,  1.78it/s] 28%|██▊       | 3686/13025 [1:03:20<1:47:58,  1.44it/s] 28%|██▊       | 3688/13025 [1:03:22<1:51:42,  1.39it/s] 28%|██▊       | 3691/13025 [1:03:23<1:42:56,  1.51it/s] 28%|██▊       | 3693/13025 [1:03:25<1:46:59,  1.45it/s] 28%|██▊       | 3694/13025 [1:03:27<2:06:21,  1.23it/s] 28%|██▊       | 3695/13025 [1:03:28<2:25:48,  1.07it/s] 28%|██▊       | 3696/13025 [1:03:30<2:44:01,  1.05s/it] 28%|██▊       | 3698/13025 [1:03:31<2:27:14,  1.06it/s] 28%|██▊       | 3699/13025 [1:03:33<2:45:14,  1.06s/it] 28%|██▊       | 3701/13025 [1:03:34<2:27:34,  1.05it/s] 28%|██▊       | 3702/13025 [1:03:36<2:45:58,  1.07s/it] 28%|██▊       | 3703/13025 [1:03:37<3:05:38,  1.19s/it] 28%|██▊       | 3704/13025 [1:03:39<3:21:56,  1.30s/it] 28%|██▊       | 3706/13025 [1:03:41<2:51:49,  1.11s/it] 28%|██▊       | 3711/13025 [1:03:42<1:37:26,  1.59it/s] 29%|██▊       | 3713/13025 [1:03:44<1:43:30,  1.50it/s] 29%|██▊       | 3714/13025 [1:03:45<2:06:08,  1.23it/s] 29%|██▊       | 3715/13025 [1:03:47<2:31:13,  1.03it/s] 29%|██▊       | 3717/13025 [1:03:49<2:22:05,  1.09it/s] 29%|██▊       | 3719/13025 [1:03:50<2:16:13,  1.14it/s] 29%|██▊       | 3721/13025 [1:03:52<2:11:40,  1.18it/s] 29%|██▊       | 3723/13025 [1:03:53<2:11:26,  1.18it/s] 29%|██▊       | 3724/13025 [1:03:55<2:34:35,  1.00it/s] 29%|██▊       | 3727/13025 [1:03:57<2:04:07,  1.25it/s] 29%|██▊       | 3728/13025 [1:03:58<2:25:36,  1.06it/s] 29%|██▊       | 3730/13025 [1:04:00<2:17:25,  1.13it/s] 29%|██▊       | 3732/13025 [1:04:02<2:13:34,  1.16it/s] 29%|██▊       | 3735/13025 [1:04:03<1:54:02,  1.36it/s] 29%|██▊       | 3736/13025 [1:04:05<2:16:56,  1.13it/s] 29%|██▊       | 3739/13025 [1:04:06<1:55:55,  1.34it/s] 29%|██▊       | 3740/13025 [1:04:08<2:20:34,  1.10it/s] 29%|██▊       | 3741/13025 [1:04:10<3:00:23,  1.17s/it] 29%|██▊       | 3742/13025 [1:04:13<3:38:45,  1.41s/it] 29%|██▊       | 3743/13025 [1:04:15<4:04:50,  1.58s/it] 29%|██▉       | 3745/13025 [1:04:17<3:25:34,  1.33s/it] 29%|██▉       | 3748/13025 [1:04:18<2:29:15,  1.04it/s] 29%|██▉       | 3750/13025 [1:04:20<2:22:46,  1.08it/s] 29%|██▉       | 3751/13025 [1:04:22<2:43:05,  1.06s/it] 29%|██▉       | 3755/13025 [1:04:23<1:52:41,  1.37it/s] 29%|██▉       | 3756/13025 [1:04:25<2:09:25,  1.19it/s] 29%|██▉       | 3759/13025 [1:04:26<1:51:23,  1.39it/s] 29%|██▉       | 3761/13025 [1:04:28<1:56:00,  1.33it/s] 29%|██▉       | 3762/13025 [1:04:30<2:19:01,  1.11it/s] 29%|██▉       | 3766/13025 [1:04:31<1:41:47,  1.52it/s] 29%|██▉       | 3768/13025 [1:04:33<1:47:40,  1.43it/s] 29%|██▉       | 3769/13025 [1:04:35<2:11:42,  1.17it/s] 29%|██▉       | 3770/13025 [1:04:36<2:31:26,  1.02it/s] 29%|██▉       | 3771/13025 [1:04:38<2:53:58,  1.13s/it] 29%|██▉       | 3772/13025 [1:04:40<3:13:38,  1.26s/it] 29%|██▉       | 3773/13025 [1:04:41<3:27:20,  1.34s/it] 29%|██▉       | 3774/13025 [1:04:43<3:37:39,  1.41s/it] 29%|██▉       | 3776/13025 [1:04:45<2:58:06,  1.16s/it] 29%|██▉       | 3777/13025 [1:04:46<3:16:12,  1.27s/it] 29%|██▉       | 3778/13025 [1:04:48<3:29:45,  1.36s/it] 29%|██▉       | 3779/13025 [1:04:49<3:37:44,  1.41s/it] 29%|██▉       | 3780/13025 [1:04:51<3:45:58,  1.47s/it] 29%|██▉       | 3781/13025 [1:04:53<3:54:14,  1.52s/it] 29%|██▉       | 3782/13025 [1:04:54<4:01:11,  1.57s/it] 29%|██▉       | 3783/13025 [1:04:56<4:08:48,  1.62s/it] 29%|██▉       | 3784/13025 [1:04:58<4:01:39,  1.57s/it] 29%|██▉       | 3785/13025 [1:04:59<4:05:57,  1.60s/it] 29%|██▉       | 3786/13025 [1:05:01<4:07:03,  1.60s/it] 29%|██▉       | 3790/13025 [1:05:02<2:11:51,  1.17it/s] 29%|██▉       | 3791/13025 [1:05:04<2:33:09,  1.00it/s] 29%|██▉       | 3792/13025 [1:05:06<2:49:28,  1.10s/it] 29%|██▉       | 3796/13025 [1:05:07<1:51:11,  1.38it/s] 29%|██▉       | 3797/13025 [1:05:09<2:19:51,  1.10it/s] 29%|██▉       | 3798/13025 [1:05:11<3:00:51,  1.18s/it] 29%|██▉       | 3799/13025 [1:05:14<3:37:01,  1.41s/it] 29%|██▉       | 3800/13025 [1:05:16<4:07:34,  1.61s/it] 29%|██▉       | 3803/13025 [1:05:18<2:53:09,  1.13s/it] 29%|██▉       | 3804/13025 [1:05:19<3:07:32,  1.22s/it] 29%|██▉       | 3805/13025 [1:05:21<3:21:55,  1.31s/it] 29%|██▉       | 3807/13025 [1:05:23<2:52:06,  1.12s/it] 29%|██▉       | 3810/13025 [1:05:24<2:11:45,  1.17it/s] 29%|██▉       | 3812/13025 [1:05:26<2:11:30,  1.17it/s] 29%|██▉       | 3815/13025 [1:05:28<1:53:34,  1.35it/s] 29%|██▉       | 3816/13025 [1:05:29<2:14:33,  1.14it/s] 29%|██▉       | 3817/13025 [1:05:31<2:35:20,  1.01s/it] 29%|██▉       | 3819/13025 [1:05:33<2:24:24,  1.06it/s] 29%|██▉       | 3820/13025 [1:05:34<2:46:43,  1.09s/it] 29%|██▉       | 3822/13025 [1:05:36<2:32:36,  1.01it/s] 29%|██▉       | 3823/13025 [1:05:38<2:53:56,  1.13s/it] 29%|██▉       | 3824/13025 [1:05:39<3:07:17,  1.22s/it] 29%|██▉       | 3826/13025 [1:05:41<2:46:20,  1.08s/it] 29%|██▉       | 3828/13025 [1:05:43<2:31:34,  1.01it/s] 29%|██▉       | 3829/13025 [1:05:44<2:52:55,  1.13s/it] 29%|██▉       | 3831/13025 [1:05:46<2:37:34,  1.03s/it] 29%|██▉       | 3834/13025 [1:05:48<2:04:23,  1.23it/s] 29%|██▉       | 3839/13025 [1:05:49<1:25:24,  1.79it/s] 29%|██▉       | 3841/13025 [1:05:51<1:33:56,  1.63it/s] 30%|██▉       | 3843/13025 [1:05:52<1:39:16,  1.54it/s] 30%|██▉       | 3844/13025 [1:05:54<2:00:11,  1.27it/s] 30%|██▉       | 3846/13025 [1:05:55<2:02:32,  1.25it/s] 30%|██▉       | 3847/13025 [1:05:57<2:26:08,  1.05it/s] 30%|██▉       | 3848/13025 [1:05:59<2:45:17,  1.08s/it] 30%|██▉       | 3852/13025 [1:06:00<1:52:03,  1.36it/s] 30%|██▉       | 3855/13025 [1:06:02<1:41:11,  1.51it/s] 30%|██▉       | 3856/13025 [1:06:04<2:02:36,  1.25it/s] 30%|██▉       | 3857/13025 [1:06:05<2:24:28,  1.06it/s] 30%|██▉       | 3858/13025 [1:06:07<2:40:26,  1.05s/it] 30%|██▉       | 3859/13025 [1:06:08<3:01:19,  1.19s/it] 30%|██▉       | 3860/13025 [1:06:11<3:41:33,  1.45s/it] 30%|██▉       | 3863/13025 [1:06:13<2:47:23,  1.10s/it] 30%|██▉       | 3868/13025 [1:06:15<1:51:17,  1.37it/s] 30%|██▉       | 3870/13025 [1:06:17<1:59:25,  1.28it/s] 30%|██▉       | 3871/13025 [1:06:19<2:17:00,  1.11it/s] 30%|██▉       | 3873/13025 [1:06:20<2:12:11,  1.15it/s] 30%|██▉       | 3876/13025 [1:06:22<1:52:54,  1.35it/s] 30%|██▉       | 3877/13025 [1:06:23<2:13:43,  1.14it/s] 30%|██▉       | 3878/13025 [1:06:25<2:36:19,  1.03s/it] 30%|██▉       | 3879/13025 [1:06:27<2:58:06,  1.17s/it] 30%|██▉       | 3883/13025 [1:06:28<1:55:44,  1.32it/s] 30%|██▉       | 3885/13025 [1:06:30<1:56:25,  1.31it/s] 30%|██▉       | 3887/13025 [1:06:32<1:58:06,  1.29it/s] 30%|██▉       | 3888/13025 [1:06:33<2:20:42,  1.08it/s] 30%|██▉       | 3890/13025 [1:06:35<2:15:57,  1.12it/s] 30%|██▉       | 3892/13025 [1:06:37<2:12:57,  1.14it/s] 30%|██▉       | 3893/13025 [1:06:38<2:36:13,  1.03s/it] 30%|██▉       | 3894/13025 [1:06:40<2:54:43,  1.15s/it] 30%|██▉       | 3896/13025 [1:06:42<2:35:46,  1.02s/it] 30%|██▉       | 3897/13025 [1:06:43<2:54:02,  1.14s/it] 30%|██▉       | 3898/13025 [1:06:45<3:12:50,  1.27s/it] 30%|██▉       | 3899/13025 [1:06:46<3:26:00,  1.35s/it] 30%|██▉       | 3901/13025 [1:06:48<2:52:04,  1.13s/it] 30%|██▉       | 3903/13025 [1:06:50<2:32:43,  1.00s/it] 30%|██▉       | 3906/13025 [1:06:51<2:01:34,  1.25it/s] 30%|██▉       | 3907/13025 [1:06:53<2:20:43,  1.08it/s] 30%|███       | 3908/13025 [1:06:54<2:41:57,  1.07s/it] 30%|███       | 3909/13025 [1:06:56<2:58:36,  1.18s/it] 30%|███       | 3910/13025 [1:06:58<3:17:20,  1.30s/it] 30%|███       | 3911/13025 [1:06:59<3:31:24,  1.39s/it] 30%|███       | 3912/13025 [1:07:01<3:41:49,  1.46s/it] 30%|███       | 3913/13025 [1:07:03<3:46:07,  1.49s/it] 30%|███       | 3914/13025 [1:07:04<3:47:26,  1.50s/it] 30%|███       | 3916/13025 [1:07:06<2:57:10,  1.17s/it] 30%|███       | 3918/13025 [1:07:07<2:37:27,  1.04s/it] 30%|███       | 3921/13025 [1:07:09<2:06:11,  1.20it/s] 30%|███       | 3924/13025 [1:07:11<1:58:20,  1.28it/s] 30%|███       | 3927/13025 [1:07:13<1:57:41,  1.29it/s] 30%|███       | 3928/13025 [1:07:16<2:32:25,  1.01s/it] 30%|███       | 3930/13025 [1:07:18<2:29:28,  1.01it/s] 30%|███       | 3931/13025 [1:07:19<2:47:55,  1.11s/it] 30%|███       | 3932/13025 [1:07:21<3:02:06,  1.20s/it] 30%|███       | 3935/13025 [1:07:22<2:13:56,  1.13it/s] 30%|███       | 3936/13025 [1:07:24<2:34:06,  1.02s/it] 30%|███       | 3937/13025 [1:07:26<2:49:55,  1.12s/it] 30%|███       | 3939/13025 [1:07:27<2:32:32,  1.01s/it] 30%|███       | 3940/13025 [1:07:29<2:51:28,  1.13s/it] 30%|███       | 3943/13025 [1:07:30<2:09:29,  1.17it/s] 30%|███       | 3948/13025 [1:07:32<1:26:23,  1.75it/s] 30%|███       | 3950/13025 [1:07:34<1:34:49,  1.59it/s] 30%|███       | 3951/13025 [1:07:35<1:53:42,  1.33it/s] 30%|███       | 3952/13025 [1:07:37<2:14:28,  1.12it/s] 30%|███       | 3953/13025 [1:07:38<2:35:38,  1.03s/it] 30%|███       | 3956/13025 [1:07:40<2:01:42,  1.24it/s] 30%|███       | 3958/13025 [1:07:42<2:02:49,  1.23it/s] 30%|███       | 3960/13025 [1:07:43<2:04:56,  1.21it/s] 30%|███       | 3961/13025 [1:07:45<2:25:19,  1.04it/s] 30%|███       | 3962/13025 [1:07:46<2:43:23,  1.08s/it] 30%|███       | 3963/13025 [1:07:48<3:01:35,  1.20s/it] 30%|███       | 3964/13025 [1:07:50<3:14:53,  1.29s/it] 30%|███       | 3966/13025 [1:07:51<2:46:10,  1.10s/it] 30%|███       | 3968/13025 [1:07:53<2:29:57,  1.01it/s] 30%|███       | 3970/13025 [1:07:55<2:21:31,  1.07it/s] 30%|███       | 3971/13025 [1:07:56<2:39:59,  1.06s/it] 30%|███       | 3972/13025 [1:07:58<3:01:00,  1.20s/it] 31%|███       | 3973/13025 [1:08:00<3:20:30,  1.33s/it] 31%|███       | 3975/13025 [1:08:01<2:45:43,  1.10s/it] 31%|███       | 3976/13025 [1:08:03<2:58:21,  1.18s/it] 31%|███       | 3980/13025 [1:08:04<1:53:28,  1.33it/s] 31%|███       | 3982/13025 [1:08:06<1:56:49,  1.29it/s] 31%|███       | 3985/13025 [1:08:08<1:44:56,  1.44it/s] 31%|███       | 3986/13025 [1:08:10<2:19:32,  1.08it/s] 31%|███       | 3987/13025 [1:08:12<2:54:00,  1.16s/it] 31%|███       | 3990/13025 [1:08:14<2:28:29,  1.01it/s] 31%|███       | 3993/13025 [1:08:16<2:11:14,  1.15it/s] 31%|███       | 3999/13025 [1:08:18<1:23:49,  1.79it/s] 31%|███       | 4000/13025 [1:08:20<1:41:34,  1.48it/s] 31%|███       | 4002/13025 [1:08:21<1:46:09,  1.42it/s] 31%|███       | 4003/13025 [1:08:23<2:04:05,  1.21it/s] 31%|███       | 4004/13025 [1:08:24<2:22:07,  1.06it/s] 31%|███       | 4006/13025 [1:08:26<2:16:13,  1.10it/s] 31%|███       | 4007/13025 [1:08:27<2:33:20,  1.02s/it] 31%|███       | 4009/13025 [1:08:29<2:22:20,  1.06it/s] 31%|███       | 4010/13025 [1:08:31<2:41:12,  1.07s/it] 31%|███       | 4011/13025 [1:08:32<3:02:42,  1.22s/it] 31%|███       | 4013/13025 [1:08:34<2:37:06,  1.05s/it] 31%|███       | 4014/13025 [1:08:35<2:53:46,  1.16s/it] 31%|███       | 4015/13025 [1:08:37<3:10:09,  1.27s/it] 31%|███       | 4016/13025 [1:08:39<3:21:25,  1.34s/it] 31%|███       | 4018/13025 [1:08:40<2:48:52,  1.12s/it] 31%|███       | 4020/13025 [1:08:42<2:31:46,  1.01s/it] 31%|███       | 4022/13025 [1:08:44<2:20:57,  1.06it/s] 31%|███       | 4028/13025 [1:08:45<1:21:07,  1.85it/s] 31%|███       | 4029/13025 [1:08:47<1:39:28,  1.51it/s] 31%|███       | 4030/13025 [1:08:48<2:02:59,  1.22it/s] 31%|███       | 4031/13025 [1:08:50<2:24:12,  1.04it/s] 31%|███       | 4033/13025 [1:08:51<2:11:47,  1.14it/s] 31%|███       | 4034/13025 [1:08:53<2:34:40,  1.03s/it] 31%|███       | 4035/13025 [1:08:55<2:53:53,  1.16s/it] 31%|███       | 4036/13025 [1:08:56<3:10:12,  1.27s/it] 31%|███       | 4037/13025 [1:08:58<3:21:35,  1.35s/it] 31%|███       | 4038/13025 [1:09:00<3:36:49,  1.45s/it] 31%|███       | 4039/13025 [1:09:01<3:42:30,  1.49s/it] 31%|███       | 4040/13025 [1:09:03<3:48:54,  1.53s/it] 31%|███       | 4041/13025 [1:09:05<3:55:03,  1.57s/it] 31%|███       | 4042/13025 [1:09:06<3:55:08,  1.57s/it] 31%|███       | 4045/13025 [1:09:08<2:23:58,  1.04it/s] 31%|███       | 4048/13025 [1:09:10<2:03:32,  1.21it/s] 31%|███       | 4050/13025 [1:09:12<2:17:19,  1.09it/s] 31%|███       | 4051/13025 [1:09:14<2:51:41,  1.15s/it] 31%|███       | 4055/13025 [1:09:16<2:06:07,  1.19it/s] 31%|███       | 4058/13025 [1:09:18<1:52:26,  1.33it/s] 31%|███       | 4059/13025 [1:09:20<2:11:37,  1.14it/s] 31%|███       | 4060/13025 [1:09:21<2:30:23,  1.01s/it] 31%|███       | 4061/13025 [1:09:23<2:47:40,  1.12s/it] 31%|███       | 4065/13025 [1:09:24<1:51:05,  1.34it/s] 31%|███       | 4066/13025 [1:09:26<2:12:38,  1.13it/s] 31%|███       | 4067/13025 [1:09:28<2:30:00,  1.00s/it] 31%|███       | 4068/13025 [1:09:29<2:48:53,  1.13s/it] 31%|███▏      | 4071/13025 [1:09:31<2:08:47,  1.16it/s] 31%|███▏      | 4072/13025 [1:09:33<2:30:18,  1.01s/it] 31%|███▏      | 4078/13025 [1:09:34<1:23:46,  1.78it/s] 31%|███▏      | 4079/13025 [1:09:36<1:44:53,  1.42it/s] 31%|███▏      | 4080/13025 [1:09:38<2:06:00,  1.18it/s] 31%|███▏      | 4082/13025 [1:09:39<2:05:56,  1.18it/s] 31%|███▏      | 4083/13025 [1:09:41<2:26:46,  1.02it/s] 31%|███▏      | 4084/13025 [1:09:42<2:42:57,  1.09s/it] 31%|███▏      | 4085/13025 [1:09:44<3:00:52,  1.21s/it] 31%|███▏      | 4086/13025 [1:09:46<3:17:29,  1.33s/it] 31%|███▏      | 4089/13025 [1:09:47<2:18:59,  1.07it/s] 31%|███▏      | 4090/13025 [1:09:49<2:39:20,  1.07s/it] 31%|███▏      | 4092/13025 [1:09:51<2:26:36,  1.02it/s] 31%|███▏      | 4093/13025 [1:09:52<2:45:58,  1.11s/it] 31%|███▏      | 4095/13025 [1:09:54<2:23:38,  1.04it/s] 31%|███▏      | 4096/13025 [1:09:55<2:43:56,  1.10s/it] 31%|███▏      | 4097/13025 [1:09:57<3:01:11,  1.22s/it] 31%|███▏      | 4099/13025 [1:09:59<2:36:25,  1.05s/it] 31%|███▏      | 4100/13025 [1:10:00<2:54:37,  1.17s/it] 31%|███▏      | 4101/13025 [1:10:02<3:10:37,  1.28s/it] 32%|███▏      | 4106/13025 [1:10:03<1:42:03,  1.46it/s] 32%|███▏      | 4107/13025 [1:10:05<2:04:08,  1.20it/s] 32%|███▏      | 4109/13025 [1:10:07<2:02:47,  1.21it/s] 32%|███▏      | 4112/13025 [1:10:09<1:51:36,  1.33it/s] 32%|███▏      | 4114/13025 [1:10:11<2:09:55,  1.14it/s] 32%|███▏      | 4115/13025 [1:10:13<2:40:32,  1.08s/it] 32%|███▏      | 4119/13025 [1:10:15<2:02:01,  1.22it/s] 32%|███▏      | 4121/13025 [1:10:17<2:05:10,  1.19it/s] 32%|███▏      | 4123/13025 [1:10:19<2:05:23,  1.18it/s] 32%|███▏      | 4124/13025 [1:10:20<2:23:31,  1.03it/s] 32%|███▏      | 4126/13025 [1:10:22<2:14:50,  1.10it/s] 32%|███▏      | 4129/13025 [1:10:24<1:52:50,  1.31it/s] 32%|███▏      | 4130/13025 [1:10:25<2:12:07,  1.12it/s] 32%|███▏      | 4135/13025 [1:10:27<1:27:30,  1.69it/s] 32%|███▏      | 4137/13025 [1:10:28<1:35:08,  1.56it/s] 32%|███▏      | 4138/13025 [1:10:30<1:55:53,  1.28it/s] 32%|███▏      | 4139/13025 [1:10:32<2:18:29,  1.07it/s] 32%|███▏      | 4140/13025 [1:10:33<2:38:42,  1.07s/it] 32%|███▏      | 4146/13025 [1:10:35<1:24:43,  1.75it/s] 32%|███▏      | 4147/13025 [1:10:36<1:41:09,  1.46it/s] 32%|███▏      | 4149/13025 [1:10:38<1:45:13,  1.41it/s] 32%|███▏      | 4150/13025 [1:10:40<2:06:50,  1.17it/s] 32%|███▏      | 4151/13025 [1:10:41<2:28:00,  1.00s/it] 32%|███▏      | 4153/13025 [1:10:43<2:19:16,  1.06it/s] 32%|███▏      | 4154/13025 [1:10:45<2:39:07,  1.08s/it] 32%|███▏      | 4155/13025 [1:10:46<2:56:32,  1.19s/it] 32%|███▏      | 4158/13025 [1:10:48<2:11:32,  1.12it/s] 32%|███▏      | 4159/13025 [1:10:50<2:33:47,  1.04s/it] 32%|███▏      | 4165/13025 [1:10:51<1:23:30,  1.77it/s] 32%|███▏      | 4166/13025 [1:10:53<1:43:25,  1.43it/s] 32%|███▏      | 4167/13025 [1:10:54<2:04:05,  1.19it/s] 32%|███▏      | 4168/13025 [1:10:56<2:24:23,  1.02it/s] 32%|███▏      | 4169/13025 [1:10:58<2:45:13,  1.12s/it] 32%|███▏      | 4170/13025 [1:10:59<3:03:11,  1.24s/it] 32%|███▏      | 4171/13025 [1:11:01<3:16:34,  1.33s/it] 32%|███▏      | 4172/13025 [1:11:03<3:28:14,  1.41s/it] 32%|███▏      | 4175/13025 [1:11:04<2:22:05,  1.04it/s] 32%|███▏      | 4176/13025 [1:11:06<2:42:53,  1.10s/it] 32%|███▏      | 4177/13025 [1:11:08<2:59:28,  1.22s/it] 32%|███▏      | 4178/13025 [1:11:10<3:27:59,  1.41s/it] 32%|███▏      | 4179/13025 [1:11:12<3:56:44,  1.61s/it] 32%|███▏      | 4180/13025 [1:11:14<4:17:02,  1.74s/it] 32%|███▏      | 4181/13025 [1:11:16<4:38:42,  1.89s/it] 32%|███▏      | 4182/13025 [1:11:18<4:32:51,  1.85s/it] 32%|███▏      | 4186/13025 [1:11:20<2:20:31,  1.05it/s] 32%|███▏      | 4188/13025 [1:11:21<2:14:10,  1.10it/s] 32%|███▏      | 4190/13025 [1:11:23<2:10:45,  1.13it/s] 32%|███▏      | 4191/13025 [1:11:24<2:31:12,  1.03s/it] 32%|███▏      | 4192/13025 [1:11:26<2:49:57,  1.15s/it] 32%|███▏      | 4193/13025 [1:11:28<3:06:30,  1.27s/it] 32%|███▏      | 4194/13025 [1:11:29<3:20:07,  1.36s/it] 32%|███▏      | 4195/13025 [1:11:31<3:31:23,  1.44s/it] 32%|███▏      | 4196/13025 [1:11:33<3:40:00,  1.50s/it] 32%|███▏      | 4197/13025 [1:11:34<3:47:42,  1.55s/it] 32%|███▏      | 4199/13025 [1:11:36<3:01:24,  1.23s/it] 32%|███▏      | 4200/13025 [1:11:38<3:16:03,  1.33s/it] 32%|███▏      | 4201/13025 [1:11:39<3:28:28,  1.42s/it] 32%|███▏      | 4203/13025 [1:11:41<2:50:41,  1.16s/it] 32%|███▏      | 4204/13025 [1:11:43<3:06:14,  1.27s/it] 32%|███▏      | 4206/13025 [1:11:44<2:42:03,  1.10s/it] 32%|███▏      | 4209/13025 [1:11:46<2:03:42,  1.19it/s] 32%|███▏      | 4210/13025 [1:11:48<2:22:42,  1.03it/s] 32%|███▏      | 4212/13025 [1:11:49<2:13:54,  1.10it/s] 32%|███▏      | 4213/13025 [1:11:51<2:33:29,  1.05s/it] 32%|███▏      | 4214/13025 [1:11:52<2:49:55,  1.16s/it] 32%|███▏      | 4216/13025 [1:11:54<2:30:17,  1.02s/it] 32%|███▏      | 4217/13025 [1:11:55<2:48:52,  1.15s/it] 32%|███▏      | 4218/13025 [1:11:57<3:04:27,  1.26s/it] 32%|███▏      | 4220/13025 [1:11:59<2:38:04,  1.08s/it] 32%|███▏      | 4221/13025 [1:12:00<2:55:08,  1.19s/it] 32%|███▏      | 4222/13025 [1:12:02<3:08:16,  1.28s/it] 32%|███▏      | 4223/13025 [1:12:03<3:19:00,  1.36s/it] 32%|███▏      | 4224/13025 [1:12:05<3:30:36,  1.44s/it] 32%|███▏      | 4225/13025 [1:12:07<3:38:47,  1.49s/it] 32%|███▏      | 4226/13025 [1:12:09<3:56:09,  1.61s/it] 32%|███▏      | 4227/13025 [1:12:11<4:24:40,  1.81s/it] 32%|███▏      | 4228/13025 [1:12:13<4:37:36,  1.89s/it] 32%|███▏      | 4231/13025 [1:12:15<3:04:29,  1.26s/it] 32%|███▏      | 4232/13025 [1:12:17<3:21:02,  1.37s/it] 32%|███▏      | 4233/13025 [1:12:19<3:29:05,  1.43s/it] 33%|███▎      | 4235/13025 [1:12:20<2:53:01,  1.18s/it] 33%|███▎      | 4237/13025 [1:12:22<2:32:13,  1.04s/it] 33%|███▎      | 4239/13025 [1:12:23<2:19:32,  1.05it/s] 33%|███▎      | 4241/13025 [1:12:25<2:12:22,  1.11it/s] 33%|███▎      | 4242/13025 [1:12:27<2:31:54,  1.04s/it] 33%|███▎      | 4243/13025 [1:12:28<2:49:38,  1.16s/it] 33%|███▎      | 4245/13025 [1:12:30<2:30:11,  1.03s/it] 33%|███▎      | 4246/13025 [1:12:32<2:48:25,  1.15s/it] 33%|███▎      | 4248/13025 [1:12:33<2:29:00,  1.02s/it] 33%|███▎      | 4249/13025 [1:12:35<2:46:10,  1.14s/it] 33%|███▎      | 4250/13025 [1:12:36<3:01:19,  1.24s/it] 33%|███▎      | 4251/13025 [1:12:38<3:08:37,  1.29s/it] 33%|███▎      | 4253/13025 [1:12:39<2:39:13,  1.09s/it] 33%|███▎      | 4255/13025 [1:12:41<2:22:51,  1.02it/s] 33%|███▎      | 4258/13025 [1:12:42<1:53:27,  1.29it/s] 33%|███▎      | 4259/13025 [1:12:44<2:14:59,  1.08it/s] 33%|███▎      | 4261/13025 [1:12:46<2:08:02,  1.14it/s] 33%|███▎      | 4262/13025 [1:12:47<2:27:09,  1.01s/it] 33%|███▎      | 4263/13025 [1:12:49<2:44:49,  1.13s/it] 33%|███▎      | 4267/13025 [1:12:51<1:48:54,  1.34it/s] 33%|███▎      | 4268/13025 [1:12:52<2:10:33,  1.12it/s] 33%|███▎      | 4269/13025 [1:12:54<2:29:15,  1.02s/it] 33%|███▎      | 4273/13025 [1:12:55<1:42:23,  1.42it/s] 33%|███▎      | 4274/13025 [1:12:57<2:03:26,  1.18it/s] 33%|███▎      | 4275/13025 [1:12:58<2:19:50,  1.04it/s] 33%|███▎      | 4276/13025 [1:13:00<2:35:40,  1.07s/it] 33%|███▎      | 4277/13025 [1:13:02<2:53:33,  1.19s/it] 33%|███▎      | 4278/13025 [1:13:03<3:08:26,  1.29s/it] 33%|███▎      | 4280/13025 [1:13:05<2:37:26,  1.08s/it] 33%|███▎      | 4285/13025 [1:13:06<1:32:09,  1.58it/s] 33%|███▎      | 4286/13025 [1:13:08<1:53:01,  1.29it/s] 33%|███▎      | 4287/13025 [1:13:10<2:28:06,  1.02s/it] 33%|███▎      | 4289/13025 [1:13:12<2:32:50,  1.05s/it] 33%|███▎      | 4293/13025 [1:13:15<1:58:36,  1.23it/s] 33%|███▎      | 4295/13025 [1:13:17<2:07:20,  1.14it/s] 33%|███▎      | 4296/13025 [1:13:18<2:23:47,  1.01it/s] 33%|███▎      | 4297/13025 [1:13:20<2:41:32,  1.11s/it] 33%|███▎      | 4298/13025 [1:13:22<2:59:06,  1.23s/it] 33%|███▎      | 4299/13025 [1:13:23<3:11:49,  1.32s/it] 33%|███▎      | 4301/13025 [1:13:25<2:43:26,  1.12s/it] 33%|███▎      | 4302/13025 [1:13:27<3:00:22,  1.24s/it] 33%|███▎      | 4304/13025 [1:13:28<2:37:16,  1.08s/it] 33%|███▎      | 4307/13025 [1:13:30<2:00:15,  1.21it/s] 33%|███▎      | 4308/13025 [1:13:31<2:18:49,  1.05it/s] 33%|███▎      | 4311/13025 [1:13:33<1:52:22,  1.29it/s] 33%|███▎      | 4312/13025 [1:13:35<2:12:55,  1.09it/s] 33%|███▎      | 4314/13025 [1:13:36<2:09:07,  1.12it/s] 33%|███▎      | 4315/13025 [1:13:38<2:26:45,  1.01s/it] 33%|███▎      | 4316/13025 [1:13:39<2:42:26,  1.12s/it] 33%|███▎      | 4319/13025 [1:13:41<2:00:56,  1.20it/s] 33%|███▎      | 4320/13025 [1:13:42<2:20:27,  1.03it/s] 33%|███▎      | 4323/13025 [1:13:44<1:52:45,  1.29it/s] 33%|███▎      | 4324/13025 [1:13:46<2:13:56,  1.08it/s] 33%|███▎      | 4325/13025 [1:13:47<2:35:07,  1.07s/it] 33%|███▎      | 4327/13025 [1:13:49<2:22:30,  1.02it/s] 33%|███▎      | 4329/13025 [1:13:51<2:15:01,  1.07it/s] 33%|███▎      | 4330/13025 [1:13:52<2:36:25,  1.08s/it] 33%|███▎      | 4332/13025 [1:13:54<2:22:25,  1.02it/s] 33%|███▎      | 4335/13025 [1:13:56<1:55:22,  1.26it/s] 33%|███▎      | 4337/13025 [1:13:57<1:53:44,  1.27it/s] 33%|███▎      | 4338/13025 [1:13:59<2:12:02,  1.10it/s] 33%|███▎      | 4339/13025 [1:14:00<2:30:36,  1.04s/it] 33%|███▎      | 4340/13025 [1:14:02<2:47:28,  1.16s/it] 33%|███▎      | 4342/13025 [1:14:03<2:26:26,  1.01s/it] 33%|███▎      | 4344/13025 [1:14:05<2:14:33,  1.08it/s] 33%|███▎      | 4345/13025 [1:14:07<2:35:54,  1.08s/it] 33%|███▎      | 4347/13025 [1:14:08<2:20:53,  1.03it/s] 33%|███▎      | 4349/13025 [1:14:10<2:23:44,  1.01it/s] 33%|███▎      | 4352/13025 [1:14:13<2:10:27,  1.11it/s] 33%|███▎      | 4353/13025 [1:14:15<2:38:23,  1.10s/it] 33%|███▎      | 4354/13025 [1:14:17<3:06:46,  1.29s/it] 33%|███▎      | 4355/13025 [1:14:18<3:15:09,  1.35s/it] 33%|███▎      | 4357/13025 [1:14:20<2:42:24,  1.12s/it] 33%|███▎      | 4359/13025 [1:14:21<2:27:14,  1.02s/it] 33%|███▎      | 4360/13025 [1:14:23<2:47:11,  1.16s/it] 33%|███▎      | 4362/13025 [1:14:25<2:28:13,  1.03s/it] 34%|███▎      | 4365/13025 [1:14:26<1:57:28,  1.23it/s] 34%|███▎      | 4366/13025 [1:14:28<2:17:32,  1.05it/s] 34%|███▎      | 4368/13025 [1:14:30<2:09:48,  1.11it/s] 34%|███▎      | 4370/13025 [1:14:31<2:01:15,  1.19it/s] 34%|███▎      | 4371/13025 [1:14:33<2:23:39,  1.00it/s] 34%|███▎      | 4373/13025 [1:14:34<2:16:54,  1.05it/s] 34%|███▎      | 4378/13025 [1:14:36<1:25:32,  1.68it/s] 34%|███▎      | 4379/13025 [1:14:38<1:46:02,  1.36it/s] 34%|███▎      | 4381/13025 [1:14:39<1:49:14,  1.32it/s] 34%|███▎      | 4382/13025 [1:14:41<2:09:56,  1.11it/s] 34%|███▎      | 4383/13025 [1:14:43<2:30:53,  1.05s/it] 34%|███▎      | 4384/13025 [1:14:44<2:49:57,  1.18s/it] 34%|███▎      | 4386/13025 [1:14:46<2:30:39,  1.05s/it] 34%|███▎      | 4387/13025 [1:14:48<2:49:44,  1.18s/it] 34%|███▎      | 4390/13025 [1:14:49<2:05:29,  1.15it/s] 34%|███▎      | 4391/13025 [1:14:51<2:27:46,  1.03s/it] 34%|███▎      | 4392/13025 [1:14:53<2:48:03,  1.17s/it] 34%|███▎      | 4393/13025 [1:14:54<3:02:14,  1.27s/it] 34%|███▎      | 4394/13025 [1:14:56<3:13:22,  1.34s/it] 34%|███▎      | 4395/13025 [1:14:57<3:25:07,  1.43s/it] 34%|███▍      | 4397/13025 [1:14:59<2:47:19,  1.16s/it] 34%|███▍      | 4398/13025 [1:15:01<3:02:43,  1.27s/it] 34%|███▍      | 4400/13025 [1:15:02<2:37:37,  1.10s/it] 34%|███▍      | 4402/13025 [1:15:04<2:23:41,  1.00it/s] 34%|███▍      | 4403/13025 [1:15:06<2:43:08,  1.14s/it] 34%|███▍      | 4404/13025 [1:15:07<2:59:52,  1.25s/it] 34%|███▍      | 4405/13025 [1:15:09<3:27:43,  1.45s/it] 34%|███▍      | 4406/13025 [1:15:12<4:00:00,  1.67s/it] 34%|███▍      | 4408/13025 [1:15:14<3:25:44,  1.43s/it] 34%|███▍      | 4409/13025 [1:15:16<3:53:44,  1.63s/it] 34%|███▍      | 4410/13025 [1:15:18<3:55:28,  1.64s/it] 34%|███▍      | 4413/13025 [1:15:19<2:33:55,  1.07s/it] 34%|███▍      | 4414/13025 [1:15:21<2:49:25,  1.18s/it] 34%|███▍      | 4416/13025 [1:15:23<2:29:56,  1.04s/it] 34%|███▍      | 4417/13025 [1:15:24<2:42:57,  1.14s/it] 34%|███▍      | 4418/13025 [1:15:26<2:54:42,  1.22s/it] 34%|███▍      | 4420/13025 [1:15:27<2:31:14,  1.05s/it] 34%|███▍      | 4422/13025 [1:15:29<2:19:38,  1.03it/s] 34%|███▍      | 4424/13025 [1:15:30<2:11:34,  1.09it/s] 34%|███▍      | 4426/13025 [1:15:32<2:06:24,  1.13it/s] 34%|███▍      | 4427/13025 [1:15:34<2:27:49,  1.03s/it] 34%|███▍      | 4432/13025 [1:15:35<1:30:55,  1.58it/s] 34%|███▍      | 4434/13025 [1:15:37<1:36:08,  1.49it/s] 34%|███▍      | 4436/13025 [1:15:39<1:41:02,  1.42it/s] 34%|███▍      | 4438/13025 [1:15:40<1:44:35,  1.37it/s] 34%|███▍      | 4439/13025 [1:15:42<2:05:12,  1.14it/s] 34%|███▍      | 4440/13025 [1:15:43<2:24:57,  1.01s/it] 34%|███▍      | 4442/13025 [1:15:45<2:14:39,  1.06it/s] 34%|███▍      | 4443/13025 [1:15:47<2:32:19,  1.06s/it] 34%|███▍      | 4444/13025 [1:15:48<2:48:36,  1.18s/it] 34%|███▍      | 4445/13025 [1:15:50<3:02:06,  1.27s/it] 34%|███▍      | 4446/13025 [1:15:51<3:13:00,  1.35s/it] 34%|███▍      | 4447/13025 [1:15:53<3:23:21,  1.42s/it] 34%|███▍      | 4448/13025 [1:15:55<3:31:30,  1.48s/it] 34%|███▍      | 4449/13025 [1:15:56<3:38:49,  1.53s/it] 34%|███▍      | 4450/13025 [1:15:58<3:42:25,  1.56s/it] 34%|███▍      | 4451/13025 [1:15:59<3:43:37,  1.56s/it] 34%|███▍      | 4452/13025 [1:16:01<3:44:01,  1.57s/it] 34%|███▍      | 4453/13025 [1:16:03<3:44:12,  1.57s/it] 34%|███▍      | 4455/13025 [1:16:04<2:54:27,  1.22s/it] 34%|███▍      | 4456/13025 [1:16:06<3:08:10,  1.32s/it] 34%|███▍      | 4457/13025 [1:16:07<3:18:38,  1.39s/it] 34%|███▍      | 4458/13025 [1:16:09<3:36:44,  1.52s/it] 34%|███▍      | 4459/13025 [1:16:11<3:56:43,  1.66s/it] 34%|███▍      | 4460/13025 [1:16:13<4:08:05,  1.74s/it] 34%|███▍      | 4464/13025 [1:16:16<2:24:05,  1.01s/it] 34%|███▍      | 4465/13025 [1:16:18<2:48:54,  1.18s/it] 34%|███▍      | 4466/13025 [1:16:19<3:01:33,  1.27s/it] 34%|███▍      | 4469/13025 [1:16:21<2:07:32,  1.12it/s] 34%|███▍      | 4470/13025 [1:16:22<2:24:58,  1.02s/it] 34%|███▍      | 4471/13025 [1:16:24<2:41:06,  1.13s/it] 34%|███▍      | 4472/13025 [1:16:25<2:57:10,  1.24s/it] 34%|███▍      | 4473/13025 [1:16:27<3:11:16,  1.34s/it] 34%|███▍      | 4474/13025 [1:16:28<3:18:36,  1.39s/it] 34%|███▍      | 4475/13025 [1:16:30<3:23:49,  1.43s/it] 34%|███▍      | 4476/13025 [1:16:32<3:31:25,  1.48s/it] 34%|███▍      | 4477/13025 [1:16:33<3:37:27,  1.53s/it] 34%|███▍      | 4478/13025 [1:16:35<3:38:05,  1.53s/it] 34%|███▍      | 4480/13025 [1:16:36<2:51:32,  1.20s/it] 34%|███▍      | 4481/13025 [1:16:38<3:06:06,  1.31s/it] 34%|███▍      | 4482/13025 [1:16:40<3:16:27,  1.38s/it] 34%|███▍      | 4483/13025 [1:16:41<3:24:16,  1.43s/it] 34%|███▍      | 4484/13025 [1:16:43<3:32:34,  1.49s/it] 34%|███▍      | 4486/13025 [1:16:45<2:50:43,  1.20s/it] 34%|███▍      | 4489/13025 [1:16:46<2:03:49,  1.15it/s] 34%|███▍      | 4490/13025 [1:16:48<2:23:33,  1.01s/it] 34%|███▍      | 4491/13025 [1:16:49<2:41:26,  1.14s/it] 34%|███▍      | 4492/13025 [1:16:51<2:57:30,  1.25s/it] 34%|███▍      | 4493/13025 [1:16:53<3:10:11,  1.34s/it] 35%|███▍      | 4494/13025 [1:16:54<3:20:18,  1.41s/it] 35%|███▍      | 4499/13025 [1:16:56<1:39:59,  1.42it/s] 35%|███▍      | 4500/13025 [1:16:57<2:00:30,  1.18it/s] 35%|███▍      | 4501/13025 [1:16:59<2:20:36,  1.01it/s] 35%|███▍      | 4505/13025 [1:17:01<1:38:45,  1.44it/s] 35%|███▍      | 4506/13025 [1:17:02<1:59:05,  1.19it/s] 35%|███▍      | 4507/13025 [1:17:04<2:18:50,  1.02it/s] 35%|███▍      | 4508/13025 [1:17:06<2:37:04,  1.11s/it] 35%|███▍      | 4509/13025 [1:17:07<2:53:02,  1.22s/it] 35%|███▍      | 4510/13025 [1:17:09<3:13:29,  1.36s/it] 35%|███▍      | 4512/13025 [1:17:11<3:00:16,  1.27s/it] 35%|███▍      | 4514/13025 [1:17:13<2:52:19,  1.21s/it] 35%|███▍      | 4515/13025 [1:17:16<3:20:17,  1.41s/it] 35%|███▍      | 4516/13025 [1:17:17<3:33:28,  1.51s/it] 35%|███▍      | 4517/13025 [1:17:19<3:38:22,  1.54s/it] 35%|███▍      | 4522/13025 [1:17:21<1:49:05,  1.30it/s] 35%|███▍      | 4523/13025 [1:17:22<2:08:24,  1.10it/s] 35%|███▍      | 4524/13025 [1:17:24<2:26:10,  1.03s/it] 35%|███▍      | 4527/13025 [1:17:26<1:55:33,  1.23it/s] 35%|███▍      | 4530/13025 [1:17:27<1:39:56,  1.42it/s] 35%|███▍      | 4532/13025 [1:17:29<1:43:24,  1.37it/s] 35%|███▍      | 4534/13025 [1:17:30<1:46:21,  1.33it/s] 35%|███▍      | 4535/13025 [1:17:32<2:06:40,  1.12it/s] 35%|███▍      | 4536/13025 [1:17:34<2:26:01,  1.03s/it] 35%|███▍      | 4537/13025 [1:17:35<2:43:38,  1.16s/it] 35%|███▍      | 4541/13025 [1:17:37<1:46:58,  1.32it/s] 35%|███▍      | 4542/13025 [1:17:39<2:06:41,  1.12it/s] 35%|███▍      | 4543/13025 [1:17:40<2:25:37,  1.03s/it] 35%|███▍      | 4544/13025 [1:17:42<2:45:02,  1.17s/it] 35%|███▍      | 4546/13025 [1:17:43<2:15:43,  1.04it/s] 35%|███▍      | 4548/13025 [1:17:45<2:07:02,  1.11it/s] 35%|███▍      | 4550/13025 [1:17:46<2:01:25,  1.16it/s] 35%|███▍      | 4553/13025 [1:17:48<1:40:30,  1.40it/s] 35%|███▍      | 4557/13025 [1:17:49<1:21:16,  1.74it/s] 35%|███▌      | 4560/13025 [1:17:51<1:20:30,  1.75it/s] 35%|███▌      | 4561/13025 [1:17:53<1:40:00,  1.41it/s] 35%|███▌      | 4564/13025 [1:17:54<1:32:45,  1.52it/s] 35%|███▌      | 4565/13025 [1:17:56<1:53:30,  1.24it/s] 35%|███▌      | 4568/13025 [1:17:58<1:39:14,  1.42it/s] 35%|███▌      | 4569/13025 [1:17:59<2:00:44,  1.17it/s] 35%|███▌      | 4570/13025 [1:18:01<2:21:02,  1.00s/it] 35%|███▌      | 4572/13025 [1:18:03<2:11:50,  1.07it/s] 35%|███▌      | 4575/13025 [1:18:04<1:47:05,  1.32it/s] 35%|███▌      | 4576/13025 [1:18:06<2:05:59,  1.12it/s] 35%|███▌      | 4580/13025 [1:18:07<1:32:07,  1.53it/s] 35%|███▌      | 4581/13025 [1:18:09<2:00:29,  1.17it/s] 35%|███▌      | 4582/13025 [1:18:12<2:38:02,  1.12s/it] 35%|███▌      | 4584/13025 [1:18:14<2:38:52,  1.13s/it] 35%|███▌      | 4585/13025 [1:18:16<3:10:43,  1.36s/it] 35%|███▌      | 4592/13025 [1:18:18<1:27:26,  1.61it/s] 35%|███▌      | 4593/13025 [1:18:20<1:45:25,  1.33it/s] 35%|███▌      | 4594/13025 [1:18:21<2:04:43,  1.13it/s] 35%|███▌      | 4596/13025 [1:18:23<2:01:35,  1.16it/s] 35%|███▌      | 4597/13025 [1:18:25<2:20:47,  1.00s/it] 35%|███▌      | 4598/13025 [1:18:26<2:38:57,  1.13s/it] 35%|███▌      | 4600/13025 [1:18:28<2:22:39,  1.02s/it] 35%|███▌      | 4606/13025 [1:18:30<1:19:10,  1.77it/s] 35%|███▌      | 4607/13025 [1:18:31<1:37:05,  1.45it/s] 35%|███▌      | 4609/13025 [1:18:33<1:41:10,  1.39it/s] 35%|███▌      | 4610/13025 [1:18:34<2:01:18,  1.16it/s] 35%|███▌      | 4611/13025 [1:18:36<2:19:17,  1.01it/s] 35%|███▌      | 4612/13025 [1:18:38<2:36:04,  1.11s/it] 35%|███▌      | 4613/13025 [1:18:39<2:53:33,  1.24s/it] 35%|███▌      | 4614/13025 [1:18:41<3:08:00,  1.34s/it] 35%|███▌      | 4615/13025 [1:18:42<3:19:19,  1.42s/it] 35%|███▌      | 4617/13025 [1:18:44<2:42:51,  1.16s/it] 35%|███▌      | 4618/13025 [1:18:46<2:58:24,  1.27s/it] 35%|███▌      | 4620/13025 [1:18:47<2:30:36,  1.08s/it] 35%|███▌      | 4621/13025 [1:18:49<2:48:50,  1.21s/it] 35%|███▌      | 4623/13025 [1:18:50<2:24:29,  1.03s/it] 36%|███▌      | 4625/13025 [1:18:52<2:08:19,  1.09it/s] 36%|███▌      | 4627/13025 [1:18:53<1:58:40,  1.18it/s] 36%|███▌      | 4628/13025 [1:18:55<2:19:21,  1.00it/s] 36%|███▌      | 4629/13025 [1:18:57<2:38:00,  1.13s/it] 36%|███▌      | 4630/13025 [1:18:58<2:50:29,  1.22s/it] 36%|███▌      | 4631/13025 [1:18:59<2:57:42,  1.27s/it] 36%|███▌      | 4632/13025 [1:19:01<3:10:58,  1.37s/it] 36%|███▌      | 4633/13025 [1:19:03<3:20:08,  1.43s/it] 36%|███▌      | 4636/13025 [1:19:04<2:07:37,  1.10it/s] 36%|███▌      | 4637/13025 [1:19:06<2:29:17,  1.07s/it] 36%|███▌      | 4639/13025 [1:19:07<2:18:06,  1.01it/s] 36%|███▌      | 4640/13025 [1:19:10<2:57:33,  1.27s/it] 36%|███▌      | 4643/13025 [1:19:12<2:23:22,  1.03s/it] 36%|███▌      | 4644/13025 [1:19:14<2:55:43,  1.26s/it] 36%|███▌      | 4645/13025 [1:19:16<3:18:52,  1.42s/it] 36%|███▌      | 4646/13025 [1:19:18<3:24:49,  1.47s/it] 36%|███▌      | 4647/13025 [1:19:20<3:27:51,  1.49s/it] 36%|███▌      | 4649/13025 [1:19:21<2:48:58,  1.21s/it] 36%|███▌      | 4651/13025 [1:19:23<2:27:56,  1.06s/it] 36%|███▌      | 4652/13025 [1:19:24<2:43:59,  1.18s/it] 36%|███▌      | 4653/13025 [1:19:26<2:59:15,  1.28s/it] 36%|███▌      | 4654/13025 [1:19:28<3:11:49,  1.37s/it] 36%|███▌      | 4655/13025 [1:19:29<3:20:41,  1.44s/it] 36%|███▌      | 4657/13025 [1:19:31<2:45:13,  1.18s/it] 36%|███▌      | 4659/13025 [1:19:33<2:24:35,  1.04s/it] 36%|███▌      | 4660/13025 [1:19:34<2:40:28,  1.15s/it] 36%|███▌      | 4661/13025 [1:19:36<2:56:24,  1.27s/it] 36%|███▌      | 4663/13025 [1:19:38<2:32:42,  1.10s/it] 36%|███▌      | 4664/13025 [1:19:39<2:50:37,  1.22s/it] 36%|███▌      | 4665/13025 [1:19:41<3:05:44,  1.33s/it] 36%|███▌      | 4667/13025 [1:19:43<2:35:49,  1.12s/it] 36%|███▌      | 4670/13025 [1:19:44<1:59:21,  1.17it/s] 36%|███▌      | 4673/13025 [1:19:46<1:42:17,  1.36it/s] 36%|███▌      | 4675/13025 [1:19:47<1:41:38,  1.37it/s] 36%|███▌      | 4677/13025 [1:19:49<1:44:40,  1.33it/s] 36%|███▌      | 4678/13025 [1:19:51<2:06:51,  1.10it/s] 36%|███▌      | 4679/13025 [1:19:52<2:28:26,  1.07s/it] 36%|███▌      | 4681/13025 [1:19:54<2:18:03,  1.01it/s] 36%|███▌      | 4685/13025 [1:19:56<1:36:44,  1.44it/s] 36%|███▌      | 4686/13025 [1:19:57<1:56:16,  1.20it/s] 36%|███▌      | 4687/13025 [1:19:59<2:15:31,  1.03it/s] 36%|███▌      | 4688/13025 [1:20:00<2:32:42,  1.10s/it] 36%|███▌      | 4689/13025 [1:20:02<2:48:25,  1.21s/it] 36%|███▌      | 4692/13025 [1:20:04<2:00:00,  1.16it/s] 36%|███▌      | 4694/13025 [1:20:05<1:57:24,  1.18it/s] 36%|███▌      | 4695/13025 [1:20:07<2:17:13,  1.01it/s] 36%|███▌      | 4696/13025 [1:20:09<2:41:15,  1.16s/it] 36%|███▌      | 4698/13025 [1:20:11<2:43:03,  1.17s/it] 36%|███▌      | 4699/13025 [1:20:13<3:18:50,  1.43s/it] 36%|███▌      | 4700/13025 [1:20:16<3:42:35,  1.60s/it] 36%|███▌      | 4701/13025 [1:20:17<3:48:44,  1.65s/it] 36%|███▌      | 4702/13025 [1:20:19<3:46:10,  1.63s/it] 36%|███▌      | 4703/13025 [1:20:21<3:44:47,  1.62s/it] 36%|███▌      | 4704/13025 [1:20:22<3:43:35,  1.61s/it] 36%|███▌      | 4707/13025 [1:20:24<2:19:01,  1.00s/it] 36%|███▌      | 4708/13025 [1:20:25<2:37:03,  1.13s/it] 36%|███▌      | 4709/13025 [1:20:27<2:52:20,  1.24s/it] 36%|███▌      | 4710/13025 [1:20:28<3:03:23,  1.32s/it] 36%|███▌      | 4711/13025 [1:20:30<3:12:21,  1.39s/it] 36%|███▌      | 4714/13025 [1:20:32<2:09:57,  1.07it/s] 36%|███▌      | 4715/13025 [1:20:33<2:28:14,  1.07s/it] 36%|███▌      | 4716/13025 [1:20:35<2:43:43,  1.18s/it] 36%|███▌      | 4717/13025 [1:20:36<2:56:34,  1.28s/it] 36%|███▌      | 4720/13025 [1:20:38<2:04:42,  1.11it/s] 36%|███▌      | 4721/13025 [1:20:40<2:23:39,  1.04s/it] 36%|███▋      | 4722/13025 [1:20:41<2:33:45,  1.11s/it] 36%|███▋      | 4724/13025 [1:20:42<2:12:27,  1.04it/s] 36%|███▋      | 4725/13025 [1:20:44<2:31:55,  1.10s/it] 36%|███▋      | 4727/13025 [1:20:46<2:17:53,  1.00it/s] 36%|███▋      | 4731/13025 [1:20:47<1:34:50,  1.46it/s] 36%|███▋      | 4732/13025 [1:20:49<1:54:06,  1.21it/s] 36%|███▋      | 4733/13025 [1:20:50<2:11:30,  1.05it/s] 36%|███▋      | 4734/13025 [1:20:52<2:27:54,  1.07s/it] 36%|███▋      | 4739/13025 [1:20:53<1:26:14,  1.60it/s] 36%|███▋      | 4740/13025 [1:20:55<1:46:06,  1.30it/s] 36%|███▋      | 4745/13025 [1:20:57<1:15:05,  1.84it/s] 36%|███▋      | 4747/13025 [1:20:58<1:21:53,  1.68it/s] 36%|███▋      | 4749/13025 [1:21:00<1:27:28,  1.58it/s] 36%|███▋      | 4750/13025 [1:21:01<1:45:27,  1.31it/s] 36%|███▋      | 4752/13025 [1:21:03<1:45:48,  1.30it/s] 36%|███▋      | 4754/13025 [1:21:04<1:45:37,  1.31it/s] 37%|███▋      | 4755/13025 [1:21:06<2:06:14,  1.09it/s] 37%|███▋      | 4756/13025 [1:21:08<2:25:50,  1.06s/it] 37%|███▋      | 4757/13025 [1:21:09<2:48:17,  1.22s/it] 37%|███▋      | 4758/13025 [1:21:12<3:20:45,  1.46s/it] 37%|███▋      | 4759/13025 [1:21:14<3:47:33,  1.65s/it] 37%|███▋      | 4760/13025 [1:21:16<4:10:04,  1.82s/it] 37%|███▋      | 4762/13025 [1:21:18<3:18:59,  1.44s/it] 37%|███▋      | 4765/13025 [1:21:20<2:19:05,  1.01s/it] 37%|███▋      | 4767/13025 [1:21:21<2:00:30,  1.14it/s] 37%|███▋      | 4768/13025 [1:21:22<2:16:56,  1.00it/s] 37%|███▋      | 4771/13025 [1:21:24<1:45:17,  1.31it/s] 37%|███▋      | 4773/13025 [1:21:25<1:48:36,  1.27it/s] 37%|███▋      | 4777/13025 [1:21:27<1:22:48,  1.66it/s] 37%|███▋      | 4778/13025 [1:21:28<1:40:17,  1.37it/s] 37%|███▋      | 4779/13025 [1:21:30<2:01:30,  1.13it/s] 37%|███▋      | 4781/13025 [1:21:32<1:57:54,  1.17it/s] 37%|███▋      | 4782/13025 [1:21:33<2:19:19,  1.01s/it] 37%|███▋      | 4784/13025 [1:21:35<2:09:15,  1.06it/s] 37%|███▋      | 4786/13025 [1:21:37<2:03:49,  1.11it/s] 37%|███▋      | 4787/13025 [1:21:38<2:22:32,  1.04s/it] 37%|███▋      | 4789/13025 [1:21:40<2:11:01,  1.05it/s] 37%|███▋      | 4790/13025 [1:21:41<2:29:14,  1.09s/it] 37%|███▋      | 4791/13025 [1:21:43<2:45:16,  1.20s/it] 37%|███▋      | 4793/13025 [1:21:45<2:25:05,  1.06s/it] 37%|███▋      | 4794/13025 [1:21:46<2:42:51,  1.19s/it] 37%|███▋      | 4796/13025 [1:21:48<2:24:20,  1.05s/it] 37%|███▋      | 4797/13025 [1:21:50<2:36:10,  1.14s/it] 37%|███▋      | 4798/13025 [1:21:51<2:45:08,  1.20s/it] 37%|███▋      | 4799/13025 [1:21:53<2:59:24,  1.31s/it] 37%|███▋      | 4800/13025 [1:21:54<3:12:04,  1.40s/it] 37%|███▋      | 4801/13025 [1:21:56<3:21:29,  1.47s/it] 37%|███▋      | 4802/13025 [1:21:58<3:28:59,  1.52s/it] 37%|███▋      | 4804/13025 [1:21:59<2:46:36,  1.22s/it] 37%|███▋      | 4805/13025 [1:22:01<2:57:49,  1.30s/it] 37%|███▋      | 4807/13025 [1:22:02<2:31:26,  1.11s/it] 37%|███▋      | 4809/13025 [1:22:04<2:18:25,  1.01s/it] 37%|███▋      | 4810/13025 [1:22:06<2:34:31,  1.13s/it] 37%|███▋      | 4811/13025 [1:22:07<2:46:19,  1.21s/it] 37%|███▋      | 4812/13025 [1:22:09<3:09:18,  1.38s/it] 37%|███▋      | 4815/13025 [1:22:11<2:24:37,  1.06s/it] 37%|███▋      | 4816/13025 [1:22:13<2:54:16,  1.27s/it] 37%|███▋      | 4819/13025 [1:22:16<2:21:40,  1.04s/it] 37%|███▋      | 4820/13025 [1:22:18<2:39:31,  1.17s/it] 37%|███▋      | 4821/13025 [1:22:19<2:51:02,  1.25s/it] 37%|███▋      | 4822/13025 [1:22:21<3:03:12,  1.34s/it] 37%|███▋      | 4823/13025 [1:22:22<3:13:50,  1.42s/it] 37%|███▋      | 4824/13025 [1:22:24<3:20:20,  1.47s/it] 37%|███▋      | 4825/13025 [1:22:26<3:27:37,  1.52s/it] 37%|███▋      | 4827/13025 [1:22:27<2:46:20,  1.22s/it] 37%|███▋      | 4828/13025 [1:22:29<2:59:05,  1.31s/it] 37%|███▋      | 4836/13025 [1:22:30<1:07:22,  2.03it/s] 37%|███▋      | 4838/13025 [1:22:32<1:16:58,  1.77it/s] 37%|███▋      | 4840/13025 [1:22:34<1:23:59,  1.62it/s] 37%|███▋      | 4841/13025 [1:22:35<1:41:28,  1.34it/s] 37%|███▋      | 4842/13025 [1:22:37<1:59:13,  1.14it/s] 37%|███▋      | 4843/13025 [1:22:38<2:18:15,  1.01s/it] 37%|███▋      | 4847/13025 [1:22:40<1:34:41,  1.44it/s] 37%|███▋      | 4849/13025 [1:22:42<1:39:32,  1.37it/s] 37%|███▋      | 4850/13025 [1:22:43<2:00:05,  1.13it/s] 37%|███▋      | 4854/13025 [1:22:45<1:28:37,  1.54it/s] 37%|███▋      | 4855/13025 [1:22:47<1:48:45,  1.25it/s] 37%|███▋      | 4856/13025 [1:22:48<2:07:42,  1.07it/s] 37%|███▋      | 4857/13025 [1:22:50<2:26:05,  1.07s/it] 37%|███▋      | 4860/13025 [1:22:51<1:54:09,  1.19it/s] 37%|███▋      | 4865/13025 [1:22:53<1:18:13,  1.74it/s] 37%|███▋      | 4866/13025 [1:22:55<1:33:15,  1.46it/s] 37%|███▋      | 4867/13025 [1:22:56<1:48:50,  1.25it/s] 37%|███▋      | 4868/13025 [1:22:58<2:09:54,  1.05it/s] 37%|███▋      | 4869/13025 [1:22:59<2:26:55,  1.08s/it] 37%|███▋      | 4871/13025 [1:23:01<2:10:33,  1.04it/s] 37%|███▋      | 4872/13025 [1:23:02<2:30:13,  1.11s/it] 37%|███▋      | 4874/13025 [1:23:04<2:14:36,  1.01it/s] 37%|███▋      | 4875/13025 [1:23:06<2:33:08,  1.13s/it] 37%|███▋      | 4878/13025 [1:23:07<1:56:06,  1.17it/s] 37%|███▋      | 4882/13025 [1:23:09<1:31:01,  1.49it/s] 37%|███▋      | 4884/13025 [1:23:11<1:47:29,  1.26it/s] 38%|███▊      | 4886/13025 [1:23:14<1:59:59,  1.13it/s] 38%|███▊      | 4887/13025 [1:23:16<2:30:34,  1.11s/it] 38%|███▊      | 4888/13025 [1:23:18<2:49:00,  1.25s/it] 38%|███▊      | 4890/13025 [1:23:20<2:29:27,  1.10s/it] 38%|███▊      | 4893/13025 [1:23:21<1:58:35,  1.14it/s] 38%|███▊      | 4894/13025 [1:23:23<2:14:37,  1.01it/s] 38%|███▊      | 4895/13025 [1:23:24<2:32:02,  1.12s/it] 38%|███▊      | 4896/13025 [1:23:26<2:46:39,  1.23s/it] 38%|███▊      | 4897/13025 [1:23:28<3:00:19,  1.33s/it] 38%|███▊      | 4898/13025 [1:23:29<3:08:18,  1.39s/it] 38%|███▊      | 4900/13025 [1:23:31<2:33:29,  1.13s/it] 38%|███▊      | 4901/13025 [1:23:32<2:45:24,  1.22s/it] 38%|███▊      | 4902/13025 [1:23:34<2:55:14,  1.29s/it] 38%|███▊      | 4903/13025 [1:23:36<3:08:43,  1.39s/it] 38%|███▊      | 4905/13025 [1:23:37<2:35:36,  1.15s/it] 38%|███▊      | 4906/13025 [1:23:39<2:50:11,  1.26s/it] 38%|███▊      | 4911/13025 [1:23:40<1:27:51,  1.54it/s] 38%|███▊      | 4914/13025 [1:23:42<1:20:13,  1.69it/s] 38%|███▊      | 4915/13025 [1:23:43<1:37:04,  1.39it/s] 38%|███▊      | 4917/13025 [1:23:45<1:41:37,  1.33it/s] 38%|███▊      | 4919/13025 [1:23:46<1:43:36,  1.30it/s] 38%|███▊      | 4920/13025 [1:23:48<2:04:10,  1.09it/s] 38%|███▊      | 4921/13025 [1:23:50<2:22:40,  1.06s/it] 38%|███▊      | 4924/13025 [1:23:51<1:48:42,  1.24it/s] 38%|███▊      | 4926/13025 [1:23:53<1:49:35,  1.23it/s] 38%|███▊      | 4932/13025 [1:23:54<1:07:31,  2.00it/s] 38%|███▊      | 4934/13025 [1:23:56<1:16:17,  1.77it/s] 38%|███▊      | 4935/13025 [1:23:58<1:35:48,  1.41it/s] 38%|███▊      | 4936/13025 [1:23:59<1:54:47,  1.17it/s] 38%|███▊      | 4938/13025 [1:24:01<1:54:00,  1.18it/s] 38%|███▊      | 4939/13025 [1:24:03<2:13:49,  1.01it/s] 38%|███▊      | 4940/13025 [1:24:04<2:32:03,  1.13s/it] 38%|███▊      | 4941/13025 [1:24:06<2:45:46,  1.23s/it] 38%|███▊      | 4943/13025 [1:24:07<2:19:48,  1.04s/it] 38%|███▊      | 4944/13025 [1:24:09<2:45:05,  1.23s/it] 38%|███▊      | 4946/13025 [1:24:12<2:40:04,  1.19s/it] 38%|███▊      | 4949/13025 [1:24:14<2:12:42,  1.01it/s] 38%|███▊      | 4951/13025 [1:24:16<2:20:07,  1.04s/it] 38%|███▊      | 4952/13025 [1:24:18<2:35:56,  1.16s/it] 38%|███▊      | 4953/13025 [1:24:19<2:48:01,  1.25s/it] 38%|███▊      | 4956/13025 [1:24:21<2:03:39,  1.09it/s] 38%|███▊      | 4957/13025 [1:24:23<2:22:45,  1.06s/it] 38%|███▊      | 4958/13025 [1:24:24<2:39:29,  1.19s/it] 38%|███▊      | 4960/13025 [1:24:26<2:19:19,  1.04s/it] 38%|███▊      | 4961/13025 [1:24:28<2:34:11,  1.15s/it] 38%|███▊      | 4962/13025 [1:24:29<2:46:35,  1.24s/it] 38%|███▊      | 4963/13025 [1:24:31<2:59:08,  1.33s/it] 38%|███▊      | 4966/13025 [1:24:32<2:05:01,  1.07it/s] 38%|███▊      | 4967/13025 [1:24:34<2:22:39,  1.06s/it] 38%|███▊      | 4968/13025 [1:24:36<2:38:37,  1.18s/it] 38%|███▊      | 4969/13025 [1:24:37<2:54:28,  1.30s/it] 38%|███▊      | 4974/13025 [1:24:39<1:32:14,  1.45it/s] 38%|███▊      | 4977/13025 [1:24:40<1:25:06,  1.58it/s] 38%|███▊      | 4978/13025 [1:24:42<1:42:00,  1.31it/s] 38%|███▊      | 4979/13025 [1:24:44<1:59:17,  1.12it/s] 38%|███▊      | 4980/13025 [1:24:45<2:19:25,  1.04s/it] 38%|███▊      | 4981/13025 [1:24:47<2:36:24,  1.17s/it] 38%|███▊      | 4982/13025 [1:24:48<2:50:39,  1.27s/it] 38%|███▊      | 4983/13025 [1:24:50<3:02:23,  1.36s/it] 38%|███▊      | 4985/13025 [1:24:52<2:30:07,  1.12s/it] 38%|███▊      | 4986/13025 [1:24:53<2:45:23,  1.23s/it] 38%|███▊      | 4988/13025 [1:24:55<2:24:26,  1.08s/it] 38%|███▊      | 4990/13025 [1:24:57<2:11:20,  1.02it/s] 38%|███▊      | 4991/13025 [1:24:58<2:28:56,  1.11s/it] 38%|███▊      | 4992/13025 [1:25:00<2:43:59,  1.22s/it] 38%|███▊      | 4994/13025 [1:25:01<2:22:01,  1.06s/it] 38%|███▊      | 4996/13025 [1:25:03<2:08:36,  1.04it/s] 38%|███▊      | 4997/13025 [1:25:05<2:24:57,  1.08s/it] 38%|███▊      | 4999/13025 [1:25:06<2:11:00,  1.02it/s] 38%|███▊      | 5000/13025 [1:25:08<2:27:59,  1.11s/it] 38%|███▊      | 5001/13025 [1:25:10<2:56:25,  1.32s/it] 38%|███▊      | 5002/13025 [1:25:12<3:27:40,  1.55s/it] 38%|███▊      | 5004/13025 [1:25:14<3:00:54,  1.35s/it] 38%|███▊      | 5005/13025 [1:25:16<3:26:26,  1.54s/it] 38%|███▊      | 5007/13025 [1:25:18<2:49:12,  1.27s/it] 38%|███▊      | 5008/13025 [1:25:20<2:58:01,  1.33s/it] 38%|███▊      | 5009/13025 [1:25:21<3:05:13,  1.39s/it] 38%|███▊      | 5010/13025 [1:25:23<3:13:01,  1.44s/it] 38%|███▊      | 5011/13025 [1:25:24<3:18:26,  1.49s/it] 38%|███▊      | 5013/13025 [1:25:26<2:41:34,  1.21s/it] 39%|███▊      | 5015/13025 [1:25:28<2:17:25,  1.03s/it] 39%|███▊      | 5016/13025 [1:25:29<2:35:59,  1.17s/it] 39%|███▊      | 5018/13025 [1:25:31<2:16:41,  1.02s/it] 39%|███▊      | 5019/13025 [1:25:32<2:33:55,  1.15s/it] 39%|███▊      | 5021/13025 [1:25:34<2:15:15,  1.01s/it] 39%|███▊      | 5022/13025 [1:25:36<2:31:15,  1.13s/it] 39%|███▊      | 5024/13025 [1:25:37<2:14:36,  1.01s/it] 39%|███▊      | 5026/13025 [1:25:39<2:03:09,  1.08it/s] 39%|███▊      | 5027/13025 [1:25:40<2:22:09,  1.07s/it] 39%|███▊      | 5028/13025 [1:25:42<2:37:46,  1.18s/it] 39%|███▊      | 5029/13025 [1:25:43<2:45:27,  1.24s/it] 39%|███▊      | 5030/13025 [1:25:45<2:51:14,  1.29s/it] 39%|███▊      | 5031/13025 [1:25:46<3:02:46,  1.37s/it] 39%|███▊      | 5032/13025 [1:25:48<3:11:40,  1.44s/it] 39%|███▊      | 5033/13025 [1:25:50<3:16:26,  1.47s/it] 39%|███▊      | 5034/13025 [1:25:51<3:21:53,  1.52s/it] 39%|███▊      | 5037/13025 [1:25:53<2:09:59,  1.02it/s] 39%|███▊      | 5038/13025 [1:25:54<2:28:30,  1.12s/it] 39%|███▊      | 5039/13025 [1:25:56<2:42:36,  1.22s/it] 39%|███▊      | 5040/13025 [1:25:58<2:52:12,  1.29s/it] 39%|███▊      | 5043/13025 [1:25:59<2:01:31,  1.09it/s] 39%|███▊      | 5046/13025 [1:26:01<1:39:35,  1.34it/s] 39%|███▉      | 5048/13025 [1:26:02<1:41:41,  1.31it/s] 39%|███▉      | 5049/13025 [1:26:04<2:00:59,  1.10it/s] 39%|███▉      | 5050/13025 [1:26:06<2:19:14,  1.05s/it] 39%|███▉      | 5052/13025 [1:26:07<2:08:39,  1.03it/s] 39%|███▉      | 5053/13025 [1:26:09<2:38:44,  1.19s/it] 39%|███▉      | 5054/13025 [1:26:12<3:11:13,  1.44s/it] 39%|███▉      | 5055/13025 [1:26:14<3:38:01,  1.64s/it] 39%|███▉      | 5060/13025 [1:26:16<1:56:31,  1.14it/s] 39%|███▉      | 5061/13025 [1:26:18<2:11:28,  1.01it/s] 39%|███▉      | 5062/13025 [1:26:19<2:25:05,  1.09s/it] 39%|███▉      | 5063/13025 [1:26:21<2:37:42,  1.19s/it] 39%|███▉      | 5064/13025 [1:26:22<2:51:33,  1.29s/it] 39%|███▉      | 5070/13025 [1:26:24<1:22:58,  1.60it/s] 39%|███▉      | 5072/13025 [1:26:26<1:30:31,  1.46it/s] 39%|███▉      | 5073/13025 [1:26:27<1:47:49,  1.23it/s] 39%|███▉      | 5074/13025 [1:26:29<2:03:33,  1.07it/s] 39%|███▉      | 5075/13025 [1:26:30<2:18:49,  1.05s/it] 39%|███▉      | 5076/13025 [1:26:32<2:35:10,  1.17s/it] 39%|███▉      | 5077/13025 [1:26:34<2:47:33,  1.26s/it] 39%|███▉      | 5078/13025 [1:26:35<2:57:13,  1.34s/it] 39%|███▉      | 5079/13025 [1:26:37<3:04:45,  1.40s/it] 39%|███▉      | 5081/13025 [1:26:38<2:30:54,  1.14s/it] 39%|███▉      | 5082/13025 [1:26:40<2:47:03,  1.26s/it] 39%|███▉      | 5084/13025 [1:26:42<2:21:07,  1.07s/it] 39%|███▉      | 5085/13025 [1:26:43<2:34:08,  1.16s/it] 39%|███▉      | 5086/13025 [1:26:45<2:43:40,  1.24s/it] 39%|███▉      | 5087/13025 [1:26:46<2:56:15,  1.33s/it] 39%|███▉      | 5088/13025 [1:26:48<3:04:21,  1.39s/it] 39%|███▉      | 5089/13025 [1:26:49<3:09:01,  1.43s/it] 39%|███▉      | 5090/13025 [1:26:51<3:17:15,  1.49s/it] 39%|███▉      | 5091/13025 [1:26:52<3:21:39,  1.52s/it] 39%|███▉      | 5093/13025 [1:26:54<2:37:24,  1.19s/it] 39%|███▉      | 5094/13025 [1:26:56<2:51:50,  1.30s/it] 39%|███▉      | 5095/13025 [1:26:57<3:01:18,  1.37s/it] 39%|███▉      | 5097/13025 [1:26:59<2:29:19,  1.13s/it] 39%|███▉      | 5098/13025 [1:27:00<2:43:59,  1.24s/it] 39%|███▉      | 5099/13025 [1:27:02<2:56:07,  1.33s/it] 39%|███▉      | 5100/13025 [1:27:04<3:09:01,  1.43s/it] 39%|███▉      | 5101/13025 [1:27:05<3:12:10,  1.46s/it] 39%|███▉      | 5103/13025 [1:27:07<2:34:28,  1.17s/it] 39%|███▉      | 5105/13025 [1:27:09<2:15:51,  1.03s/it] 39%|███▉      | 5108/13025 [1:27:11<2:01:09,  1.09it/s] 39%|███▉      | 5109/13025 [1:27:13<2:33:32,  1.16s/it] 39%|███▉      | 5110/13025 [1:27:16<3:04:19,  1.40s/it] 39%|███▉      | 5113/13025 [1:27:17<2:16:12,  1.03s/it] 39%|███▉      | 5116/13025 [1:27:19<1:50:07,  1.20it/s] 39%|███▉      | 5118/13025 [1:27:21<1:49:17,  1.21it/s] 39%|███▉      | 5121/13025 [1:27:22<1:34:49,  1.39it/s] 39%|███▉      | 5122/13025 [1:27:24<1:52:26,  1.17it/s] 39%|███▉      | 5123/13025 [1:27:25<2:07:39,  1.03it/s] 39%|███▉      | 5125/13025 [1:27:27<2:03:25,  1.07it/s] 39%|███▉      | 5126/13025 [1:27:29<2:20:57,  1.07s/it] 39%|███▉      | 5127/13025 [1:27:30<2:39:06,  1.21s/it] 39%|███▉      | 5128/13025 [1:27:32<2:51:49,  1.31s/it] 39%|███▉      | 5129/13025 [1:27:34<2:58:20,  1.36s/it] 39%|███▉      | 5130/13025 [1:27:35<3:09:09,  1.44s/it] 39%|███▉      | 5132/13025 [1:27:37<2:33:25,  1.17s/it] 39%|███▉      | 5134/13025 [1:27:38<2:15:23,  1.03s/it] 39%|███▉      | 5136/13025 [1:27:40<2:04:41,  1.05it/s] 39%|███▉      | 5137/13025 [1:27:42<2:22:11,  1.08s/it] 39%|███▉      | 5141/13025 [1:27:43<1:34:48,  1.39it/s] 39%|███▉      | 5142/13025 [1:27:45<1:54:28,  1.15it/s] 39%|███▉      | 5143/13025 [1:27:47<2:13:43,  1.02s/it] 39%|███▉      | 5144/13025 [1:27:48<2:32:30,  1.16s/it] 40%|███▉      | 5145/13025 [1:27:50<2:46:03,  1.26s/it] 40%|███▉      | 5148/13025 [1:27:52<1:59:47,  1.10it/s] 40%|███▉      | 5149/13025 [1:27:53<2:17:23,  1.05s/it] 40%|███▉      | 5154/13025 [1:27:55<1:23:11,  1.58it/s] 40%|███▉      | 5155/13025 [1:27:57<1:43:23,  1.27it/s] 40%|███▉      | 5159/13025 [1:27:58<1:21:48,  1.60it/s] 40%|███▉      | 5160/13025 [1:28:00<1:39:34,  1.32it/s] 40%|███▉      | 5161/13025 [1:28:01<1:58:46,  1.10it/s] 40%|███▉      | 5162/13025 [1:28:03<2:16:02,  1.04s/it] 40%|███▉      | 5167/13025 [1:28:05<1:21:52,  1.60it/s] 40%|███▉      | 5168/13025 [1:28:06<1:40:21,  1.30it/s] 40%|███▉      | 5171/13025 [1:28:08<1:28:17,  1.48it/s] 40%|███▉      | 5173/13025 [1:28:10<1:34:56,  1.38it/s] 40%|███▉      | 5176/13025 [1:28:12<1:37:32,  1.34it/s] 40%|███▉      | 5178/13025 [1:28:14<1:49:59,  1.19it/s] 40%|███▉      | 5179/13025 [1:28:16<2:18:01,  1.06s/it] 40%|███▉      | 5181/13025 [1:28:18<2:10:57,  1.00s/it] 40%|███▉      | 5183/13025 [1:28:20<2:04:01,  1.05it/s] 40%|███▉      | 5185/13025 [1:28:21<1:58:31,  1.10it/s] 40%|███▉      | 5187/13025 [1:28:23<1:56:15,  1.12it/s] 40%|███▉      | 5188/13025 [1:28:25<2:15:07,  1.03s/it] 40%|███▉      | 5190/13025 [1:28:26<2:05:02,  1.04it/s] 40%|███▉      | 5192/13025 [1:28:28<1:59:29,  1.09it/s] 40%|███▉      | 5195/13025 [1:28:30<1:40:11,  1.30it/s] 40%|███▉      | 5197/13025 [1:28:31<1:41:33,  1.28it/s] 40%|███▉      | 5198/13025 [1:28:33<1:59:44,  1.09it/s] 40%|███▉      | 5200/13025 [1:28:35<1:52:46,  1.16it/s] 40%|███▉      | 5201/13025 [1:28:36<2:11:04,  1.01s/it] 40%|███▉      | 5202/13025 [1:28:38<2:27:42,  1.13s/it] 40%|███▉      | 5206/13025 [1:28:39<1:37:28,  1.34it/s] 40%|███▉      | 5208/13025 [1:28:41<1:39:25,  1.31it/s] 40%|████      | 5211/13025 [1:28:43<1:28:40,  1.47it/s] 40%|████      | 5213/13025 [1:28:44<1:34:35,  1.38it/s] 40%|████      | 5217/13025 [1:28:46<1:17:17,  1.68it/s] 40%|████      | 5218/13025 [1:28:48<1:35:58,  1.36it/s] 40%|████      | 5219/13025 [1:28:49<1:54:28,  1.14it/s] 40%|████      | 5221/13025 [1:28:51<1:53:22,  1.15it/s] 40%|████      | 5223/13025 [1:28:53<1:49:16,  1.19it/s] 40%|████      | 5226/13025 [1:28:54<1:30:36,  1.43it/s] 40%|████      | 5227/13025 [1:28:56<1:51:41,  1.16it/s] 40%|████      | 5228/13025 [1:28:57<2:09:34,  1.00it/s] 40%|████      | 5229/13025 [1:28:59<2:27:11,  1.13s/it] 40%|████      | 5232/13025 [1:29:01<1:51:50,  1.16it/s] 40%|████      | 5233/13025 [1:29:02<2:10:51,  1.01s/it] 40%|████      | 5234/13025 [1:29:04<2:28:35,  1.14s/it] 40%|████      | 5235/13025 [1:29:06<2:42:14,  1.25s/it] 40%|████      | 5238/13025 [1:29:07<1:57:39,  1.10it/s] 40%|████      | 5239/13025 [1:29:09<2:23:12,  1.10s/it] 40%|████      | 5240/13025 [1:29:12<2:55:20,  1.35s/it] 40%|████      | 5241/13025 [1:29:14<3:22:22,  1.56s/it] 40%|████      | 5243/13025 [1:29:16<3:01:13,  1.40s/it] 40%|████      | 5245/13025 [1:29:18<2:35:41,  1.20s/it] 40%|████      | 5249/13025 [1:29:19<1:43:19,  1.25it/s] 40%|████      | 5253/13025 [1:29:21<1:21:12,  1.60it/s] 40%|████      | 5254/13025 [1:29:23<1:38:05,  1.32it/s] 40%|████      | 5255/13025 [1:29:24<1:56:48,  1.11it/s] 40%|████      | 5256/13025 [1:29:26<2:15:00,  1.04s/it] 40%|████      | 5257/13025 [1:29:28<2:31:33,  1.17s/it] 40%|████      | 5258/13025 [1:29:29<2:42:33,  1.26s/it] 40%|████      | 5260/13025 [1:29:31<2:22:00,  1.10s/it] 40%|████      | 5261/13025 [1:29:33<2:38:06,  1.22s/it] 40%|████      | 5262/13025 [1:29:34<2:52:11,  1.33s/it] 40%|████      | 5263/13025 [1:29:36<3:00:18,  1.39s/it] 40%|████      | 5266/13025 [1:29:37<2:01:39,  1.06it/s] 40%|████      | 5267/13025 [1:29:39<2:20:25,  1.09s/it] 40%|████      | 5268/13025 [1:29:41<2:38:20,  1.22s/it] 40%|████      | 5269/13025 [1:29:42<2:50:29,  1.32s/it] 40%|████      | 5271/13025 [1:29:44<2:24:06,  1.12s/it] 40%|████      | 5272/13025 [1:29:46<2:40:50,  1.24s/it] 40%|████      | 5273/13025 [1:29:47<2:49:28,  1.31s/it] 40%|████      | 5274/13025 [1:29:49<2:59:28,  1.39s/it] 40%|████      | 5275/13025 [1:29:50<3:07:10,  1.45s/it] 41%|████      | 5277/13025 [1:29:52<2:29:38,  1.16s/it] 41%|████      | 5278/13025 [1:29:54<2:43:37,  1.27s/it] 41%|████      | 5281/13025 [1:29:55<1:55:28,  1.12it/s] 41%|████      | 5282/13025 [1:29:57<2:10:52,  1.01s/it] 41%|████      | 5283/13025 [1:29:58<2:28:55,  1.15s/it] 41%|████      | 5284/13025 [1:30:00<2:44:02,  1.27s/it] 41%|████      | 5285/13025 [1:30:02<2:57:08,  1.37s/it] 41%|████      | 5286/13025 [1:30:03<3:05:16,  1.44s/it] 41%|████      | 5287/13025 [1:30:05<3:11:49,  1.49s/it] 41%|████      | 5288/13025 [1:30:07<3:18:20,  1.54s/it] 41%|████      | 5291/13025 [1:30:08<2:10:17,  1.01s/it] 41%|████      | 5295/13025 [1:30:11<1:39:56,  1.29it/s] 41%|████      | 5296/13025 [1:30:13<2:06:43,  1.02it/s] 41%|████      | 5297/13025 [1:30:15<2:39:50,  1.24s/it] 41%|████      | 5298/13025 [1:30:17<3:06:02,  1.44s/it] 41%|████      | 5299/13025 [1:30:19<3:13:48,  1.51s/it] 41%|████      | 5300/13025 [1:30:20<3:11:19,  1.49s/it] 41%|████      | 5301/13025 [1:30:22<3:15:58,  1.52s/it] 41%|████      | 5302/13025 [1:30:24<3:17:36,  1.54s/it] 41%|████      | 5303/13025 [1:30:25<3:22:42,  1.58s/it] 41%|████      | 5304/13025 [1:30:27<3:24:06,  1.59s/it] 41%|████      | 5305/13025 [1:30:29<3:26:27,  1.60s/it] 41%|████      | 5306/13025 [1:30:30<3:26:52,  1.61s/it] 41%|████      | 5310/13025 [1:30:32<1:50:28,  1.16it/s] 41%|████      | 5315/13025 [1:30:33<1:14:45,  1.72it/s] 41%|████      | 5316/13025 [1:30:35<1:32:42,  1.39it/s] 41%|████      | 5317/13025 [1:30:37<1:51:35,  1.15it/s] 41%|████      | 5320/13025 [1:30:38<1:32:34,  1.39it/s] 41%|████      | 5321/13025 [1:30:40<1:51:03,  1.16it/s] 41%|████      | 5322/13025 [1:30:42<2:09:57,  1.01s/it] 41%|████      | 5323/13025 [1:30:43<2:25:58,  1.14s/it] 41%|████      | 5325/13025 [1:30:45<2:09:43,  1.01s/it] 41%|████      | 5327/13025 [1:30:47<2:03:17,  1.04it/s] 41%|████      | 5330/13025 [1:30:48<1:39:28,  1.29it/s] 41%|████      | 5332/13025 [1:30:50<1:40:35,  1.27it/s] 41%|████      | 5335/13025 [1:30:51<1:28:23,  1.45it/s] 41%|████      | 5337/13025 [1:30:53<1:32:19,  1.39it/s] 41%|████      | 5338/13025 [1:30:55<1:51:06,  1.15it/s] 41%|████      | 5339/13025 [1:30:56<2:10:00,  1.01s/it] 41%|████      | 5340/13025 [1:30:58<2:26:02,  1.14s/it] 41%|████      | 5341/13025 [1:30:59<2:39:53,  1.25s/it] 41%|████      | 5342/13025 [1:31:01<2:50:23,  1.33s/it] 41%|████      | 5344/13025 [1:31:03<2:23:16,  1.12s/it] 41%|████      | 5345/13025 [1:31:04<2:38:56,  1.24s/it] 41%|████      | 5347/13025 [1:31:06<2:18:07,  1.08s/it] 41%|████      | 5352/13025 [1:31:08<1:22:20,  1.55it/s] 41%|████      | 5353/13025 [1:31:10<1:44:25,  1.22it/s] 41%|████      | 5354/13025 [1:31:12<2:16:47,  1.07s/it] 41%|████      | 5355/13025 [1:31:14<2:45:03,  1.29s/it] 41%|████      | 5356/13025 [1:31:16<3:11:25,  1.50s/it] 41%|████      | 5357/13025 [1:31:18<3:18:55,  1.56s/it] 41%|████      | 5358/13025 [1:31:20<3:18:56,  1.56s/it] 41%|████      | 5359/13025 [1:31:21<3:17:21,  1.54s/it] 41%|████      | 5362/13025 [1:31:23<2:08:52,  1.01s/it] 41%|████      | 5365/13025 [1:31:24<1:41:11,  1.26it/s] 41%|████      | 5366/13025 [1:31:26<2:01:12,  1.05it/s] 41%|████      | 5367/13025 [1:31:28<2:18:45,  1.09s/it] 41%|████      | 5368/13025 [1:31:29<2:30:32,  1.18s/it] 41%|████      | 5369/13025 [1:31:31<2:43:30,  1.28s/it] 41%|████▏     | 5374/13025 [1:31:32<1:26:59,  1.47it/s] 41%|████▏     | 5375/13025 [1:31:34<1:45:14,  1.21it/s] 41%|████▏     | 5376/13025 [1:31:36<2:02:52,  1.04it/s] 41%|████▏     | 5377/13025 [1:31:37<2:19:20,  1.09s/it] 41%|████▏     | 5378/13025 [1:31:39<2:35:19,  1.22s/it] 41%|████▏     | 5379/13025 [1:31:40<2:49:06,  1.33s/it] 41%|████▏     | 5380/13025 [1:31:42<2:56:53,  1.39s/it] 41%|████▏     | 5381/13025 [1:31:44<3:02:45,  1.43s/it] 41%|████▏     | 5382/13025 [1:31:45<3:09:01,  1.48s/it] 41%|████▏     | 5383/13025 [1:31:47<3:14:20,  1.53s/it] 41%|████▏     | 5385/13025 [1:31:48<2:33:30,  1.21s/it] 41%|████▏     | 5386/13025 [1:31:50<2:46:12,  1.31s/it] 41%|████▏     | 5388/13025 [1:31:52<2:20:01,  1.10s/it] 41%|████▏     | 5389/13025 [1:31:53<2:37:13,  1.24s/it] 41%|████▏     | 5391/13025 [1:31:55<2:18:21,  1.09s/it] 41%|████▏     | 5392/13025 [1:31:57<2:33:04,  1.20s/it] 41%|████▏     | 5393/13025 [1:31:58<2:36:15,  1.23s/it] 41%|████▏     | 5395/13025 [1:32:00<2:14:14,  1.06s/it] 41%|████▏     | 5398/13025 [1:32:01<1:45:02,  1.21it/s] 41%|████▏     | 5399/13025 [1:32:03<2:04:37,  1.02it/s] 41%|████▏     | 5400/13025 [1:32:05<2:22:14,  1.12s/it] 41%|████▏     | 5401/13025 [1:32:06<2:27:36,  1.16s/it] 41%|████▏     | 5402/13025 [1:32:07<2:32:18,  1.20s/it] 41%|████▏     | 5403/13025 [1:32:09<2:40:53,  1.27s/it] 41%|████▏     | 5404/13025 [1:32:11<3:00:29,  1.42s/it] 41%|████▏     | 5405/13025 [1:32:13<3:25:07,  1.62s/it] 42%|████▏     | 5406/13025 [1:32:15<3:36:48,  1.71s/it] 42%|████▏     | 5407/13025 [1:32:17<3:44:33,  1.77s/it] 42%|████▏     | 5412/13025 [1:32:18<1:36:17,  1.32it/s] 42%|████▏     | 5414/13025 [1:32:19<1:32:56,  1.36it/s] 42%|████▏     | 5415/13025 [1:32:21<1:45:31,  1.20it/s] 42%|████▏     | 5416/13025 [1:32:22<1:57:18,  1.08it/s] 42%|████▏     | 5417/13025 [1:32:23<2:15:56,  1.07s/it] 42%|████▏     | 5418/13025 [1:32:25<2:28:53,  1.17s/it] 42%|████▏     | 5420/13025 [1:32:27<2:08:53,  1.02s/it] 42%|████▏     | 5421/13025 [1:32:28<2:20:01,  1.10s/it] 42%|████▏     | 5422/13025 [1:32:29<2:29:18,  1.18s/it] 42%|████▏     | 5423/13025 [1:32:31<2:36:46,  1.24s/it] 42%|████▏     | 5424/13025 [1:32:32<2:52:15,  1.36s/it] 42%|████▏     | 5425/13025 [1:32:34<3:03:19,  1.45s/it] 42%|████▏     | 5426/13025 [1:32:36<3:05:31,  1.46s/it] 42%|████▏     | 5428/13025 [1:32:37<2:27:37,  1.17s/it] 42%|████▏     | 5430/13025 [1:32:39<2:09:48,  1.03s/it] 42%|████▏     | 5433/13025 [1:32:40<1:39:36,  1.27it/s] 42%|████▏     | 5434/13025 [1:32:42<1:58:06,  1.07it/s] 42%|████▏     | 5435/13025 [1:32:43<2:07:33,  1.01s/it] 42%|████▏     | 5437/13025 [1:32:45<1:58:55,  1.06it/s] 42%|████▏     | 5439/13025 [1:32:46<1:46:23,  1.19it/s] 42%|████▏     | 5442/13025 [1:32:48<1:24:46,  1.49it/s] 42%|████▏     | 5445/13025 [1:32:49<1:13:47,  1.71it/s] 42%|████▏     | 5446/13025 [1:32:50<1:28:13,  1.43it/s] 42%|████▏     | 5448/13025 [1:32:52<1:28:29,  1.43it/s] 42%|████▏     | 5449/13025 [1:32:53<1:49:48,  1.15it/s] 42%|████▏     | 5450/13025 [1:32:55<2:06:14,  1.00it/s] 42%|████▏     | 5451/13025 [1:32:56<2:17:43,  1.09s/it] 42%|████▏     | 5452/13025 [1:32:58<2:30:49,  1.19s/it] 42%|████▏     | 5453/13025 [1:32:59<2:43:55,  1.30s/it] 42%|████▏     | 5454/13025 [1:33:01<2:47:45,  1.33s/it] 42%|████▏     | 5456/13025 [1:33:02<2:19:54,  1.11s/it] 42%|████▏     | 5458/13025 [1:33:04<2:00:48,  1.04it/s] 42%|████▏     | 5459/13025 [1:33:05<2:10:53,  1.04s/it] 42%|████▏     | 5460/13025 [1:33:07<2:25:03,  1.15s/it] 42%|████▏     | 5463/13025 [1:33:08<1:42:03,  1.23it/s] 42%|████▏     | 5464/13025 [1:33:10<2:12:11,  1.05s/it] 42%|████▏     | 5465/13025 [1:33:12<2:48:14,  1.34s/it] 42%|████▏     | 5466/13025 [1:33:14<3:02:59,  1.45s/it] 42%|████▏     | 5467/13025 [1:33:16<3:23:10,  1.61s/it] 42%|████▏     | 5468/13025 [1:33:18<3:20:18,  1.59s/it] 42%|████▏     | 5471/13025 [1:33:19<2:07:49,  1.02s/it] 42%|████▏     | 5474/13025 [1:33:21<1:42:19,  1.23it/s] 42%|████▏     | 5475/13025 [1:33:22<1:53:05,  1.11it/s] 42%|████▏     | 5476/13025 [1:33:24<2:03:21,  1.02it/s] 42%|████▏     | 5477/13025 [1:33:25<2:22:10,  1.13s/it] 42%|████▏     | 5478/13025 [1:33:27<2:39:17,  1.27s/it] 42%|████▏     | 5479/13025 [1:33:28<2:40:51,  1.28s/it] 42%|████▏     | 5480/13025 [1:33:30<2:51:34,  1.36s/it] 42%|████▏     | 5481/13025 [1:33:32<2:59:37,  1.43s/it] 42%|████▏     | 5482/13025 [1:33:33<3:02:41,  1.45s/it] 42%|████▏     | 5483/13025 [1:33:35<3:10:26,  1.52s/it] 42%|████▏     | 5484/13025 [1:33:36<3:14:54,  1.55s/it] 42%|████▏     | 5485/13025 [1:33:38<3:13:13,  1.54s/it] 42%|████▏     | 5487/13025 [1:33:39<2:25:24,  1.16s/it] 42%|████▏     | 5488/13025 [1:33:41<2:36:20,  1.24s/it] 42%|████▏     | 5489/13025 [1:33:42<2:44:49,  1.31s/it] 42%|████▏     | 5490/13025 [1:33:44<2:51:24,  1.36s/it] 42%|████▏     | 5494/13025 [1:33:46<1:38:57,  1.27it/s] 42%|████▏     | 5496/13025 [1:33:47<1:34:04,  1.33it/s] 42%|████▏     | 5497/13025 [1:33:48<1:46:50,  1.17it/s] 42%|████▏     | 5498/13025 [1:33:50<2:06:20,  1.01s/it] 42%|████▏     | 5499/13025 [1:33:52<2:25:34,  1.16s/it] 42%|████▏     | 5501/13025 [1:33:53<2:03:41,  1.01it/s] 42%|████▏     | 5502/13025 [1:33:54<2:15:30,  1.08s/it] 42%|████▏     | 5503/13025 [1:33:56<2:34:36,  1.23s/it] 42%|████▏     | 5504/13025 [1:33:58<2:43:20,  1.30s/it] 42%|████▏     | 5507/13025 [1:33:59<1:53:44,  1.10it/s] 42%|████▏     | 5508/13025 [1:34:01<2:12:06,  1.05s/it] 42%|████▏     | 5511/13025 [1:34:02<1:40:16,  1.25it/s] 42%|████▏     | 5513/13025 [1:34:04<1:41:11,  1.24it/s] 42%|████▏     | 5514/13025 [1:34:05<1:52:52,  1.11it/s] 42%|████▏     | 5516/13025 [1:34:07<1:44:58,  1.19it/s] 42%|████▏     | 5517/13025 [1:34:09<2:08:41,  1.03s/it] 42%|████▏     | 5520/13025 [1:34:11<1:53:01,  1.11it/s] 42%|████▏     | 5522/13025 [1:34:13<1:58:29,  1.06it/s] 42%|████▏     | 5523/13025 [1:34:15<2:24:22,  1.15s/it] 42%|████▏     | 5527/13025 [1:34:17<1:42:17,  1.22it/s] 42%|████▏     | 5529/13025 [1:34:19<1:42:28,  1.22it/s] 42%|████▏     | 5531/13025 [1:34:20<1:42:13,  1.22it/s] 42%|████▏     | 5533/13025 [1:34:22<1:40:20,  1.24it/s] 42%|████▏     | 5534/13025 [1:34:24<1:58:50,  1.05it/s] 43%|████▎     | 5536/13025 [1:34:25<1:55:13,  1.08it/s] 43%|████▎     | 5538/13025 [1:34:27<1:51:38,  1.12it/s] 43%|████▎     | 5539/13025 [1:34:28<2:03:45,  1.01it/s] 43%|████▎     | 5540/13025 [1:34:30<2:13:04,  1.07s/it] 43%|████▎     | 5541/13025 [1:34:31<2:31:32,  1.21s/it] 43%|████▎     | 5543/13025 [1:34:33<2:09:20,  1.04s/it] 43%|████▎     | 5544/13025 [1:34:34<2:23:59,  1.15s/it] 43%|████▎     | 5546/13025 [1:34:36<2:07:35,  1.02s/it] 43%|████▎     | 5549/13025 [1:34:38<1:41:33,  1.23it/s] 43%|████▎     | 5550/13025 [1:34:39<1:56:01,  1.07it/s] 43%|████▎     | 5551/13025 [1:34:41<2:10:56,  1.05s/it] 43%|████▎     | 5552/13025 [1:34:42<2:25:33,  1.17s/it] 43%|████▎     | 5553/13025 [1:34:44<2:35:48,  1.25s/it] 43%|████▎     | 5554/13025 [1:34:46<2:47:31,  1.35s/it] 43%|████▎     | 5556/13025 [1:34:47<2:17:57,  1.11s/it] 43%|████▎     | 5557/13025 [1:34:49<2:26:57,  1.18s/it] 43%|████▎     | 5558/13025 [1:34:50<2:41:26,  1.30s/it] 43%|████▎     | 5561/13025 [1:34:52<1:52:51,  1.10it/s] 43%|████▎     | 5564/13025 [1:34:53<1:34:35,  1.31it/s] 43%|████▎     | 5565/13025 [1:34:55<1:53:12,  1.10it/s] 43%|████▎     | 5566/13025 [1:34:57<2:11:03,  1.05s/it] 43%|████▎     | 5567/13025 [1:34:58<2:23:12,  1.15s/it] 43%|████▎     | 5569/13025 [1:35:00<2:07:30,  1.03s/it] 43%|████▎     | 5571/13025 [1:35:01<1:55:52,  1.07it/s] 43%|████▎     | 5573/13025 [1:35:03<1:50:26,  1.12it/s] 43%|████▎     | 5574/13025 [1:35:05<2:08:26,  1.03s/it] 43%|████▎     | 5575/13025 [1:35:06<2:15:57,  1.09s/it] 43%|████▎     | 5576/13025 [1:35:08<2:33:35,  1.24s/it] 43%|████▎     | 5578/13025 [1:35:10<2:18:45,  1.12s/it] 43%|████▎     | 5580/13025 [1:35:12<2:13:12,  1.07s/it] 43%|████▎     | 5581/13025 [1:35:14<2:42:16,  1.31s/it] 43%|████▎     | 5582/13025 [1:35:16<3:09:06,  1.52s/it] 43%|████▎     | 5583/13025 [1:35:18<3:11:34,  1.54s/it] 43%|████▎     | 5584/13025 [1:35:19<3:10:43,  1.54s/it] 43%|████▎     | 5587/13025 [1:35:21<2:06:32,  1.02s/it] 43%|████▎     | 5589/13025 [1:35:22<1:58:16,  1.05it/s] 43%|████▎     | 5590/13025 [1:35:24<2:15:06,  1.09s/it] 43%|████▎     | 5591/13025 [1:35:26<2:28:01,  1.19s/it] 43%|████▎     | 5593/13025 [1:35:27<2:07:15,  1.03s/it] 43%|████▎     | 5594/13025 [1:35:29<2:21:22,  1.14s/it] 43%|████▎     | 5595/13025 [1:35:30<2:26:23,  1.18s/it] 43%|████▎     | 5596/13025 [1:35:32<2:42:41,  1.31s/it] 43%|████▎     | 5597/13025 [1:35:33<2:53:33,  1.40s/it] 43%|████▎     | 5600/13025 [1:35:35<1:51:20,  1.11it/s] 43%|████▎     | 5601/13025 [1:35:36<2:08:42,  1.04s/it] 43%|████▎     | 5603/13025 [1:35:38<1:58:40,  1.04it/s] 43%|████▎     | 5605/13025 [1:35:40<1:49:18,  1.13it/s] 43%|████▎     | 5606/13025 [1:35:41<2:06:49,  1.03s/it] 43%|████▎     | 5607/13025 [1:35:43<2:19:57,  1.13s/it] 43%|████▎     | 5611/13025 [1:35:44<1:29:32,  1.38it/s] 43%|████▎     | 5613/13025 [1:35:46<1:31:18,  1.35it/s] 43%|████▎     | 5614/13025 [1:35:47<1:45:29,  1.17it/s] 43%|████▎     | 5615/13025 [1:35:49<2:03:20,  1.00it/s] 43%|████▎     | 5616/13025 [1:35:50<2:11:37,  1.07s/it] 43%|████▎     | 5617/13025 [1:35:52<2:28:32,  1.20s/it] 43%|████▎     | 5618/13025 [1:35:53<2:31:58,  1.23s/it] 43%|████▎     | 5619/13025 [1:35:55<2:46:22,  1.35s/it] 43%|████▎     | 5620/13025 [1:35:56<2:55:06,  1.42s/it] 43%|████▎     | 5621/13025 [1:35:58<3:03:16,  1.49s/it] 43%|████▎     | 5626/13025 [1:36:00<1:28:07,  1.40it/s] 43%|████▎     | 5627/13025 [1:36:01<1:45:21,  1.17it/s] 43%|████▎     | 5628/13025 [1:36:03<2:03:40,  1.00s/it] 43%|████▎     | 5629/13025 [1:36:05<2:20:14,  1.14s/it] 43%|████▎     | 5630/13025 [1:36:06<2:33:12,  1.24s/it] 43%|████▎     | 5631/13025 [1:36:08<2:36:34,  1.27s/it] 43%|████▎     | 5632/13025 [1:36:10<3:07:26,  1.52s/it] 43%|████▎     | 5633/13025 [1:36:12<3:22:57,  1.65s/it] 43%|████▎     | 5634/13025 [1:36:14<3:42:48,  1.81s/it] 43%|████▎     | 5635/13025 [1:36:16<3:57:12,  1.93s/it] 43%|████▎     | 5637/13025 [1:36:18<2:55:20,  1.42s/it] 43%|████▎     | 5638/13025 [1:36:19<2:57:53,  1.44s/it] 43%|████▎     | 5640/13025 [1:36:21<2:24:02,  1.17s/it] 43%|████▎     | 5641/13025 [1:36:22<2:30:40,  1.22s/it] 43%|████▎     | 5645/13025 [1:36:24<1:34:04,  1.31it/s] 43%|████▎     | 5646/13025 [1:36:26<1:52:15,  1.10it/s] 43%|████▎     | 5647/13025 [1:36:27<2:07:25,  1.04s/it] 43%|████▎     | 5648/13025 [1:36:29<2:22:31,  1.16s/it] 43%|████▎     | 5649/13025 [1:36:30<2:29:46,  1.22s/it] 43%|████▎     | 5651/13025 [1:36:32<2:04:23,  1.01s/it] 43%|████▎     | 5652/13025 [1:36:33<2:20:46,  1.15s/it] 43%|████▎     | 5653/13025 [1:36:35<2:35:41,  1.27s/it] 43%|████▎     | 5654/13025 [1:36:36<2:47:53,  1.37s/it] 43%|████▎     | 5655/13025 [1:36:38<2:58:28,  1.45s/it] 43%|████▎     | 5656/13025 [1:36:40<3:08:00,  1.53s/it] 43%|████▎     | 5657/13025 [1:36:42<3:12:38,  1.57s/it] 43%|████▎     | 5658/13025 [1:36:43<3:13:36,  1.58s/it] 43%|████▎     | 5659/13025 [1:36:45<3:16:31,  1.60s/it] 43%|████▎     | 5661/13025 [1:36:46<2:23:46,  1.17s/it] 43%|████▎     | 5662/13025 [1:36:48<2:36:51,  1.28s/it] 43%|████▎     | 5664/13025 [1:36:49<2:07:54,  1.04s/it] 44%|████▎     | 5666/13025 [1:36:51<1:57:59,  1.04it/s] 44%|████▎     | 5667/13025 [1:36:52<2:14:23,  1.10s/it] 44%|████▎     | 5668/13025 [1:36:54<2:28:58,  1.21s/it] 44%|████▎     | 5669/13025 [1:36:55<2:38:06,  1.29s/it] 44%|████▎     | 5670/13025 [1:36:57<2:50:16,  1.39s/it] 44%|████▎     | 5675/13025 [1:36:59<1:21:57,  1.49it/s] 44%|████▎     | 5679/13025 [1:37:00<1:07:26,  1.82it/s] 44%|████▎     | 5680/13025 [1:37:01<1:19:56,  1.53it/s] 44%|████▎     | 5682/13025 [1:37:03<1:23:25,  1.47it/s] 44%|████▎     | 5684/13025 [1:37:05<1:26:37,  1.41it/s] 44%|████▎     | 5685/13025 [1:37:06<1:39:05,  1.23it/s] 44%|████▎     | 5686/13025 [1:37:07<1:58:52,  1.03it/s] 44%|████▎     | 5687/13025 [1:37:09<2:14:24,  1.10s/it] 44%|████▎     | 5689/13025 [1:37:11<2:13:45,  1.09s/it] 44%|████▎     | 5691/13025 [1:37:13<2:06:24,  1.03s/it] 44%|████▎     | 5692/13025 [1:37:15<2:25:57,  1.19s/it] 44%|████▎     | 5695/13025 [1:37:17<1:58:51,  1.03it/s] 44%|████▍     | 5700/13025 [1:37:18<1:14:49,  1.63it/s] 44%|████▍     | 5704/13025 [1:37:20<1:03:04,  1.93it/s] 44%|████▍     | 5708/13025 [1:37:21<55:09,  2.21it/s]   44%|████▍     | 5709/13025 [1:37:23<1:11:59,  1.69it/s] 44%|████▍     | 5710/13025 [1:37:24<1:24:02,  1.45it/s] 44%|████▍     | 5713/13025 [1:37:26<1:13:47,  1.65it/s] 44%|████▍     | 5714/13025 [1:37:27<1:27:04,  1.40it/s] 44%|████▍     | 5715/13025 [1:37:28<1:39:58,  1.22it/s] 44%|████▍     | 5717/13025 [1:37:30<1:35:21,  1.28it/s] 44%|████▍     | 5719/13025 [1:37:31<1:36:28,  1.26it/s] 44%|████▍     | 5720/13025 [1:37:33<1:50:44,  1.10it/s] 44%|████▍     | 5721/13025 [1:37:34<2:01:27,  1.00it/s] 44%|████▍     | 5724/13025 [1:37:36<1:33:02,  1.31it/s] 44%|████▍     | 5726/13025 [1:37:37<1:32:44,  1.31it/s] 44%|████▍     | 5728/13025 [1:37:39<1:34:30,  1.29it/s] 44%|████▍     | 5730/13025 [1:37:40<1:36:51,  1.26it/s] 44%|████▍     | 5731/13025 [1:37:42<1:48:51,  1.12it/s] 44%|████▍     | 5732/13025 [1:37:43<2:07:06,  1.05s/it] 44%|████▍     | 5734/13025 [1:37:45<1:50:06,  1.10it/s] 44%|████▍     | 5736/13025 [1:37:46<1:42:05,  1.19it/s] 44%|████▍     | 5737/13025 [1:37:47<1:53:24,  1.07it/s] 44%|████▍     | 5738/13025 [1:37:49<2:06:11,  1.04s/it] 44%|████▍     | 5739/13025 [1:37:50<2:17:12,  1.13s/it] 44%|████▍     | 5740/13025 [1:37:52<2:23:02,  1.18s/it] 44%|████▍     | 5741/13025 [1:37:53<2:30:17,  1.24s/it] 44%|████▍     | 5742/13025 [1:37:54<2:36:02,  1.29s/it] 44%|████▍     | 5743/13025 [1:37:56<2:47:37,  1.38s/it] 44%|████▍     | 5745/13025 [1:37:57<2:09:05,  1.06s/it] 44%|████▍     | 5746/13025 [1:37:59<2:19:22,  1.15s/it] 44%|████▍     | 5748/13025 [1:38:00<1:55:07,  1.05it/s] 44%|████▍     | 5749/13025 [1:38:01<2:05:23,  1.03s/it] 44%|████▍     | 5750/13025 [1:38:03<2:16:39,  1.13s/it] 44%|████▍     | 5751/13025 [1:38:04<2:22:39,  1.18s/it] 44%|████▍     | 5753/13025 [1:38:06<1:58:34,  1.02it/s] 44%|████▍     | 5754/13025 [1:38:07<2:08:11,  1.06s/it] 44%|████▍     | 5756/13025 [1:38:09<1:55:43,  1.05it/s] 44%|████▍     | 5758/13025 [1:38:10<1:55:15,  1.05it/s] 44%|████▍     | 5759/13025 [1:38:12<2:19:14,  1.15s/it] 44%|████▍     | 5761/13025 [1:38:14<2:09:27,  1.07s/it] 44%|████▍     | 5762/13025 [1:38:16<2:37:46,  1.30s/it] 44%|████▍     | 5763/13025 [1:38:18<2:46:34,  1.38s/it] 44%|████▍     | 5764/13025 [1:38:19<2:48:04,  1.39s/it] 44%|████▍     | 5765/13025 [1:38:21<2:49:47,  1.40s/it] 44%|████▍     | 5766/13025 [1:38:22<2:50:39,  1.41s/it] 44%|████▍     | 5768/13025 [1:38:24<2:18:52,  1.15s/it] 44%|████▍     | 5769/13025 [1:38:26<2:32:11,  1.26s/it] 44%|████▍     | 5771/13025 [1:38:27<2:06:53,  1.05s/it] 44%|████▍     | 5774/13025 [1:38:28<1:34:54,  1.27it/s] 44%|████▍     | 5775/13025 [1:38:30<1:48:46,  1.11it/s] 44%|████▍     | 5776/13025 [1:38:31<2:04:02,  1.03s/it] 44%|████▍     | 5778/13025 [1:38:33<1:49:55,  1.10it/s] 44%|████▍     | 5779/13025 [1:38:34<2:07:26,  1.06s/it] 44%|████▍     | 5780/13025 [1:38:36<2:24:45,  1.20s/it] 44%|████▍     | 5781/13025 [1:38:37<2:28:36,  1.23s/it] 44%|████▍     | 5783/13025 [1:38:39<2:00:13,  1.00it/s] 44%|████▍     | 5784/13025 [1:38:40<2:14:10,  1.11s/it] 44%|████▍     | 5785/13025 [1:38:42<2:20:59,  1.17s/it] 44%|████▍     | 5787/13025 [1:38:43<2:05:58,  1.04s/it] 44%|████▍     | 5788/13025 [1:38:45<2:13:28,  1.11s/it] 44%|████▍     | 5789/13025 [1:38:46<2:19:43,  1.16s/it] 44%|████▍     | 5790/13025 [1:38:48<2:34:01,  1.28s/it] 44%|████▍     | 5792/13025 [1:38:49<2:10:48,  1.09s/it] 44%|████▍     | 5793/13025 [1:38:51<2:25:50,  1.21s/it] 44%|████▍     | 5796/13025 [1:38:52<1:40:20,  1.20it/s] 45%|████▍     | 5797/13025 [1:38:54<1:53:39,  1.06it/s] 45%|████▍     | 5798/13025 [1:38:55<2:03:28,  1.03s/it] 45%|████▍     | 5799/13025 [1:38:56<2:17:20,  1.14s/it] 45%|████▍     | 5800/13025 [1:38:58<2:32:16,  1.26s/it] 45%|████▍     | 5801/13025 [1:38:59<2:34:12,  1.28s/it] 45%|████▍     | 5802/13025 [1:39:01<2:45:24,  1.37s/it] 45%|████▍     | 5803/13025 [1:39:02<2:46:56,  1.39s/it] 45%|████▍     | 5804/13025 [1:39:04<2:58:09,  1.48s/it] 45%|████▍     | 5805/13025 [1:39:06<3:04:45,  1.54s/it] 45%|████▍     | 5806/13025 [1:39:07<2:56:59,  1.47s/it] 45%|████▍     | 5811/13025 [1:39:09<1:22:27,  1.46it/s] 45%|████▍     | 5813/13025 [1:39:11<1:38:05,  1.23it/s] 45%|████▍     | 5814/13025 [1:39:13<2:08:48,  1.07s/it] 45%|████▍     | 5815/13025 [1:39:15<2:26:51,  1.22s/it] 45%|████▍     | 5817/13025 [1:39:17<2:16:02,  1.13s/it] 45%|████▍     | 5819/13025 [1:39:19<2:01:11,  1.01s/it] 45%|████▍     | 5820/13025 [1:39:20<2:08:12,  1.07s/it] 45%|████▍     | 5822/13025 [1:39:21<1:50:50,  1.08it/s] 45%|████▍     | 5823/13025 [1:39:23<2:02:38,  1.02s/it] 45%|████▍     | 5824/13025 [1:39:24<2:13:02,  1.11s/it] 45%|████▍     | 5825/13025 [1:39:25<2:19:00,  1.16s/it] 45%|████▍     | 5826/13025 [1:39:27<2:24:01,  1.20s/it] 45%|████▍     | 5829/13025 [1:39:28<1:42:52,  1.17it/s] 45%|████▍     | 5831/13025 [1:39:30<1:37:06,  1.23it/s] 45%|████▍     | 5835/13025 [1:39:32<1:14:36,  1.61it/s] 45%|████▍     | 5837/13025 [1:39:33<1:20:56,  1.48it/s] 45%|████▍     | 5838/13025 [1:39:35<1:32:46,  1.29it/s] 45%|████▍     | 5839/13025 [1:39:36<1:48:31,  1.10it/s] 45%|████▍     | 5840/13025 [1:39:37<1:58:46,  1.01it/s] 45%|████▍     | 5841/13025 [1:39:39<2:07:25,  1.06s/it] 45%|████▍     | 5844/13025 [1:39:40<1:36:01,  1.25it/s] 45%|████▍     | 5847/13025 [1:39:42<1:18:00,  1.53it/s] 45%|████▍     | 5848/13025 [1:39:43<1:35:08,  1.26it/s] 45%|████▍     | 5849/13025 [1:39:45<1:55:10,  1.04it/s] 45%|████▍     | 5850/13025 [1:39:46<2:04:10,  1.04s/it] 45%|████▍     | 5851/13025 [1:39:48<2:14:25,  1.12s/it] 45%|████▍     | 5852/13025 [1:39:49<2:25:52,  1.22s/it] 45%|████▍     | 5854/13025 [1:39:51<2:04:53,  1.05s/it] 45%|████▍     | 5855/13025 [1:39:52<2:14:57,  1.13s/it] 45%|████▍     | 5856/13025 [1:39:53<2:20:17,  1.17s/it] 45%|████▍     | 5857/13025 [1:39:55<2:33:36,  1.29s/it] 45%|████▍     | 5858/13025 [1:39:56<2:37:46,  1.32s/it] 45%|████▍     | 5859/13025 [1:39:58<2:40:24,  1.34s/it] 45%|████▍     | 5861/13025 [1:39:59<2:04:59,  1.05s/it] 45%|████▌     | 5862/13025 [1:40:01<2:18:29,  1.16s/it] 45%|████▌     | 5865/13025 [1:40:02<1:34:40,  1.26it/s] 45%|████▌     | 5866/13025 [1:40:03<1:46:40,  1.12it/s] 45%|████▌     | 5868/13025 [1:40:05<1:38:35,  1.21it/s] 45%|████▌     | 5869/13025 [1:40:06<1:52:30,  1.06it/s] 45%|████▌     | 5870/13025 [1:40:07<2:05:18,  1.05s/it] 45%|████▌     | 5872/13025 [1:40:09<2:02:00,  1.02s/it] 45%|████▌     | 5875/13025 [1:40:11<1:39:52,  1.19it/s] 45%|████▌     | 5876/13025 [1:40:13<2:02:16,  1.03s/it] 45%|████▌     | 5878/13025 [1:40:15<2:01:28,  1.02s/it] 45%|████▌     | 5879/13025 [1:40:17<2:16:22,  1.15s/it] 45%|████▌     | 5881/13025 [1:40:18<2:01:56,  1.02s/it] 45%|████▌     | 5883/13025 [1:40:20<1:53:21,  1.05it/s] 45%|████▌     | 5885/13025 [1:40:22<1:43:46,  1.15it/s] 45%|████▌     | 5886/13025 [1:40:23<1:53:57,  1.04it/s] 45%|████▌     | 5889/13025 [1:40:24<1:26:28,  1.38it/s] 45%|████▌     | 5890/13025 [1:40:26<1:40:46,  1.18it/s] 45%|████▌     | 5891/13025 [1:40:27<1:52:16,  1.06it/s] 45%|████▌     | 5892/13025 [1:40:28<2:02:28,  1.03s/it] 45%|████▌     | 5893/13025 [1:40:30<2:14:20,  1.13s/it] 45%|████▌     | 5894/13025 [1:40:31<2:21:21,  1.19s/it] 45%|████▌     | 5895/13025 [1:40:32<2:28:43,  1.25s/it] 45%|████▌     | 5896/13025 [1:40:34<2:30:49,  1.27s/it] 45%|████▌     | 5897/13025 [1:40:35<2:35:54,  1.31s/it] 45%|████▌     | 5899/13025 [1:40:37<2:01:00,  1.02s/it] 45%|████▌     | 5900/13025 [1:40:38<2:16:24,  1.15s/it] 45%|████▌     | 5902/13025 [1:40:40<1:57:17,  1.01it/s] 45%|████▌     | 5903/13025 [1:40:41<2:06:03,  1.06s/it] 45%|████▌     | 5905/13025 [1:40:42<1:48:18,  1.10it/s] 45%|████▌     | 5906/13025 [1:40:44<1:58:42,  1.00s/it] 45%|████▌     | 5907/13025 [1:40:45<2:16:30,  1.15s/it] 45%|████▌     | 5908/13025 [1:40:47<2:26:14,  1.23s/it] 45%|████▌     | 5909/13025 [1:40:48<2:30:07,  1.27s/it] 45%|████▌     | 5911/13025 [1:40:49<1:59:10,  1.01s/it] 45%|████▌     | 5913/13025 [1:40:51<1:43:39,  1.14it/s] 45%|████▌     | 5916/13025 [1:40:52<1:20:28,  1.47it/s] 45%|████▌     | 5917/13025 [1:40:53<1:34:53,  1.25it/s] 45%|████▌     | 5919/13025 [1:40:55<1:29:24,  1.32it/s] 45%|████▌     | 5921/13025 [1:40:56<1:26:00,  1.38it/s] 45%|████▌     | 5922/13025 [1:40:58<1:44:44,  1.13it/s] 45%|████▌     | 5924/13025 [1:40:59<1:37:15,  1.22it/s] 45%|████▌     | 5925/13025 [1:41:01<1:56:37,  1.01it/s] 46%|████▌     | 5927/13025 [1:41:02<1:49:12,  1.08it/s] 46%|████▌     | 5928/13025 [1:41:04<2:08:24,  1.09s/it] 46%|████▌     | 5930/13025 [1:41:05<1:50:04,  1.07it/s] 46%|████▌     | 5931/13025 [1:41:07<2:02:31,  1.04s/it] 46%|████▌     | 5932/13025 [1:41:08<2:12:50,  1.12s/it] 46%|████▌     | 5933/13025 [1:41:10<2:34:06,  1.30s/it] 46%|████▌     | 5934/13025 [1:41:12<2:51:51,  1.45s/it] 46%|████▌     | 5935/13025 [1:41:14<3:16:19,  1.66s/it] 46%|████▌     | 5936/13025 [1:41:16<3:28:46,  1.77s/it] 46%|████▌     | 5943/13025 [1:41:18<1:16:32,  1.54it/s] 46%|████▌     | 5944/13025 [1:41:19<1:26:54,  1.36it/s] 46%|████▌     | 5945/13025 [1:41:21<1:39:44,  1.18it/s] 46%|████▌     | 5946/13025 [1:41:22<1:52:14,  1.05it/s] 46%|████▌     | 5948/13025 [1:41:23<1:41:20,  1.16it/s] 46%|████▌     | 5951/13025 [1:41:25<1:24:37,  1.39it/s] 46%|████▌     | 5953/13025 [1:41:27<1:27:23,  1.35it/s] 46%|████▌     | 5955/13025 [1:41:28<1:24:40,  1.39it/s] 46%|████▌     | 5956/13025 [1:41:30<1:44:29,  1.13it/s] 46%|████▌     | 5958/13025 [1:41:31<1:36:01,  1.23it/s] 46%|████▌     | 5959/13025 [1:41:33<1:54:26,  1.03it/s] 46%|████▌     | 5960/13025 [1:41:34<2:12:41,  1.13s/it] 46%|████▌     | 5961/13025 [1:41:36<2:25:48,  1.24s/it] 46%|████▌     | 5962/13025 [1:41:38<2:36:27,  1.33s/it] 46%|████▌     | 5963/13025 [1:41:39<2:38:51,  1.35s/it] 46%|████▌     | 5964/13025 [1:41:40<2:40:51,  1.37s/it] 46%|████▌     | 5966/13025 [1:41:42<2:12:56,  1.13s/it] 46%|████▌     | 5970/13025 [1:41:43<1:21:22,  1.44it/s] 46%|████▌     | 5971/13025 [1:41:45<1:40:03,  1.17it/s] 46%|████▌     | 5973/13025 [1:41:47<1:38:47,  1.19it/s] 46%|████▌     | 5974/13025 [1:41:48<1:51:52,  1.05it/s] 46%|████▌     | 5976/13025 [1:41:49<1:40:00,  1.17it/s] 46%|████▌     | 5977/13025 [1:41:51<1:51:05,  1.06it/s] 46%|████▌     | 5978/13025 [1:41:52<2:00:52,  1.03s/it] 46%|████▌     | 5979/13025 [1:41:54<2:15:44,  1.16s/it] 46%|████▌     | 5982/13025 [1:41:55<1:33:08,  1.26it/s] 46%|████▌     | 5983/13025 [1:41:56<1:47:27,  1.09it/s] 46%|████▌     | 5984/13025 [1:41:58<2:04:20,  1.06s/it] 46%|████▌     | 5986/13025 [1:41:59<1:46:32,  1.10it/s] 46%|████▌     | 5987/13025 [1:42:01<2:03:03,  1.05s/it] 46%|████▌     | 5988/13025 [1:42:03<2:20:55,  1.20s/it] 46%|████▌     | 5989/13025 [1:42:04<2:27:47,  1.26s/it] 46%|████▌     | 5991/13025 [1:42:05<2:00:48,  1.03s/it] 46%|████▌     | 5993/13025 [1:42:07<1:51:05,  1.06it/s] 46%|████▌     | 5996/13025 [1:42:09<1:28:18,  1.33it/s] 46%|████▌     | 5997/13025 [1:42:11<1:55:56,  1.01it/s] 46%|████▌     | 5998/13025 [1:42:13<2:16:28,  1.17s/it] 46%|████▌     | 6001/13025 [1:42:15<1:51:01,  1.05it/s] 46%|████▌     | 6003/13025 [1:42:17<1:53:42,  1.03it/s] 46%|████▌     | 6004/13025 [1:42:18<2:05:12,  1.07s/it] 46%|████▌     | 6005/13025 [1:42:20<2:11:06,  1.12s/it] 46%|████▌     | 6008/13025 [1:42:21<1:39:03,  1.18it/s] 46%|████▌     | 6009/13025 [1:42:23<1:55:20,  1.01it/s] 46%|████▌     | 6012/13025 [1:42:24<1:32:11,  1.27it/s] 46%|████▌     | 6014/13025 [1:42:26<1:28:36,  1.32it/s] 46%|████▌     | 6019/13025 [1:42:27<1:02:25,  1.87it/s] 46%|████▌     | 6021/13025 [1:42:29<1:10:03,  1.67it/s] 46%|████▌     | 6022/13025 [1:42:31<1:27:05,  1.34it/s] 46%|████▌     | 6023/13025 [1:42:32<1:44:55,  1.11it/s] 46%|████▋     | 6025/13025 [1:42:34<1:38:18,  1.19it/s] 46%|████▋     | 6026/13025 [1:42:35<1:48:29,  1.08it/s] 46%|████▋     | 6027/13025 [1:42:36<1:57:43,  1.01s/it] 46%|████▋     | 6029/13025 [1:42:38<1:48:47,  1.07it/s] 46%|████▋     | 6032/13025 [1:42:39<1:26:17,  1.35it/s] 46%|████▋     | 6033/13025 [1:42:41<1:43:53,  1.12it/s] 46%|████▋     | 6034/13025 [1:42:43<2:00:27,  1.03s/it] 46%|████▋     | 6035/13025 [1:42:44<2:17:22,  1.18s/it] 46%|████▋     | 6037/13025 [1:42:46<2:01:04,  1.04s/it] 46%|████▋     | 6038/13025 [1:42:48<2:17:40,  1.18s/it] 46%|████▋     | 6042/13025 [1:42:49<1:22:58,  1.40it/s] 46%|████▋     | 6043/13025 [1:42:51<1:41:09,  1.15it/s] 46%|████▋     | 6044/13025 [1:42:52<1:56:15,  1.00it/s] 46%|████▋     | 6045/13025 [1:42:54<2:12:22,  1.14s/it] 46%|████▋     | 6047/13025 [1:42:55<1:53:01,  1.03it/s] 46%|████▋     | 6048/13025 [1:42:57<2:03:49,  1.06s/it] 46%|████▋     | 6051/13025 [1:42:58<1:34:25,  1.23it/s] 46%|████▋     | 6055/13025 [1:43:00<1:07:37,  1.72it/s] 46%|████▋     | 6056/13025 [1:43:01<1:19:56,  1.45it/s] 47%|████▋     | 6058/13025 [1:43:02<1:21:33,  1.42it/s] 47%|████▋     | 6060/13025 [1:43:04<1:23:33,  1.39it/s] 47%|████▋     | 6062/13025 [1:43:06<1:26:33,  1.34it/s] 47%|████▋     | 6064/13025 [1:43:07<1:26:41,  1.34it/s] 47%|████▋     | 6065/13025 [1:43:09<1:41:41,  1.14it/s] 47%|████▋     | 6067/13025 [1:43:10<1:45:41,  1.10it/s] 47%|████▋     | 6068/13025 [1:43:12<2:06:22,  1.09s/it] 47%|████▋     | 6069/13025 [1:43:15<2:37:16,  1.36s/it] 47%|████▋     | 6070/13025 [1:43:16<2:50:48,  1.47s/it] 47%|████▋     | 6071/13025 [1:43:18<2:58:04,  1.54s/it] 47%|████▋     | 6073/13025 [1:43:20<2:15:53,  1.17s/it] 47%|████▋     | 6075/13025 [1:43:21<1:55:49,  1.00it/s] 47%|████▋     | 6078/13025 [1:43:22<1:28:33,  1.31it/s] 47%|████▋     | 6081/13025 [1:43:24<1:13:54,  1.57it/s] 47%|████▋     | 6082/13025 [1:43:25<1:28:47,  1.30it/s] 47%|████▋     | 6087/13025 [1:43:26<57:56,  2.00it/s]   47%|████▋     | 6088/13025 [1:43:28<1:10:23,  1.64it/s] 47%|████▋     | 6090/13025 [1:43:29<1:14:53,  1.54it/s] 47%|████▋     | 6091/13025 [1:43:31<1:31:10,  1.27it/s] 47%|████▋     | 6092/13025 [1:43:32<1:50:01,  1.05it/s] 47%|████▋     | 6093/13025 [1:43:34<2:08:04,  1.11s/it] 47%|████▋     | 6100/13025 [1:43:36<57:37,  2.00it/s]   47%|████▋     | 6101/13025 [1:43:37<1:11:07,  1.62it/s] 47%|████▋     | 6102/13025 [1:43:39<1:29:33,  1.29it/s] 47%|████▋     | 6107/13025 [1:43:40<1:00:23,  1.91it/s] 47%|████▋     | 6108/13025 [1:43:42<1:12:04,  1.60it/s] 47%|████▋     | 6111/13025 [1:43:43<1:04:34,  1.78it/s] 47%|████▋     | 6113/13025 [1:43:44<1:08:41,  1.68it/s] 47%|████▋     | 6114/13025 [1:43:46<1:21:14,  1.42it/s] 47%|████▋     | 6115/13025 [1:43:47<1:33:45,  1.23it/s] 47%|████▋     | 6116/13025 [1:43:48<1:45:26,  1.09it/s] 47%|████▋     | 6118/13025 [1:43:50<1:35:09,  1.21it/s] 47%|████▋     | 6119/13025 [1:43:51<1:47:16,  1.07it/s] 47%|████▋     | 6120/13025 [1:43:52<2:02:14,  1.06s/it] 47%|████▋     | 6121/13025 [1:43:54<2:14:37,  1.17s/it] 47%|████▋     | 6123/13025 [1:43:55<1:50:06,  1.04it/s] 47%|████▋     | 6124/13025 [1:43:57<2:01:41,  1.06s/it] 47%|████▋     | 6126/13025 [1:43:58<1:50:18,  1.04it/s] 47%|████▋     | 6127/13025 [1:44:00<2:01:41,  1.06s/it] 47%|████▋     | 6128/13025 [1:44:01<2:18:01,  1.20s/it] 47%|████▋     | 6129/13025 [1:44:03<2:29:23,  1.30s/it] 47%|████▋     | 6130/13025 [1:44:04<2:36:10,  1.36s/it] 47%|████▋     | 6131/13025 [1:44:06<2:41:55,  1.41s/it] 47%|████▋     | 6132/13025 [1:44:07<2:42:00,  1.41s/it] 47%|████▋     | 6133/13025 [1:44:10<3:08:18,  1.64s/it] 47%|████▋     | 6134/13025 [1:44:11<3:15:41,  1.70s/it] 47%|████▋     | 6135/13025 [1:44:13<3:26:56,  1.80s/it] 47%|████▋     | 6137/13025 [1:44:16<2:48:01,  1.46s/it] 47%|████▋     | 6141/13025 [1:44:17<1:37:27,  1.18it/s] 47%|████▋     | 6142/13025 [1:44:19<1:54:10,  1.00it/s] 47%|████▋     | 6143/13025 [1:44:20<2:04:36,  1.09s/it] 47%|████▋     | 6145/13025 [1:44:22<1:51:23,  1.03it/s] 47%|████▋     | 6146/13025 [1:44:23<2:00:51,  1.05s/it] 47%|████▋     | 6147/13025 [1:44:25<2:10:22,  1.14s/it] 47%|████▋     | 6148/13025 [1:44:26<2:18:18,  1.21s/it] 47%|████▋     | 6149/13025 [1:44:28<2:31:47,  1.32s/it] 47%|████▋     | 6150/13025 [1:44:29<2:42:13,  1.42s/it] 47%|████▋     | 6154/13025 [1:44:31<1:33:31,  1.22it/s] 47%|████▋     | 6155/13025 [1:44:32<1:45:31,  1.09it/s] 47%|████▋     | 6156/13025 [1:44:34<2:02:25,  1.07s/it] 47%|████▋     | 6157/13025 [1:44:36<2:14:12,  1.17s/it] 47%|████▋     | 6159/13025 [1:44:37<1:51:34,  1.03it/s] 47%|████▋     | 6160/13025 [1:44:38<1:59:50,  1.05s/it] 47%|████▋     | 6163/13025 [1:44:40<1:27:51,  1.30it/s] 47%|████▋     | 6164/13025 [1:44:41<1:41:50,  1.12it/s] 47%|████▋     | 6165/13025 [1:44:43<1:54:21,  1.00s/it] 47%|████▋     | 6166/13025 [1:44:44<2:05:43,  1.10s/it] 47%|████▋     | 6167/13025 [1:44:45<2:17:09,  1.20s/it] 47%|████▋     | 6168/13025 [1:44:47<2:27:46,  1.29s/it] 47%|████▋     | 6169/13025 [1:44:49<2:39:07,  1.39s/it] 47%|████▋     | 6170/13025 [1:44:50<2:38:35,  1.39s/it] 47%|████▋     | 6171/13025 [1:44:52<2:43:09,  1.43s/it] 47%|████▋     | 6172/13025 [1:44:53<2:40:16,  1.40s/it] 47%|████▋     | 6174/13025 [1:44:54<2:07:03,  1.11s/it] 47%|████▋     | 6175/13025 [1:44:56<2:18:34,  1.21s/it] 47%|████▋     | 6176/13025 [1:44:57<2:21:50,  1.24s/it] 47%|████▋     | 6177/13025 [1:44:59<2:25:01,  1.27s/it] 47%|████▋     | 6178/13025 [1:45:00<2:27:03,  1.29s/it] 47%|████▋     | 6179/13025 [1:45:01<2:28:05,  1.30s/it] 47%|████▋     | 6183/13025 [1:45:03<1:23:27,  1.37it/s] 47%|████▋     | 6185/13025 [1:45:05<1:27:57,  1.30it/s] 47%|████▋     | 6186/13025 [1:45:06<1:47:07,  1.06it/s] 48%|████▊     | 6187/13025 [1:45:08<2:01:57,  1.07s/it] 48%|████▊     | 6190/13025 [1:45:10<1:44:17,  1.09it/s] 48%|████▊     | 6191/13025 [1:45:12<2:04:50,  1.10s/it] 48%|████▊     | 6193/13025 [1:45:14<2:00:20,  1.06s/it] 48%|████▊     | 6194/13025 [1:45:16<2:29:33,  1.31s/it] 48%|████▊     | 6196/13025 [1:45:18<2:09:53,  1.14s/it] 48%|████▊     | 6197/13025 [1:45:20<2:21:39,  1.24s/it] 48%|████▊     | 6198/13025 [1:45:21<2:32:34,  1.34s/it] 48%|████▊     | 6200/13025 [1:45:23<2:02:37,  1.08s/it] 48%|████▊     | 6201/13025 [1:45:24<2:08:38,  1.13s/it] 48%|████▊     | 6202/13025 [1:45:26<2:21:16,  1.24s/it] 48%|████▊     | 6203/13025 [1:45:27<2:33:20,  1.35s/it] 48%|████▊     | 6204/13025 [1:45:29<2:42:57,  1.43s/it] 48%|████▊     | 6205/13025 [1:45:30<2:47:00,  1.47s/it] 48%|████▊     | 6210/13025 [1:45:32<1:16:15,  1.49it/s] 48%|████▊     | 6211/13025 [1:45:33<1:34:06,  1.21it/s] 48%|████▊     | 6212/13025 [1:45:35<1:51:14,  1.02it/s] 48%|████▊     | 6213/13025 [1:45:36<1:59:35,  1.05s/it] 48%|████▊     | 6214/13025 [1:45:38<2:06:58,  1.12s/it] 48%|████▊     | 6215/13025 [1:45:39<2:12:44,  1.17s/it] 48%|████▊     | 6216/13025 [1:45:40<2:17:08,  1.21s/it] 48%|████▊     | 6217/13025 [1:45:42<2:23:42,  1.27s/it] 48%|████▊     | 6218/13025 [1:45:43<2:28:36,  1.31s/it] 48%|████▊     | 6219/13025 [1:45:45<2:34:50,  1.37s/it] 48%|████▊     | 6220/13025 [1:45:46<2:39:46,  1.41s/it] 48%|████▊     | 6222/13025 [1:45:48<2:01:02,  1.07s/it] 48%|████▊     | 6226/13025 [1:45:49<1:18:47,  1.44it/s] 48%|████▊     | 6229/13025 [1:45:51<1:11:38,  1.58it/s] 48%|████▊     | 6231/13025 [1:45:52<1:16:41,  1.48it/s] 48%|████▊     | 6232/13025 [1:45:54<1:32:51,  1.22it/s] 48%|████▊     | 6233/13025 [1:45:55<1:43:32,  1.09it/s] 48%|████▊     | 6234/13025 [1:45:57<1:53:22,  1.00s/it] 48%|████▊     | 6235/13025 [1:45:58<2:09:27,  1.14s/it] 48%|████▊     | 6238/13025 [1:46:00<1:31:49,  1.23it/s] 48%|████▊     | 6239/13025 [1:46:01<1:43:14,  1.10it/s] 48%|████▊     | 6240/13025 [1:46:02<1:53:02,  1.00it/s] 48%|████▊     | 6242/13025 [1:46:04<1:40:34,  1.12it/s] 48%|████▊     | 6244/13025 [1:46:05<1:31:20,  1.24it/s] 48%|████▊     | 6246/13025 [1:46:06<1:25:31,  1.32it/s] 48%|████▊     | 6250/13025 [1:46:08<1:02:17,  1.81it/s] 48%|████▊     | 6251/13025 [1:46:10<1:24:40,  1.33it/s] 48%|████▊     | 6253/13025 [1:46:12<1:35:08,  1.19it/s] 48%|████▊     | 6254/13025 [1:46:14<2:00:18,  1.07s/it] 48%|████▊     | 6256/13025 [1:46:16<2:01:14,  1.07s/it] 48%|████▊     | 6257/13025 [1:46:18<2:15:13,  1.20s/it] 48%|████▊     | 6258/13025 [1:46:19<2:22:44,  1.27s/it] 48%|████▊     | 6261/13025 [1:46:21<1:37:44,  1.15it/s] 48%|████▊     | 6262/13025 [1:46:22<1:46:58,  1.05it/s] 48%|████▊     | 6263/13025 [1:46:23<2:01:00,  1.07s/it] 48%|████▊     | 6266/13025 [1:46:25<1:27:11,  1.29it/s] 48%|████▊     | 6271/13025 [1:46:26<56:32,  1.99it/s]   48%|████▊     | 6272/13025 [1:46:27<1:08:39,  1.64it/s] 48%|████▊     | 6274/13025 [1:46:29<1:11:51,  1.57it/s] 48%|████▊     | 6276/13025 [1:46:30<1:12:18,  1.56it/s] 48%|████▊     | 6278/13025 [1:46:31<1:12:49,  1.54it/s] 48%|████▊     | 6279/13025 [1:46:33<1:29:12,  1.26it/s] 48%|████▊     | 6281/13025 [1:46:34<1:28:35,  1.27it/s] 48%|████▊     | 6283/13025 [1:46:36<1:27:14,  1.29it/s] 48%|████▊     | 6284/13025 [1:46:38<1:43:27,  1.09it/s] 48%|████▊     | 6285/13025 [1:46:39<1:58:26,  1.05s/it] 48%|████▊     | 6286/13025 [1:46:41<2:11:44,  1.17s/it] 48%|████▊     | 6287/13025 [1:46:42<2:20:49,  1.25s/it] 48%|████▊     | 6288/13025 [1:46:44<2:28:28,  1.32s/it] 48%|████▊     | 6289/13025 [1:46:45<2:28:11,  1.32s/it] 48%|████▊     | 6292/13025 [1:46:47<1:41:40,  1.10it/s] 48%|████▊     | 6294/13025 [1:46:48<1:37:36,  1.15it/s] 48%|████▊     | 6295/13025 [1:46:50<1:49:22,  1.03it/s] 48%|████▊     | 6296/13025 [1:46:51<1:59:55,  1.07s/it] 48%|████▊     | 6297/13025 [1:46:52<2:08:47,  1.15s/it] 48%|████▊     | 6298/13025 [1:46:54<2:16:59,  1.22s/it] 48%|████▊     | 6299/13025 [1:46:55<2:22:39,  1.27s/it] 48%|████▊     | 6301/13025 [1:46:57<1:59:45,  1.07s/it] 48%|████▊     | 6302/13025 [1:46:59<2:13:43,  1.19s/it] 48%|████▊     | 6303/13025 [1:47:00<2:23:42,  1.28s/it] 48%|████▊     | 6304/13025 [1:47:01<2:24:32,  1.29s/it] 48%|████▊     | 6305/13025 [1:47:03<2:28:26,  1.33s/it] 48%|████▊     | 6306/13025 [1:47:04<2:34:09,  1.38s/it] 48%|████▊     | 6310/13025 [1:47:06<1:24:56,  1.32it/s] 48%|████▊     | 6312/13025 [1:47:07<1:27:24,  1.28it/s] 48%|████▊     | 6314/13025 [1:47:10<1:36:28,  1.16it/s] 48%|████▊     | 6317/13025 [1:47:12<1:31:44,  1.22it/s] 49%|████▊     | 6318/13025 [1:47:14<1:48:37,  1.03it/s] 49%|████▊     | 6319/13025 [1:47:16<2:16:07,  1.22s/it] 49%|████▊     | 6320/13025 [1:47:18<2:25:47,  1.30s/it] 49%|████▊     | 6321/13025 [1:47:19<2:32:19,  1.36s/it] 49%|████▊     | 6322/13025 [1:47:21<2:33:26,  1.37s/it] 49%|████▊     | 6323/13025 [1:47:22<2:34:27,  1.38s/it] 49%|████▊     | 6325/13025 [1:47:24<2:06:50,  1.14s/it] 49%|████▊     | 6326/13025 [1:47:25<2:11:50,  1.18s/it] 49%|████▊     | 6328/13025 [1:47:26<1:52:56,  1.01s/it] 49%|████▊     | 6329/13025 [1:47:28<2:02:46,  1.10s/it] 49%|████▊     | 6331/13025 [1:47:29<1:50:57,  1.01it/s] 49%|████▊     | 6332/13025 [1:47:31<2:07:55,  1.15s/it] 49%|████▊     | 6334/13025 [1:47:33<1:53:11,  1.02s/it] 49%|████▊     | 6335/13025 [1:47:34<2:07:06,  1.14s/it] 49%|████▊     | 6336/13025 [1:47:36<2:20:18,  1.26s/it] 49%|████▊     | 6337/13025 [1:47:38<2:28:23,  1.33s/it] 49%|████▊     | 6338/13025 [1:47:39<2:35:19,  1.39s/it] 49%|████▊     | 6339/13025 [1:47:40<2:33:23,  1.38s/it] 49%|████▊     | 6341/13025 [1:47:42<2:04:05,  1.11s/it] 49%|████▊     | 6345/13025 [1:47:43<1:15:13,  1.48it/s] 49%|████▊     | 6346/13025 [1:47:45<1:29:41,  1.24it/s] 49%|████▊     | 6348/13025 [1:47:46<1:30:21,  1.23it/s] 49%|████▊     | 6349/13025 [1:47:48<1:47:47,  1.03it/s] 49%|████▉     | 6351/13025 [1:47:49<1:35:45,  1.16it/s] 49%|████▉     | 6352/13025 [1:47:51<1:51:00,  1.00it/s] 49%|████▉     | 6353/13025 [1:47:52<2:04:35,  1.12s/it] 49%|████▉     | 6354/13025 [1:47:54<2:15:59,  1.22s/it] 49%|████▉     | 6355/13025 [1:47:56<2:25:54,  1.31s/it] 49%|████▉     | 6359/13025 [1:47:57<1:24:22,  1.32it/s] 49%|████▉     | 6360/13025 [1:47:58<1:35:03,  1.17it/s] 49%|████▉     | 6363/13025 [1:48:00<1:19:06,  1.40it/s] 49%|████▉     | 6364/13025 [1:48:01<1:32:18,  1.20it/s] 49%|████▉     | 6366/13025 [1:48:03<1:30:17,  1.23it/s] 49%|████▉     | 6367/13025 [1:48:05<1:45:49,  1.05it/s] 49%|████▉     | 6369/13025 [1:48:06<1:36:07,  1.15it/s] 49%|████▉     | 6370/13025 [1:48:07<1:48:05,  1.03it/s] 49%|████▉     | 6371/13025 [1:48:09<2:04:21,  1.12s/it] 49%|████▉     | 6374/13025 [1:48:11<1:44:34,  1.06it/s] 49%|████▉     | 6377/13025 [1:48:14<1:36:14,  1.15it/s] 49%|████▉     | 6378/13025 [1:48:15<1:56:16,  1.05s/it] 49%|████▉     | 6379/13025 [1:48:17<2:09:28,  1.17s/it] 49%|████▉     | 6380/13025 [1:48:19<2:15:08,  1.22s/it] 49%|████▉     | 6381/13025 [1:48:20<2:20:01,  1.26s/it] 49%|████▉     | 6382/13025 [1:48:22<2:27:47,  1.33s/it] 49%|████▉     | 6383/13025 [1:48:23<2:34:02,  1.39s/it] 49%|████▉     | 6384/13025 [1:48:25<2:41:41,  1.46s/it] 49%|████▉     | 6385/13025 [1:48:26<2:47:44,  1.52s/it] 49%|████▉     | 6386/13025 [1:48:28<2:49:14,  1.53s/it] 49%|████▉     | 6389/13025 [1:48:30<1:48:40,  1.02it/s] 49%|████▉     | 6390/13025 [1:48:31<1:58:29,  1.07s/it] 49%|████▉     | 6391/13025 [1:48:32<2:07:05,  1.15s/it] 49%|████▉     | 6396/13025 [1:48:34<1:06:55,  1.65it/s] 49%|████▉     | 6397/13025 [1:48:35<1:21:54,  1.35it/s] 49%|████▉     | 6398/13025 [1:48:37<1:36:44,  1.14it/s] 49%|████▉     | 6400/13025 [1:48:38<1:32:46,  1.19it/s] 49%|████▉     | 6402/13025 [1:48:40<1:31:14,  1.21it/s] 49%|████▉     | 6403/13025 [1:48:42<1:48:47,  1.01it/s] 49%|████▉     | 6404/13025 [1:48:43<2:01:07,  1.10s/it] 49%|████▉     | 6405/13025 [1:48:45<2:11:26,  1.19s/it] 49%|████▉     | 6408/13025 [1:48:46<1:34:29,  1.17it/s] 49%|████▉     | 6410/13025 [1:48:48<1:31:42,  1.20it/s] 49%|████▉     | 6411/13025 [1:48:49<1:46:38,  1.03it/s] 49%|████▉     | 6412/13025 [1:48:51<2:00:47,  1.10s/it] 49%|████▉     | 6413/13025 [1:48:52<2:09:56,  1.18s/it] 49%|████▉     | 6414/13025 [1:48:54<2:17:36,  1.25s/it] 49%|████▉     | 6416/13025 [1:48:55<1:50:31,  1.00s/it] 49%|████▉     | 6418/13025 [1:48:56<1:37:30,  1.13it/s] 49%|████▉     | 6420/13025 [1:48:58<1:34:53,  1.16it/s] 49%|████▉     | 6421/13025 [1:49:00<1:48:04,  1.02it/s] 49%|████▉     | 6422/13025 [1:49:01<1:59:42,  1.09s/it] 49%|████▉     | 6423/13025 [1:49:03<2:10:36,  1.19s/it] 49%|████▉     | 6424/13025 [1:49:04<2:19:19,  1.27s/it] 49%|████▉     | 6425/13025 [1:49:06<2:26:48,  1.33s/it] 49%|████▉     | 6426/13025 [1:49:07<2:34:54,  1.41s/it] 49%|████▉     | 6427/13025 [1:49:09<2:35:45,  1.42s/it] 49%|████▉     | 6428/13025 [1:49:10<2:48:52,  1.54s/it] 49%|████▉     | 6431/13025 [1:49:13<1:58:26,  1.08s/it] 49%|████▉     | 6432/13025 [1:49:15<2:25:20,  1.32s/it] 49%|████▉     | 6433/13025 [1:49:17<2:46:26,  1.51s/it] 49%|████▉     | 6434/13025 [1:49:18<2:46:23,  1.51s/it] 49%|████▉     | 6439/13025 [1:49:20<1:22:41,  1.33it/s] 49%|████▉     | 6440/13025 [1:49:21<1:32:15,  1.19it/s] 49%|████▉     | 6441/13025 [1:49:23<1:46:17,  1.03it/s] 49%|████▉     | 6442/13025 [1:49:24<1:59:17,  1.09s/it] 49%|████▉     | 6444/13025 [1:49:26<1:45:40,  1.04it/s] 49%|████▉     | 6445/13025 [1:49:28<2:02:17,  1.12s/it] 49%|████▉     | 6446/13025 [1:49:29<2:16:08,  1.24s/it] 49%|████▉     | 6447/13025 [1:49:31<2:27:16,  1.34s/it] 50%|████▉     | 6448/13025 [1:49:33<2:32:17,  1.39s/it] 50%|████▉     | 6450/13025 [1:49:34<1:58:13,  1.08s/it] 50%|████▉     | 6451/13025 [1:49:35<2:05:36,  1.15s/it] 50%|████▉     | 6452/13025 [1:49:37<2:15:44,  1.24s/it] 50%|████▉     | 6453/13025 [1:49:38<2:20:47,  1.29s/it] 50%|████▉     | 6455/13025 [1:49:40<1:55:44,  1.06s/it] 50%|████▉     | 6457/13025 [1:49:41<1:46:09,  1.03it/s] 50%|████▉     | 6459/13025 [1:49:43<1:38:43,  1.11it/s] 50%|████▉     | 6463/13025 [1:49:44<1:08:24,  1.60it/s] 50%|████▉     | 6464/13025 [1:49:46<1:23:07,  1.32it/s] 50%|████▉     | 6465/13025 [1:49:47<1:38:50,  1.11it/s] 50%|████▉     | 6466/13025 [1:49:49<1:52:18,  1.03s/it] 50%|████▉     | 6469/13025 [1:49:50<1:22:10,  1.33it/s] 50%|████▉     | 6470/13025 [1:49:52<1:38:12,  1.11it/s] 50%|████▉     | 6475/13025 [1:49:53<1:03:50,  1.71it/s] 50%|████▉     | 6478/13025 [1:49:55<1:01:27,  1.78it/s] 50%|████▉     | 6479/13025 [1:49:57<1:15:58,  1.44it/s] 50%|████▉     | 6480/13025 [1:49:58<1:28:02,  1.24it/s] 50%|████▉     | 6482/13025 [1:49:59<1:23:36,  1.30it/s] 50%|████▉     | 6484/13025 [1:50:01<1:23:54,  1.30it/s] 50%|████▉     | 6488/13025 [1:50:02<1:03:50,  1.71it/s] 50%|████▉     | 6489/13025 [1:50:04<1:18:20,  1.39it/s] 50%|████▉     | 6491/13025 [1:50:05<1:18:04,  1.39it/s] 50%|████▉     | 6492/13025 [1:50:07<1:29:34,  1.22it/s] 50%|████▉     | 6494/13025 [1:50:08<1:27:03,  1.25it/s] 50%|████▉     | 6496/13025 [1:50:11<1:41:10,  1.08it/s] 50%|████▉     | 6498/13025 [1:50:13<1:48:18,  1.00it/s] 50%|████▉     | 6499/13025 [1:50:15<2:05:54,  1.16s/it] 50%|████▉     | 6500/13025 [1:50:16<2:19:37,  1.28s/it] 50%|████▉     | 6502/13025 [1:50:18<2:00:29,  1.11s/it] 50%|████▉     | 6504/13025 [1:50:20<1:48:32,  1.00it/s] 50%|████▉     | 6505/13025 [1:50:21<1:59:48,  1.10s/it] 50%|████▉     | 6507/13025 [1:50:23<1:47:37,  1.01it/s] 50%|████▉     | 6508/13025 [1:50:24<1:57:22,  1.08s/it] 50%|████▉     | 6510/13025 [1:50:26<1:41:35,  1.07it/s] 50%|████▉     | 6511/13025 [1:50:27<1:50:18,  1.02s/it] 50%|████▉     | 6512/13025 [1:50:28<2:00:26,  1.11s/it] 50%|█████     | 6513/13025 [1:50:30<2:14:36,  1.24s/it] 50%|█████     | 6516/13025 [1:50:31<1:31:31,  1.19it/s] 50%|█████     | 6518/13025 [1:50:33<1:24:57,  1.28it/s] 50%|█████     | 6520/13025 [1:50:34<1:26:27,  1.25it/s] 50%|█████     | 6521/13025 [1:50:36<1:36:36,  1.12it/s] 50%|█████     | 6522/13025 [1:50:37<1:46:09,  1.02it/s] 50%|█████     | 6523/13025 [1:50:38<1:57:07,  1.08s/it] 50%|█████     | 6524/13025 [1:50:40<2:12:28,  1.22s/it] 50%|█████     | 6525/13025 [1:50:42<2:21:51,  1.31s/it] 50%|█████     | 6526/13025 [1:50:43<2:30:23,  1.39s/it] 50%|█████     | 6527/13025 [1:50:45<2:31:21,  1.40s/it] 50%|█████     | 6529/13025 [1:50:46<1:58:12,  1.09s/it] 50%|█████     | 6530/13025 [1:50:47<2:03:56,  1.15s/it] 50%|█████     | 6532/13025 [1:50:49<1:42:21,  1.06it/s] 50%|█████     | 6533/13025 [1:50:50<1:58:08,  1.09s/it] 50%|█████     | 6535/13025 [1:50:52<1:45:46,  1.02it/s] 50%|█████     | 6538/13025 [1:50:53<1:20:43,  1.34it/s] 50%|█████     | 6539/13025 [1:50:55<1:31:40,  1.18it/s] 50%|█████     | 6542/13025 [1:50:56<1:17:41,  1.39it/s] 50%|█████     | 6543/13025 [1:50:58<1:32:09,  1.17it/s] 50%|█████     | 6545/13025 [1:50:59<1:28:53,  1.22it/s] 50%|█████     | 6548/13025 [1:51:01<1:17:07,  1.40it/s] 50%|█████     | 6550/13025 [1:51:02<1:18:15,  1.38it/s] 50%|█████     | 6551/13025 [1:51:04<1:32:19,  1.17it/s] 50%|█████     | 6553/13025 [1:51:05<1:29:29,  1.21it/s] 50%|█████     | 6556/13025 [1:51:07<1:12:09,  1.49it/s] 50%|█████     | 6557/13025 [1:51:08<1:23:30,  1.29it/s] 50%|█████     | 6558/13025 [1:51:10<1:51:55,  1.04s/it] 50%|█████     | 6559/13025 [1:51:13<2:21:13,  1.31s/it] 50%|█████     | 6561/13025 [1:51:15<2:13:55,  1.24s/it] 50%|█████     | 6562/13025 [1:51:17<2:32:17,  1.41s/it] 50%|█████     | 6564/13025 [1:51:18<2:05:11,  1.16s/it] 50%|█████     | 6566/13025 [1:51:20<1:53:29,  1.05s/it] 50%|█████     | 6567/13025 [1:51:22<2:00:58,  1.12s/it] 50%|█████     | 6568/13025 [1:51:23<2:07:28,  1.18s/it] 50%|█████     | 6570/13025 [1:51:24<1:49:20,  1.02s/it] 50%|█████     | 6571/13025 [1:51:26<1:58:34,  1.10s/it] 50%|█████     | 6573/13025 [1:51:27<1:42:08,  1.05it/s] 50%|█████     | 6574/13025 [1:51:29<1:57:05,  1.09s/it] 51%|█████     | 6578/13025 [1:51:30<1:15:26,  1.42it/s] 51%|█████     | 6582/13025 [1:51:32<1:01:54,  1.73it/s] 51%|█████     | 6583/13025 [1:51:34<1:17:31,  1.39it/s] 51%|█████     | 6584/13025 [1:51:35<1:32:48,  1.16it/s] 51%|█████     | 6586/13025 [1:51:37<1:29:10,  1.20it/s] 51%|█████     | 6587/13025 [1:51:38<1:38:37,  1.09it/s] 51%|█████     | 6588/13025 [1:51:40<1:54:54,  1.07s/it] 51%|█████     | 6589/13025 [1:51:41<2:07:50,  1.19s/it] 51%|█████     | 6591/13025 [1:51:43<1:46:01,  1.01it/s] 51%|█████     | 6592/13025 [1:51:44<1:54:27,  1.07s/it] 51%|█████     | 6594/13025 [1:51:46<1:42:48,  1.04it/s] 51%|█████     | 6596/13025 [1:51:47<1:36:08,  1.11it/s] 51%|█████     | 6597/13025 [1:51:49<1:50:24,  1.03s/it] 51%|█████     | 6601/13025 [1:51:50<1:11:30,  1.50it/s] 51%|█████     | 6602/13025 [1:51:52<1:26:44,  1.23it/s] 51%|█████     | 6603/13025 [1:51:53<1:42:28,  1.04it/s] 51%|█████     | 6606/13025 [1:51:55<1:21:35,  1.31it/s] 51%|█████     | 6607/13025 [1:51:56<1:36:19,  1.11it/s] 51%|█████     | 6611/13025 [1:51:58<1:08:20,  1.56it/s] 51%|█████     | 6612/13025 [1:52:00<1:24:48,  1.26it/s] 51%|█████     | 6614/13025 [1:52:01<1:24:57,  1.26it/s] 51%|█████     | 6615/13025 [1:52:03<1:41:44,  1.05it/s] 51%|█████     | 6616/13025 [1:52:05<1:58:03,  1.11s/it] 51%|█████     | 6617/13025 [1:52:06<2:11:35,  1.23s/it] 51%|█████     | 6618/13025 [1:52:08<2:21:13,  1.32s/it] 51%|█████     | 6620/13025 [1:52:10<2:05:54,  1.18s/it] 51%|█████     | 6622/13025 [1:52:12<2:01:29,  1.14s/it] 51%|█████     | 6623/13025 [1:52:14<2:19:01,  1.30s/it] 51%|█████     | 6625/13025 [1:52:16<2:09:11,  1.21s/it] 51%|█████     | 6626/13025 [1:52:17<2:14:20,  1.26s/it] 51%|█████     | 6627/13025 [1:52:19<2:15:48,  1.27s/it] 51%|█████     | 6628/13025 [1:52:20<2:17:00,  1.29s/it] 51%|█████     | 6629/13025 [1:52:22<2:22:17,  1.33s/it] 51%|█████     | 6630/13025 [1:52:23<2:23:21,  1.34s/it] 51%|█████     | 6632/13025 [1:52:24<1:51:22,  1.05s/it] 51%|█████     | 6634/13025 [1:52:26<1:37:43,  1.09it/s] 51%|█████     | 6635/13025 [1:52:27<1:53:31,  1.07s/it] 51%|█████     | 6637/13025 [1:52:29<1:43:50,  1.03it/s] 51%|█████     | 6638/13025 [1:52:31<1:59:18,  1.12s/it] 51%|█████     | 6639/13025 [1:52:32<2:09:58,  1.22s/it] 51%|█████     | 6642/13025 [1:52:34<1:32:44,  1.15it/s] 51%|█████     | 6643/13025 [1:52:35<1:45:46,  1.01it/s] 51%|█████     | 6645/13025 [1:52:37<1:39:42,  1.07it/s] 51%|█████     | 6646/13025 [1:52:39<1:54:08,  1.07s/it] 51%|█████     | 6648/13025 [1:52:40<1:38:15,  1.08it/s] 51%|█████     | 6650/13025 [1:52:41<1:32:19,  1.15it/s] 51%|█████     | 6651/13025 [1:52:43<1:45:05,  1.01it/s] 51%|█████     | 6653/13025 [1:52:45<1:39:09,  1.07it/s] 51%|█████     | 6654/13025 [1:52:46<1:48:32,  1.02s/it] 51%|█████     | 6655/13025 [1:52:48<2:03:31,  1.16s/it] 51%|█████     | 6656/13025 [1:52:49<2:18:21,  1.30s/it] 51%|█████     | 6657/13025 [1:52:51<2:26:44,  1.38s/it] 51%|█████     | 6659/13025 [1:52:52<1:58:53,  1.12s/it] 51%|█████     | 6660/13025 [1:52:54<2:12:21,  1.25s/it] 51%|█████     | 6661/13025 [1:52:56<2:22:09,  1.34s/it] 51%|█████     | 6662/13025 [1:52:57<2:29:20,  1.41s/it] 51%|█████     | 6663/13025 [1:52:59<2:36:31,  1.48s/it] 51%|█████     | 6664/13025 [1:53:00<2:36:28,  1.48s/it] 51%|█████     | 6666/13025 [1:53:02<2:06:34,  1.19s/it] 51%|█████     | 6668/13025 [1:53:04<1:49:03,  1.03s/it] 51%|█████     | 6669/13025 [1:53:05<2:03:06,  1.16s/it] 51%|█████     | 6670/13025 [1:53:07<2:09:14,  1.22s/it] 51%|█████     | 6671/13025 [1:53:08<2:18:17,  1.31s/it] 51%|█████     | 6672/13025 [1:53:10<2:40:33,  1.52s/it] 51%|█████     | 6673/13025 [1:53:13<3:00:23,  1.70s/it] 51%|█████▏    | 6676/13025 [1:53:15<2:05:03,  1.18s/it] 51%|█████▏    | 6677/13025 [1:53:17<2:27:49,  1.40s/it] 51%|█████▏    | 6678/13025 [1:53:19<2:33:23,  1.45s/it] 51%|█████▏    | 6680/13025 [1:53:20<2:08:35,  1.22s/it] 51%|█████▏    | 6681/13025 [1:53:22<2:10:57,  1.24s/it] 51%|█████▏    | 6684/13025 [1:53:23<1:35:10,  1.11it/s] 51%|█████▏    | 6686/13025 [1:53:25<1:28:47,  1.19it/s] 51%|█████▏    | 6689/13025 [1:53:26<1:15:57,  1.39it/s] 51%|█████▏    | 6690/13025 [1:53:28<1:26:07,  1.23it/s] 51%|█████▏    | 6691/13025 [1:53:29<1:37:36,  1.08it/s] 51%|█████▏    | 6693/13025 [1:53:31<1:33:55,  1.12it/s] 51%|█████▏    | 6695/13025 [1:53:32<1:31:49,  1.15it/s] 51%|█████▏    | 6696/13025 [1:53:34<1:45:14,  1.00it/s] 51%|█████▏    | 6697/13025 [1:53:35<1:57:16,  1.11s/it] 51%|█████▏    | 6698/13025 [1:53:37<2:07:11,  1.21s/it] 51%|█████▏    | 6699/13025 [1:53:38<2:13:14,  1.26s/it] 51%|█████▏    | 6700/13025 [1:53:40<2:17:35,  1.31s/it] 51%|█████▏    | 6701/13025 [1:53:41<2:23:51,  1.36s/it] 51%|█████▏    | 6703/13025 [1:53:43<1:57:15,  1.11s/it] 51%|█████▏    | 6704/13025 [1:53:44<2:07:21,  1.21s/it] 51%|█████▏    | 6707/13025 [1:53:46<1:28:08,  1.19it/s] 52%|█████▏    | 6709/13025 [1:53:47<1:21:59,  1.28it/s] 52%|█████▏    | 6710/13025 [1:53:48<1:32:51,  1.13it/s] 52%|█████▏    | 6711/13025 [1:53:50<1:49:40,  1.04s/it] 52%|█████▏    | 6712/13025 [1:53:52<2:03:24,  1.17s/it] 52%|█████▏    | 6714/13025 [1:53:53<1:46:54,  1.02s/it] 52%|█████▏    | 6717/13025 [1:53:55<1:22:05,  1.28it/s] 52%|█████▏    | 6718/13025 [1:53:56<1:36:49,  1.09it/s] 52%|█████▏    | 6719/13025 [1:53:58<1:50:44,  1.05s/it] 52%|█████▏    | 6721/13025 [1:53:59<1:35:22,  1.10it/s] 52%|█████▏    | 6725/13025 [1:54:01<1:05:36,  1.60it/s] 52%|█████▏    | 6726/13025 [1:54:02<1:22:21,  1.27it/s] 52%|█████▏    | 6727/13025 [1:54:04<1:40:18,  1.05it/s] 52%|█████▏    | 6728/13025 [1:54:06<1:54:23,  1.09s/it] 52%|█████▏    | 6732/13025 [1:54:07<1:13:50,  1.42it/s] 52%|█████▏    | 6733/13025 [1:54:09<1:36:29,  1.09it/s] 52%|█████▏    | 6736/13025 [1:54:11<1:28:18,  1.19it/s] 52%|█████▏    | 6737/13025 [1:54:14<1:50:30,  1.05s/it] 52%|█████▏    | 6739/13025 [1:54:16<1:53:35,  1.08s/it] 52%|█████▏    | 6742/13025 [1:54:17<1:29:58,  1.16it/s] 52%|█████▏    | 6744/13025 [1:54:19<1:24:26,  1.24it/s] 52%|█████▏    | 6746/13025 [1:54:20<1:24:03,  1.24it/s] 52%|█████▏    | 6747/13025 [1:54:22<1:37:24,  1.07it/s] 52%|█████▏    | 6748/13025 [1:54:24<1:51:12,  1.06s/it] 52%|█████▏    | 6750/13025 [1:54:25<1:41:36,  1.03it/s] 52%|█████▏    | 6752/13025 [1:54:27<1:36:31,  1.08it/s] 52%|█████▏    | 6753/13025 [1:54:28<1:50:31,  1.06s/it] 52%|█████▏    | 6754/13025 [1:54:30<2:03:05,  1.18s/it] 52%|█████▏    | 6760/13025 [1:54:31<58:10,  1.79it/s]   52%|█████▏    | 6761/13025 [1:54:33<1:08:48,  1.52it/s] 52%|█████▏    | 6762/13025 [1:54:34<1:23:34,  1.25it/s] 52%|█████▏    | 6763/13025 [1:54:36<1:38:20,  1.06it/s] 52%|█████▏    | 6766/13025 [1:54:37<1:19:36,  1.31it/s] 52%|█████▏    | 6767/13025 [1:54:39<1:34:20,  1.11it/s] 52%|█████▏    | 6768/13025 [1:54:40<1:47:09,  1.03s/it] 52%|█████▏    | 6771/13025 [1:54:42<1:22:43,  1.26it/s] 52%|█████▏    | 6772/13025 [1:54:44<1:35:23,  1.09it/s] 52%|█████▏    | 6773/13025 [1:54:45<1:45:57,  1.02s/it] 52%|█████▏    | 6774/13025 [1:54:46<1:55:11,  1.11s/it] 52%|█████▏    | 6777/13025 [1:54:48<1:26:01,  1.21it/s] 52%|█████▏    | 6778/13025 [1:54:50<1:41:39,  1.02it/s] 52%|█████▏    | 6781/13025 [1:54:51<1:21:35,  1.28it/s] 52%|█████▏    | 6783/13025 [1:54:53<1:19:14,  1.31it/s] 52%|█████▏    | 6785/13025 [1:54:54<1:18:58,  1.32it/s] 52%|█████▏    | 6787/13025 [1:54:56<1:21:09,  1.28it/s] 52%|█████▏    | 6788/13025 [1:54:57<1:35:03,  1.09it/s] 52%|█████▏    | 6789/13025 [1:54:59<1:47:34,  1.04s/it] 52%|█████▏    | 6791/13025 [1:55:00<1:35:16,  1.09it/s] 52%|█████▏    | 6792/13025 [1:55:02<1:51:00,  1.07s/it] 52%|█████▏    | 6793/13025 [1:55:04<2:04:41,  1.20s/it] 52%|█████▏    | 6794/13025 [1:55:05<2:15:33,  1.31s/it] 52%|█████▏    | 6795/13025 [1:55:07<2:22:10,  1.37s/it] 52%|█████▏    | 6798/13025 [1:55:08<1:32:55,  1.12it/s] 52%|█████▏    | 6799/13025 [1:55:10<2:00:44,  1.16s/it] 52%|█████▏    | 6802/13025 [1:55:13<1:38:52,  1.05it/s] 52%|█████▏    | 6803/13025 [1:55:15<2:00:21,  1.16s/it] 52%|█████▏    | 6805/13025 [1:55:17<1:59:36,  1.15s/it] 52%|█████▏    | 6807/13025 [1:55:18<1:46:10,  1.02s/it] 52%|█████▏    | 6809/13025 [1:55:20<1:39:58,  1.04it/s] 52%|█████▏    | 6810/13025 [1:55:22<1:50:15,  1.06s/it] 52%|█████▏    | 6811/13025 [1:55:23<1:59:22,  1.15s/it] 52%|█████▏    | 6812/13025 [1:55:25<2:12:37,  1.28s/it] 52%|█████▏    | 6814/13025 [1:55:26<1:54:57,  1.11s/it] 52%|█████▏    | 6817/13025 [1:55:28<1:27:41,  1.18it/s] 52%|█████▏    | 6818/13025 [1:55:30<1:41:55,  1.02it/s] 52%|█████▏    | 6820/13025 [1:55:31<1:35:43,  1.08it/s] 52%|█████▏    | 6821/13025 [1:55:33<1:45:35,  1.02s/it] 52%|█████▏    | 6823/13025 [1:55:34<1:32:12,  1.12it/s] 52%|█████▏    | 6825/13025 [1:55:36<1:26:47,  1.19it/s] 52%|█████▏    | 6827/13025 [1:55:37<1:26:00,  1.20it/s] 52%|█████▏    | 6828/13025 [1:55:39<1:41:57,  1.01it/s] 52%|█████▏    | 6830/13025 [1:55:40<1:36:09,  1.07it/s] 52%|█████▏    | 6831/13025 [1:55:42<1:47:03,  1.04s/it] 52%|█████▏    | 6832/13025 [1:55:43<1:55:36,  1.12s/it] 52%|█████▏    | 6833/13025 [1:55:45<2:08:48,  1.25s/it] 52%|█████▏    | 6834/13025 [1:55:47<2:15:41,  1.32s/it] 52%|█████▏    | 6835/13025 [1:55:48<2:23:21,  1.39s/it] 52%|█████▏    | 6836/13025 [1:55:49<2:20:59,  1.37s/it] 52%|█████▏    | 6837/13025 [1:55:51<2:26:54,  1.42s/it] 52%|█████▏    | 6838/13025 [1:55:53<2:33:27,  1.49s/it] 53%|█████▎    | 6839/13025 [1:55:54<2:34:06,  1.49s/it] 53%|█████▎    | 6840/13025 [1:55:56<2:34:44,  1.50s/it] 53%|█████▎    | 6841/13025 [1:55:57<2:39:05,  1.54s/it] 53%|█████▎    | 6842/13025 [1:55:59<2:43:32,  1.59s/it] 53%|█████▎    | 6843/13025 [1:56:01<2:46:02,  1.61s/it] 53%|█████▎    | 6844/13025 [1:56:02<2:45:55,  1.61s/it] 53%|█████▎    | 6846/13025 [1:56:04<2:05:22,  1.22s/it] 53%|█████▎    | 6847/13025 [1:56:05<2:15:19,  1.31s/it] 53%|█████▎    | 6848/13025 [1:56:07<2:16:31,  1.33s/it] 53%|█████▎    | 6850/13025 [1:56:08<1:50:55,  1.08s/it] 53%|█████▎    | 6851/13025 [1:56:10<2:12:47,  1.29s/it] 53%|█████▎    | 6853/13025 [1:56:12<1:57:46,  1.14s/it] 53%|█████▎    | 6856/13025 [1:56:14<1:34:18,  1.09it/s] 53%|█████▎    | 6857/13025 [1:56:16<1:57:15,  1.14s/it] 53%|█████▎    | 6859/13025 [1:56:18<1:43:36,  1.01s/it] 53%|█████▎    | 6860/13025 [1:56:19<1:55:26,  1.12s/it] 53%|█████▎    | 6861/13025 [1:56:21<2:01:43,  1.18s/it] 53%|█████▎    | 6862/13025 [1:56:22<2:13:46,  1.30s/it] 53%|█████▎    | 6863/13025 [1:56:24<2:21:58,  1.38s/it] 53%|█████▎    | 6867/13025 [1:56:26<1:22:59,  1.24it/s] 53%|█████▎    | 6869/13025 [1:56:27<1:22:04,  1.25it/s] 53%|█████▎    | 6870/13025 [1:56:29<1:37:07,  1.06it/s] 53%|█████▎    | 6871/13025 [1:56:30<1:51:30,  1.09s/it] 53%|█████▎    | 6874/13025 [1:56:32<1:25:23,  1.20it/s] 53%|█████▎    | 6875/13025 [1:56:34<1:38:38,  1.04it/s] 53%|█████▎    | 6876/13025 [1:56:35<1:51:01,  1.08s/it] 53%|█████▎    | 6877/13025 [1:56:37<2:03:17,  1.20s/it] 53%|█████▎    | 6878/13025 [1:56:38<2:13:30,  1.30s/it] 53%|█████▎    | 6881/13025 [1:56:40<1:28:31,  1.16it/s] 53%|█████▎    | 6882/13025 [1:56:41<1:44:00,  1.02s/it] 53%|█████▎    | 6883/13025 [1:56:43<1:57:10,  1.14s/it] 53%|█████▎    | 6884/13025 [1:56:44<2:03:30,  1.21s/it] 53%|█████▎    | 6889/13025 [1:56:46<1:05:48,  1.55it/s] 53%|█████▎    | 6891/13025 [1:56:48<1:09:21,  1.47it/s] 53%|█████▎    | 6892/13025 [1:56:49<1:25:03,  1.20it/s] 53%|█████▎    | 6895/13025 [1:56:51<1:14:10,  1.38it/s] 53%|█████▎    | 6898/13025 [1:56:52<1:04:45,  1.58it/s] 53%|█████▎    | 6899/13025 [1:56:54<1:19:47,  1.28it/s] 53%|█████▎    | 6901/13025 [1:56:55<1:15:58,  1.34it/s] 53%|█████▎    | 6902/13025 [1:56:57<1:30:31,  1.13it/s] 53%|█████▎    | 6904/13025 [1:56:58<1:27:33,  1.17it/s] 53%|█████▎    | 6907/13025 [1:57:00<1:11:06,  1.43it/s] 53%|█████▎    | 6908/13025 [1:57:01<1:23:20,  1.22it/s] 53%|█████▎    | 6911/13025 [1:57:03<1:07:27,  1.51it/s] 53%|█████▎    | 6912/13025 [1:57:04<1:19:55,  1.27it/s] 53%|█████▎    | 6914/13025 [1:57:06<1:21:48,  1.24it/s] 53%|█████▎    | 6915/13025 [1:57:07<1:38:01,  1.04it/s] 53%|█████▎    | 6916/13025 [1:57:09<1:52:46,  1.11s/it] 53%|█████▎    | 6917/13025 [1:57:11<2:13:30,  1.31s/it] 53%|█████▎    | 6918/13025 [1:57:13<2:32:53,  1.50s/it] 53%|█████▎    | 6919/13025 [1:57:15<2:50:17,  1.67s/it] 53%|█████▎    | 6920/13025 [1:57:17<2:59:30,  1.76s/it] 53%|█████▎    | 6921/13025 [1:57:19<2:56:01,  1.73s/it] 53%|█████▎    | 6922/13025 [1:57:20<2:50:20,  1.67s/it] 53%|█████▎    | 6923/13025 [1:57:22<2:49:30,  1.67s/it] 53%|█████▎    | 6924/13025 [1:57:24<2:50:02,  1.67s/it] 53%|█████▎    | 6925/13025 [1:57:25<2:44:57,  1.62s/it] 53%|█████▎    | 6926/13025 [1:57:27<2:41:01,  1.58s/it] 53%|█████▎    | 6927/13025 [1:57:28<2:39:56,  1.57s/it] 53%|█████▎    | 6928/13025 [1:57:30<2:36:35,  1.54s/it] 53%|█████▎    | 6931/13025 [1:57:31<1:35:32,  1.06it/s] 53%|█████▎    | 6932/13025 [1:57:33<1:50:46,  1.09s/it] 53%|█████▎    | 6934/13025 [1:57:34<1:35:06,  1.07it/s] 53%|█████▎    | 6935/13025 [1:57:36<1:44:09,  1.03s/it] 53%|█████▎    | 6936/13025 [1:57:37<1:58:35,  1.17s/it] 53%|█████▎    | 6937/13025 [1:57:39<2:09:50,  1.28s/it] 53%|█████▎    | 6938/13025 [1:57:40<2:11:24,  1.30s/it] 53%|█████▎    | 6940/13025 [1:57:41<1:43:31,  1.02s/it] 53%|█████▎    | 6941/13025 [1:57:43<1:50:37,  1.09s/it] 53%|█████▎    | 6942/13025 [1:57:44<1:58:51,  1.17s/it] 53%|█████▎    | 6943/13025 [1:57:46<2:05:00,  1.23s/it] 53%|█████▎    | 6947/13025 [1:57:47<1:14:27,  1.36it/s] 53%|█████▎    | 6948/13025 [1:57:49<1:30:49,  1.12it/s] 53%|█████▎    | 6950/13025 [1:57:50<1:27:28,  1.16it/s] 53%|█████▎    | 6951/13025 [1:57:52<1:39:04,  1.02it/s] 53%|█████▎    | 6952/13025 [1:57:53<1:50:50,  1.10s/it] 53%|█████▎    | 6953/13025 [1:57:55<2:02:16,  1.21s/it] 53%|█████▎    | 6954/13025 [1:57:57<2:13:32,  1.32s/it] 53%|█████▎    | 6956/13025 [1:57:58<1:53:22,  1.12s/it] 53%|█████▎    | 6957/13025 [1:58:00<2:06:49,  1.25s/it] 53%|█████▎    | 6958/13025 [1:58:02<2:13:17,  1.32s/it] 53%|█████▎    | 6961/13025 [1:58:03<1:33:15,  1.08it/s] 53%|█████▎    | 6963/13025 [1:58:05<1:29:59,  1.12it/s] 53%|█████▎    | 6965/13025 [1:58:06<1:26:21,  1.17it/s] 53%|█████▎    | 6966/13025 [1:58:08<1:41:09,  1.00s/it] 53%|█████▎    | 6967/13025 [1:58:10<2:02:33,  1.21s/it] 53%|█████▎    | 6968/13025 [1:58:12<2:26:50,  1.45s/it] 54%|█████▎    | 6969/13025 [1:58:15<2:46:42,  1.65s/it] 54%|█████▎    | 6970/13025 [1:58:16<2:51:24,  1.70s/it] 54%|█████▎    | 6971/13025 [1:58:18<2:53:52,  1.72s/it] 54%|█████▎    | 6973/13025 [1:58:20<2:11:59,  1.31s/it] 54%|█████▎    | 6974/13025 [1:58:21<2:17:50,  1.37s/it] 54%|█████▎    | 6975/13025 [1:58:23<2:20:07,  1.39s/it] 54%|█████▎    | 6977/13025 [1:58:24<1:53:35,  1.13s/it] 54%|█████▎    | 6979/13025 [1:58:26<1:41:04,  1.00s/it] 54%|█████▎    | 6980/13025 [1:58:27<1:48:01,  1.07s/it] 54%|█████▎    | 6982/13025 [1:58:29<1:33:55,  1.07it/s] 54%|█████▎    | 6985/13025 [1:58:30<1:16:06,  1.32it/s] 54%|█████▎    | 6986/13025 [1:58:32<1:31:55,  1.09it/s] 54%|█████▎    | 6987/13025 [1:58:34<1:46:48,  1.06s/it] 54%|█████▎    | 6993/13025 [1:58:35<53:21,  1.88it/s]   54%|█████▎    | 6995/13025 [1:58:36<57:21,  1.75it/s] 54%|█████▎    | 6996/13025 [1:58:38<1:13:17,  1.37it/s] 54%|█████▎    | 6997/13025 [1:58:39<1:24:54,  1.18it/s] 54%|█████▎    | 7000/13025 [1:58:41<1:11:59,  1.39it/s] 54%|█████▍    | 7002/13025 [1:58:42<1:10:21,  1.43it/s] 54%|█████▍    | 7004/13025 [1:58:44<1:13:08,  1.37it/s] 54%|█████▍    | 7006/13025 [1:58:45<1:15:14,  1.33it/s] 54%|█████▍    | 7007/13025 [1:58:47<1:25:50,  1.17it/s] 54%|█████▍    | 7009/13025 [1:58:48<1:23:50,  1.20it/s] 54%|█████▍    | 7010/13025 [1:58:50<1:37:45,  1.03it/s] 54%|█████▍    | 7012/13025 [1:58:52<1:32:09,  1.09it/s] 54%|█████▍    | 7013/13025 [1:58:53<1:42:46,  1.03s/it] 54%|█████▍    | 7014/13025 [1:58:55<1:57:52,  1.18s/it] 54%|█████▍    | 7015/13025 [1:58:56<2:06:13,  1.26s/it] 54%|█████▍    | 7016/13025 [1:58:58<2:12:44,  1.33s/it] 54%|█████▍    | 7017/13025 [1:58:59<2:17:07,  1.37s/it] 54%|█████▍    | 7020/13025 [1:59:01<1:29:03,  1.12it/s] 54%|█████▍    | 7023/13025 [1:59:02<1:09:35,  1.44it/s] 54%|█████▍    | 7024/13025 [1:59:03<1:21:42,  1.22it/s] 54%|█████▍    | 7025/13025 [1:59:05<1:37:18,  1.03it/s] 54%|█████▍    | 7026/13025 [1:59:07<1:52:05,  1.12s/it] 54%|█████▍    | 7029/13025 [1:59:09<1:28:30,  1.13it/s] 54%|█████▍    | 7030/13025 [1:59:11<1:54:23,  1.14s/it] 54%|█████▍    | 7031/13025 [1:59:13<2:09:19,  1.29s/it] 54%|█████▍    | 7034/13025 [1:59:15<1:36:57,  1.03it/s] 54%|█████▍    | 7036/13025 [1:59:16<1:36:10,  1.04it/s] 54%|█████▍    | 7037/13025 [1:59:18<1:48:39,  1.09s/it] 54%|█████▍    | 7038/13025 [1:59:20<1:59:22,  1.20s/it] 54%|█████▍    | 7039/13025 [1:59:21<2:08:33,  1.29s/it] 54%|█████▍    | 7042/13025 [1:59:23<1:29:50,  1.11it/s] 54%|█████▍    | 7043/13025 [1:59:24<1:38:27,  1.01it/s] 54%|█████▍    | 7045/13025 [1:59:26<1:32:17,  1.08it/s] 54%|█████▍    | 7048/13025 [1:59:27<1:14:16,  1.34it/s] 54%|█████▍    | 7051/13025 [1:59:29<1:04:03,  1.55it/s] 54%|█████▍    | 7054/13025 [1:59:30<56:46,  1.75it/s]   54%|█████▍    | 7056/13025 [1:59:32<1:03:19,  1.57it/s] 54%|█████▍    | 7057/13025 [1:59:33<1:18:33,  1.27it/s] 54%|█████▍    | 7058/13025 [1:59:35<1:33:55,  1.06it/s] 54%|█████▍    | 7059/13025 [1:59:36<1:41:20,  1.02s/it] 54%|█████▍    | 7060/13025 [1:59:38<1:47:52,  1.09s/it] 54%|█████▍    | 7061/13025 [1:59:39<2:01:25,  1.22s/it] 54%|█████▍    | 7063/13025 [1:59:41<1:38:25,  1.01it/s] 54%|█████▍    | 7064/13025 [1:59:42<1:51:38,  1.12s/it] 54%|█████▍    | 7065/13025 [1:59:44<2:03:31,  1.24s/it] 54%|█████▍    | 7069/13025 [1:59:45<1:11:15,  1.39it/s] 54%|█████▍    | 7070/13025 [1:59:47<1:22:23,  1.20it/s] 54%|█████▍    | 7071/13025 [1:59:48<1:31:49,  1.08it/s] 54%|█████▍    | 7073/13025 [1:59:49<1:26:25,  1.15it/s] 54%|█████▍    | 7074/13025 [1:59:51<1:42:22,  1.03s/it] 54%|█████▍    | 7075/13025 [1:59:53<1:56:18,  1.17s/it] 54%|█████▍    | 7077/13025 [1:59:54<1:43:58,  1.05s/it] 54%|█████▍    | 7078/13025 [1:59:56<1:49:54,  1.11s/it] 54%|█████▍    | 7079/13025 [1:59:58<2:04:38,  1.26s/it] 54%|█████▍    | 7081/13025 [1:59:59<1:42:56,  1.04s/it] 54%|█████▍    | 7082/13025 [2:00:00<1:49:13,  1.10s/it] 54%|█████▍    | 7083/13025 [2:00:02<2:02:49,  1.24s/it] 54%|█████▍    | 7084/13025 [2:00:03<2:07:22,  1.29s/it] 54%|█████▍    | 7085/13025 [2:00:05<2:15:30,  1.37s/it] 54%|█████▍    | 7086/13025 [2:00:07<2:22:08,  1.44s/it] 54%|█████▍    | 7088/13025 [2:00:08<1:54:14,  1.15s/it] 54%|█████▍    | 7089/13025 [2:00:10<2:20:40,  1.42s/it] 54%|█████▍    | 7091/13025 [2:00:13<2:06:41,  1.28s/it] 54%|█████▍    | 7093/13025 [2:00:15<1:56:36,  1.18s/it] 54%|█████▍    | 7094/13025 [2:00:16<2:09:40,  1.31s/it] 54%|█████▍    | 7096/13025 [2:00:18<1:52:11,  1.14s/it] 55%|█████▍    | 7099/13025 [2:00:20<1:26:27,  1.14it/s] 55%|█████▍    | 7100/13025 [2:00:21<1:35:01,  1.04it/s] 55%|█████▍    | 7101/13025 [2:00:23<1:47:42,  1.09s/it] 55%|█████▍    | 7103/13025 [2:00:24<1:38:04,  1.01it/s] 55%|█████▍    | 7106/13025 [2:00:26<1:18:25,  1.26it/s] 55%|█████▍    | 7107/13025 [2:00:28<1:32:39,  1.06it/s] 55%|█████▍    | 7109/13025 [2:00:29<1:28:03,  1.12it/s] 55%|█████▍    | 7110/13025 [2:00:31<1:40:29,  1.02s/it] 55%|█████▍    | 7112/13025 [2:00:32<1:29:50,  1.10it/s] 55%|█████▍    | 7114/13025 [2:00:34<1:24:40,  1.16it/s] 55%|█████▍    | 7117/13025 [2:00:35<1:11:56,  1.37it/s] 55%|█████▍    | 7118/13025 [2:00:37<1:26:38,  1.14it/s] 55%|█████▍    | 7120/13025 [2:00:39<1:23:00,  1.19it/s] 55%|█████▍    | 7122/13025 [2:00:40<1:21:01,  1.21it/s] 55%|█████▍    | 7124/13025 [2:00:42<1:20:27,  1.22it/s] 55%|█████▍    | 7125/13025 [2:00:43<1:35:13,  1.03it/s] 55%|█████▍    | 7126/13025 [2:00:45<1:49:04,  1.11s/it] 55%|█████▍    | 7128/13025 [2:00:46<1:34:14,  1.04it/s] 55%|█████▍    | 7129/13025 [2:00:48<1:45:15,  1.07s/it] 55%|█████▍    | 7130/13025 [2:00:49<1:53:49,  1.16s/it] 55%|█████▍    | 7133/13025 [2:00:51<1:20:19,  1.22it/s] 55%|█████▍    | 7135/13025 [2:00:52<1:18:17,  1.25it/s] 55%|█████▍    | 7138/13025 [2:00:54<1:07:37,  1.45it/s] 55%|█████▍    | 7139/13025 [2:00:55<1:20:25,  1.22it/s] 55%|█████▍    | 7140/13025 [2:00:57<1:29:24,  1.10it/s] 55%|█████▍    | 7141/13025 [2:00:58<1:41:08,  1.03s/it] 55%|█████▍    | 7142/13025 [2:01:00<1:52:30,  1.15s/it] 55%|█████▍    | 7144/13025 [2:01:01<1:38:41,  1.01s/it] 55%|█████▍    | 7145/13025 [2:01:03<1:52:39,  1.15s/it] 55%|█████▍    | 7148/13025 [2:01:05<1:24:46,  1.16it/s] 55%|█████▍    | 7150/13025 [2:01:06<1:19:40,  1.23it/s] 55%|█████▍    | 7151/13025 [2:01:08<1:32:11,  1.06it/s] 55%|█████▍    | 7153/13025 [2:01:10<1:36:42,  1.01it/s] 55%|█████▍    | 7158/13025 [2:01:12<1:07:16,  1.45it/s] 55%|█████▍    | 7160/13025 [2:01:14<1:17:26,  1.26it/s] 55%|█████▍    | 7162/13025 [2:01:16<1:20:36,  1.21it/s] 55%|█████▌    | 7165/13025 [2:01:18<1:11:15,  1.37it/s] 55%|█████▌    | 7166/13025 [2:01:19<1:24:21,  1.16it/s] 55%|█████▌    | 7167/13025 [2:01:21<1:34:08,  1.04it/s] 55%|█████▌    | 7168/13025 [2:01:22<1:46:27,  1.09s/it] 55%|█████▌    | 7171/13025 [2:01:24<1:20:16,  1.22it/s] 55%|█████▌    | 7172/13025 [2:01:25<1:30:25,  1.08it/s] 55%|█████▌    | 7173/13025 [2:01:27<1:44:40,  1.07s/it] 55%|█████▌    | 7174/13025 [2:01:28<1:50:18,  1.13s/it] 55%|█████▌    | 7180/13025 [2:01:30<53:53,  1.81it/s]   55%|█████▌    | 7181/13025 [2:01:31<1:06:32,  1.46it/s] 55%|█████▌    | 7182/13025 [2:01:33<1:21:14,  1.20it/s] 55%|█████▌    | 7183/13025 [2:01:34<1:34:32,  1.03it/s] 55%|█████▌    | 7187/13025 [2:01:36<1:06:19,  1.47it/s] 55%|█████▌    | 7189/13025 [2:01:38<1:08:54,  1.41it/s] 55%|█████▌    | 7190/13025 [2:01:39<1:19:54,  1.22it/s] 55%|█████▌    | 7192/13025 [2:01:40<1:14:51,  1.30it/s] 55%|█████▌    | 7193/13025 [2:01:42<1:31:13,  1.07it/s] 55%|█████▌    | 7195/13025 [2:01:44<1:27:46,  1.11it/s] 55%|█████▌    | 7196/13025 [2:01:45<1:39:31,  1.02s/it] 55%|█████▌    | 7197/13025 [2:01:47<1:49:49,  1.13s/it] 55%|█████▌    | 7198/13025 [2:01:48<1:54:00,  1.17s/it] 55%|█████▌    | 7200/13025 [2:01:49<1:33:43,  1.04it/s] 55%|█████▌    | 7202/13025 [2:01:51<1:24:25,  1.15it/s] 55%|█████▌    | 7203/13025 [2:01:52<1:39:02,  1.02s/it] 55%|█████▌    | 7207/13025 [2:01:54<1:05:54,  1.47it/s] 55%|█████▌    | 7209/13025 [2:01:55<1:06:30,  1.46it/s] 55%|█████▌    | 7210/13025 [2:01:57<1:18:11,  1.24it/s] 55%|█████▌    | 7212/13025 [2:01:58<1:13:29,  1.32it/s] 55%|█████▌    | 7214/13025 [2:02:00<1:13:30,  1.32it/s] 55%|█████▌    | 7215/13025 [2:02:01<1:27:18,  1.11it/s] 55%|█████▌    | 7216/13025 [2:02:03<1:41:27,  1.05s/it] 55%|█████▌    | 7218/13025 [2:02:04<1:30:59,  1.06it/s] 55%|█████▌    | 7219/13025 [2:02:06<1:42:27,  1.06s/it] 55%|█████▌    | 7221/13025 [2:02:07<1:32:06,  1.05it/s] 55%|█████▌    | 7223/13025 [2:02:09<1:30:49,  1.06it/s] 55%|█████▌    | 7225/13025 [2:02:11<1:29:58,  1.07it/s] 55%|█████▌    | 7226/13025 [2:02:13<1:46:16,  1.10s/it] 55%|█████▌    | 7227/13025 [2:02:15<2:02:18,  1.27s/it] 55%|█████▌    | 7228/13025 [2:02:17<2:14:23,  1.39s/it] 56%|█████▌    | 7229/13025 [2:02:18<2:14:42,  1.39s/it] 56%|█████▌    | 7230/13025 [2:02:20<2:19:51,  1.45s/it] 56%|█████▌    | 7232/13025 [2:02:21<1:55:03,  1.19s/it] 56%|█████▌    | 7233/13025 [2:02:23<2:03:07,  1.28s/it] 56%|█████▌    | 7235/13025 [2:02:24<1:40:49,  1.04s/it] 56%|█████▌    | 7236/13025 [2:02:25<1:46:32,  1.10s/it] 56%|█████▌    | 7238/13025 [2:02:27<1:31:39,  1.05it/s] 56%|█████▌    | 7239/13025 [2:02:28<1:39:19,  1.03s/it] 56%|█████▌    | 7240/13025 [2:02:30<1:52:37,  1.17s/it] 56%|█████▌    | 7243/13025 [2:02:31<1:17:19,  1.25it/s] 56%|█████▌    | 7245/13025 [2:02:33<1:15:56,  1.27it/s] 56%|█████▌    | 7247/13025 [2:02:34<1:15:30,  1.28it/s] 56%|█████▌    | 7248/13025 [2:02:36<1:28:25,  1.09it/s] 56%|█████▌    | 7249/13025 [2:02:37<1:38:17,  1.02s/it] 56%|█████▌    | 7250/13025 [2:02:39<1:52:03,  1.16s/it] 56%|█████▌    | 7252/13025 [2:02:40<1:37:22,  1.01s/it] 56%|█████▌    | 7254/13025 [2:02:42<1:31:34,  1.05it/s] 56%|█████▌    | 7255/13025 [2:02:44<1:45:10,  1.09s/it] 56%|█████▌    | 7256/13025 [2:02:45<1:57:24,  1.22s/it] 56%|█████▌    | 7257/13025 [2:02:47<2:00:02,  1.25s/it] 56%|█████▌    | 7258/13025 [2:02:48<2:04:13,  1.29s/it] 56%|█████▌    | 7261/13025 [2:02:49<1:21:04,  1.18it/s] 56%|█████▌    | 7262/13025 [2:02:51<1:37:30,  1.02s/it] 56%|█████▌    | 7263/13025 [2:02:52<1:43:51,  1.08s/it] 56%|█████▌    | 7264/13025 [2:02:54<1:53:31,  1.18s/it] 56%|█████▌    | 7265/13025 [2:02:56<2:05:07,  1.30s/it] 56%|█████▌    | 7266/13025 [2:02:57<2:06:27,  1.32s/it] 56%|█████▌    | 7268/13025 [2:02:58<1:38:44,  1.03s/it] 56%|█████▌    | 7270/13025 [2:03:00<1:28:28,  1.08it/s] 56%|█████▌    | 7271/13025 [2:03:01<1:36:45,  1.01s/it] 56%|█████▌    | 7273/13025 [2:03:03<1:29:44,  1.07it/s] 56%|█████▌    | 7274/13025 [2:03:04<1:43:07,  1.08s/it] 56%|█████▌    | 7279/13025 [2:03:06<57:48,  1.66it/s]   56%|█████▌    | 7280/13025 [2:03:07<1:07:55,  1.41it/s] 56%|█████▌    | 7281/13025 [2:03:08<1:17:48,  1.23it/s] 56%|█████▌    | 7282/13025 [2:03:10<1:40:48,  1.05s/it] 56%|█████▌    | 7283/13025 [2:03:12<2:00:14,  1.26s/it] 56%|█████▌    | 7284/13025 [2:03:14<2:18:32,  1.45s/it] 56%|█████▌    | 7286/13025 [2:03:16<1:58:13,  1.24s/it] 56%|█████▌    | 7288/13025 [2:03:18<1:40:53,  1.06s/it] 56%|█████▌    | 7289/13025 [2:03:19<1:48:04,  1.13s/it] 56%|█████▌    | 7290/13025 [2:03:21<1:52:02,  1.17s/it] 56%|█████▌    | 7291/13025 [2:03:22<1:55:15,  1.21s/it] 56%|█████▌    | 7293/13025 [2:03:23<1:38:20,  1.03s/it] 56%|█████▌    | 7295/13025 [2:03:25<1:29:26,  1.07it/s] 56%|█████▌    | 7299/13025 [2:03:27<1:02:36,  1.52it/s] 56%|█████▌    | 7300/13025 [2:03:28<1:15:57,  1.26it/s] 56%|█████▌    | 7302/13025 [2:03:30<1:15:19,  1.27it/s] 56%|█████▌    | 7303/13025 [2:03:31<1:28:28,  1.08it/s] 56%|█████▌    | 7304/13025 [2:03:33<1:38:10,  1.03s/it] 56%|█████▌    | 7308/13025 [2:03:34<1:04:10,  1.48it/s] 56%|█████▌    | 7309/13025 [2:03:36<1:19:00,  1.21it/s] 56%|█████▌    | 7310/13025 [2:03:37<1:32:46,  1.03it/s] 56%|█████▌    | 7311/13025 [2:03:39<1:46:20,  1.12s/it] 56%|█████▌    | 7312/13025 [2:03:41<1:58:22,  1.24s/it] 56%|█████▌    | 7313/13025 [2:03:42<2:00:14,  1.26s/it] 56%|█████▌    | 7314/13025 [2:03:44<2:07:47,  1.34s/it] 56%|█████▌    | 7315/13025 [2:03:45<2:13:24,  1.40s/it] 56%|█████▌    | 7318/13025 [2:03:47<1:27:52,  1.08it/s] 56%|█████▌    | 7319/13025 [2:03:48<1:38:50,  1.04s/it] 56%|█████▌    | 7320/13025 [2:03:50<1:50:18,  1.16s/it] 56%|█████▌    | 7321/13025 [2:03:51<1:58:31,  1.25s/it] 56%|█████▌    | 7324/13025 [2:03:53<1:22:27,  1.15it/s] 56%|█████▌    | 7325/13025 [2:03:54<1:34:37,  1.00it/s] 56%|█████▋    | 7327/13025 [2:03:56<1:23:06,  1.14it/s] 56%|█████▋    | 7329/13025 [2:03:57<1:20:04,  1.19it/s] 56%|█████▋    | 7331/13025 [2:03:59<1:15:48,  1.25it/s] 56%|█████▋    | 7332/13025 [2:04:00<1:26:48,  1.09it/s] 56%|█████▋    | 7333/13025 [2:04:02<1:42:24,  1.08s/it] 56%|█████▋    | 7334/13025 [2:04:03<1:56:58,  1.23s/it] 56%|█████▋    | 7335/13025 [2:04:05<2:03:45,  1.31s/it] 56%|█████▋    | 7337/13025 [2:04:06<1:40:01,  1.06s/it] 56%|█████▋    | 7338/13025 [2:04:08<1:50:53,  1.17s/it] 56%|█████▋    | 7342/13025 [2:04:10<1:18:18,  1.21it/s] 56%|█████▋    | 7343/13025 [2:04:12<1:41:17,  1.07s/it] 56%|█████▋    | 7344/13025 [2:04:15<2:01:11,  1.28s/it] 56%|█████▋    | 7345/13025 [2:04:17<2:17:17,  1.45s/it] 56%|█████▋    | 7346/13025 [2:04:18<2:17:07,  1.45s/it] 56%|█████▋    | 7347/13025 [2:04:20<2:20:57,  1.49s/it] 56%|█████▋    | 7351/13025 [2:04:21<1:18:59,  1.20it/s] 56%|█████▋    | 7352/13025 [2:04:23<1:31:10,  1.04it/s] 56%|█████▋    | 7353/13025 [2:04:24<1:44:26,  1.10s/it] 56%|█████▋    | 7354/13025 [2:04:26<1:54:07,  1.21s/it] 56%|█████▋    | 7355/13025 [2:04:28<2:01:29,  1.29s/it] 56%|█████▋    | 7356/13025 [2:04:29<2:09:21,  1.37s/it] 56%|█████▋    | 7359/13025 [2:04:31<1:28:23,  1.07it/s] 57%|█████▋    | 7361/13025 [2:04:32<1:19:48,  1.18it/s] 57%|█████▋    | 7363/13025 [2:04:34<1:18:13,  1.21it/s] 57%|█████▋    | 7366/13025 [2:04:35<1:05:48,  1.43it/s] 57%|█████▋    | 7369/13025 [2:04:37<56:39,  1.66it/s]   57%|█████▋    | 7370/13025 [2:04:38<1:06:36,  1.42it/s] 57%|█████▋    | 7372/13025 [2:04:39<1:05:13,  1.44it/s] 57%|█████▋    | 7373/13025 [2:04:41<1:20:52,  1.16it/s] 57%|█████▋    | 7375/13025 [2:04:42<1:17:39,  1.21it/s] 57%|█████▋    | 7376/13025 [2:04:44<1:33:27,  1.01it/s] 57%|█████▋    | 7377/13025 [2:04:45<1:39:53,  1.06s/it] 57%|█████▋    | 7379/13025 [2:04:47<1:30:24,  1.04it/s] 57%|█████▋    | 7380/13025 [2:04:49<1:43:33,  1.10s/it] 57%|█████▋    | 7381/13025 [2:04:50<1:53:01,  1.20s/it] 57%|█████▋    | 7384/13025 [2:04:51<1:18:28,  1.20it/s] 57%|█████▋    | 7387/13025 [2:04:53<1:07:09,  1.40it/s] 57%|█████▋    | 7390/13025 [2:04:55<59:38,  1.57it/s]   57%|█████▋    | 7391/13025 [2:04:56<1:11:18,  1.32it/s] 57%|█████▋    | 7392/13025 [2:04:58<1:22:51,  1.13it/s] 57%|█████▋    | 7393/13025 [2:04:59<1:37:27,  1.04s/it] 57%|█████▋    | 7395/13025 [2:05:01<1:30:43,  1.03it/s] 57%|█████▋    | 7399/13025 [2:05:02<59:54,  1.57it/s]   57%|█████▋    | 7401/13025 [2:05:03<1:00:34,  1.55it/s] 57%|█████▋    | 7403/13025 [2:05:05<1:01:04,  1.53it/s] 57%|█████▋    | 7404/13025 [2:05:06<1:14:20,  1.26it/s] 57%|█████▋    | 7405/13025 [2:05:08<1:23:36,  1.12it/s] 57%|█████▋    | 7406/13025 [2:05:09<1:39:35,  1.06s/it] 57%|█████▋    | 7409/13025 [2:05:11<1:19:17,  1.18it/s] 57%|█████▋    | 7410/13025 [2:05:13<1:35:54,  1.02s/it] 57%|█████▋    | 7411/13025 [2:05:15<1:51:33,  1.19s/it] 57%|█████▋    | 7412/13025 [2:05:17<2:04:50,  1.33s/it] 57%|█████▋    | 7413/13025 [2:05:18<2:11:58,  1.41s/it] 57%|█████▋    | 7414/13025 [2:05:20<2:16:22,  1.46s/it] 57%|█████▋    | 7418/13025 [2:05:21<1:17:03,  1.21it/s] 57%|█████▋    | 7419/13025 [2:05:23<1:30:30,  1.03it/s] 57%|█████▋    | 7420/13025 [2:05:24<1:38:32,  1.05s/it] 57%|█████▋    | 7421/13025 [2:05:26<1:51:58,  1.20s/it] 57%|█████▋    | 7422/13025 [2:05:28<1:56:38,  1.25s/it] 57%|█████▋    | 7423/13025 [2:05:29<2:04:14,  1.33s/it] 57%|█████▋    | 7424/13025 [2:05:31<2:12:09,  1.42s/it] 57%|█████▋    | 7425/13025 [2:05:32<2:14:17,  1.44s/it] 57%|█████▋    | 7426/13025 [2:05:34<2:19:57,  1.50s/it] 57%|█████▋    | 7429/13025 [2:05:36<1:32:45,  1.01it/s] 57%|█████▋    | 7431/13025 [2:05:37<1:26:40,  1.08it/s] 57%|█████▋    | 7432/13025 [2:05:39<1:37:21,  1.04s/it] 57%|█████▋    | 7433/13025 [2:05:40<1:48:55,  1.17s/it] 57%|█████▋    | 7434/13025 [2:05:42<1:52:07,  1.20s/it] 57%|█████▋    | 7435/13025 [2:05:43<1:59:28,  1.28s/it] 57%|█████▋    | 7436/13025 [2:05:45<2:00:22,  1.29s/it] 57%|█████▋    | 7437/13025 [2:05:46<2:00:58,  1.30s/it] 57%|█████▋    | 7438/13025 [2:05:47<2:01:26,  1.30s/it] 57%|█████▋    | 7439/13025 [2:05:49<2:01:30,  1.31s/it] 57%|█████▋    | 7440/13025 [2:05:50<2:11:35,  1.41s/it] 57%|█████▋    | 7441/13025 [2:05:52<2:19:15,  1.50s/it] 57%|█████▋    | 7444/13025 [2:05:54<1:30:29,  1.03it/s] 57%|█████▋    | 7448/13025 [2:05:55<1:00:53,  1.53it/s] 57%|█████▋    | 7449/13025 [2:05:57<1:15:22,  1.23it/s] 57%|█████▋    | 7450/13025 [2:05:58<1:23:57,  1.11it/s] 57%|█████▋    | 7451/13025 [2:06:00<1:39:28,  1.07s/it] 57%|█████▋    | 7452/13025 [2:06:01<1:52:48,  1.21s/it] 57%|█████▋    | 7453/13025 [2:06:03<2:03:48,  1.33s/it] 57%|█████▋    | 7457/13025 [2:06:04<1:09:27,  1.34it/s] 57%|█████▋    | 7458/13025 [2:06:06<1:18:45,  1.18it/s] 57%|█████▋    | 7459/13025 [2:06:07<1:27:52,  1.06it/s] 57%|█████▋    | 7460/13025 [2:06:09<1:41:19,  1.09s/it] 57%|█████▋    | 7461/13025 [2:06:11<2:10:10,  1.40s/it] 57%|█████▋    | 7462/13025 [2:06:13<2:20:21,  1.51s/it] 57%|█████▋    | 7463/13025 [2:06:15<2:42:06,  1.75s/it] 57%|█████▋    | 7464/13025 [2:06:17<2:42:47,  1.76s/it] 57%|█████▋    | 7465/13025 [2:06:19<2:37:30,  1.70s/it] 57%|█████▋    | 7466/13025 [2:06:20<2:35:25,  1.68s/it] 57%|█████▋    | 7468/13025 [2:06:22<1:53:09,  1.22s/it] 57%|█████▋    | 7469/13025 [2:06:23<1:55:39,  1.25s/it] 57%|█████▋    | 7470/13025 [2:06:24<2:01:44,  1.31s/it] 57%|█████▋    | 7471/13025 [2:06:26<2:01:38,  1.31s/it] 57%|█████▋    | 7473/13025 [2:06:27<1:38:13,  1.06s/it] 57%|█████▋    | 7474/13025 [2:06:29<1:47:01,  1.16s/it] 57%|█████▋    | 7477/13025 [2:06:30<1:16:47,  1.20it/s] 57%|█████▋    | 7481/13025 [2:06:32<54:40,  1.69it/s]   57%|█████▋    | 7482/13025 [2:06:33<1:08:28,  1.35it/s] 57%|█████▋    | 7485/13025 [2:06:35<59:17,  1.56it/s]   57%|█████▋    | 7486/13025 [2:06:36<1:13:21,  1.26it/s] 57%|█████▋    | 7488/13025 [2:06:38<1:10:15,  1.31it/s] 57%|█████▋    | 7489/13025 [2:06:39<1:19:36,  1.16it/s] 58%|█████▊    | 7493/13025 [2:06:40<54:44,  1.68it/s]   58%|█████▊    | 7494/13025 [2:06:42<1:05:15,  1.41it/s] 58%|█████▊    | 7496/13025 [2:06:43<1:06:00,  1.40it/s] 58%|█████▊    | 7498/13025 [2:06:44<1:04:18,  1.43it/s] 58%|█████▊    | 7499/13025 [2:06:46<1:14:40,  1.23it/s] 58%|█████▊    | 7501/13025 [2:06:47<1:13:35,  1.25it/s] 58%|█████▊    | 7504/13025 [2:06:49<59:37,  1.54it/s]   58%|█████▊    | 7505/13025 [2:06:50<1:13:19,  1.25it/s] 58%|█████▊    | 7508/13025 [2:06:51<59:48,  1.54it/s]   58%|█████▊    | 7510/13025 [2:06:53<1:02:12,  1.48it/s] 58%|█████▊    | 7512/13025 [2:06:54<1:03:25,  1.45it/s] 58%|█████▊    | 7514/13025 [2:06:56<1:02:18,  1.47it/s] 58%|█████▊    | 7515/13025 [2:06:57<1:12:26,  1.27it/s] 58%|█████▊    | 7517/13025 [2:06:58<1:08:24,  1.34it/s] 58%|█████▊    | 7518/13025 [2:07:00<1:19:51,  1.15it/s] 58%|█████▊    | 7519/13025 [2:07:01<1:36:03,  1.05s/it] 58%|█████▊    | 7520/13025 [2:07:03<1:47:46,  1.17s/it] 58%|█████▊    | 7521/13025 [2:07:05<1:55:29,  1.26s/it] 58%|█████▊    | 7522/13025 [2:07:06<2:06:14,  1.38s/it] 58%|█████▊    | 7523/13025 [2:07:08<2:13:24,  1.45s/it] 58%|█████▊    | 7525/13025 [2:07:10<1:59:46,  1.31s/it] 58%|█████▊    | 7526/13025 [2:07:12<2:19:22,  1.52s/it] 58%|█████▊    | 7529/13025 [2:07:14<1:40:47,  1.10s/it] 58%|█████▊    | 7534/13025 [2:07:17<1:07:35,  1.35it/s] 58%|█████▊    | 7536/13025 [2:07:18<1:10:00,  1.31it/s] 58%|█████▊    | 7537/13025 [2:07:20<1:17:32,  1.18it/s] 58%|█████▊    | 7538/13025 [2:07:21<1:29:10,  1.03it/s] 58%|█████▊    | 7539/13025 [2:07:23<1:41:55,  1.11s/it] 58%|█████▊    | 7540/13025 [2:07:25<1:51:46,  1.22s/it] 58%|█████▊    | 7541/13025 [2:07:26<1:59:55,  1.31s/it] 58%|█████▊    | 7545/13025 [2:07:28<1:12:34,  1.26it/s] 58%|█████▊    | 7546/13025 [2:07:29<1:22:04,  1.11it/s] 58%|█████▊    | 7547/13025 [2:07:31<1:35:25,  1.05s/it] 58%|█████▊    | 7549/13025 [2:07:32<1:27:12,  1.05it/s] 58%|█████▊    | 7550/13025 [2:07:34<1:35:35,  1.05s/it] 58%|█████▊    | 7554/13025 [2:07:35<1:00:18,  1.51it/s] 58%|█████▊    | 7556/13025 [2:07:37<1:03:10,  1.44it/s] 58%|█████▊    | 7559/13025 [2:07:38<58:37,  1.55it/s]   58%|█████▊    | 7561/13025 [2:07:40<1:02:30,  1.46it/s] 58%|█████▊    | 7562/13025 [2:07:42<1:16:07,  1.20it/s] 58%|█████▊    | 7563/13025 [2:07:43<1:30:41,  1.00it/s] 58%|█████▊    | 7566/13025 [2:07:45<1:08:13,  1.33it/s] 58%|█████▊    | 7567/13025 [2:07:46<1:17:07,  1.18it/s] 58%|█████▊    | 7569/13025 [2:07:47<1:12:51,  1.25it/s] 58%|█████▊    | 7570/13025 [2:07:49<1:23:15,  1.09it/s] 58%|█████▊    | 7571/13025 [2:07:50<1:38:28,  1.08s/it] 58%|█████▊    | 7572/13025 [2:07:52<1:43:18,  1.14s/it] 58%|█████▊    | 7573/13025 [2:07:53<1:47:36,  1.18s/it] 58%|█████▊    | 7574/13025 [2:07:54<1:51:15,  1.22s/it] 58%|█████▊    | 7575/13025 [2:07:56<1:53:22,  1.25s/it] 58%|█████▊    | 7576/13025 [2:07:57<2:02:14,  1.35s/it] 58%|█████▊    | 7577/13025 [2:07:59<2:01:21,  1.34s/it] 58%|█████▊    | 7578/13025 [2:08:00<2:05:29,  1.38s/it] 58%|█████▊    | 7581/13025 [2:08:01<1:18:04,  1.16it/s] 58%|█████▊    | 7582/13025 [2:08:03<1:33:56,  1.04s/it] 58%|█████▊    | 7588/13025 [2:08:05<50:23,  1.80it/s]   58%|█████▊    | 7594/13025 [2:08:06<35:54,  2.52it/s] 58%|█████▊    | 7595/13025 [2:08:08<48:10,  1.88it/s] 58%|█████▊    | 7596/13025 [2:08:10<1:04:37,  1.40it/s] 58%|█████▊    | 7597/13025 [2:08:12<1:20:43,  1.12it/s] 58%|█████▊    | 7599/13025 [2:08:14<1:29:11,  1.01it/s] 58%|█████▊    | 7600/13025 [2:08:16<1:47:45,  1.19s/it] 58%|█████▊    | 7601/13025 [2:08:18<1:56:29,  1.29s/it] 58%|█████▊    | 7602/13025 [2:08:20<2:02:59,  1.36s/it] 58%|█████▊    | 7603/13025 [2:08:21<2:10:09,  1.44s/it] 58%|█████▊    | 7606/13025 [2:08:23<1:28:13,  1.02it/s] 58%|█████▊    | 7607/13025 [2:08:24<1:38:21,  1.09s/it] 58%|█████▊    | 7608/13025 [2:08:26<1:49:51,  1.22s/it] 58%|█████▊    | 7609/13025 [2:08:27<1:52:03,  1.24s/it] 58%|█████▊    | 7614/13025 [2:08:29<58:45,  1.53it/s]   58%|█████▊    | 7615/13025 [2:08:31<1:11:11,  1.27it/s] 58%|█████▊    | 7616/13025 [2:08:32<1:26:10,  1.05it/s] 58%|█████▊    | 7617/13025 [2:08:34<1:40:03,  1.11s/it] 58%|█████▊    | 7618/13025 [2:08:35<1:44:07,  1.16s/it] 58%|█████▊    | 7619/13025 [2:08:37<1:47:42,  1.20s/it] 59%|█████▊    | 7620/13025 [2:08:38<1:57:03,  1.30s/it] 59%|█████▊    | 7622/13025 [2:08:40<1:38:03,  1.09s/it] 59%|█████▊    | 7624/13025 [2:08:41<1:28:42,  1.01it/s] 59%|█████▊    | 7625/13025 [2:08:43<1:41:39,  1.13s/it] 59%|█████▊    | 7628/13025 [2:08:45<1:14:53,  1.20it/s] 59%|█████▊    | 7629/13025 [2:08:46<1:26:13,  1.04it/s] 59%|█████▊    | 7630/13025 [2:08:48<1:38:31,  1.10s/it] 59%|█████▊    | 7631/13025 [2:08:49<1:45:09,  1.17s/it] 59%|█████▊    | 7632/13025 [2:08:51<1:50:35,  1.23s/it] 59%|█████▊    | 7633/13025 [2:08:52<1:52:43,  1.25s/it] 59%|█████▊    | 7634/13025 [2:08:53<1:54:21,  1.27s/it] 59%|█████▊    | 7635/13025 [2:08:55<2:02:25,  1.36s/it] 59%|█████▊    | 7638/13025 [2:08:56<1:22:57,  1.08it/s] 59%|█████▊    | 7640/13025 [2:08:58<1:18:43,  1.14it/s] 59%|█████▊    | 7642/13025 [2:09:00<1:17:17,  1.16it/s] 59%|█████▊    | 7644/13025 [2:09:01<1:11:44,  1.25it/s] 59%|█████▊    | 7645/13025 [2:09:02<1:20:27,  1.11it/s] 59%|█████▊    | 7646/13025 [2:09:04<1:30:19,  1.01s/it] 59%|█████▊    | 7648/13025 [2:09:05<1:21:18,  1.10it/s] 59%|█████▊    | 7649/13025 [2:09:07<1:32:41,  1.03s/it] 59%|█████▊    | 7650/13025 [2:09:08<1:41:02,  1.13s/it] 59%|█████▊    | 7652/13025 [2:09:10<1:34:11,  1.05s/it] 59%|█████▉    | 7654/13025 [2:09:12<1:32:21,  1.03s/it] 59%|█████▉    | 7656/13025 [2:09:14<1:28:32,  1.01it/s] 59%|█████▉    | 7657/13025 [2:09:16<1:48:20,  1.21s/it] 59%|█████▉    | 7658/13025 [2:09:18<1:55:47,  1.29s/it] 59%|█████▉    | 7660/13025 [2:09:19<1:34:24,  1.06s/it] 59%|█████▉    | 7661/13025 [2:09:21<1:46:50,  1.20s/it] 59%|█████▉    | 7663/13025 [2:09:22<1:35:02,  1.06s/it] 59%|█████▉    | 7664/13025 [2:09:24<1:46:16,  1.19s/it] 59%|█████▉    | 7665/13025 [2:09:25<1:51:35,  1.25s/it] 59%|█████▉    | 7667/13025 [2:09:27<1:36:43,  1.08s/it] 59%|█████▉    | 7668/13025 [2:09:29<1:48:24,  1.21s/it] 59%|█████▉    | 7669/13025 [2:09:30<1:57:03,  1.31s/it] 59%|█████▉    | 7670/13025 [2:09:32<1:57:21,  1.31s/it] 59%|█████▉    | 7673/13025 [2:09:33<1:16:23,  1.17it/s] 59%|█████▉    | 7674/13025 [2:09:34<1:24:42,  1.05it/s] 59%|█████▉    | 7676/13025 [2:09:36<1:15:20,  1.18it/s] 59%|█████▉    | 7678/13025 [2:09:37<1:13:32,  1.21it/s] 59%|█████▉    | 7679/13025 [2:09:39<1:24:06,  1.06it/s] 59%|█████▉    | 7681/13025 [2:09:40<1:15:25,  1.18it/s] 59%|█████▉    | 7684/13025 [2:09:41<59:55,  1.49it/s]   59%|█████▉    | 7685/13025 [2:09:43<1:14:33,  1.19it/s] 59%|█████▉    | 7686/13025 [2:09:45<1:29:47,  1.01s/it] 59%|█████▉    | 7687/13025 [2:09:46<1:42:55,  1.16s/it] 59%|█████▉    | 7690/13025 [2:09:48<1:12:06,  1.23it/s] 59%|█████▉    | 7691/13025 [2:09:49<1:20:47,  1.10it/s] 59%|█████▉    | 7693/13025 [2:09:50<1:12:52,  1.22it/s] 59%|█████▉    | 7695/13025 [2:09:52<1:12:14,  1.23it/s] 59%|█████▉    | 7697/13025 [2:09:53<1:07:41,  1.31it/s] 59%|█████▉    | 7699/13025 [2:09:55<1:04:38,  1.37it/s] 59%|█████▉    | 7701/13025 [2:09:56<1:02:42,  1.41it/s] 59%|█████▉    | 7703/13025 [2:09:57<1:03:02,  1.41it/s] 59%|█████▉    | 7705/13025 [2:09:59<1:02:53,  1.41it/s] 59%|█████▉    | 7706/13025 [2:10:00<1:12:26,  1.22it/s] 59%|█████▉    | 7708/13025 [2:10:01<1:07:37,  1.31it/s] 59%|█████▉    | 7709/13025 [2:10:03<1:17:06,  1.15it/s] 59%|█████▉    | 7712/13025 [2:10:04<1:05:06,  1.36it/s] 59%|█████▉    | 7714/13025 [2:10:06<1:02:58,  1.41it/s] 59%|█████▉    | 7716/13025 [2:10:07<1:04:00,  1.38it/s] 59%|█████▉    | 7717/13025 [2:10:09<1:14:22,  1.19it/s] 59%|█████▉    | 7718/13025 [2:10:11<1:39:56,  1.13s/it] 59%|█████▉    | 7719/13025 [2:10:13<1:57:23,  1.33s/it] 59%|█████▉    | 7720/13025 [2:10:15<2:16:54,  1.55s/it] 59%|█████▉    | 7723/13025 [2:10:17<1:38:30,  1.11s/it] 59%|█████▉    | 7725/13025 [2:10:19<1:30:53,  1.03s/it] 59%|█████▉    | 7727/13025 [2:10:21<1:26:03,  1.03it/s] 59%|█████▉    | 7728/13025 [2:10:22<1:37:47,  1.11s/it] 59%|█████▉    | 7730/13025 [2:10:24<1:29:08,  1.01s/it] 59%|█████▉    | 7731/13025 [2:10:26<1:39:32,  1.13s/it] 59%|█████▉    | 7732/13025 [2:10:27<1:44:01,  1.18s/it] 59%|█████▉    | 7733/13025 [2:10:28<1:47:15,  1.22s/it] 59%|█████▉    | 7734/13025 [2:10:30<1:49:39,  1.24s/it] 59%|█████▉    | 7736/13025 [2:10:31<1:29:52,  1.02s/it] 59%|█████▉    | 7737/13025 [2:10:32<1:37:56,  1.11s/it] 59%|█████▉    | 7739/13025 [2:10:34<1:26:18,  1.02it/s] 59%|█████▉    | 7740/13025 [2:10:36<1:36:48,  1.10s/it] 59%|█████▉    | 7742/13025 [2:10:37<1:25:42,  1.03it/s] 59%|█████▉    | 7743/13025 [2:10:39<1:38:29,  1.12s/it] 59%|█████▉    | 7748/13025 [2:10:40<55:48,  1.58it/s]   59%|█████▉    | 7749/13025 [2:10:42<1:08:33,  1.28it/s] 60%|█████▉    | 7750/13025 [2:10:43<1:17:23,  1.14it/s] 60%|█████▉    | 7751/13025 [2:10:45<1:31:48,  1.04s/it] 60%|█████▉    | 7752/13025 [2:10:47<1:43:45,  1.18s/it] 60%|█████▉    | 7753/13025 [2:10:48<1:53:46,  1.29s/it] 60%|█████▉    | 7754/13025 [2:10:50<2:01:33,  1.38s/it] 60%|█████▉    | 7756/13025 [2:10:52<1:40:55,  1.15s/it] 60%|█████▉    | 7759/13025 [2:10:53<1:15:11,  1.17it/s] 60%|█████▉    | 7761/13025 [2:10:55<1:09:39,  1.26it/s] 60%|█████▉    | 7763/13025 [2:10:56<1:05:50,  1.33it/s] 60%|█████▉    | 7765/13025 [2:10:57<1:03:28,  1.38it/s] 60%|█████▉    | 7766/13025 [2:10:59<1:12:55,  1.20it/s] 60%|█████▉    | 7769/13025 [2:11:00<1:01:45,  1.42it/s] 60%|█████▉    | 7770/13025 [2:11:02<1:15:24,  1.16it/s] 60%|█████▉    | 7772/13025 [2:11:03<1:15:03,  1.17it/s] 60%|█████▉    | 7773/13025 [2:11:05<1:24:11,  1.04it/s] 60%|█████▉    | 7774/13025 [2:11:06<1:36:13,  1.10s/it] 60%|█████▉    | 7776/13025 [2:11:08<1:21:36,  1.07it/s] 60%|█████▉    | 7777/13025 [2:11:10<1:44:41,  1.20s/it] 60%|█████▉    | 7778/13025 [2:11:12<2:00:10,  1.37s/it] 60%|█████▉    | 7779/13025 [2:11:14<2:21:18,  1.62s/it] 60%|█████▉    | 7781/13025 [2:11:16<2:01:00,  1.38s/it] 60%|█████▉    | 7782/13025 [2:11:18<2:04:33,  1.43s/it] 60%|█████▉    | 7785/13025 [2:11:19<1:24:35,  1.03it/s] 60%|█████▉    | 7786/13025 [2:11:21<1:31:46,  1.05s/it] 60%|█████▉    | 7787/13025 [2:11:23<1:43:44,  1.19s/it] 60%|█████▉    | 7788/13025 [2:11:24<1:54:07,  1.31s/it] 60%|█████▉    | 7791/13025 [2:11:26<1:16:04,  1.15it/s] 60%|█████▉    | 7792/13025 [2:11:27<1:23:32,  1.04it/s] 60%|█████▉    | 7794/13025 [2:11:28<1:17:58,  1.12it/s] 60%|█████▉    | 7795/13025 [2:11:30<1:32:34,  1.06s/it] 60%|█████▉    | 7796/13025 [2:11:32<1:43:14,  1.18s/it] 60%|█████▉    | 7798/13025 [2:11:33<1:30:20,  1.04s/it] 60%|█████▉    | 7799/13025 [2:11:35<1:37:48,  1.12s/it] 60%|█████▉    | 7800/13025 [2:11:36<1:44:43,  1.20s/it] 60%|█████▉    | 7801/13025 [2:11:38<1:47:41,  1.24s/it] 60%|█████▉    | 7802/13025 [2:11:39<1:56:23,  1.34s/it] 60%|█████▉    | 7803/13025 [2:11:41<1:58:19,  1.36s/it] 60%|█████▉    | 7804/13025 [2:11:42<2:04:28,  1.43s/it] 60%|█████▉    | 7806/13025 [2:11:44<1:37:02,  1.12s/it] 60%|█████▉    | 7809/13025 [2:11:45<1:12:36,  1.20it/s] 60%|█████▉    | 7811/13025 [2:11:47<1:11:41,  1.21it/s] 60%|█████▉    | 7812/13025 [2:11:49<1:25:01,  1.02it/s] 60%|█████▉    | 7813/13025 [2:11:50<1:34:37,  1.09s/it] 60%|█████▉    | 7814/13025 [2:11:52<1:44:57,  1.21s/it] 60%|██████    | 7816/13025 [2:11:53<1:26:24,  1.00it/s] 60%|██████    | 7817/13025 [2:11:55<1:39:01,  1.14s/it] 60%|██████    | 7821/13025 [2:11:56<59:53,  1.45it/s]   60%|██████    | 7822/13025 [2:11:57<1:08:50,  1.26it/s] 60%|██████    | 7823/13025 [2:11:59<1:22:32,  1.05it/s] 60%|██████    | 7825/13025 [2:12:01<1:19:05,  1.10it/s] 60%|██████    | 7827/13025 [2:12:02<1:11:43,  1.21it/s] 60%|██████    | 7829/13025 [2:12:04<1:11:38,  1.21it/s] 60%|██████    | 7830/13025 [2:12:05<1:19:58,  1.08it/s] 60%|██████    | 7831/13025 [2:12:06<1:27:17,  1.01s/it] 60%|██████    | 7833/13025 [2:12:08<1:22:31,  1.05it/s] 60%|██████    | 7835/13025 [2:12:10<1:28:44,  1.03s/it] 60%|██████    | 7838/13025 [2:12:13<1:19:27,  1.09it/s] 60%|██████    | 7840/13025 [2:12:15<1:25:28,  1.01it/s] 60%|██████    | 7842/13025 [2:12:17<1:26:41,  1.00s/it] 60%|██████    | 7843/13025 [2:12:18<1:32:07,  1.07s/it] 60%|██████    | 7844/13025 [2:12:20<1:41:30,  1.18s/it] 60%|██████    | 7845/13025 [2:12:22<1:46:44,  1.24s/it] 60%|██████    | 7846/13025 [2:12:23<1:55:14,  1.34s/it] 60%|██████    | 7847/13025 [2:12:25<2:01:01,  1.40s/it] 60%|██████    | 7848/13025 [2:12:26<2:07:37,  1.48s/it] 60%|██████    | 7850/13025 [2:12:28<1:42:12,  1.19s/it] 60%|██████    | 7851/13025 [2:12:30<1:51:47,  1.30s/it] 60%|██████    | 7852/13025 [2:12:31<1:56:59,  1.36s/it] 60%|██████    | 7854/13025 [2:12:33<1:38:47,  1.15s/it] 60%|██████    | 7856/13025 [2:12:35<1:28:35,  1.03s/it] 60%|██████    | 7857/13025 [2:12:36<1:39:58,  1.16s/it] 60%|██████    | 7858/13025 [2:12:38<1:49:37,  1.27s/it] 60%|██████    | 7859/13025 [2:12:39<1:54:42,  1.33s/it] 60%|██████    | 7861/13025 [2:12:41<1:32:05,  1.07s/it] 60%|██████    | 7862/13025 [2:12:42<1:36:52,  1.13s/it] 60%|██████    | 7863/13025 [2:12:44<1:44:38,  1.22s/it] 60%|██████    | 7864/13025 [2:12:45<1:53:54,  1.32s/it] 60%|██████    | 7865/13025 [2:12:47<2:02:42,  1.43s/it] 60%|██████    | 7866/13025 [2:12:48<2:04:22,  1.45s/it] 60%|██████    | 7867/13025 [2:12:50<2:10:31,  1.52s/it] 60%|██████    | 7869/13025 [2:12:52<1:42:41,  1.20s/it] 60%|██████    | 7870/13025 [2:12:53<1:51:08,  1.29s/it] 60%|██████    | 7871/13025 [2:12:55<1:58:00,  1.37s/it] 60%|██████    | 7872/13025 [2:12:57<2:05:16,  1.46s/it] 60%|██████    | 7874/13025 [2:12:58<1:40:38,  1.17s/it] 60%|██████    | 7876/13025 [2:13:00<1:23:54,  1.02it/s] 60%|██████    | 7877/13025 [2:13:01<1:32:11,  1.07s/it] 60%|██████    | 7879/13025 [2:13:03<1:24:13,  1.02it/s] 60%|██████    | 7880/13025 [2:13:04<1:36:13,  1.12s/it] 61%|██████    | 7883/13025 [2:13:06<1:12:21,  1.18it/s] 61%|██████    | 7885/13025 [2:13:08<1:11:44,  1.19it/s] 61%|██████    | 7886/13025 [2:13:10<1:32:18,  1.08s/it] 61%|██████    | 7887/13025 [2:13:12<1:53:57,  1.33s/it] 61%|██████    | 7888/13025 [2:13:14<2:12:03,  1.54s/it] 61%|██████    | 7889/13025 [2:13:16<2:23:09,  1.67s/it] 61%|██████    | 7890/13025 [2:13:18<2:21:58,  1.66s/it] 61%|██████    | 7891/13025 [2:13:20<2:21:43,  1.66s/it] 61%|██████    | 7895/13025 [2:13:21<1:17:44,  1.10it/s] 61%|██████    | 7897/13025 [2:13:23<1:16:05,  1.12it/s] 61%|██████    | 7901/13025 [2:13:25<57:13,  1.49it/s]   61%|██████    | 7902/13025 [2:13:26<1:07:21,  1.27it/s] 61%|██████    | 7903/13025 [2:13:28<1:17:39,  1.10it/s] 61%|██████    | 7906/13025 [2:13:29<1:05:11,  1.31it/s] 61%|██████    | 7907/13025 [2:13:31<1:15:04,  1.14it/s] 61%|██████    | 7908/13025 [2:13:33<1:27:54,  1.03s/it] 61%|██████    | 7909/13025 [2:13:34<1:38:55,  1.16s/it] 61%|██████    | 7912/13025 [2:13:36<1:14:48,  1.14it/s] 61%|██████    | 7915/13025 [2:13:37<1:00:41,  1.40it/s] 61%|██████    | 7916/13025 [2:13:39<1:08:49,  1.24it/s] 61%|██████    | 7919/13025 [2:13:40<55:57,  1.52it/s]   61%|██████    | 7920/13025 [2:13:41<1:04:56,  1.31it/s] 61%|██████    | 7922/13025 [2:13:43<1:01:55,  1.37it/s] 61%|██████    | 7923/13025 [2:13:44<1:11:07,  1.20it/s] 61%|██████    | 7925/13025 [2:13:45<1:05:51,  1.29it/s] 61%|██████    | 7928/13025 [2:13:46<53:52,  1.58it/s]   61%|██████    | 7929/13025 [2:13:48<1:04:07,  1.32it/s] 61%|██████    | 7930/13025 [2:13:49<1:14:49,  1.13it/s] 61%|██████    | 7931/13025 [2:13:51<1:24:36,  1.00it/s] 61%|██████    | 7932/13025 [2:13:52<1:31:01,  1.07s/it] 61%|██████    | 7933/13025 [2:13:53<1:36:13,  1.13s/it] 61%|██████    | 7934/13025 [2:13:55<1:40:15,  1.18s/it] 61%|██████    | 7935/13025 [2:13:56<1:43:50,  1.22s/it] 61%|██████    | 7936/13025 [2:13:58<1:54:57,  1.36s/it] 61%|██████    | 7939/13025 [2:13:59<1:12:27,  1.17it/s] 61%|██████    | 7940/13025 [2:14:01<1:26:10,  1.02s/it] 61%|██████    | 7944/13025 [2:14:02<59:24,  1.43it/s]   61%|██████    | 7945/13025 [2:14:04<1:10:29,  1.20it/s] 61%|██████    | 7946/13025 [2:14:05<1:23:30,  1.01it/s] 61%|██████    | 7947/13025 [2:14:07<1:35:33,  1.13s/it] 61%|██████    | 7950/13025 [2:14:09<1:16:09,  1.11it/s] 61%|██████    | 7951/13025 [2:14:11<1:38:47,  1.17s/it] 61%|██████    | 7953/13025 [2:14:14<1:35:29,  1.13s/it] 61%|██████    | 7955/13025 [2:14:16<1:35:08,  1.13s/it] 61%|██████    | 7956/13025 [2:14:18<1:48:05,  1.28s/it] 61%|██████    | 7957/13025 [2:14:19<1:55:50,  1.37s/it] 61%|██████    | 7958/13025 [2:14:21<2:01:31,  1.44s/it] 61%|██████    | 7960/13025 [2:14:23<1:40:00,  1.18s/it] 61%|██████    | 7961/13025 [2:14:24<1:45:03,  1.24s/it] 61%|██████    | 7962/13025 [2:14:26<1:49:25,  1.30s/it] 61%|██████    | 7963/13025 [2:14:27<1:49:52,  1.30s/it] 61%|██████    | 7964/13025 [2:14:28<1:50:06,  1.31s/it] 61%|██████    | 7966/13025 [2:14:30<1:33:17,  1.11s/it] 61%|██████    | 7967/13025 [2:14:32<1:45:27,  1.25s/it] 61%|██████    | 7969/13025 [2:14:33<1:30:16,  1.07s/it] 61%|██████    | 7971/13025 [2:14:35<1:22:07,  1.03it/s] 61%|██████    | 7972/13025 [2:14:37<1:33:58,  1.12s/it] 61%|██████    | 7974/13025 [2:14:38<1:25:39,  1.02s/it] 61%|██████    | 7975/13025 [2:14:40<1:37:28,  1.16s/it] 61%|██████    | 7976/13025 [2:14:42<1:47:05,  1.27s/it] 61%|██████    | 7977/13025 [2:14:43<1:55:06,  1.37s/it] 61%|██████▏   | 7978/13025 [2:14:45<1:58:13,  1.41s/it] 61%|██████▏   | 7979/13025 [2:14:46<2:04:01,  1.47s/it] 61%|██████▏   | 7981/13025 [2:14:48<1:40:59,  1.20s/it] 61%|██████▏   | 7984/13025 [2:14:50<1:14:49,  1.12it/s] 61%|██████▏   | 7985/13025 [2:14:51<1:24:36,  1.01s/it] 61%|██████▏   | 7987/13025 [2:14:53<1:14:34,  1.13it/s] 61%|██████▏   | 7988/13025 [2:14:54<1:26:45,  1.03s/it] 61%|██████▏   | 7989/13025 [2:14:56<1:38:20,  1.17s/it] 61%|██████▏   | 7990/13025 [2:14:57<1:41:34,  1.21s/it] 61%|██████▏   | 7991/13025 [2:14:59<1:52:02,  1.34s/it] 61%|██████▏   | 7994/13025 [2:15:01<1:17:34,  1.08it/s] 61%|██████▏   | 7995/13025 [2:15:02<1:28:53,  1.06s/it] 61%|██████▏   | 7997/13025 [2:15:04<1:22:06,  1.02it/s] 61%|██████▏   | 7998/13025 [2:15:05<1:28:14,  1.05s/it] 61%|██████▏   | 8000/13025 [2:15:07<1:20:38,  1.04it/s] 61%|██████▏   | 8002/13025 [2:15:08<1:15:57,  1.10it/s] 61%|██████▏   | 8003/13025 [2:15:10<1:31:37,  1.09s/it] 61%|██████▏   | 8004/13025 [2:15:13<1:53:07,  1.35s/it] 61%|██████▏   | 8006/13025 [2:15:15<1:44:02,  1.24s/it] 61%|██████▏   | 8007/13025 [2:15:17<2:02:08,  1.46s/it] 61%|██████▏   | 8008/13025 [2:15:19<2:06:14,  1.51s/it] 62%|██████▏   | 8012/13025 [2:15:20<1:11:15,  1.17it/s] 62%|██████▏   | 8013/13025 [2:15:22<1:23:26,  1.00it/s] 62%|██████▏   | 8014/13025 [2:15:23<1:33:24,  1.12s/it] 62%|██████▏   | 8020/13025 [2:15:25<47:41,  1.75it/s]   62%|██████▏   | 8021/13025 [2:15:26<55:46,  1.50it/s] 62%|██████▏   | 8024/13025 [2:15:28<49:07,  1.70it/s] 62%|██████▏   | 8026/13025 [2:15:29<50:35,  1.65it/s] 62%|██████▏   | 8027/13025 [2:15:30<1:00:51,  1.37it/s] 62%|██████▏   | 8029/13025 [2:15:32<59:35,  1.40it/s]   62%|██████▏   | 8030/13025 [2:15:33<1:09:23,  1.20it/s] 62%|██████▏   | 8031/13025 [2:15:35<1:22:29,  1.01it/s] 62%|██████▏   | 8032/13025 [2:15:36<1:33:48,  1.13s/it] 62%|██████▏   | 8033/13025 [2:15:38<1:43:50,  1.25s/it] 62%|██████▏   | 8034/13025 [2:15:39<1:51:45,  1.34s/it] 62%|██████▏   | 8035/13025 [2:15:41<1:56:44,  1.40s/it] 62%|██████▏   | 8041/13025 [2:15:43<50:57,  1.63it/s]   62%|██████▏   | 8042/13025 [2:15:44<1:02:46,  1.32it/s] 62%|██████▏   | 8044/13025 [2:15:46<1:00:33,  1.37it/s] 62%|██████▏   | 8045/13025 [2:15:47<1:13:00,  1.14it/s] 62%|██████▏   | 8047/13025 [2:15:49<1:08:37,  1.21it/s] 62%|██████▏   | 8049/13025 [2:15:50<1:08:06,  1.22it/s] 62%|██████▏   | 8056/13025 [2:15:52<38:02,  2.18it/s]   62%|██████▏   | 8057/13025 [2:15:54<49:28,  1.67it/s] 62%|██████▏   | 8060/13025 [2:15:55<46:56,  1.76it/s] 62%|██████▏   | 8061/13025 [2:15:57<58:49,  1.41it/s] 62%|██████▏   | 8063/13025 [2:15:58<1:01:01,  1.36it/s] 62%|██████▏   | 8064/13025 [2:16:00<1:12:13,  1.14it/s] 62%|██████▏   | 8065/13025 [2:16:02<1:25:21,  1.03s/it] 62%|██████▏   | 8066/13025 [2:16:03<1:32:07,  1.11s/it] 62%|██████▏   | 8067/13025 [2:16:05<1:41:48,  1.23s/it] 62%|██████▏   | 8069/13025 [2:16:06<1:29:38,  1.09s/it] 62%|██████▏   | 8073/13025 [2:16:08<1:01:31,  1.34it/s] 62%|██████▏   | 8074/13025 [2:16:11<1:23:20,  1.01s/it] 62%|██████▏   | 8075/13025 [2:16:13<1:42:05,  1.24s/it] 62%|██████▏   | 8076/13025 [2:16:15<2:00:41,  1.46s/it] 62%|██████▏   | 8077/13025 [2:16:17<2:10:56,  1.59s/it] 62%|██████▏   | 8080/13025 [2:16:19<1:28:32,  1.07s/it] 62%|██████▏   | 8081/13025 [2:16:21<1:39:12,  1.20s/it] 62%|██████▏   | 8084/13025 [2:16:22<1:15:11,  1.10it/s] 62%|██████▏   | 8085/13025 [2:16:24<1:22:24,  1.00s/it] 62%|██████▏   | 8086/13025 [2:16:25<1:30:48,  1.10s/it] 62%|██████▏   | 8089/13025 [2:16:26<1:05:29,  1.26it/s] 62%|██████▏   | 8092/13025 [2:16:28<54:50,  1.50it/s]   62%|██████▏   | 8093/13025 [2:16:29<1:04:38,  1.27it/s] 62%|██████▏   | 8094/13025 [2:16:31<1:14:05,  1.11it/s] 62%|██████▏   | 8095/13025 [2:16:32<1:22:47,  1.01s/it] 62%|██████▏   | 8098/13025 [2:16:33<1:01:17,  1.34it/s] 62%|██████▏   | 8100/13025 [2:16:35<1:02:11,  1.32it/s] 62%|██████▏   | 8101/13025 [2:16:36<1:10:52,  1.16it/s] 62%|██████▏   | 8102/13025 [2:16:38<1:18:46,  1.04it/s] 62%|██████▏   | 8104/13025 [2:16:39<1:13:10,  1.12it/s] 62%|██████▏   | 8105/13025 [2:16:41<1:26:06,  1.05s/it] 62%|██████▏   | 8106/13025 [2:16:42<1:32:46,  1.13s/it] 62%|██████▏   | 8107/13025 [2:16:44<1:36:26,  1.18s/it] 62%|██████▏   | 8108/13025 [2:16:45<1:44:46,  1.28s/it] 62%|██████▏   | 8109/13025 [2:16:47<1:51:50,  1.36s/it] 62%|██████▏   | 8111/13025 [2:16:48<1:29:59,  1.10s/it] 62%|██████▏   | 8113/13025 [2:16:50<1:19:03,  1.04it/s] 62%|██████▏   | 8114/13025 [2:16:51<1:30:42,  1.11s/it] 62%|██████▏   | 8115/13025 [2:16:53<1:41:18,  1.24s/it] 62%|██████▏   | 8117/13025 [2:16:54<1:23:44,  1.02s/it] 62%|██████▏   | 8118/13025 [2:16:56<1:35:14,  1.16s/it] 62%|██████▏   | 8119/13025 [2:16:58<1:43:37,  1.27s/it] 62%|██████▏   | 8121/13025 [2:16:59<1:24:49,  1.04s/it] 62%|██████▏   | 8122/13025 [2:17:01<1:34:20,  1.15s/it] 62%|██████▏   | 8124/13025 [2:17:02<1:23:37,  1.02s/it] 62%|██████▏   | 8125/13025 [2:17:04<1:35:34,  1.17s/it] 62%|██████▏   | 8126/13025 [2:17:06<1:42:19,  1.25s/it] 62%|██████▏   | 8128/13025 [2:17:07<1:28:31,  1.08s/it] 62%|██████▏   | 8129/13025 [2:17:09<1:42:48,  1.26s/it] 62%|██████▏   | 8130/13025 [2:17:11<2:05:24,  1.54s/it] 62%|██████▏   | 8131/13025 [2:17:14<2:20:39,  1.72s/it] 62%|██████▏   | 8134/13025 [2:17:16<1:35:25,  1.17s/it] 62%|██████▏   | 8135/13025 [2:17:18<1:45:35,  1.30s/it] 62%|██████▏   | 8136/13025 [2:17:19<1:52:48,  1.38s/it] 62%|██████▏   | 8137/13025 [2:17:21<1:53:43,  1.40s/it] 62%|██████▏   | 8138/13025 [2:17:22<1:54:16,  1.40s/it] 62%|██████▏   | 8139/13025 [2:17:24<1:59:49,  1.47s/it] 62%|██████▏   | 8140/13025 [2:17:25<2:03:38,  1.52s/it] 63%|██████▎   | 8143/13025 [2:17:27<1:20:17,  1.01it/s] 63%|██████▎   | 8144/13025 [2:17:29<1:31:22,  1.12s/it] 63%|██████▎   | 8145/13025 [2:17:30<1:41:16,  1.25s/it] 63%|██████▎   | 8149/13025 [2:17:32<1:00:48,  1.34it/s] 63%|██████▎   | 8150/13025 [2:17:33<1:11:37,  1.13it/s] 63%|██████▎   | 8153/13025 [2:17:35<1:00:48,  1.34it/s] 63%|██████▎   | 8154/13025 [2:17:37<1:13:12,  1.11it/s] 63%|██████▎   | 8155/13025 [2:17:38<1:22:54,  1.02s/it] 63%|██████▎   | 8156/13025 [2:17:40<1:32:06,  1.14s/it] 63%|██████▎   | 8158/13025 [2:17:41<1:19:01,  1.03it/s] 63%|██████▎   | 8159/13025 [2:17:43<1:24:50,  1.05s/it] 63%|██████▎   | 8162/13025 [2:17:44<1:04:58,  1.25it/s] 63%|██████▎   | 8163/13025 [2:17:46<1:18:30,  1.03it/s] 63%|██████▎   | 8164/13025 [2:17:47<1:29:59,  1.11s/it] 63%|██████▎   | 8165/13025 [2:17:49<1:40:04,  1.24s/it] 63%|██████▎   | 8166/13025 [2:17:51<1:45:24,  1.30s/it] 63%|██████▎   | 8168/13025 [2:17:52<1:24:02,  1.04s/it] 63%|██████▎   | 8169/13025 [2:17:53<1:31:20,  1.13s/it] 63%|██████▎   | 8171/13025 [2:17:55<1:17:42,  1.04it/s] 63%|██████▎   | 8172/13025 [2:17:56<1:29:56,  1.11s/it] 63%|██████▎   | 8174/13025 [2:17:58<1:15:44,  1.07it/s] 63%|██████▎   | 8176/13025 [2:17:59<1:12:18,  1.12it/s] 63%|██████▎   | 8178/13025 [2:18:01<1:07:11,  1.20it/s] 63%|██████▎   | 8180/13025 [2:18:02<1:05:38,  1.23it/s] 63%|██████▎   | 8181/13025 [2:18:04<1:18:16,  1.03it/s] 63%|██████▎   | 8182/13025 [2:18:06<1:30:38,  1.12s/it] 63%|██████▎   | 8183/13025 [2:18:07<1:39:45,  1.24s/it] 63%|██████▎   | 8184/13025 [2:18:09<1:51:20,  1.38s/it] 63%|██████▎   | 8185/13025 [2:18:11<2:03:54,  1.54s/it] 63%|██████▎   | 8186/13025 [2:18:13<2:20:50,  1.75s/it] 63%|██████▎   | 8187/13025 [2:18:16<2:31:30,  1.88s/it] 63%|██████▎   | 8188/13025 [2:18:17<2:29:01,  1.85s/it] 63%|██████▎   | 8192/13025 [2:18:19<1:17:08,  1.04it/s] 63%|██████▎   | 8194/13025 [2:18:21<1:13:13,  1.10it/s] 63%|██████▎   | 8196/13025 [2:18:22<1:11:57,  1.12it/s] 63%|██████▎   | 8197/13025 [2:18:24<1:23:00,  1.03s/it] 63%|██████▎   | 8198/13025 [2:18:26<1:32:35,  1.15s/it] 63%|██████▎   | 8199/13025 [2:18:27<1:40:51,  1.25s/it] 63%|██████▎   | 8200/13025 [2:18:29<1:45:52,  1.32s/it] 63%|██████▎   | 8201/13025 [2:18:30<1:53:34,  1.41s/it] 63%|██████▎   | 8202/13025 [2:18:32<1:58:53,  1.48s/it] 63%|██████▎   | 8203/13025 [2:18:34<1:59:24,  1.49s/it] 63%|██████▎   | 8205/13025 [2:18:35<1:29:41,  1.12s/it] 63%|██████▎   | 8208/13025 [2:18:36<1:03:05,  1.27it/s] 63%|██████▎   | 8210/13025 [2:18:38<1:00:42,  1.32it/s] 63%|██████▎   | 8211/13025 [2:18:39<1:09:13,  1.16it/s] 63%|██████▎   | 8212/13025 [2:18:40<1:16:55,  1.04it/s] 63%|██████▎   | 8213/13025 [2:18:42<1:23:21,  1.04s/it] 63%|██████▎   | 8214/13025 [2:18:43<1:28:53,  1.11s/it] 63%|██████▎   | 8215/13025 [2:18:44<1:37:17,  1.21s/it] 63%|██████▎   | 8216/13025 [2:18:46<1:43:33,  1.29s/it] 63%|██████▎   | 8217/13025 [2:18:48<1:51:40,  1.39s/it] 63%|██████▎   | 8218/13025 [2:18:49<1:57:38,  1.47s/it] 63%|██████▎   | 8219/13025 [2:18:51<2:01:39,  1.52s/it] 63%|██████▎   | 8222/13025 [2:18:53<1:18:34,  1.02it/s] 63%|██████▎   | 8223/13025 [2:18:54<1:26:13,  1.08s/it] 63%|██████▎   | 8224/13025 [2:18:55<1:30:53,  1.14s/it] 63%|██████▎   | 8225/13025 [2:18:57<1:37:57,  1.22s/it] 63%|██████▎   | 8226/13025 [2:18:58<1:47:56,  1.35s/it] 63%|██████▎   | 8227/13025 [2:19:00<1:54:21,  1.43s/it] 63%|██████▎   | 8228/13025 [2:19:02<1:58:58,  1.49s/it] 63%|██████▎   | 8231/13025 [2:19:03<1:14:43,  1.07it/s] 63%|██████▎   | 8233/13025 [2:19:05<1:11:46,  1.11it/s] 63%|██████▎   | 8238/13025 [2:19:06<45:33,  1.75it/s]   63%|██████▎   | 8239/13025 [2:19:08<56:47,  1.40it/s] 63%|██████▎   | 8243/13025 [2:19:10<51:36,  1.54it/s] 63%|██████▎   | 8245/13025 [2:19:12<1:00:49,  1.31it/s] 63%|██████▎   | 8246/13025 [2:19:15<1:18:25,  1.02it/s] 63%|██████▎   | 8248/13025 [2:19:17<1:18:42,  1.01it/s] 63%|██████▎   | 8249/13025 [2:19:18<1:27:17,  1.10s/it] 63%|██████▎   | 8250/13025 [2:19:20<1:35:58,  1.21s/it] 63%|██████▎   | 8252/13025 [2:19:22<1:25:40,  1.08s/it] 63%|██████▎   | 8253/13025 [2:19:23<1:34:59,  1.19s/it] 63%|██████▎   | 8254/13025 [2:19:25<1:43:51,  1.31s/it] 63%|██████▎   | 8257/13025 [2:19:27<1:14:50,  1.06it/s] 63%|██████▎   | 8258/13025 [2:19:28<1:25:20,  1.07s/it] 63%|██████▎   | 8259/13025 [2:19:30<1:31:13,  1.15s/it] 63%|██████▎   | 8260/13025 [2:19:31<1:36:02,  1.21s/it] 63%|██████▎   | 8261/13025 [2:19:33<1:40:01,  1.26s/it] 63%|██████▎   | 8264/13025 [2:19:34<1:10:57,  1.12it/s] 63%|██████▎   | 8265/13025 [2:19:36<1:17:30,  1.02it/s] 63%|██████▎   | 8267/13025 [2:19:37<1:12:26,  1.09it/s] 63%|██████▎   | 8269/13025 [2:19:39<1:09:35,  1.14it/s] 63%|██████▎   | 8270/13025 [2:19:41<1:21:45,  1.03s/it] 64%|██████▎   | 8273/13025 [2:19:42<1:03:20,  1.25it/s] 64%|██████▎   | 8275/13025 [2:19:44<1:04:25,  1.23it/s] 64%|██████▎   | 8276/13025 [2:19:45<1:16:16,  1.04it/s] 64%|██████▎   | 8278/13025 [2:19:47<1:12:30,  1.09it/s] 64%|██████▎   | 8279/13025 [2:19:49<1:23:44,  1.06s/it] 64%|██████▎   | 8280/13025 [2:19:50<1:31:28,  1.16s/it] 64%|██████▎   | 8281/13025 [2:19:52<1:41:51,  1.29s/it] 64%|██████▎   | 8282/13025 [2:19:54<1:49:22,  1.38s/it] 64%|██████▎   | 8283/13025 [2:19:55<1:55:52,  1.47s/it] 64%|██████▎   | 8285/13025 [2:19:57<1:34:24,  1.20s/it] 64%|██████▎   | 8286/13025 [2:19:59<1:43:04,  1.30s/it] 64%|██████▎   | 8287/13025 [2:20:00<1:50:14,  1.40s/it] 64%|██████▎   | 8288/13025 [2:20:02<1:50:41,  1.40s/it] 64%|██████▎   | 8289/13025 [2:20:03<1:57:26,  1.49s/it] 64%|██████▎   | 8291/13025 [2:20:05<1:30:33,  1.15s/it] 64%|██████▎   | 8292/13025 [2:20:06<1:33:57,  1.19s/it] 64%|██████▎   | 8294/13025 [2:20:08<1:16:56,  1.02it/s] 64%|██████▎   | 8295/13025 [2:20:09<1:26:02,  1.09s/it] 64%|██████▎   | 8297/13025 [2:20:11<1:29:58,  1.14s/it] 64%|██████▎   | 8298/13025 [2:20:14<1:49:26,  1.39s/it] 64%|██████▎   | 8299/13025 [2:20:16<2:06:41,  1.61s/it] 64%|██████▎   | 8301/13025 [2:20:18<1:44:18,  1.32s/it] 64%|██████▎   | 8302/13025 [2:20:19<1:49:21,  1.39s/it] 64%|██████▍   | 8304/13025 [2:20:21<1:30:38,  1.15s/it] 64%|██████▍   | 8306/13025 [2:20:23<1:19:32,  1.01s/it] 64%|██████▍   | 8307/13025 [2:20:24<1:29:52,  1.14s/it] 64%|██████▍   | 8308/13025 [2:20:26<1:39:17,  1.26s/it] 64%|██████▍   | 8309/13025 [2:20:28<1:48:19,  1.38s/it] 64%|██████▍   | 8310/13025 [2:20:29<1:52:51,  1.44s/it] 64%|██████▍   | 8313/13025 [2:20:31<1:15:44,  1.04it/s] 64%|██████▍   | 8314/13025 [2:20:32<1:23:00,  1.06s/it] 64%|██████▍   | 8316/13025 [2:20:34<1:17:00,  1.02it/s] 64%|██████▍   | 8317/13025 [2:20:35<1:25:57,  1.10s/it] 64%|██████▍   | 8319/13025 [2:20:37<1:16:11,  1.03it/s] 64%|██████▍   | 8321/13025 [2:20:39<1:12:19,  1.08it/s] 64%|██████▍   | 8323/13025 [2:20:40<1:08:05,  1.15it/s] 64%|██████▍   | 8325/13025 [2:20:42<1:06:58,  1.17it/s] 64%|██████▍   | 8326/13025 [2:20:43<1:18:22,  1.00s/it] 64%|██████▍   | 8327/13025 [2:20:45<1:30:11,  1.15s/it] 64%|██████▍   | 8328/13025 [2:20:47<1:40:04,  1.28s/it] 64%|██████▍   | 8329/13025 [2:20:49<1:48:29,  1.39s/it] 64%|██████▍   | 8330/13025 [2:20:50<1:53:30,  1.45s/it] 64%|██████▍   | 8331/13025 [2:20:52<1:56:57,  1.49s/it] 64%|██████▍   | 8332/13025 [2:20:53<1:59:19,  1.53s/it] 64%|██████▍   | 8333/13025 [2:20:55<2:02:17,  1.56s/it] 64%|██████▍   | 8334/13025 [2:20:57<2:06:16,  1.62s/it] 64%|██████▍   | 8335/13025 [2:20:59<2:07:18,  1.63s/it] 64%|██████▍   | 8337/13025 [2:21:00<1:37:53,  1.25s/it] 64%|██████▍   | 8338/13025 [2:21:02<1:45:37,  1.35s/it] 64%|██████▍   | 8342/13025 [2:21:03<1:03:22,  1.23it/s] 64%|██████▍   | 8343/13025 [2:21:05<1:13:56,  1.06it/s] 64%|██████▍   | 8344/13025 [2:21:06<1:19:41,  1.02s/it] 64%|██████▍   | 8346/13025 [2:21:08<1:16:30,  1.02it/s] 64%|██████▍   | 8348/13025 [2:21:10<1:20:17,  1.03s/it] 64%|██████▍   | 8349/13025 [2:21:12<1:34:39,  1.21s/it] 64%|██████▍   | 8351/13025 [2:21:15<1:32:39,  1.19s/it] 64%|██████▍   | 8352/13025 [2:21:17<1:44:27,  1.34s/it] 64%|██████▍   | 8354/13025 [2:21:18<1:29:50,  1.15s/it] 64%|██████▍   | 8357/13025 [2:21:20<1:05:20,  1.19it/s] 64%|██████▍   | 8360/13025 [2:21:21<56:18,  1.38it/s]   64%|██████▍   | 8361/13025 [2:21:23<1:07:41,  1.15it/s] 64%|██████▍   | 8362/13025 [2:21:25<1:18:00,  1.00s/it] 64%|██████▍   | 8364/13025 [2:21:26<1:11:21,  1.09it/s] 64%|██████▍   | 8366/13025 [2:21:28<1:09:34,  1.12it/s] 64%|██████▍   | 8368/13025 [2:21:29<1:08:13,  1.14it/s] 64%|██████▍   | 8369/13025 [2:21:31<1:20:12,  1.03s/it] 64%|██████▍   | 8370/13025 [2:21:32<1:25:06,  1.10s/it] 64%|██████▍   | 8371/13025 [2:21:34<1:29:09,  1.15s/it] 64%|██████▍   | 8372/13025 [2:21:35<1:32:33,  1.19s/it] 64%|██████▍   | 8373/13025 [2:21:36<1:35:26,  1.23s/it] 64%|██████▍   | 8374/13025 [2:21:38<1:42:28,  1.32s/it] 64%|██████▍   | 8377/13025 [2:21:40<1:11:02,  1.09it/s] 64%|██████▍   | 8379/13025 [2:21:41<1:07:23,  1.15it/s] 64%|██████▍   | 8381/13025 [2:21:43<1:06:36,  1.16it/s] 64%|██████▍   | 8382/13025 [2:21:44<1:14:42,  1.04it/s] 64%|██████▍   | 8383/13025 [2:21:46<1:25:07,  1.10s/it] 64%|██████▍   | 8384/13025 [2:21:48<1:34:10,  1.22s/it] 64%|██████▍   | 8385/13025 [2:21:49<1:39:56,  1.29s/it] 64%|██████▍   | 8386/13025 [2:21:51<1:47:06,  1.39s/it] 64%|██████▍   | 8388/13025 [2:21:52<1:28:42,  1.15s/it] 64%|██████▍   | 8389/13025 [2:21:54<1:37:42,  1.26s/it] 64%|██████▍   | 8391/13025 [2:21:56<1:23:58,  1.09s/it] 64%|██████▍   | 8393/13025 [2:21:57<1:17:20,  1.00s/it] 64%|██████▍   | 8396/13025 [2:21:59<58:24,  1.32it/s]   64%|██████▍   | 8397/13025 [2:22:00<1:05:56,  1.17it/s] 64%|██████▍   | 8398/13025 [2:22:02<1:17:12,  1.00s/it] 64%|██████▍   | 8399/13025 [2:22:03<1:27:22,  1.13s/it] 64%|██████▍   | 8401/13025 [2:22:05<1:17:16,  1.00s/it] 65%|██████▍   | 8402/13025 [2:22:06<1:25:36,  1.11s/it] 65%|██████▍   | 8403/13025 [2:22:08<1:32:46,  1.20s/it] 65%|██████▍   | 8404/13025 [2:22:10<1:44:06,  1.35s/it] 65%|██████▍   | 8405/13025 [2:22:12<2:03:12,  1.60s/it] 65%|██████▍   | 8406/13025 [2:22:14<2:14:02,  1.74s/it] 65%|██████▍   | 8407/13025 [2:22:16<2:27:45,  1.92s/it] 65%|██████▍   | 8408/13025 [2:22:18<2:22:27,  1.85s/it] 65%|██████▍   | 8410/13025 [2:22:20<1:45:57,  1.38s/it] 65%|██████▍   | 8413/13025 [2:22:21<1:12:48,  1.06it/s] 65%|██████▍   | 8415/13025 [2:22:23<1:09:54,  1.10it/s] 65%|██████▍   | 8417/13025 [2:22:24<1:06:36,  1.15it/s] 65%|██████▍   | 8420/13025 [2:22:26<54:18,  1.41it/s]   65%|██████▍   | 8421/13025 [2:22:27<1:04:38,  1.19it/s] 65%|██████▍   | 8424/13025 [2:22:29<55:53,  1.37it/s]   65%|██████▍   | 8425/13025 [2:22:31<1:07:58,  1.13it/s] 65%|██████▍   | 8426/13025 [2:22:32<1:17:24,  1.01s/it] 65%|██████▍   | 8428/13025 [2:22:34<1:12:28,  1.06it/s] 65%|██████▍   | 8429/13025 [2:22:36<1:22:37,  1.08s/it] 65%|██████▍   | 8432/13025 [2:22:37<1:02:50,  1.22it/s] 65%|██████▍   | 8433/13025 [2:22:39<1:14:21,  1.03it/s] 65%|██████▍   | 8434/13025 [2:22:40<1:24:56,  1.11s/it] 65%|██████▍   | 8435/13025 [2:22:42<1:33:18,  1.22s/it] 65%|██████▍   | 8437/13025 [2:22:44<1:20:55,  1.06s/it] 65%|██████▍   | 8438/13025 [2:22:45<1:25:30,  1.12s/it] 65%|██████▍   | 8439/13025 [2:22:47<1:32:36,  1.21s/it] 65%|██████▍   | 8440/13025 [2:22:48<1:34:35,  1.24s/it] 65%|██████▍   | 8442/13025 [2:22:49<1:21:20,  1.06s/it] 65%|██████▍   | 8443/13025 [2:22:51<1:31:39,  1.20s/it] 65%|██████▍   | 8444/13025 [2:22:53<1:37:38,  1.28s/it] 65%|██████▍   | 8446/13025 [2:22:54<1:20:55,  1.06s/it] 65%|██████▍   | 8447/13025 [2:22:56<1:30:56,  1.19s/it] 65%|██████▍   | 8448/13025 [2:22:57<1:39:14,  1.30s/it] 65%|██████▍   | 8449/13025 [2:22:59<1:46:13,  1.39s/it] 65%|██████▍   | 8450/13025 [2:23:01<1:52:05,  1.47s/it] 65%|██████▍   | 8452/13025 [2:23:02<1:30:21,  1.19s/it] 65%|██████▍   | 8454/13025 [2:23:04<1:19:42,  1.05s/it] 65%|██████▍   | 8455/13025 [2:23:06<1:29:38,  1.18s/it] 65%|██████▍   | 8457/13025 [2:23:07<1:18:34,  1.03s/it] 65%|██████▍   | 8458/13025 [2:23:09<1:36:08,  1.26s/it] 65%|██████▍   | 8459/13025 [2:23:11<1:46:30,  1.40s/it] 65%|██████▍   | 8461/13025 [2:23:14<1:38:10,  1.29s/it] 65%|██████▍   | 8462/13025 [2:23:16<1:51:31,  1.47s/it] 65%|██████▍   | 8463/13025 [2:23:17<1:56:17,  1.53s/it] 65%|██████▍   | 8464/13025 [2:23:19<1:58:52,  1.56s/it] 65%|██████▍   | 8465/13025 [2:23:21<1:58:05,  1.55s/it] 65%|██████▌   | 8467/13025 [2:23:22<1:35:11,  1.25s/it] 65%|██████▌   | 8472/13025 [2:23:24<52:25,  1.45it/s]   65%|██████▌   | 8474/13025 [2:23:25<53:39,  1.41it/s] 65%|██████▌   | 8475/13025 [2:23:27<1:04:51,  1.17it/s] 65%|██████▌   | 8476/13025 [2:23:29<1:14:36,  1.02it/s] 65%|██████▌   | 8479/13025 [2:23:30<1:00:35,  1.25it/s] 65%|██████▌   | 8480/13025 [2:23:32<1:11:50,  1.05it/s] 65%|██████▌   | 8481/13025 [2:23:34<1:20:59,  1.07s/it] 65%|██████▌   | 8482/13025 [2:23:35<1:31:19,  1.21s/it] 65%|██████▌   | 8484/13025 [2:23:37<1:19:22,  1.05s/it] 65%|██████▌   | 8485/13025 [2:23:38<1:25:20,  1.13s/it] 65%|██████▌   | 8487/13025 [2:23:40<1:16:53,  1.02s/it] 65%|██████▌   | 8489/13025 [2:23:42<1:11:49,  1.05it/s] 65%|██████▌   | 8490/13025 [2:23:43<1:22:27,  1.09s/it] 65%|██████▌   | 8492/13025 [2:23:45<1:14:43,  1.01it/s] 65%|██████▌   | 8497/13025 [2:23:46<45:53,  1.64it/s]   65%|██████▌   | 8498/13025 [2:23:48<56:57,  1.32it/s] 65%|██████▌   | 8500/13025 [2:23:49<54:49,  1.38it/s] 65%|██████▌   | 8503/13025 [2:23:51<49:46,  1.51it/s] 65%|██████▌   | 8504/13025 [2:23:53<1:00:39,  1.24it/s] 65%|██████▌   | 8505/13025 [2:23:54<1:12:12,  1.04it/s] 65%|██████▌   | 8507/13025 [2:23:56<1:09:28,  1.08it/s] 65%|██████▌   | 8508/13025 [2:23:58<1:20:53,  1.07s/it] 65%|██████▌   | 8509/13025 [2:23:59<1:31:12,  1.21s/it] 65%|██████▌   | 8510/13025 [2:24:01<1:40:53,  1.34s/it] 65%|██████▌   | 8511/13025 [2:24:03<1:48:08,  1.44s/it] 65%|██████▌   | 8512/13025 [2:24:05<1:53:43,  1.51s/it] 65%|██████▌   | 8513/13025 [2:24:06<1:52:08,  1.49s/it] 65%|██████▌   | 8515/13025 [2:24:07<1:26:20,  1.15s/it] 65%|██████▌   | 8519/13025 [2:24:10<1:00:33,  1.24it/s] 65%|██████▌   | 8522/13025 [2:24:12<59:44,  1.26it/s]   65%|██████▌   | 8523/13025 [2:24:14<1:11:16,  1.05it/s] 65%|██████▌   | 8524/13025 [2:24:16<1:30:24,  1.21s/it] 65%|██████▌   | 8526/13025 [2:24:18<1:21:40,  1.09s/it] 65%|██████▌   | 8528/13025 [2:24:20<1:15:08,  1.00s/it] 65%|██████▌   | 8531/13025 [2:24:21<1:00:45,  1.23it/s] 66%|██████▌   | 8532/13025 [2:24:23<1:09:12,  1.08it/s] 66%|██████▌   | 8533/13025 [2:24:24<1:17:28,  1.03s/it] 66%|██████▌   | 8534/13025 [2:24:26<1:22:52,  1.11s/it] 66%|██████▌   | 8535/13025 [2:24:27<1:33:16,  1.25s/it] 66%|██████▌   | 8538/13025 [2:24:29<1:03:44,  1.17it/s] 66%|██████▌   | 8539/13025 [2:24:30<1:15:53,  1.01s/it] 66%|██████▌   | 8540/13025 [2:24:32<1:22:54,  1.11s/it] 66%|██████▌   | 8541/13025 [2:24:33<1:31:47,  1.23s/it] 66%|██████▌   | 8547/13025 [2:24:35<42:10,  1.77it/s]   66%|██████▌   | 8548/13025 [2:24:36<52:52,  1.41it/s] 66%|██████▌   | 8551/13025 [2:24:38<48:31,  1.54it/s] 66%|██████▌   | 8553/13025 [2:24:40<51:06,  1.46it/s] 66%|██████▌   | 8554/13025 [2:24:41<1:02:15,  1.20it/s] 66%|██████▌   | 8555/13025 [2:24:43<1:13:28,  1.01it/s] 66%|██████▌   | 8557/13025 [2:24:45<1:10:00,  1.06it/s] 66%|██████▌   | 8558/13025 [2:24:46<1:15:26,  1.01s/it] 66%|██████▌   | 8559/13025 [2:24:47<1:22:29,  1.11s/it] 66%|██████▌   | 8562/13025 [2:24:49<1:01:58,  1.20it/s] 66%|██████▌   | 8563/13025 [2:24:51<1:14:13,  1.00it/s] 66%|██████▌   | 8564/13025 [2:24:52<1:23:58,  1.13s/it] 66%|██████▌   | 8567/13025 [2:24:54<59:39,  1.25it/s]   66%|██████▌   | 8569/13025 [2:24:55<1:00:21,  1.23it/s] 66%|██████▌   | 8570/13025 [2:24:57<1:11:15,  1.04it/s] 66%|██████▌   | 8571/13025 [2:24:59<1:22:07,  1.11s/it] 66%|██████▌   | 8573/13025 [2:25:00<1:14:31,  1.00s/it] 66%|██████▌   | 8577/13025 [2:25:02<52:18,  1.42it/s]   66%|██████▌   | 8578/13025 [2:25:04<1:03:16,  1.17it/s] 66%|██████▌   | 8579/13025 [2:25:05<1:14:44,  1.01s/it] 66%|██████▌   | 8580/13025 [2:25:07<1:19:28,  1.07s/it] 66%|██████▌   | 8581/13025 [2:25:08<1:23:53,  1.13s/it] 66%|██████▌   | 8582/13025 [2:25:10<1:38:00,  1.32s/it] 66%|██████▌   | 8583/13025 [2:25:12<1:58:45,  1.60s/it] 66%|██████▌   | 8585/13025 [2:25:15<1:43:45,  1.40s/it] 66%|██████▌   | 8586/13025 [2:25:17<1:58:56,  1.61s/it] 66%|██████▌   | 8587/13025 [2:25:18<1:58:22,  1.60s/it] 66%|██████▌   | 8588/13025 [2:25:20<1:59:35,  1.62s/it] 66%|██████▌   | 8589/13025 [2:25:21<1:55:15,  1.56s/it] 66%|██████▌   | 8590/13025 [2:25:23<1:52:29,  1.52s/it] 66%|██████▌   | 8592/13025 [2:25:24<1:25:40,  1.16s/it] 66%|██████▌   | 8594/13025 [2:25:26<1:16:15,  1.03s/it] 66%|██████▌   | 8595/13025 [2:25:28<1:23:54,  1.14s/it] 66%|██████▌   | 8596/13025 [2:25:29<1:27:59,  1.19s/it] 66%|██████▌   | 8597/13025 [2:25:30<1:32:08,  1.25s/it] 66%|██████▌   | 8598/13025 [2:25:32<1:39:01,  1.34s/it] 66%|██████▌   | 8600/13025 [2:25:34<1:24:13,  1.14s/it] 66%|██████▌   | 8602/13025 [2:25:35<1:14:55,  1.02s/it] 66%|██████▌   | 8603/13025 [2:25:37<1:24:53,  1.15s/it] 66%|██████▌   | 8604/13025 [2:25:38<1:32:04,  1.25s/it] 66%|██████▌   | 8609/13025 [2:25:40<50:19,  1.46it/s]   66%|██████▌   | 8611/13025 [2:25:42<52:19,  1.41it/s] 66%|██████▌   | 8612/13025 [2:25:43<1:01:38,  1.19it/s] 66%|██████▌   | 8613/13025 [2:25:45<1:10:38,  1.04it/s] 66%|██████▌   | 8614/13025 [2:25:46<1:21:20,  1.11s/it] 66%|██████▌   | 8617/13025 [2:25:48<59:26,  1.24it/s]   66%|██████▌   | 8618/13025 [2:25:49<1:08:58,  1.06it/s] 66%|██████▌   | 8619/13025 [2:25:51<1:20:12,  1.09s/it] 66%|██████▌   | 8621/13025 [2:25:53<1:13:01,  1.01it/s] 66%|██████▌   | 8623/13025 [2:25:54<1:06:48,  1.10it/s] 66%|██████▌   | 8624/13025 [2:25:56<1:12:40,  1.01it/s] 66%|██████▌   | 8625/13025 [2:25:57<1:23:20,  1.14s/it] 66%|██████▌   | 8626/13025 [2:25:59<1:29:39,  1.22s/it] 66%|██████▌   | 8627/13025 [2:26:00<1:36:29,  1.32s/it] 66%|██████▌   | 8628/13025 [2:26:02<1:42:51,  1.40s/it] 66%|██████▌   | 8629/13025 [2:26:03<1:45:12,  1.44s/it] 66%|██████▋   | 8631/13025 [2:26:05<1:26:35,  1.18s/it] 66%|██████▋   | 8632/13025 [2:26:07<1:35:32,  1.30s/it] 66%|██████▋   | 8633/13025 [2:26:09<1:45:50,  1.45s/it] 66%|██████▋   | 8634/13025 [2:26:11<2:02:13,  1.67s/it] 66%|██████▋   | 8637/13025 [2:26:13<1:21:38,  1.12s/it] 66%|██████▋   | 8639/13025 [2:26:15<1:21:37,  1.12s/it] 66%|██████▋   | 8640/13025 [2:26:17<1:32:15,  1.26s/it] 66%|██████▋   | 8641/13025 [2:26:18<1:34:51,  1.30s/it] 66%|██████▋   | 8644/13025 [2:26:20<1:08:07,  1.07it/s] 66%|██████▋   | 8646/13025 [2:26:22<1:06:17,  1.10it/s] 66%|██████▋   | 8647/13025 [2:26:23<1:16:17,  1.05s/it] 66%|██████▋   | 8648/13025 [2:26:25<1:25:29,  1.17s/it] 66%|██████▋   | 8649/13025 [2:26:27<1:32:42,  1.27s/it] 66%|██████▋   | 8651/13025 [2:26:28<1:18:32,  1.08s/it] 66%|██████▋   | 8652/13025 [2:26:30<1:26:45,  1.19s/it] 66%|██████▋   | 8653/13025 [2:26:31<1:32:12,  1.27s/it] 66%|██████▋   | 8656/13025 [2:26:33<1:05:48,  1.11it/s] 66%|██████▋   | 8657/13025 [2:26:35<1:17:33,  1.07s/it] 66%|██████▋   | 8658/13025 [2:26:36<1:26:45,  1.19s/it] 66%|██████▋   | 8659/13025 [2:26:38<1:34:29,  1.30s/it] 66%|██████▋   | 8660/13025 [2:26:40<1:40:23,  1.38s/it] 66%|██████▋   | 8661/13025 [2:26:41<1:45:37,  1.45s/it] 67%|██████▋   | 8662/13025 [2:26:43<1:46:49,  1.47s/it] 67%|██████▋   | 8663/13025 [2:26:44<1:50:36,  1.52s/it] 67%|██████▋   | 8664/13025 [2:26:46<1:47:10,  1.47s/it] 67%|██████▋   | 8665/13025 [2:26:47<1:44:38,  1.44s/it] 67%|██████▋   | 8666/13025 [2:26:49<1:49:00,  1.50s/it] 67%|██████▋   | 8668/13025 [2:26:51<1:27:22,  1.20s/it] 67%|██████▋   | 8669/13025 [2:26:52<1:35:54,  1.32s/it] 67%|██████▋   | 8672/13025 [2:26:54<1:03:07,  1.15it/s] 67%|██████▋   | 8675/13025 [2:26:55<53:00,  1.37it/s]   67%|██████▋   | 8677/13025 [2:26:57<52:04,  1.39it/s] 67%|██████▋   | 8678/13025 [2:26:58<59:56,  1.21it/s] 67%|██████▋   | 8682/13025 [2:27:00<45:37,  1.59it/s] 67%|██████▋   | 8684/13025 [2:27:01<49:54,  1.45it/s] 67%|██████▋   | 8685/13025 [2:27:03<1:00:48,  1.19it/s] 67%|██████▋   | 8686/13025 [2:27:05<1:11:13,  1.02it/s] 67%|██████▋   | 8687/13025 [2:27:06<1:22:23,  1.14s/it] 67%|██████▋   | 8688/13025 [2:27:08<1:31:42,  1.27s/it] 67%|██████▋   | 8689/13025 [2:27:10<1:47:17,  1.48s/it] 67%|██████▋   | 8690/13025 [2:27:12<1:53:56,  1.58s/it] 67%|██████▋   | 8692/13025 [2:27:14<1:33:27,  1.29s/it] 67%|██████▋   | 8693/13025 [2:27:16<1:43:41,  1.44s/it] 67%|██████▋   | 8694/13025 [2:27:18<1:52:58,  1.57s/it] 67%|██████▋   | 8695/13025 [2:27:19<1:49:04,  1.51s/it] 67%|██████▋   | 8698/13025 [2:27:21<1:11:37,  1.01it/s] 67%|██████▋   | 8699/13025 [2:27:22<1:17:21,  1.07s/it] 67%|██████▋   | 8702/13025 [2:27:24<58:58,  1.22it/s]   67%|██████▋   | 8703/13025 [2:27:25<1:08:36,  1.05it/s] 67%|██████▋   | 8706/13025 [2:27:27<55:34,  1.30it/s]   67%|██████▋   | 8707/13025 [2:27:28<1:05:50,  1.09it/s] 67%|██████▋   | 8711/13025 [2:27:30<46:51,  1.53it/s]   67%|██████▋   | 8713/13025 [2:27:31<47:10,  1.52it/s] 67%|██████▋   | 8715/13025 [2:27:33<48:12,  1.49it/s] 67%|██████▋   | 8716/13025 [2:27:34<59:10,  1.21it/s] 67%|██████▋   | 8717/13025 [2:27:36<1:10:56,  1.01it/s] 67%|██████▋   | 8718/13025 [2:27:38<1:18:26,  1.09s/it] 67%|██████▋   | 8719/13025 [2:27:39<1:23:48,  1.17s/it] 67%|██████▋   | 8720/13025 [2:27:40<1:28:29,  1.23s/it] 67%|██████▋   | 8722/13025 [2:27:42<1:12:14,  1.01s/it] 67%|██████▋   | 8723/13025 [2:27:43<1:22:04,  1.14s/it] 67%|██████▋   | 8724/13025 [2:27:45<1:30:15,  1.26s/it] 67%|██████▋   | 8727/13025 [2:27:46<59:54,  1.20it/s]   67%|██████▋   | 8728/13025 [2:27:48<1:06:36,  1.08it/s] 67%|██████▋   | 8733/13025 [2:27:49<40:45,  1.75it/s]   67%|██████▋   | 8734/13025 [2:27:51<51:58,  1.38it/s] 67%|██████▋   | 8735/13025 [2:27:52<1:02:55,  1.14it/s] 67%|██████▋   | 8738/13025 [2:27:54<51:35,  1.39it/s]   67%|██████▋   | 8739/13025 [2:27:55<1:00:48,  1.17it/s] 67%|██████▋   | 8742/13025 [2:27:57<48:59,  1.46it/s]   67%|██████▋   | 8743/13025 [2:27:58<1:00:48,  1.17it/s] 67%|██████▋   | 8744/13025 [2:28:00<1:11:02,  1.00it/s] 67%|██████▋   | 8747/13025 [2:28:02<56:42,  1.26it/s]   67%|██████▋   | 8748/13025 [2:28:03<1:07:25,  1.06it/s] 67%|██████▋   | 8749/13025 [2:28:05<1:16:44,  1.08s/it] 67%|██████▋   | 8752/13025 [2:28:07<59:57,  1.19it/s]   67%|██████▋   | 8753/13025 [2:28:08<1:09:59,  1.02it/s] 67%|██████▋   | 8754/13025 [2:28:10<1:25:17,  1.20s/it] 67%|██████▋   | 8757/13025 [2:28:13<1:09:39,  1.02it/s] 67%|██████▋   | 8758/13025 [2:28:15<1:24:45,  1.19s/it] 67%|██████▋   | 8759/13025 [2:28:17<1:33:49,  1.32s/it] 67%|██████▋   | 8761/13025 [2:28:18<1:20:36,  1.13s/it] 67%|██████▋   | 8762/13025 [2:28:20<1:28:12,  1.24s/it] 67%|██████▋   | 8764/13025 [2:28:21<1:15:28,  1.06s/it] 67%|██████▋   | 8766/13025 [2:28:23<1:10:11,  1.01it/s] 67%|██████▋   | 8768/13025 [2:28:25<1:07:03,  1.06it/s] 67%|██████▋   | 8770/13025 [2:28:26<1:04:16,  1.10it/s] 67%|██████▋   | 8771/13025 [2:28:28<1:13:37,  1.04s/it] 67%|██████▋   | 8774/13025 [2:28:30<58:32,  1.21it/s]   67%|██████▋   | 8776/13025 [2:28:31<58:37,  1.21it/s] 67%|██████▋   | 8777/13025 [2:28:33<1:05:46,  1.08it/s] 67%|██████▋   | 8778/13025 [2:28:34<1:15:09,  1.06s/it] 67%|██████▋   | 8779/13025 [2:28:36<1:20:36,  1.14s/it] 67%|██████▋   | 8780/13025 [2:28:37<1:26:09,  1.22s/it] 67%|██████▋   | 8781/13025 [2:28:39<1:32:42,  1.31s/it] 67%|██████▋   | 8782/13025 [2:28:40<1:37:20,  1.38s/it] 67%|██████▋   | 8784/13025 [2:28:42<1:18:21,  1.11s/it] 67%|██████▋   | 8785/13025 [2:28:43<1:24:57,  1.20s/it] 67%|██████▋   | 8787/13025 [2:28:45<1:12:07,  1.02s/it] 67%|██████▋   | 8788/13025 [2:28:46<1:18:21,  1.11s/it] 67%|██████▋   | 8789/13025 [2:28:48<1:26:43,  1.23s/it] 67%|██████▋   | 8790/13025 [2:28:50<1:34:06,  1.33s/it] 67%|██████▋   | 8791/13025 [2:28:51<1:38:14,  1.39s/it] 68%|██████▊   | 8792/13025 [2:28:53<1:43:37,  1.47s/it] 68%|██████▊   | 8794/13025 [2:28:54<1:23:06,  1.18s/it] 68%|██████▊   | 8795/13025 [2:28:56<1:30:11,  1.28s/it] 68%|██████▊   | 8797/13025 [2:28:57<1:13:04,  1.04s/it] 68%|██████▊   | 8802/13025 [2:28:59<43:55,  1.60it/s]   68%|██████▊   | 8803/13025 [2:29:01<54:17,  1.30it/s] 68%|██████▊   | 8804/13025 [2:29:02<1:04:53,  1.08it/s] 68%|██████▊   | 8805/13025 [2:29:04<1:12:55,  1.04s/it] 68%|██████▊   | 8806/13025 [2:29:05<1:18:31,  1.12s/it] 68%|██████▊   | 8807/13025 [2:29:07<1:23:22,  1.19s/it] 68%|██████▊   | 8812/13025 [2:29:08<46:08,  1.52it/s]   68%|██████▊   | 8813/13025 [2:29:11<1:02:21,  1.13it/s] 68%|██████▊   | 8814/13025 [2:29:13<1:18:10,  1.11s/it] 68%|██████▊   | 8817/13025 [2:29:15<1:06:51,  1.05it/s] 68%|██████▊   | 8818/13025 [2:29:17<1:20:17,  1.15s/it] 68%|██████▊   | 8819/13025 [2:29:19<1:25:11,  1.22s/it] 68%|██████▊   | 8822/13025 [2:29:20<1:03:46,  1.10it/s] 68%|██████▊   | 8825/13025 [2:29:22<51:35,  1.36it/s]   68%|██████▊   | 8826/13025 [2:29:23<58:13,  1.20it/s] 68%|██████▊   | 8828/13025 [2:29:24<57:13,  1.22it/s] 68%|██████▊   | 8829/13025 [2:29:26<1:04:54,  1.08it/s] 68%|██████▊   | 8831/13025 [2:29:27<59:37,  1.17it/s]   68%|██████▊   | 8833/13025 [2:29:29<59:01,  1.18it/s] 68%|██████▊   | 8834/13025 [2:29:31<1:09:36,  1.00it/s] 68%|██████▊   | 8835/13025 [2:29:32<1:19:23,  1.14s/it] 68%|██████▊   | 8836/13025 [2:29:34<1:27:42,  1.26s/it] 68%|██████▊   | 8837/13025 [2:29:36<1:33:32,  1.34s/it] 68%|██████▊   | 8839/13025 [2:29:37<1:18:16,  1.12s/it] 68%|██████▊   | 8841/13025 [2:29:39<1:10:03,  1.00s/it] 68%|██████▊   | 8844/13025 [2:29:40<56:11,  1.24it/s]   68%|██████▊   | 8845/13025 [2:29:42<1:06:27,  1.05it/s] 68%|██████▊   | 8846/13025 [2:29:44<1:15:32,  1.08s/it] 68%|██████▊   | 8849/13025 [2:29:45<56:51,  1.22it/s]   68%|██████▊   | 8850/13025 [2:29:47<1:06:42,  1.04it/s] 68%|██████▊   | 8851/13025 [2:29:48<1:15:59,  1.09s/it] 68%|██████▊   | 8854/13025 [2:29:50<56:41,  1.23it/s]   68%|██████▊   | 8863/13025 [2:29:52<27:07,  2.56it/s] 68%|██████▊   | 8867/13025 [2:29:53<27:17,  2.54it/s] 68%|██████▊   | 8869/13025 [2:29:55<32:40,  2.12it/s] 68%|██████▊   | 8870/13025 [2:29:56<41:44,  1.66it/s] 68%|██████▊   | 8872/13025 [2:29:58<45:24,  1.52it/s] 68%|██████▊   | 8873/13025 [2:30:00<55:26,  1.25it/s] 68%|██████▊   | 8875/13025 [2:30:01<55:51,  1.24it/s] 68%|██████▊   | 8877/13025 [2:30:03<56:18,  1.23it/s] 68%|██████▊   | 8879/13025 [2:30:05<56:07,  1.23it/s] 68%|██████▊   | 8880/13025 [2:30:06<1:06:23,  1.04it/s] 68%|██████▊   | 8881/13025 [2:30:08<1:15:59,  1.10s/it] 68%|██████▊   | 8882/13025 [2:30:10<1:32:57,  1.35s/it] 68%|██████▊   | 8883/13025 [2:30:13<1:49:03,  1.58s/it] 68%|██████▊   | 8884/13025 [2:30:15<2:02:20,  1.77s/it] 68%|██████▊   | 8885/13025 [2:30:17<2:06:56,  1.84s/it] 68%|██████▊   | 8887/13025 [2:30:18<1:36:07,  1.39s/it] 68%|██████▊   | 8888/13025 [2:30:20<1:39:35,  1.44s/it] 68%|██████▊   | 8889/13025 [2:30:22<1:43:13,  1.50s/it] 68%|██████▊   | 8891/13025 [2:30:23<1:24:25,  1.23s/it] 68%|██████▊   | 8893/13025 [2:30:25<1:14:06,  1.08s/it] 68%|██████▊   | 8894/13025 [2:30:27<1:22:05,  1.19s/it] 68%|██████▊   | 8896/13025 [2:30:28<1:10:17,  1.02s/it] 68%|██████▊   | 8900/13025 [2:30:30<48:10,  1.43it/s]   68%|██████▊   | 8903/13025 [2:30:31<41:43,  1.65it/s] 68%|██████▊   | 8905/13025 [2:30:32<42:32,  1.61it/s] 68%|██████▊   | 8908/13025 [2:30:34<38:09,  1.80it/s] 68%|██████▊   | 8911/13025 [2:30:35<35:23,  1.94it/s] 68%|██████▊   | 8918/13025 [2:30:36<23:28,  2.92it/s] 68%|██████▊   | 8919/13025 [2:30:38<29:53,  2.29it/s] 68%|██████▊   | 8920/13025 [2:30:39<37:12,  1.84it/s] 68%|██████▊   | 8921/13025 [2:30:40<46:20,  1.48it/s] 68%|██████▊   | 8922/13025 [2:30:42<54:07,  1.26it/s] 69%|██████▊   | 8924/13025 [2:30:43<51:12,  1.33it/s] 69%|██████▊   | 8925/13025 [2:30:44<58:40,  1.16it/s] 69%|██████▊   | 8926/13025 [2:30:46<1:05:32,  1.04it/s] 69%|██████▊   | 8928/13025 [2:30:47<57:42,  1.18it/s]   69%|██████▊   | 8929/13025 [2:30:48<1:04:39,  1.06it/s] 69%|██████▊   | 8930/13025 [2:30:50<1:10:54,  1.04s/it] 69%|██████▊   | 8933/13025 [2:30:51<50:31,  1.35it/s]   69%|██████▊   | 8934/13025 [2:30:53<59:29,  1.15it/s] 69%|██████▊   | 8935/13025 [2:30:54<1:07:27,  1.01it/s] 69%|██████▊   | 8938/13025 [2:30:55<51:49,  1.31it/s]   69%|██████▊   | 8941/13025 [2:30:57<43:16,  1.57it/s] 69%|██████▊   | 8942/13025 [2:30:58<50:46,  1.34it/s] 69%|██████▊   | 8945/13025 [2:30:59<42:12,  1.61it/s] 69%|██████▊   | 8947/13025 [2:31:01<43:04,  1.58it/s] 69%|██████▊   | 8952/13025 [2:31:02<30:28,  2.23it/s] 69%|██████▊   | 8953/13025 [2:31:03<37:50,  1.79it/s] 69%|██████▉   | 8955/13025 [2:31:05<39:42,  1.71it/s] 69%|██████▉   | 8956/13025 [2:31:06<47:29,  1.43it/s] 69%|██████▉   | 8958/13025 [2:31:07<46:28,  1.46it/s] 69%|██████▉   | 8961/13025 [2:31:09<41:21,  1.64it/s] 69%|██████▉   | 8963/13025 [2:31:11<47:07,  1.44it/s] 69%|██████▉   | 8965/13025 [2:31:13<51:26,  1.32it/s] 69%|██████▉   | 8966/13025 [2:31:14<1:03:15,  1.07it/s] 69%|██████▉   | 8967/13025 [2:31:16<1:15:02,  1.11s/it] 69%|██████▉   | 8970/13025 [2:31:18<55:38,  1.21it/s]   69%|██████▉   | 8971/13025 [2:31:19<1:04:55,  1.04it/s] 69%|██████▉   | 8973/13025 [2:31:21<58:08,  1.16it/s]   69%|██████▉   | 8975/13025 [2:31:22<53:39,  1.26it/s] 69%|██████▉   | 8976/13025 [2:31:23<1:00:14,  1.12it/s] 69%|██████▉   | 8977/13025 [2:31:24<1:06:15,  1.02it/s] 69%|██████▉   | 8978/13025 [2:31:26<1:11:44,  1.06s/it] 69%|██████▉   | 8979/13025 [2:31:27<1:16:07,  1.13s/it] 69%|██████▉   | 8981/13025 [2:31:29<1:03:18,  1.06it/s] 69%|██████▉   | 8982/13025 [2:31:30<1:09:11,  1.03s/it] 69%|██████▉   | 8987/13025 [2:31:31<37:18,  1.80it/s]   69%|██████▉   | 8988/13025 [2:31:32<45:00,  1.49it/s] 69%|██████▉   | 8990/13025 [2:31:34<44:47,  1.50it/s] 69%|██████▉   | 8991/13025 [2:31:35<52:32,  1.28it/s] 69%|██████▉   | 8994/13025 [2:31:37<44:23,  1.51it/s] 69%|██████▉   | 8995/13025 [2:31:38<51:51,  1.30it/s] 69%|██████▉   | 8997/13025 [2:31:39<49:21,  1.36it/s] 69%|██████▉   | 8998/13025 [2:31:41<56:45,  1.18it/s] 69%|██████▉   | 8999/13025 [2:31:42<1:03:57,  1.05it/s] 69%|██████▉   | 9000/13025 [2:31:43<1:10:11,  1.05s/it] 69%|██████▉   | 9001/13025 [2:31:45<1:14:36,  1.11s/it] 69%|██████▉   | 9003/13025 [2:31:46<1:02:02,  1.08it/s] 69%|██████▉   | 9007/13025 [2:31:47<40:26,  1.66it/s]   69%|██████▉   | 9008/13025 [2:31:49<48:14,  1.39it/s] 69%|██████▉   | 9009/13025 [2:31:50<55:39,  1.20it/s] 69%|██████▉   | 9012/13025 [2:31:51<43:53,  1.52it/s] 69%|██████▉   | 9014/13025 [2:31:52<43:49,  1.53it/s] 69%|██████▉   | 9015/13025 [2:31:54<51:32,  1.30it/s] 69%|██████▉   | 9016/13025 [2:31:55<58:40,  1.14it/s] 69%|██████▉   | 9017/13025 [2:31:56<1:05:13,  1.02it/s] 69%|██████▉   | 9018/13025 [2:31:58<1:10:42,  1.06s/it] 69%|██████▉   | 9019/13025 [2:31:59<1:15:12,  1.13s/it] 69%|██████▉   | 9020/13025 [2:32:00<1:18:34,  1.18s/it] 69%|██████▉   | 9021/13025 [2:32:02<1:21:04,  1.22s/it] 69%|██████▉   | 9022/13025 [2:32:03<1:22:54,  1.24s/it] 69%|██████▉   | 9024/13025 [2:32:04<1:05:22,  1.02it/s] 69%|██████▉   | 9026/13025 [2:32:06<56:59,  1.17it/s]   69%|██████▉   | 9027/13025 [2:32:07<1:03:26,  1.05it/s] 69%|██████▉   | 9028/13025 [2:32:08<1:12:32,  1.09s/it] 69%|██████▉   | 9029/13025 [2:32:10<1:24:40,  1.27s/it] 69%|██████▉   | 9030/13025 [2:32:12<1:34:56,  1.43s/it] 69%|██████▉   | 9031/13025 [2:32:14<1:42:25,  1.54s/it] 69%|██████▉   | 9032/13025 [2:32:16<1:47:52,  1.62s/it] 69%|██████▉   | 9033/13025 [2:32:17<1:43:09,  1.55s/it] 69%|██████▉   | 9034/13025 [2:32:18<1:38:33,  1.48s/it] 69%|██████▉   | 9035/13025 [2:32:20<1:35:11,  1.43s/it] 69%|██████▉   | 9036/13025 [2:32:21<1:32:45,  1.40s/it] 69%|██████▉   | 9037/13025 [2:32:22<1:30:53,  1.37s/it] 69%|██████▉   | 9038/13025 [2:32:24<1:29:47,  1.35s/it] 69%|██████▉   | 9039/13025 [2:32:25<1:28:54,  1.34s/it] 69%|██████▉   | 9040/13025 [2:32:26<1:28:21,  1.33s/it] 69%|██████▉   | 9042/13025 [2:32:28<1:08:02,  1.03s/it] 69%|██████▉   | 9043/13025 [2:32:29<1:13:16,  1.10s/it] 69%|██████▉   | 9044/13025 [2:32:30<1:16:54,  1.16s/it] 69%|██████▉   | 9045/13025 [2:32:32<1:19:37,  1.20s/it] 69%|██████▉   | 9046/13025 [2:32:33<1:21:49,  1.23s/it] 69%|██████▉   | 9047/13025 [2:32:34<1:23:15,  1.26s/it] 69%|██████▉   | 9049/13025 [2:32:36<1:05:22,  1.01it/s] 69%|██████▉   | 9050/13025 [2:32:37<1:12:18,  1.09s/it] 69%|██████▉   | 9052/13025 [2:32:38<1:00:24,  1.10it/s] 70%|██████▉   | 9053/13025 [2:32:40<1:06:21,  1.00s/it] 70%|██████▉   | 9054/13025 [2:32:41<1:11:17,  1.08s/it] 70%|██████▉   | 9058/13025 [2:32:42<43:26,  1.52it/s]   70%|██████▉   | 9059/13025 [2:32:44<51:14,  1.29it/s] 70%|██████▉   | 9060/13025 [2:32:45<58:24,  1.13it/s] 70%|██████▉   | 9064/13025 [2:32:46<38:58,  1.69it/s] 70%|██████▉   | 9065/13025 [2:32:48<46:32,  1.42it/s] 70%|██████▉   | 9068/13025 [2:32:49<39:26,  1.67it/s] 70%|██████▉   | 9069/13025 [2:32:50<47:00,  1.40it/s] 70%|██████▉   | 9070/13025 [2:32:52<54:24,  1.21it/s] 70%|██████▉   | 9072/13025 [2:32:53<50:29,  1.30it/s] 70%|██████▉   | 9075/13025 [2:32:54<41:12,  1.60it/s] 70%|██████▉   | 9076/13025 [2:32:56<48:45,  1.35it/s] 70%|██████▉   | 9079/13025 [2:32:57<40:17,  1.63it/s] 70%|██████▉   | 9080/13025 [2:32:58<48:08,  1.37it/s] 70%|██████▉   | 9081/13025 [2:33:00<55:39,  1.18it/s] 70%|██████▉   | 9083/13025 [2:33:01<51:20,  1.28it/s] 70%|██████▉   | 9084/13025 [2:33:02<58:19,  1.13it/s] 70%|██████▉   | 9089/13025 [2:33:03<34:01,  1.93it/s] 70%|██████▉   | 9091/13025 [2:33:05<36:15,  1.81it/s] 70%|██████▉   | 9092/13025 [2:33:06<43:48,  1.50it/s] 70%|██████▉   | 9093/13025 [2:33:07<51:24,  1.27it/s] 70%|██████▉   | 9094/13025 [2:33:09<1:01:39,  1.06it/s] 70%|██████▉   | 9095/13025 [2:33:11<1:16:35,  1.17s/it] 70%|██████▉   | 9096/13025 [2:33:13<1:26:38,  1.32s/it] 70%|██████▉   | 9097/13025 [2:33:15<1:35:39,  1.46s/it] 70%|██████▉   | 9099/13025 [2:33:16<1:20:40,  1.23s/it] 70%|██████▉   | 9100/13025 [2:33:18<1:21:56,  1.25s/it] 70%|██████▉   | 9101/13025 [2:33:19<1:22:55,  1.27s/it] 70%|██████▉   | 9102/13025 [2:33:20<1:23:53,  1.28s/it] 70%|██████▉   | 9103/13025 [2:33:22<1:24:24,  1.29s/it] 70%|██████▉   | 9104/13025 [2:33:23<1:24:57,  1.30s/it] 70%|██████▉   | 9105/13025 [2:33:24<1:25:05,  1.30s/it] 70%|██████▉   | 9106/13025 [2:33:26<1:25:15,  1.31s/it] 70%|██████▉   | 9112/13025 [2:33:27<35:25,  1.84it/s]   70%|██████▉   | 9113/13025 [2:33:28<43:49,  1.49it/s] 70%|██████▉   | 9114/13025 [2:33:30<51:10,  1.27it/s] 70%|██████▉   | 9115/13025 [2:33:31<58:04,  1.12it/s] 70%|██████▉   | 9116/13025 [2:33:32<1:04:02,  1.02it/s] 70%|██████▉   | 9117/13025 [2:33:34<1:09:13,  1.06s/it] 70%|███████   | 9119/13025 [2:33:35<59:43,  1.09it/s]   70%|███████   | 9121/13025 [2:33:36<53:27,  1.22it/s] 70%|███████   | 9122/13025 [2:33:38<1:00:11,  1.08it/s] 70%|███████   | 9123/13025 [2:33:39<1:05:57,  1.01s/it] 70%|███████   | 9125/13025 [2:33:40<56:35,  1.15it/s]   70%|███████   | 9126/13025 [2:33:42<1:02:44,  1.04it/s] 70%|███████   | 9127/13025 [2:33:43<1:08:03,  1.05s/it] 70%|███████   | 9128/13025 [2:33:44<1:12:26,  1.12s/it] 70%|███████   | 9132/13025 [2:33:46<42:24,  1.53it/s]   70%|███████   | 9133/13025 [2:33:47<49:47,  1.30it/s] 70%|███████   | 9134/13025 [2:33:48<58:03,  1.12it/s] 70%|███████   | 9136/13025 [2:33:50<52:29,  1.23it/s] 70%|███████   | 9137/13025 [2:33:51<1:00:31,  1.07it/s] 70%|███████   | 9138/13025 [2:33:53<1:08:11,  1.05s/it] 70%|███████   | 9140/13025 [2:33:54<58:14,  1.11it/s]   70%|███████   | 9144/13025 [2:33:55<38:38,  1.67it/s] 70%|███████   | 9147/13025 [2:33:57<35:35,  1.82it/s] 70%|███████   | 9148/13025 [2:33:58<42:48,  1.51it/s] 70%|███████   | 9149/13025 [2:33:59<50:14,  1.29it/s] 70%|███████   | 9151/13025 [2:34:01<47:49,  1.35it/s] 70%|███████   | 9152/13025 [2:34:02<57:24,  1.12it/s] 70%|███████   | 9153/13025 [2:34:03<1:03:14,  1.02it/s] 70%|███████   | 9154/13025 [2:34:05<1:08:17,  1.06s/it] 70%|███████   | 9155/13025 [2:34:06<1:12:18,  1.12s/it] 70%|███████   | 9157/13025 [2:34:07<59:38,  1.08it/s]   70%|███████   | 9158/13025 [2:34:09<1:06:22,  1.03s/it] 70%|███████   | 9160/13025 [2:34:11<1:03:15,  1.02it/s] 70%|███████   | 9161/13025 [2:34:12<1:15:42,  1.18s/it] 70%|███████   | 9162/13025 [2:34:15<1:33:54,  1.46s/it] 70%|███████   | 9163/13025 [2:34:17<1:40:33,  1.56s/it] 70%|███████   | 9164/13025 [2:34:18<1:37:02,  1.51s/it] 70%|███████   | 9165/13025 [2:34:19<1:33:26,  1.45s/it] 70%|███████   | 9169/13025 [2:34:21<49:11,  1.31it/s]   70%|███████   | 9171/13025 [2:34:22<46:58,  1.37it/s] 70%|███████   | 9172/13025 [2:34:23<53:36,  1.20it/s] 70%|███████   | 9176/13025 [2:34:25<37:13,  1.72it/s] 70%|███████   | 9177/13025 [2:34:26<44:24,  1.44it/s] 70%|███████   | 9178/13025 [2:34:27<51:25,  1.25it/s] 70%|███████   | 9179/13025 [2:34:28<58:03,  1.10it/s] 70%|███████   | 9182/13025 [2:34:30<46:09,  1.39it/s] 71%|███████   | 9183/13025 [2:34:31<53:10,  1.20it/s] 71%|███████   | 9185/13025 [2:34:33<49:21,  1.30it/s] 71%|███████   | 9187/13025 [2:34:34<46:54,  1.36it/s] 71%|███████   | 9188/13025 [2:34:35<55:06,  1.16it/s] 71%|███████   | 9189/13025 [2:34:37<1:01:10,  1.04it/s] 71%|███████   | 9191/13025 [2:34:38<53:52,  1.19it/s]   71%|███████   | 9196/13025 [2:34:39<32:32,  1.96it/s] 71%|███████   | 9197/13025 [2:34:41<39:39,  1.61it/s] 71%|███████   | 9199/13025 [2:34:42<40:14,  1.58it/s] 71%|███████   | 9200/13025 [2:34:43<47:30,  1.34it/s] 71%|███████   | 9203/13025 [2:34:45<39:11,  1.63it/s] 71%|███████   | 9204/13025 [2:34:46<46:47,  1.36it/s] 71%|███████   | 9205/13025 [2:34:47<54:14,  1.17it/s] 71%|███████   | 9206/13025 [2:34:49<1:00:29,  1.05it/s] 71%|███████   | 9207/13025 [2:34:50<1:05:53,  1.04s/it] 71%|███████   | 9209/13025 [2:34:51<56:13,  1.13it/s]   71%|███████   | 9210/13025 [2:34:52<1:02:14,  1.02it/s] 71%|███████   | 9212/13025 [2:34:54<54:13,  1.17it/s]   71%|███████   | 9214/13025 [2:34:55<50:54,  1.25it/s] 71%|███████   | 9216/13025 [2:34:56<47:46,  1.33it/s] 71%|███████   | 9217/13025 [2:34:58<54:40,  1.16it/s] 71%|███████   | 9218/13025 [2:34:59<1:00:49,  1.04it/s] 71%|███████   | 9219/13025 [2:35:00<1:06:30,  1.05s/it] 71%|███████   | 9221/13025 [2:35:02<56:47,  1.12it/s]   71%|███████   | 9224/13025 [2:35:03<43:32,  1.45it/s] 71%|███████   | 9225/13025 [2:35:04<50:44,  1.25it/s] 71%|███████   | 9226/13025 [2:35:06<57:26,  1.10it/s] 71%|███████   | 9229/13025 [2:35:07<43:38,  1.45it/s] 71%|███████   | 9232/13025 [2:35:09<39:00,  1.62it/s] 71%|███████   | 9234/13025 [2:35:10<44:26,  1.42it/s] 71%|███████   | 9235/13025 [2:35:12<56:09,  1.12it/s] 71%|███████   | 9237/13025 [2:35:14<56:09,  1.12it/s] 71%|███████   | 9238/13025 [2:35:16<1:07:17,  1.07s/it] 71%|███████   | 9241/13025 [2:35:17<51:05,  1.23it/s]   71%|███████   | 9243/13025 [2:35:19<48:21,  1.30it/s] 71%|███████   | 9244/13025 [2:35:20<54:25,  1.16it/s] 71%|███████   | 9245/13025 [2:35:21<1:00:00,  1.05it/s] 71%|███████   | 9247/13025 [2:35:23<53:14,  1.18it/s]   71%|███████   | 9248/13025 [2:35:24<59:15,  1.06it/s] 71%|███████   | 9251/13025 [2:35:25<44:35,  1.41it/s] 71%|███████   | 9253/13025 [2:35:27<43:36,  1.44it/s] 71%|███████   | 9254/13025 [2:35:28<50:38,  1.24it/s] 71%|███████   | 9255/13025 [2:35:29<57:12,  1.10it/s] 71%|███████   | 9256/13025 [2:35:31<1:02:52,  1.00s/it] 71%|███████   | 9257/13025 [2:35:32<1:07:57,  1.08s/it] 71%|███████   | 9258/13025 [2:35:33<1:12:18,  1.15s/it] 71%|███████   | 9259/13025 [2:35:35<1:14:57,  1.19s/it] 71%|███████   | 9262/13025 [2:35:36<49:27,  1.27it/s]   71%|███████   | 9263/13025 [2:35:37<56:02,  1.12it/s] 71%|███████   | 9264/13025 [2:35:39<1:02:09,  1.01it/s] 71%|███████   | 9266/13025 [2:35:40<54:12,  1.16it/s]   71%|███████   | 9267/13025 [2:35:41<1:00:30,  1.03it/s] 71%|███████   | 9268/13025 [2:35:42<1:05:39,  1.05s/it] 71%|███████   | 9270/13025 [2:35:44<55:47,  1.12it/s]   71%|███████   | 9272/13025 [2:35:45<50:23,  1.24it/s] 71%|███████   | 9273/13025 [2:35:46<57:10,  1.09it/s] 71%|███████   | 9274/13025 [2:35:48<1:03:34,  1.02s/it] 71%|███████   | 9275/13025 [2:35:49<1:09:56,  1.12s/it] 71%|███████   | 9277/13025 [2:35:51<58:02,  1.08it/s]   71%|███████▏  | 9281/13025 [2:35:52<38:01,  1.64it/s] 71%|███████▏  | 9283/13025 [2:35:53<38:59,  1.60it/s] 71%|███████▏  | 9284/13025 [2:35:55<46:03,  1.35it/s] 71%|███████▏  | 9289/13025 [2:35:56<30:23,  2.05it/s] 71%|███████▏  | 9291/13025 [2:35:57<32:51,  1.89it/s] 71%|███████▏  | 9292/13025 [2:35:59<39:54,  1.56it/s] 71%|███████▏  | 9294/13025 [2:36:00<40:08,  1.55it/s] 71%|███████▏  | 9295/13025 [2:36:01<47:18,  1.31it/s] 71%|███████▏  | 9296/13025 [2:36:03<54:12,  1.15it/s] 71%|███████▏  | 9299/13025 [2:36:04<41:57,  1.48it/s] 71%|███████▏  | 9300/13025 [2:36:05<49:10,  1.26it/s] 71%|███████▏  | 9303/13025 [2:36:06<39:37,  1.57it/s] 71%|███████▏  | 9305/13025 [2:36:08<39:57,  1.55it/s] 71%|███████▏  | 9306/13025 [2:36:09<49:58,  1.24it/s] 71%|███████▏  | 9307/13025 [2:36:11<1:02:44,  1.01s/it] 71%|███████▏  | 9309/13025 [2:36:13<1:00:21,  1.03it/s] 71%|███████▏  | 9311/13025 [2:36:15<58:57,  1.05it/s]   72%|███████▏  | 9313/13025 [2:36:17<58:06,  1.06it/s] 72%|███████▏  | 9314/13025 [2:36:18<1:02:36,  1.01s/it] 72%|███████▏  | 9315/13025 [2:36:19<1:07:00,  1.08s/it] 72%|███████▏  | 9317/13025 [2:36:21<57:00,  1.08it/s]   72%|███████▏  | 9318/13025 [2:36:22<1:02:03,  1.00s/it] 72%|███████▏  | 9322/13025 [2:36:23<39:09,  1.58it/s]   72%|███████▏  | 9323/13025 [2:36:25<46:05,  1.34it/s] 72%|███████▏  | 9324/13025 [2:36:26<52:36,  1.17it/s] 72%|███████▏  | 9325/13025 [2:36:27<58:36,  1.05it/s] 72%|███████▏  | 9326/13025 [2:36:29<1:03:55,  1.04s/it] 72%|███████▏  | 9330/13025 [2:36:30<38:55,  1.58it/s]   72%|███████▏  | 9333/13025 [2:36:31<34:21,  1.79it/s] 72%|███████▏  | 9334/13025 [2:36:33<41:26,  1.48it/s] 72%|███████▏  | 9335/13025 [2:36:34<48:51,  1.26it/s] 72%|███████▏  | 9336/13025 [2:36:35<55:27,  1.11it/s] 72%|███████▏  | 9337/13025 [2:36:37<1:01:40,  1.00s/it] 72%|███████▏  | 9340/13025 [2:36:38<44:38,  1.38it/s]   72%|███████▏  | 9342/13025 [2:36:39<43:15,  1.42it/s] 72%|███████▏  | 9343/13025 [2:36:41<52:14,  1.17it/s] 72%|███████▏  | 9345/13025 [2:36:42<48:07,  1.27it/s] 72%|███████▏  | 9347/13025 [2:36:43<45:33,  1.35it/s] 72%|███████▏  | 9348/13025 [2:36:45<52:12,  1.17it/s] 72%|███████▏  | 9349/13025 [2:36:46<58:09,  1.05it/s] 72%|███████▏  | 9351/13025 [2:36:47<51:26,  1.19it/s] 72%|███████▏  | 9355/13025 [2:36:49<36:01,  1.70it/s] 72%|███████▏  | 9356/13025 [2:36:50<43:12,  1.42it/s] 72%|███████▏  | 9357/13025 [2:36:51<49:57,  1.22it/s] 72%|███████▏  | 9358/13025 [2:36:53<56:16,  1.09it/s] 72%|███████▏  | 9359/13025 [2:36:54<1:01:43,  1.01s/it] 72%|███████▏  | 9360/13025 [2:36:55<1:06:17,  1.09s/it] 72%|███████▏  | 9361/13025 [2:36:57<1:09:45,  1.14s/it] 72%|███████▏  | 9362/13025 [2:36:58<1:12:34,  1.19s/it] 72%|███████▏  | 9367/13025 [2:36:59<35:19,  1.73it/s]   72%|███████▏  | 9369/13025 [2:37:01<37:21,  1.63it/s] 72%|███████▏  | 9372/13025 [2:37:02<33:21,  1.83it/s] 72%|███████▏  | 9377/13025 [2:37:03<25:12,  2.41it/s] 72%|███████▏  | 9378/13025 [2:37:05<33:15,  1.83it/s] 72%|███████▏  | 9381/13025 [2:37:06<31:07,  1.95it/s] 72%|███████▏  | 9382/13025 [2:37:07<37:48,  1.61it/s] 72%|███████▏  | 9384/13025 [2:37:09<41:09,  1.47it/s] 72%|███████▏  | 9386/13025 [2:37:11<47:48,  1.27it/s] 72%|███████▏  | 9387/13025 [2:37:13<58:11,  1.04it/s] 72%|███████▏  | 9388/13025 [2:37:15<1:08:53,  1.14s/it] 72%|███████▏  | 9389/13025 [2:37:17<1:16:43,  1.27s/it] 72%|███████▏  | 9392/13025 [2:37:18<53:38,  1.13it/s]   72%|███████▏  | 9393/13025 [2:37:19<58:42,  1.03it/s] 72%|███████▏  | 9394/13025 [2:37:21<1:03:26,  1.05s/it] 72%|███████▏  | 9396/13025 [2:37:22<54:42,  1.11it/s]   72%|███████▏  | 9400/13025 [2:37:23<36:41,  1.65it/s] 72%|███████▏  | 9401/13025 [2:37:25<43:32,  1.39it/s] 72%|███████▏  | 9402/13025 [2:37:26<50:09,  1.20it/s] 72%|███████▏  | 9405/13025 [2:37:27<40:38,  1.48it/s] 72%|███████▏  | 9406/13025 [2:37:29<48:21,  1.25it/s] 72%|███████▏  | 9407/13025 [2:37:30<54:27,  1.11it/s] 72%|███████▏  | 9408/13025 [2:37:31<59:54,  1.01it/s] 72%|███████▏  | 9409/13025 [2:37:33<1:04:28,  1.07s/it] 72%|███████▏  | 9411/13025 [2:37:34<54:31,  1.10it/s]   72%|███████▏  | 9413/13025 [2:37:36<50:42,  1.19it/s] 72%|███████▏  | 9414/13025 [2:37:37<56:41,  1.06it/s] 72%|███████▏  | 9420/13025 [2:37:38<28:49,  2.08it/s] 72%|███████▏  | 9423/13025 [2:37:40<28:04,  2.14it/s] 72%|███████▏  | 9426/13025 [2:37:41<28:08,  2.13it/s] 72%|███████▏  | 9428/13025 [2:37:42<30:40,  1.95it/s] 72%|███████▏  | 9429/13025 [2:37:44<37:26,  1.60it/s] 72%|███████▏  | 9430/13025 [2:37:45<44:18,  1.35it/s] 72%|███████▏  | 9432/13025 [2:37:46<44:33,  1.34it/s] 72%|███████▏  | 9434/13025 [2:37:48<43:08,  1.39it/s] 72%|███████▏  | 9436/13025 [2:37:49<41:58,  1.43it/s] 72%|███████▏  | 9437/13025 [2:37:50<48:48,  1.23it/s] 72%|███████▏  | 9438/13025 [2:37:52<55:24,  1.08it/s] 72%|███████▏  | 9439/13025 [2:37:53<1:00:47,  1.02s/it] 72%|███████▏  | 9442/13025 [2:37:54<43:55,  1.36it/s]   72%|███████▏  | 9443/13025 [2:37:56<50:41,  1.18it/s] 73%|███████▎  | 9444/13025 [2:37:57<56:42,  1.05it/s] 73%|███████▎  | 9447/13025 [2:37:58<42:07,  1.42it/s] 73%|███████▎  | 9449/13025 [2:38:00<41:23,  1.44it/s] 73%|███████▎  | 9450/13025 [2:38:01<48:23,  1.23it/s] 73%|███████▎  | 9452/13025 [2:38:02<45:15,  1.32it/s] 73%|███████▎  | 9453/13025 [2:38:04<51:49,  1.15it/s] 73%|███████▎  | 9454/13025 [2:38:05<57:58,  1.03it/s] 73%|███████▎  | 9455/13025 [2:38:06<1:03:12,  1.06s/it] 73%|███████▎  | 9456/13025 [2:38:08<1:07:19,  1.13s/it] 73%|███████▎  | 9457/13025 [2:38:09<1:14:44,  1.26s/it] 73%|███████▎  | 9459/13025 [2:38:11<1:08:29,  1.15s/it] 73%|███████▎  | 9460/13025 [2:38:13<1:17:46,  1.31s/it] 73%|███████▎  | 9462/13025 [2:38:15<1:08:31,  1.15s/it] 73%|███████▎  | 9463/13025 [2:38:17<1:16:45,  1.29s/it] 73%|███████▎  | 9464/13025 [2:38:18<1:17:30,  1.31s/it] 73%|███████▎  | 9466/13025 [2:38:19<1:01:42,  1.04s/it] 73%|███████▎  | 9467/13025 [2:38:21<1:08:15,  1.15s/it] 73%|███████▎  | 9469/13025 [2:38:22<57:07,  1.04it/s]   73%|███████▎  | 9471/13025 [2:38:24<50:32,  1.17it/s] 73%|███████▎  | 9479/13025 [2:38:25<23:08,  2.55it/s] 73%|███████▎  | 9480/13025 [2:38:26<28:59,  2.04it/s] 73%|███████▎  | 9481/13025 [2:38:28<35:21,  1.67it/s] 73%|███████▎  | 9482/13025 [2:38:29<43:47,  1.35it/s] 73%|███████▎  | 9483/13025 [2:38:30<50:09,  1.18it/s] 73%|███████▎  | 9484/13025 [2:38:32<58:13,  1.01it/s] 73%|███████▎  | 9487/13025 [2:38:33<42:49,  1.38it/s] 73%|███████▎  | 9488/13025 [2:38:35<49:10,  1.20it/s] 73%|███████▎  | 9489/13025 [2:38:36<55:11,  1.07it/s] 73%|███████▎  | 9491/13025 [2:38:37<49:16,  1.20it/s] 73%|███████▎  | 9495/13025 [2:38:39<33:59,  1.73it/s] 73%|███████▎  | 9496/13025 [2:38:40<40:43,  1.44it/s] 73%|███████▎  | 9498/13025 [2:38:41<40:09,  1.46it/s] 73%|███████▎  | 9499/13025 [2:38:43<46:51,  1.25it/s] 73%|███████▎  | 9500/13025 [2:38:44<53:05,  1.11it/s] 73%|███████▎  | 9502/13025 [2:38:45<47:59,  1.22it/s] 73%|███████▎  | 9503/13025 [2:38:46<54:11,  1.08it/s] 73%|███████▎  | 9507/13025 [2:38:48<38:08,  1.54it/s] 73%|███████▎  | 9508/13025 [2:38:50<47:38,  1.23it/s] 73%|███████▎  | 9509/13025 [2:38:51<53:20,  1.10it/s] 73%|███████▎  | 9511/13025 [2:38:53<49:18,  1.19it/s] 73%|███████▎  | 9512/13025 [2:38:54<54:59,  1.06it/s] 73%|███████▎  | 9514/13025 [2:38:55<48:56,  1.20it/s] 73%|███████▎  | 9515/13025 [2:38:57<54:40,  1.07it/s] 73%|███████▎  | 9516/13025 [2:38:58<59:37,  1.02s/it] 73%|███████▎  | 9518/13025 [2:38:59<51:09,  1.14it/s] 73%|███████▎  | 9519/13025 [2:39:00<56:49,  1.03it/s] 73%|███████▎  | 9521/13025 [2:39:02<49:42,  1.17it/s] 73%|███████▎  | 9522/13025 [2:39:03<56:05,  1.04it/s] 73%|███████▎  | 9523/13025 [2:39:04<1:00:54,  1.04s/it] 73%|███████▎  | 9525/13025 [2:39:06<51:43,  1.13it/s]   73%|███████▎  | 9526/13025 [2:39:07<58:37,  1.01s/it] 73%|███████▎  | 9527/13025 [2:39:09<1:07:14,  1.15s/it] 73%|███████▎  | 9532/13025 [2:39:11<41:42,  1.40it/s]   73%|███████▎  | 9533/13025 [2:39:13<53:34,  1.09it/s] 73%|███████▎  | 9534/13025 [2:39:15<1:06:19,  1.14s/it] 73%|███████▎  | 9535/13025 [2:39:17<1:13:50,  1.27s/it] 73%|███████▎  | 9536/13025 [2:39:19<1:17:43,  1.34s/it] 73%|███████▎  | 9537/13025 [2:39:20<1:20:05,  1.38s/it] 73%|███████▎  | 9539/13025 [2:39:22<1:04:15,  1.11s/it] 73%|███████▎  | 9540/13025 [2:39:23<1:07:07,  1.16s/it] 73%|███████▎  | 9545/13025 [2:39:24<35:06,  1.65it/s]   73%|███████▎  | 9546/13025 [2:39:26<41:17,  1.40it/s] 73%|███████▎  | 9547/13025 [2:39:27<47:21,  1.22it/s] 73%|███████▎  | 9550/13025 [2:39:28<37:52,  1.53it/s] 73%|███████▎  | 9551/13025 [2:39:29<44:23,  1.30it/s] 73%|███████▎  | 9553/13025 [2:39:31<42:27,  1.36it/s] 73%|███████▎  | 9556/13025 [2:39:32<35:25,  1.63it/s] 73%|███████▎  | 9557/13025 [2:39:33<41:59,  1.38it/s] 73%|███████▎  | 9558/13025 [2:39:35<49:59,  1.16it/s] 73%|███████▎  | 9559/13025 [2:39:36<55:32,  1.04it/s] 73%|███████▎  | 9562/13025 [2:39:38<41:13,  1.40it/s] 73%|███████▎  | 9564/13025 [2:39:39<40:20,  1.43it/s] 73%|███████▎  | 9566/13025 [2:39:40<41:23,  1.39it/s] 73%|███████▎  | 9567/13025 [2:39:42<47:35,  1.21it/s] 73%|███████▎  | 9570/13025 [2:39:43<37:57,  1.52it/s] 73%|███████▎  | 9571/13025 [2:39:44<45:19,  1.27it/s] 73%|███████▎  | 9572/13025 [2:39:46<51:14,  1.12it/s] 73%|███████▎  | 9573/13025 [2:39:47<56:36,  1.02it/s] 74%|███████▎  | 9574/13025 [2:39:48<1:01:25,  1.07s/it] 74%|███████▎  | 9575/13025 [2:39:50<1:04:58,  1.13s/it] 74%|███████▎  | 9578/13025 [2:39:51<44:08,  1.30it/s]   74%|███████▎  | 9582/13025 [2:39:52<31:35,  1.82it/s] 74%|███████▎  | 9583/13025 [2:39:54<39:57,  1.44it/s] 74%|███████▎  | 9584/13025 [2:39:55<46:13,  1.24it/s] 74%|███████▎  | 9585/13025 [2:39:57<52:06,  1.10it/s] 74%|███████▎  | 9586/13025 [2:39:58<57:23,  1.00s/it] 74%|███████▎  | 9587/13025 [2:39:59<1:03:03,  1.10s/it] 74%|███████▎  | 9588/13025 [2:40:01<1:06:04,  1.15s/it] 74%|███████▎  | 9591/13025 [2:40:02<44:38,  1.28it/s]   74%|███████▎  | 9593/13025 [2:40:03<42:10,  1.36it/s] 74%|███████▎  | 9594/13025 [2:40:04<48:21,  1.18it/s] 74%|███████▎  | 9595/13025 [2:40:06<54:03,  1.06it/s] 74%|███████▎  | 9597/13025 [2:40:07<47:44,  1.20it/s] 74%|███████▎  | 9598/13025 [2:40:09<54:53,  1.04it/s] 74%|███████▎  | 9599/13025 [2:40:10<1:06:57,  1.17s/it] 74%|███████▎  | 9600/13025 [2:40:12<1:16:37,  1.34s/it] 74%|███████▎  | 9603/13025 [2:40:14<54:26,  1.05it/s]   74%|███████▎  | 9605/13025 [2:40:16<53:47,  1.06it/s] 74%|███████▍  | 9606/13025 [2:40:17<59:39,  1.05s/it] 74%|███████▍  | 9607/13025 [2:40:19<1:03:07,  1.11s/it] 74%|███████▍  | 9608/13025 [2:40:20<1:07:03,  1.18s/it] 74%|███████▍  | 9610/13025 [2:40:21<55:07,  1.03it/s]   74%|███████▍  | 9612/13025 [2:40:23<48:39,  1.17it/s] 74%|███████▍  | 9614/13025 [2:40:24<45:09,  1.26it/s] 74%|███████▍  | 9616/13025 [2:40:25<42:43,  1.33it/s] 74%|███████▍  | 9618/13025 [2:40:27<40:58,  1.39it/s] 74%|███████▍  | 9620/13025 [2:40:28<40:42,  1.39it/s] 74%|███████▍  | 9622/13025 [2:40:30<41:25,  1.37it/s] 74%|███████▍  | 9623/13025 [2:40:31<49:22,  1.15it/s] 74%|███████▍  | 9624/13025 [2:40:33<56:47,  1.00s/it] 74%|███████▍  | 9626/13025 [2:40:34<49:32,  1.14it/s] 74%|███████▍  | 9630/13025 [2:40:35<33:37,  1.68it/s] 74%|███████▍  | 9631/13025 [2:40:37<41:34,  1.36it/s] 74%|███████▍  | 9632/13025 [2:40:38<47:28,  1.19it/s] 74%|███████▍  | 9633/13025 [2:40:40<56:06,  1.01it/s] 74%|███████▍  | 9636/13025 [2:40:41<41:55,  1.35it/s] 74%|███████▍  | 9637/13025 [2:40:42<47:40,  1.18it/s] 74%|███████▍  | 9638/13025 [2:40:44<53:06,  1.06it/s] 74%|███████▍  | 9641/13025 [2:40:45<39:52,  1.41it/s] 74%|███████▍  | 9642/13025 [2:40:46<47:13,  1.19it/s] 74%|███████▍  | 9643/13025 [2:40:48<53:10,  1.06it/s] 74%|███████▍  | 9645/13025 [2:40:49<50:18,  1.12it/s] 74%|███████▍  | 9646/13025 [2:40:51<55:22,  1.02it/s] 74%|███████▍  | 9647/13025 [2:40:52<59:45,  1.06s/it] 74%|███████▍  | 9648/13025 [2:40:54<1:06:07,  1.17s/it] 74%|███████▍  | 9650/13025 [2:40:55<54:31,  1.03it/s]   74%|███████▍  | 9651/13025 [2:40:56<1:00:19,  1.07s/it] 74%|███████▍  | 9652/13025 [2:40:58<1:03:43,  1.13s/it] 74%|███████▍  | 9653/13025 [2:40:59<1:12:07,  1.28s/it] 74%|███████▍  | 9656/13025 [2:41:01<47:10,  1.19it/s]   74%|███████▍  | 9658/13025 [2:41:02<43:39,  1.29it/s] 74%|███████▍  | 9659/13025 [2:41:03<49:29,  1.13it/s] 74%|███████▍  | 9660/13025 [2:41:05<54:39,  1.03it/s] 74%|███████▍  | 9661/13025 [2:41:06<1:00:24,  1.08s/it] 74%|███████▍  | 9663/13025 [2:41:07<50:48,  1.10it/s]   74%|███████▍  | 9664/13025 [2:41:09<56:21,  1.01s/it] 74%|███████▍  | 9669/13025 [2:41:11<34:49,  1.61it/s] 74%|███████▍  | 9672/13025 [2:41:12<34:45,  1.61it/s] 74%|███████▍  | 9677/13025 [2:41:14<28:57,  1.93it/s] 74%|███████▍  | 9678/13025 [2:41:16<37:14,  1.50it/s] 74%|███████▍  | 9679/13025 [2:41:18<43:38,  1.28it/s] 74%|███████▍  | 9680/13025 [2:41:19<48:45,  1.14it/s] 74%|███████▍  | 9682/13025 [2:41:20<44:50,  1.24it/s] 74%|███████▍  | 9683/13025 [2:41:22<51:04,  1.09it/s] 74%|███████▍  | 9684/13025 [2:41:23<58:09,  1.04s/it] 74%|███████▍  | 9686/13025 [2:41:25<51:33,  1.08it/s] 74%|███████▍  | 9687/13025 [2:41:26<56:54,  1.02s/it] 74%|███████▍  | 9688/13025 [2:41:28<1:02:16,  1.12s/it] 74%|███████▍  | 9689/13025 [2:41:29<1:04:59,  1.17s/it] 74%|███████▍  | 9691/13025 [2:41:30<54:24,  1.02it/s]   74%|███████▍  | 9694/13025 [2:41:32<40:19,  1.38it/s] 74%|███████▍  | 9695/13025 [2:41:33<46:16,  1.20it/s] 74%|███████▍  | 9696/13025 [2:41:34<51:55,  1.07it/s] 74%|███████▍  | 9697/13025 [2:41:36<56:55,  1.03s/it] 74%|███████▍  | 9698/13025 [2:41:37<1:00:55,  1.10s/it] 74%|███████▍  | 9699/13025 [2:41:38<1:04:13,  1.16s/it] 74%|███████▍  | 9700/13025 [2:41:40<1:06:35,  1.20s/it] 74%|███████▍  | 9701/13025 [2:41:41<1:08:55,  1.24s/it] 75%|███████▍  | 9704/13025 [2:41:42<44:45,  1.24it/s]   75%|███████▍  | 9705/13025 [2:41:44<50:34,  1.09it/s] 75%|███████▍  | 9706/13025 [2:41:45<55:45,  1.01s/it] 75%|███████▍  | 9707/13025 [2:41:46<1:00:06,  1.09s/it] 75%|███████▍  | 9711/13025 [2:41:48<38:06,  1.45it/s]   75%|███████▍  | 9714/13025 [2:41:49<32:53,  1.68it/s] 75%|███████▍  | 9717/13025 [2:41:51<29:48,  1.85it/s] 75%|███████▍  | 9718/13025 [2:41:52<35:56,  1.53it/s] 75%|███████▍  | 9720/13025 [2:41:53<35:59,  1.53it/s] 75%|███████▍  | 9721/13025 [2:41:54<42:16,  1.30it/s] 75%|███████▍  | 9722/13025 [2:41:56<51:26,  1.07it/s] 75%|███████▍  | 9724/13025 [2:41:57<46:10,  1.19it/s] 75%|███████▍  | 9727/13025 [2:41:59<36:35,  1.50it/s] 75%|███████▍  | 9728/13025 [2:42:00<42:42,  1.29it/s] 75%|███████▍  | 9729/13025 [2:42:01<48:36,  1.13it/s] 75%|███████▍  | 9730/13025 [2:42:03<53:43,  1.02it/s] 75%|███████▍  | 9734/13025 [2:42:04<35:20,  1.55it/s] 75%|███████▍  | 9735/13025 [2:42:06<41:31,  1.32it/s] 75%|███████▍  | 9738/13025 [2:42:07<34:14,  1.60it/s] 75%|███████▍  | 9739/13025 [2:42:08<41:03,  1.33it/s] 75%|███████▍  | 9740/13025 [2:42:10<52:44,  1.04it/s] 75%|███████▍  | 9743/13025 [2:42:12<47:57,  1.14it/s] 75%|███████▍  | 9744/13025 [2:42:15<1:01:03,  1.12s/it] 75%|███████▍  | 9745/13025 [2:42:17<1:11:49,  1.31s/it] 75%|███████▍  | 9748/13025 [2:42:18<49:46,  1.10it/s]   75%|███████▍  | 9749/13025 [2:42:19<53:50,  1.01it/s] 75%|███████▍  | 9750/13025 [2:42:21<57:45,  1.06s/it] 75%|███████▍  | 9751/13025 [2:42:22<1:00:53,  1.12s/it] 75%|███████▍  | 9752/13025 [2:42:23<1:03:30,  1.16s/it] 75%|███████▍  | 9753/13025 [2:42:25<1:06:25,  1.22s/it] 75%|███████▍  | 9754/13025 [2:42:26<1:08:10,  1.25s/it] 75%|███████▍  | 9755/13025 [2:42:27<1:09:47,  1.28s/it] 75%|███████▍  | 9758/13025 [2:42:29<45:01,  1.21it/s]   75%|███████▍  | 9760/13025 [2:42:30<41:57,  1.30it/s] 75%|███████▍  | 9761/13025 [2:42:31<47:46,  1.14it/s] 75%|███████▍  | 9762/13025 [2:42:33<52:53,  1.03it/s] 75%|███████▍  | 9765/13025 [2:42:34<38:44,  1.40it/s] 75%|███████▌  | 9769/13025 [2:42:35<28:45,  1.89it/s] 75%|███████▌  | 9770/13025 [2:42:37<34:57,  1.55it/s] 75%|███████▌  | 9771/13025 [2:42:38<41:06,  1.32it/s] 75%|███████▌  | 9772/13025 [2:42:39<47:01,  1.15it/s] 75%|███████▌  | 9773/13025 [2:42:41<52:14,  1.04it/s] 75%|███████▌  | 9775/13025 [2:42:42<45:57,  1.18it/s] 75%|███████▌  | 9776/13025 [2:42:43<51:42,  1.05it/s] 75%|███████▌  | 9777/13025 [2:42:45<56:09,  1.04s/it] 75%|███████▌  | 9778/13025 [2:42:46<59:56,  1.11s/it] 75%|███████▌  | 9779/13025 [2:42:47<1:05:46,  1.22s/it] 75%|███████▌  | 9782/13025 [2:42:49<43:33,  1.24it/s]   75%|███████▌  | 9788/13025 [2:42:50<24:25,  2.21it/s] 75%|███████▌  | 9789/13025 [2:42:51<30:15,  1.78it/s] 75%|███████▌  | 9790/13025 [2:42:53<36:24,  1.48it/s] 75%|███████▌  | 9792/13025 [2:42:54<36:05,  1.49it/s] 75%|███████▌  | 9793/13025 [2:42:55<42:14,  1.28it/s] 75%|███████▌  | 9794/13025 [2:42:57<50:19,  1.07it/s] 75%|███████▌  | 9796/13025 [2:42:58<44:53,  1.20it/s] 75%|███████▌  | 9797/13025 [2:43:00<50:22,  1.07it/s] 75%|███████▌  | 9798/13025 [2:43:01<56:11,  1.04s/it] 75%|███████▌  | 9800/13025 [2:43:02<47:53,  1.12it/s] 75%|███████▌  | 9801/13025 [2:43:04<52:53,  1.02it/s] 75%|███████▌  | 9802/13025 [2:43:05<57:07,  1.06s/it] 75%|███████▌  | 9804/13025 [2:43:06<51:21,  1.05it/s] 75%|███████▌  | 9806/13025 [2:43:08<47:48,  1.12it/s] 75%|███████▌  | 9807/13025 [2:43:10<56:11,  1.05s/it] 75%|███████▌  | 9808/13025 [2:43:12<1:05:57,  1.23s/it] 75%|███████▌  | 9810/13025 [2:43:13<59:22,  1.11s/it]   75%|███████▌  | 9812/13025 [2:43:15<55:39,  1.04s/it] 75%|███████▌  | 9814/13025 [2:43:17<54:37,  1.02s/it] 75%|███████▌  | 9815/13025 [2:43:19<59:50,  1.12s/it] 75%|███████▌  | 9816/13025 [2:43:20<1:02:03,  1.16s/it] 75%|███████▌  | 9817/13025 [2:43:21<1:05:17,  1.22s/it] 75%|███████▌  | 9818/13025 [2:43:23<1:06:31,  1.24s/it] 75%|███████▌  | 9820/13025 [2:43:24<53:14,  1.00it/s]   75%|███████▌  | 9821/13025 [2:43:25<57:03,  1.07s/it] 75%|███████▌  | 9824/13025 [2:43:27<40:17,  1.32it/s] 75%|███████▌  | 9825/13025 [2:43:28<46:10,  1.15it/s] 75%|███████▌  | 9826/13025 [2:43:29<51:31,  1.03it/s] 75%|███████▌  | 9827/13025 [2:43:31<55:59,  1.05s/it] 75%|███████▌  | 9828/13025 [2:43:32<59:26,  1.12s/it] 75%|███████▌  | 9829/13025 [2:43:34<1:06:16,  1.24s/it] 75%|███████▌  | 9830/13025 [2:43:35<1:07:18,  1.26s/it] 75%|███████▌  | 9833/13025 [2:43:36<43:32,  1.22it/s]   76%|███████▌  | 9834/13025 [2:43:38<48:56,  1.09it/s] 76%|███████▌  | 9835/13025 [2:43:39<53:38,  1.01s/it] 76%|███████▌  | 9836/13025 [2:43:40<57:29,  1.08s/it] 76%|███████▌  | 9837/13025 [2:43:41<1:00:25,  1.14s/it] 76%|███████▌  | 9838/13025 [2:43:43<1:03:00,  1.19s/it] 76%|███████▌  | 9839/13025 [2:43:44<1:08:37,  1.29s/it] 76%|███████▌  | 9840/13025 [2:43:46<1:10:30,  1.33s/it] 76%|███████▌  | 9842/13025 [2:43:47<54:25,  1.03s/it]   76%|███████▌  | 9843/13025 [2:43:48<58:00,  1.09s/it] 76%|███████▌  | 9844/13025 [2:43:50<1:01:05,  1.15s/it] 76%|███████▌  | 9845/13025 [2:43:51<1:03:21,  1.20s/it] 76%|███████▌  | 9846/13025 [2:43:52<1:05:06,  1.23s/it] 76%|███████▌  | 9847/13025 [2:43:54<1:06:20,  1.25s/it] 76%|███████▌  | 9851/13025 [2:43:55<36:02,  1.47it/s]   76%|███████▌  | 9853/13025 [2:43:56<35:38,  1.48it/s] 76%|███████▌  | 9854/13025 [2:43:58<43:24,  1.22it/s] 76%|███████▌  | 9855/13025 [2:43:59<48:57,  1.08it/s] 76%|███████▌  | 9857/13025 [2:44:00<43:43,  1.21it/s] 76%|███████▌  | 9858/13025 [2:44:02<48:55,  1.08it/s] 76%|███████▌  | 9859/13025 [2:44:03<53:27,  1.01s/it] 76%|███████▌  | 9860/13025 [2:44:04<57:29,  1.09s/it] 76%|███████▌  | 9862/13025 [2:44:06<48:05,  1.10it/s] 76%|███████▌  | 9863/13025 [2:44:07<55:20,  1.05s/it] 76%|███████▌  | 9864/13025 [2:44:09<1:02:07,  1.18s/it] 76%|███████▌  | 9867/13025 [2:44:11<48:55,  1.08it/s]   76%|███████▌  | 9870/13025 [2:44:13<41:39,  1.26it/s] 76%|███████▌  | 9871/13025 [2:44:15<51:24,  1.02it/s] 76%|███████▌  | 9872/13025 [2:44:16<1:00:00,  1.14s/it] 76%|███████▌  | 9874/13025 [2:44:18<51:01,  1.03it/s]   76%|███████▌  | 9875/13025 [2:44:19<57:53,  1.10s/it] 76%|███████▌  | 9876/13025 [2:44:21<1:01:32,  1.17s/it] 76%|███████▌  | 9879/13025 [2:44:22<42:35,  1.23it/s]   76%|███████▌  | 9880/13025 [2:44:24<49:31,  1.06it/s] 76%|███████▌  | 9881/13025 [2:44:25<53:37,  1.02s/it] 76%|███████▌  | 9882/13025 [2:44:26<57:06,  1.09s/it] 76%|███████▌  | 9887/13025 [2:44:27<30:00,  1.74it/s] 76%|███████▌  | 9890/13025 [2:44:29<27:38,  1.89it/s] 76%|███████▌  | 9892/13025 [2:44:30<29:27,  1.77it/s] 76%|███████▌  | 9893/13025 [2:44:31<35:28,  1.47it/s] 76%|███████▌  | 9894/13025 [2:44:33<41:23,  1.26it/s] 76%|███████▌  | 9895/13025 [2:44:34<46:54,  1.11it/s] 76%|███████▌  | 9896/13025 [2:44:35<51:43,  1.01it/s] 76%|███████▌  | 9897/13025 [2:44:37<55:40,  1.07s/it] 76%|███████▌  | 9898/13025 [2:44:38<59:01,  1.13s/it] 76%|███████▌  | 9900/13025 [2:44:39<48:32,  1.07it/s] 76%|███████▌  | 9903/13025 [2:44:41<37:06,  1.40it/s] 76%|███████▌  | 9905/13025 [2:44:42<38:13,  1.36it/s] 76%|███████▌  | 9906/13025 [2:44:44<43:45,  1.19it/s] 76%|███████▌  | 9907/13025 [2:44:45<49:04,  1.06it/s] 76%|███████▌  | 9909/13025 [2:44:46<43:56,  1.18it/s] 76%|███████▌  | 9910/13025 [2:44:48<49:02,  1.06it/s] 76%|███████▌  | 9911/13025 [2:44:49<54:22,  1.05s/it] 76%|███████▌  | 9912/13025 [2:44:51<59:16,  1.14s/it] 76%|███████▌  | 9915/13025 [2:44:52<41:20,  1.25it/s] 76%|███████▌  | 9916/13025 [2:44:53<46:36,  1.11it/s] 76%|███████▌  | 9917/13025 [2:44:55<51:32,  1.01it/s] 76%|███████▌  | 9918/13025 [2:44:56<55:32,  1.07s/it] 76%|███████▌  | 9920/13025 [2:44:57<47:47,  1.08it/s] 76%|███████▌  | 9921/13025 [2:44:59<52:11,  1.01s/it] 76%|███████▌  | 9922/13025 [2:45:00<56:13,  1.09s/it] 76%|███████▌  | 9923/13025 [2:45:01<59:20,  1.15s/it] 76%|███████▌  | 9925/13025 [2:45:03<48:41,  1.06it/s] 76%|███████▌  | 9928/13025 [2:45:04<36:13,  1.42it/s] 76%|███████▌  | 9930/13025 [2:45:05<35:33,  1.45it/s] 76%|███████▋  | 9932/13025 [2:45:07<35:45,  1.44it/s] 76%|███████▋  | 9933/13025 [2:45:08<41:21,  1.25it/s] 76%|███████▋  | 9936/13025 [2:45:10<35:52,  1.44it/s] 76%|███████▋  | 9940/13025 [2:45:12<32:40,  1.57it/s] 76%|███████▋  | 9942/13025 [2:45:14<36:13,  1.42it/s] 76%|███████▋  | 9945/13025 [2:45:16<34:43,  1.48it/s] 76%|███████▋  | 9946/13025 [2:45:17<41:42,  1.23it/s] 76%|███████▋  | 9948/13025 [2:45:19<39:29,  1.30it/s] 76%|███████▋  | 9950/13025 [2:45:20<38:46,  1.32it/s] 76%|███████▋  | 9952/13025 [2:45:21<37:23,  1.37it/s] 76%|███████▋  | 9955/13025 [2:45:23<31:37,  1.62it/s] 76%|███████▋  | 9956/13025 [2:45:24<37:11,  1.38it/s] 76%|███████▋  | 9958/13025 [2:45:25<36:15,  1.41it/s] 76%|███████▋  | 9960/13025 [2:45:27<35:25,  1.44it/s] 76%|███████▋  | 9961/13025 [2:45:28<41:09,  1.24it/s] 76%|███████▋  | 9963/13025 [2:45:29<38:38,  1.32it/s] 76%|███████▋  | 9964/13025 [2:45:31<44:25,  1.15it/s] 77%|███████▋  | 9967/13025 [2:45:32<34:39,  1.47it/s] 77%|███████▋  | 9969/13025 [2:45:33<34:22,  1.48it/s] 77%|███████▋  | 9971/13025 [2:45:35<34:49,  1.46it/s] 77%|███████▋  | 9972/13025 [2:45:36<40:34,  1.25it/s] 77%|███████▋  | 9973/13025 [2:45:37<45:54,  1.11it/s] 77%|███████▋  | 9974/13025 [2:45:39<50:34,  1.01it/s] 77%|███████▋  | 9975/13025 [2:45:40<54:34,  1.07s/it] 77%|███████▋  | 9976/13025 [2:45:41<58:54,  1.16s/it] 77%|███████▋  | 9979/13025 [2:45:43<40:28,  1.25it/s] 77%|███████▋  | 9981/13025 [2:45:44<38:04,  1.33it/s] 77%|███████▋  | 9983/13025 [2:45:45<36:54,  1.37it/s] 77%|███████▋  | 9984/13025 [2:45:47<43:13,  1.17it/s] 77%|███████▋  | 9985/13025 [2:45:48<48:09,  1.05it/s] 77%|███████▋  | 9986/13025 [2:45:49<52:30,  1.04s/it] 77%|███████▋  | 9987/13025 [2:45:51<58:29,  1.16s/it] 77%|███████▋  | 9988/13025 [2:45:52<1:00:40,  1.20s/it] 77%|███████▋  | 9989/13025 [2:45:54<1:03:34,  1.26s/it] 77%|███████▋  | 9992/13025 [2:45:55<41:24,  1.22it/s]   77%|███████▋  | 9993/13025 [2:45:56<46:32,  1.09it/s] 77%|███████▋  | 9994/13025 [2:45:58<51:02,  1.01s/it] 77%|███████▋  | 9995/13025 [2:45:59<54:48,  1.09s/it] 77%|███████▋  | 9996/13025 [2:46:00<57:47,  1.14s/it] 77%|███████▋  | 9997/13025 [2:46:02<1:00:15,  1.19s/it] 77%|███████▋  | 9998/13025 [2:46:03<1:02:18,  1.24s/it] 77%|███████▋  | 9999/13025 [2:46:04<1:03:30,  1.26s/it] 77%|███████▋  | 10000/13025 [2:46:06<1:04:21,  1.28s/it] 77%|███████▋  | 10001/13025 [2:46:07<1:10:01,  1.39s/it] 77%|███████▋  | 10002/13025 [2:46:09<1:13:48,  1.46s/it] 77%|███████▋  | 10004/13025 [2:46:11<1:01:18,  1.22s/it] 77%|███████▋  | 10007/13025 [2:46:13<46:05,  1.09it/s]   77%|███████▋  | 10008/13025 [2:46:14<54:48,  1.09s/it] 77%|███████▋  | 10009/13025 [2:46:16<1:02:24,  1.24s/it] 77%|███████▋  | 10010/13025 [2:46:18<1:03:42,  1.27s/it] 77%|███████▋  | 10013/13025 [2:46:19<42:56,  1.17it/s]   77%|███████▋  | 10016/13025 [2:46:20<34:11,  1.47it/s] 77%|███████▋  | 10019/13025 [2:46:22<29:34,  1.69it/s] 77%|███████▋  | 10020/13025 [2:46:23<35:48,  1.40it/s] 77%|███████▋  | 10021/13025 [2:46:24<40:59,  1.22it/s] 77%|███████▋  | 10022/13025 [2:46:26<45:58,  1.09it/s] 77%|███████▋  | 10023/13025 [2:46:27<50:20,  1.01s/it] 77%|███████▋  | 10025/13025 [2:46:28<44:19,  1.13it/s] 77%|███████▋  | 10026/13025 [2:46:30<49:58,  1.00it/s] 77%|███████▋  | 10027/13025 [2:46:31<53:39,  1.07s/it] 77%|███████▋  | 10028/13025 [2:46:32<56:54,  1.14s/it] 77%|███████▋  | 10029/13025 [2:46:34<59:33,  1.19s/it] 77%|███████▋  | 10031/13025 [2:46:35<47:54,  1.04it/s] 77%|███████▋  | 10032/13025 [2:46:36<51:59,  1.04s/it] 77%|███████▋  | 10033/13025 [2:46:38<55:22,  1.11s/it] 77%|███████▋  | 10035/13025 [2:46:39<46:00,  1.08it/s] 77%|███████▋  | 10036/13025 [2:46:40<52:39,  1.06s/it] 77%|███████▋  | 10038/13025 [2:46:42<44:48,  1.11it/s] 77%|███████▋  | 10039/13025 [2:46:43<49:18,  1.01it/s] 77%|███████▋  | 10040/13025 [2:46:45<54:48,  1.10s/it] 77%|███████▋  | 10042/13025 [2:46:46<46:14,  1.08it/s] 77%|███████▋  | 10043/13025 [2:46:47<50:36,  1.02s/it] 77%|███████▋  | 10048/13025 [2:46:49<27:33,  1.80it/s] 77%|███████▋  | 10049/13025 [2:46:50<33:18,  1.49it/s] 77%|███████▋  | 10051/13025 [2:46:51<33:02,  1.50it/s] 77%|███████▋  | 10052/13025 [2:46:53<38:38,  1.28it/s] 77%|███████▋  | 10056/13025 [2:46:54<27:23,  1.81it/s] 77%|███████▋  | 10057/13025 [2:46:55<33:01,  1.50it/s] 77%|███████▋  | 10058/13025 [2:46:56<38:41,  1.28it/s] 77%|███████▋  | 10060/13025 [2:46:58<36:34,  1.35it/s] 77%|███████▋  | 10064/13025 [2:46:59<26:31,  1.86it/s] 77%|███████▋  | 10065/13025 [2:47:00<32:13,  1.53it/s] 77%|███████▋  | 10067/13025 [2:47:02<32:13,  1.53it/s] 77%|███████▋  | 10070/13025 [2:47:03<28:09,  1.75it/s] 77%|███████▋  | 10071/13025 [2:47:04<33:56,  1.45it/s] 77%|███████▋  | 10073/13025 [2:47:06<33:31,  1.47it/s] 77%|███████▋  | 10075/13025 [2:47:07<33:09,  1.48it/s] 77%|███████▋  | 10076/13025 [2:47:08<38:44,  1.27it/s] 77%|███████▋  | 10078/13025 [2:47:10<40:28,  1.21it/s] 77%|███████▋  | 10082/13025 [2:47:12<31:49,  1.54it/s] 77%|███████▋  | 10083/13025 [2:47:14<40:04,  1.22it/s] 77%|███████▋  | 10084/13025 [2:47:16<48:50,  1.00it/s] 77%|███████▋  | 10085/13025 [2:47:17<54:59,  1.12s/it] 77%|███████▋  | 10087/13025 [2:47:19<46:46,  1.05it/s] 77%|███████▋  | 10089/13025 [2:47:20<42:07,  1.16it/s] 77%|███████▋  | 10090/13025 [2:47:21<48:17,  1.01it/s] 77%|███████▋  | 10092/13025 [2:47:23<42:23,  1.15it/s] 77%|███████▋  | 10093/13025 [2:47:24<47:51,  1.02it/s] 77%|███████▋  | 10094/13025 [2:47:25<51:28,  1.05s/it] 78%|███████▊  | 10095/13025 [2:47:27<54:34,  1.12s/it] 78%|███████▊  | 10096/13025 [2:47:28<57:03,  1.17s/it] 78%|███████▊  | 10097/13025 [2:47:29<58:46,  1.20s/it] 78%|███████▊  | 10098/13025 [2:47:31<1:00:10,  1.23s/it] 78%|███████▊  | 10100/13025 [2:47:32<48:41,  1.00it/s]   78%|███████▊  | 10101/13025 [2:47:33<52:35,  1.08s/it] 78%|███████▊  | 10103/13025 [2:47:35<44:19,  1.10it/s] 78%|███████▊  | 10107/13025 [2:47:36<29:06,  1.67it/s] 78%|███████▊  | 10108/13025 [2:47:37<35:26,  1.37it/s] 78%|███████▊  | 10109/13025 [2:47:39<40:47,  1.19it/s] 78%|███████▊  | 10110/13025 [2:47:40<46:38,  1.04it/s] 78%|███████▊  | 10114/13025 [2:47:41<29:47,  1.63it/s] 78%|███████▊  | 10115/13025 [2:47:43<36:52,  1.32it/s] 78%|███████▊  | 10116/13025 [2:47:44<42:46,  1.13it/s] 78%|███████▊  | 10119/13025 [2:47:46<33:05,  1.46it/s] 78%|███████▊  | 10121/13025 [2:47:47<32:35,  1.48it/s] 78%|███████▊  | 10122/13025 [2:47:48<37:57,  1.27it/s] 78%|███████▊  | 10123/13025 [2:47:50<43:30,  1.11it/s] 78%|███████▊  | 10124/13025 [2:47:51<48:35,  1.01s/it] 78%|███████▊  | 10125/13025 [2:47:52<52:04,  1.08s/it] 78%|███████▊  | 10127/13025 [2:47:54<43:48,  1.10it/s] 78%|███████▊  | 10128/13025 [2:47:55<49:15,  1.02s/it] 78%|███████▊  | 10130/13025 [2:47:56<42:20,  1.14it/s] 78%|███████▊  | 10131/13025 [2:47:58<46:58,  1.03it/s] 78%|███████▊  | 10133/13025 [2:47:59<41:04,  1.17it/s] 78%|███████▊  | 10135/13025 [2:48:00<37:42,  1.28it/s] 78%|███████▊  | 10137/13025 [2:48:02<35:36,  1.35it/s] 78%|███████▊  | 10138/13025 [2:48:03<40:53,  1.18it/s] 78%|███████▊  | 10139/13025 [2:48:04<45:46,  1.05it/s] 78%|███████▊  | 10140/13025 [2:48:06<49:58,  1.04s/it] 78%|███████▊  | 10142/13025 [2:48:07<43:30,  1.10it/s] 78%|███████▊  | 10143/13025 [2:48:09<50:28,  1.05s/it] 78%|███████▊  | 10145/13025 [2:48:10<48:05,  1.00s/it] 78%|███████▊  | 10147/13025 [2:48:12<47:50,  1.00it/s] 78%|███████▊  | 10149/13025 [2:48:14<46:54,  1.02it/s] 78%|███████▊  | 10152/13025 [2:48:16<39:01,  1.23it/s] 78%|███████▊  | 10155/13025 [2:48:17<32:16,  1.48it/s] 78%|███████▊  | 10157/13025 [2:48:19<32:01,  1.49it/s] 78%|███████▊  | 10158/13025 [2:48:20<37:05,  1.29it/s] 78%|███████▊  | 10160/13025 [2:48:21<35:32,  1.34it/s] 78%|███████▊  | 10161/13025 [2:48:23<42:03,  1.13it/s] 78%|███████▊  | 10162/13025 [2:48:24<48:16,  1.01s/it] 78%|███████▊  | 10165/13025 [2:48:26<35:28,  1.34it/s] 78%|███████▊  | 10166/13025 [2:48:27<40:21,  1.18it/s] 78%|███████▊  | 10171/13025 [2:48:28<24:32,  1.94it/s] 78%|███████▊  | 10173/13025 [2:48:30<26:10,  1.82it/s] 78%|███████▊  | 10175/13025 [2:48:31<27:26,  1.73it/s] 78%|███████▊  | 10177/13025 [2:48:32<28:24,  1.67it/s] 78%|███████▊  | 10179/13025 [2:48:34<29:04,  1.63it/s] 78%|███████▊  | 10180/13025 [2:48:35<34:35,  1.37it/s] 78%|███████▊  | 10181/13025 [2:48:36<40:00,  1.18it/s] 78%|███████▊  | 10182/13025 [2:48:38<44:53,  1.06it/s] 78%|███████▊  | 10183/13025 [2:48:39<48:49,  1.03s/it] 78%|███████▊  | 10185/13025 [2:48:40<42:34,  1.11it/s] 78%|███████▊  | 10188/13025 [2:48:42<32:26,  1.46it/s] 78%|███████▊  | 10189/13025 [2:48:43<37:45,  1.25it/s] 78%|███████▊  | 10191/13025 [2:48:44<36:16,  1.30it/s] 78%|███████▊  | 10192/13025 [2:48:46<41:16,  1.14it/s] 78%|███████▊  | 10193/13025 [2:48:47<45:39,  1.03it/s] 78%|███████▊  | 10194/13025 [2:48:48<49:21,  1.05s/it] 78%|███████▊  | 10195/13025 [2:48:50<52:30,  1.11s/it] 78%|███████▊  | 10196/13025 [2:48:51<55:19,  1.17s/it] 78%|███████▊  | 10197/13025 [2:48:52<59:53,  1.27s/it] 78%|███████▊  | 10198/13025 [2:48:54<1:00:25,  1.28s/it] 78%|███████▊  | 10200/13025 [2:48:55<47:14,  1.00s/it]   78%|███████▊  | 10203/13025 [2:48:56<34:15,  1.37it/s] 78%|███████▊  | 10205/13025 [2:48:58<33:08,  1.42it/s] 78%|███████▊  | 10206/13025 [2:48:59<38:23,  1.22it/s] 78%|███████▊  | 10207/13025 [2:49:00<43:16,  1.09it/s] 78%|███████▊  | 10208/13025 [2:49:02<47:24,  1.01s/it] 78%|███████▊  | 10209/13025 [2:49:03<50:51,  1.08s/it] 78%|███████▊  | 10210/13025 [2:49:04<53:33,  1.14s/it] 78%|███████▊  | 10211/13025 [2:49:05<55:46,  1.19s/it] 78%|███████▊  | 10212/13025 [2:49:07<57:36,  1.23s/it] 78%|███████▊  | 10215/13025 [2:49:08<37:58,  1.23it/s] 78%|███████▊  | 10216/13025 [2:49:10<49:01,  1.05s/it] 78%|███████▊  | 10219/13025 [2:49:12<39:35,  1.18it/s] 78%|███████▊  | 10220/13025 [2:49:14<47:38,  1.02s/it] 78%|███████▊  | 10221/13025 [2:49:16<58:08,  1.24s/it] 78%|███████▊  | 10223/13025 [2:49:17<48:42,  1.04s/it] 79%|███████▊  | 10225/13025 [2:49:19<42:26,  1.10it/s] 79%|███████▊  | 10226/13025 [2:49:20<46:13,  1.01it/s] 79%|███████▊  | 10227/13025 [2:49:21<49:45,  1.07s/it] 79%|███████▊  | 10228/13025 [2:49:23<52:52,  1.13s/it] 79%|███████▊  | 10229/13025 [2:49:24<54:57,  1.18s/it] 79%|███████▊  | 10230/13025 [2:49:25<56:36,  1.22s/it] 79%|███████▊  | 10232/13025 [2:49:27<47:23,  1.02s/it] 79%|███████▊  | 10233/13025 [2:49:28<50:35,  1.09s/it] 79%|███████▊  | 10236/13025 [2:49:29<35:20,  1.32it/s] 79%|███████▊  | 10237/13025 [2:49:31<41:16,  1.13it/s] 79%|███████▊  | 10238/13025 [2:49:32<45:32,  1.02it/s] 79%|███████▊  | 10239/13025 [2:49:33<49:07,  1.06s/it] 79%|███████▊  | 10240/13025 [2:49:35<52:06,  1.12s/it] 79%|███████▊  | 10244/13025 [2:49:36<30:59,  1.50it/s] 79%|███████▊  | 10246/13025 [2:49:38<30:54,  1.50it/s] 79%|███████▊  | 10247/13025 [2:49:39<36:17,  1.28it/s] 79%|███████▊  | 10249/13025 [2:49:40<34:14,  1.35it/s] 79%|███████▊  | 10251/13025 [2:49:41<33:00,  1.40it/s] 79%|███████▊  | 10252/13025 [2:49:43<38:12,  1.21it/s] 79%|███████▊  | 10254/13025 [2:49:44<35:30,  1.30it/s] 79%|███████▊  | 10255/13025 [2:49:45<40:32,  1.14it/s] 79%|███████▉  | 10258/13025 [2:49:47<31:10,  1.48it/s] 79%|███████▉  | 10259/13025 [2:49:48<36:23,  1.27it/s] 79%|███████▉  | 10260/13025 [2:49:49<41:14,  1.12it/s] 79%|███████▉  | 10264/13025 [2:49:51<27:12,  1.69it/s] 79%|███████▉  | 10265/13025 [2:49:52<32:39,  1.41it/s] 79%|███████▉  | 10267/13025 [2:49:53<32:01,  1.44it/s] 79%|███████▉  | 10268/13025 [2:49:55<38:00,  1.21it/s] 79%|███████▉  | 10269/13025 [2:49:56<42:35,  1.08it/s] 79%|███████▉  | 10270/13025 [2:49:57<46:38,  1.02s/it] 79%|███████▉  | 10271/13025 [2:49:59<53:23,  1.16s/it] 79%|███████▉  | 10273/13025 [2:50:00<43:50,  1.05it/s] 79%|███████▉  | 10275/13025 [2:50:02<38:52,  1.18it/s] 79%|███████▉  | 10277/13025 [2:50:03<35:54,  1.28it/s] 79%|███████▉  | 10280/13025 [2:50:04<29:12,  1.57it/s] 79%|███████▉  | 10281/13025 [2:50:06<35:11,  1.30it/s] 79%|███████▉  | 10284/13025 [2:50:07<29:30,  1.55it/s] 79%|███████▉  | 10286/13025 [2:50:09<30:12,  1.51it/s] 79%|███████▉  | 10287/13025 [2:50:11<40:25,  1.13it/s] 79%|███████▉  | 10288/13025 [2:50:12<49:03,  1.08s/it] 79%|███████▉  | 10289/13025 [2:50:14<57:47,  1.27s/it] 79%|███████▉  | 10291/13025 [2:50:16<51:38,  1.13s/it] 79%|███████▉  | 10292/13025 [2:50:18<54:48,  1.20s/it] 79%|███████▉  | 10293/13025 [2:50:19<55:50,  1.23s/it] 79%|███████▉  | 10294/13025 [2:50:20<56:47,  1.25s/it] 79%|███████▉  | 10296/13025 [2:50:22<45:27,  1.00it/s] 79%|███████▉  | 10298/13025 [2:50:23<40:39,  1.12it/s] 79%|███████▉  | 10301/13025 [2:50:24<31:37,  1.44it/s] 79%|███████▉  | 10307/13025 [2:50:26<19:29,  2.32it/s] 79%|███████▉  | 10310/13025 [2:50:27<19:34,  2.31it/s] 79%|███████▉  | 10312/13025 [2:50:28<21:46,  2.08it/s] 79%|███████▉  | 10313/13025 [2:50:30<26:43,  1.69it/s] 79%|███████▉  | 10315/13025 [2:50:31<27:31,  1.64it/s] 79%|███████▉  | 10319/13025 [2:50:32<21:57,  2.05it/s] 79%|███████▉  | 10322/13025 [2:50:34<21:15,  2.12it/s] 79%|███████▉  | 10323/13025 [2:50:35<27:41,  1.63it/s] 79%|███████▉  | 10325/13025 [2:50:37<30:04,  1.50it/s] 79%|███████▉  | 10328/13025 [2:50:38<26:21,  1.71it/s] 79%|███████▉  | 10329/13025 [2:50:39<31:34,  1.42it/s] 79%|███████▉  | 10330/13025 [2:50:41<37:14,  1.21it/s] 79%|███████▉  | 10331/13025 [2:50:42<41:39,  1.08it/s] 79%|███████▉  | 10332/13025 [2:50:44<46:10,  1.03s/it] 79%|███████▉  | 10333/13025 [2:50:45<49:29,  1.10s/it] 79%|███████▉  | 10334/13025 [2:50:46<51:58,  1.16s/it] 79%|███████▉  | 10336/13025 [2:50:48<42:29,  1.05it/s] 79%|███████▉  | 10338/13025 [2:50:49<37:43,  1.19it/s] 79%|███████▉  | 10339/13025 [2:50:50<42:14,  1.06it/s] 79%|███████▉  | 10340/13025 [2:50:52<46:11,  1.03s/it] 79%|███████▉  | 10341/13025 [2:50:53<49:25,  1.10s/it] 79%|███████▉  | 10343/13025 [2:50:54<41:15,  1.08it/s] 79%|███████▉  | 10346/13025 [2:50:56<32:24,  1.38it/s] 79%|███████▉  | 10347/13025 [2:50:57<37:11,  1.20it/s] 79%|███████▉  | 10348/13025 [2:50:58<41:36,  1.07it/s] 79%|███████▉  | 10352/13025 [2:51:00<27:00,  1.65it/s] 79%|███████▉  | 10353/13025 [2:51:01<32:01,  1.39it/s] 80%|███████▉  | 10355/13025 [2:51:02<31:07,  1.43it/s] 80%|███████▉  | 10356/13025 [2:51:04<36:10,  1.23it/s] 80%|███████▉  | 10357/13025 [2:51:05<40:47,  1.09it/s] 80%|███████▉  | 10358/13025 [2:51:06<44:42,  1.01s/it] 80%|███████▉  | 10359/13025 [2:51:07<47:53,  1.08s/it] 80%|███████▉  | 10360/13025 [2:51:09<55:43,  1.25s/it] 80%|███████▉  | 10362/13025 [2:51:11<49:33,  1.12s/it] 80%|███████▉  | 10365/13025 [2:51:13<38:41,  1.15it/s] 80%|███████▉  | 10367/13025 [2:51:15<42:09,  1.05it/s] 80%|███████▉  | 10368/13025 [2:51:17<48:25,  1.09s/it] 80%|███████▉  | 10369/13025 [2:51:18<52:16,  1.18s/it] 80%|███████▉  | 10370/13025 [2:51:20<55:24,  1.25s/it] 80%|███████▉  | 10372/13025 [2:51:21<44:59,  1.02s/it] 80%|███████▉  | 10376/13025 [2:51:23<28:48,  1.53it/s] 80%|███████▉  | 10378/13025 [2:51:24<28:57,  1.52it/s] 80%|███████▉  | 10379/13025 [2:51:25<34:32,  1.28it/s] 80%|███████▉  | 10381/13025 [2:51:27<32:52,  1.34it/s] 80%|███████▉  | 10383/13025 [2:51:28<31:36,  1.39it/s] 80%|███████▉  | 10385/13025 [2:51:29<31:21,  1.40it/s] 80%|███████▉  | 10389/13025 [2:51:31<23:28,  1.87it/s] 80%|███████▉  | 10391/13025 [2:51:32<24:49,  1.77it/s] 80%|███████▉  | 10392/13025 [2:51:33<29:49,  1.47it/s] 80%|███████▉  | 10394/13025 [2:51:35<30:29,  1.44it/s] 80%|███████▉  | 10396/13025 [2:51:36<30:50,  1.42it/s] 80%|███████▉  | 10398/13025 [2:51:38<30:10,  1.45it/s] 80%|███████▉  | 10399/13025 [2:51:39<35:03,  1.25it/s] 80%|███████▉  | 10400/13025 [2:51:40<39:41,  1.10it/s] 80%|███████▉  | 10401/13025 [2:51:42<44:43,  1.02s/it] 80%|███████▉  | 10402/13025 [2:51:43<47:46,  1.09s/it] 80%|███████▉  | 10408/13025 [2:51:44<21:58,  1.98it/s] 80%|███████▉  | 10413/13025 [2:51:46<17:49,  2.44it/s] 80%|███████▉  | 10416/13025 [2:51:47<18:07,  2.40it/s] 80%|███████▉  | 10417/13025 [2:51:48<22:40,  1.92it/s] 80%|███████▉  | 10418/13025 [2:51:50<28:08,  1.54it/s] 80%|███████▉  | 10419/13025 [2:51:51<33:46,  1.29it/s] 80%|████████  | 10420/13025 [2:51:53<39:03,  1.11it/s] 80%|████████  | 10424/13025 [2:51:54<25:56,  1.67it/s] 80%|████████  | 10425/13025 [2:51:55<31:05,  1.39it/s] 80%|████████  | 10426/13025 [2:51:57<35:55,  1.21it/s] 80%|████████  | 10428/13025 [2:51:58<33:18,  1.30it/s] 80%|████████  | 10429/13025 [2:51:59<37:55,  1.14it/s] 80%|████████  | 10430/13025 [2:52:00<42:06,  1.03it/s] 80%|████████  | 10431/13025 [2:52:02<46:31,  1.08s/it] 80%|████████  | 10432/13025 [2:52:03<50:04,  1.16s/it] 80%|████████  | 10433/13025 [2:52:05<53:02,  1.23s/it] 80%|████████  | 10434/13025 [2:52:06<53:54,  1.25s/it] 80%|████████  | 10435/13025 [2:52:07<55:06,  1.28s/it] 80%|████████  | 10436/13025 [2:52:09<58:14,  1.35s/it] 80%|████████  | 10437/13025 [2:52:11<1:04:41,  1.50s/it] 80%|████████  | 10439/13025 [2:52:13<53:16,  1.24s/it]   80%|████████  | 10441/13025 [2:52:14<47:42,  1.11s/it] 80%|████████  | 10443/13025 [2:52:16<44:46,  1.04s/it] 80%|████████  | 10444/13025 [2:52:18<47:28,  1.10s/it] 80%|████████  | 10446/13025 [2:52:19<40:22,  1.06it/s] 80%|████████  | 10448/13025 [2:52:20<36:09,  1.19it/s] 80%|████████  | 10449/13025 [2:52:22<40:04,  1.07it/s] 80%|████████  | 10450/13025 [2:52:23<43:35,  1.02s/it] 80%|████████  | 10451/13025 [2:52:24<46:36,  1.09s/it] 80%|████████  | 10452/13025 [2:52:25<49:19,  1.15s/it] 80%|████████  | 10453/13025 [2:52:27<53:45,  1.25s/it] 80%|████████  | 10457/13025 [2:52:28<29:42,  1.44it/s] 80%|████████  | 10459/13025 [2:52:30<29:30,  1.45it/s] 80%|████████  | 10460/13025 [2:52:31<34:14,  1.25it/s] 80%|████████  | 10461/13025 [2:52:32<38:38,  1.11it/s] 80%|████████  | 10462/13025 [2:52:34<42:29,  1.01it/s] 80%|████████  | 10463/13025 [2:52:35<45:48,  1.07s/it] 80%|████████  | 10464/13025 [2:52:36<49:26,  1.16s/it] 80%|████████  | 10466/13025 [2:52:38<40:14,  1.06it/s] 80%|████████  | 10467/13025 [2:52:39<43:46,  1.03s/it] 80%|████████  | 10468/13025 [2:52:40<46:51,  1.10s/it] 80%|████████  | 10470/13025 [2:52:42<39:01,  1.09it/s] 80%|████████  | 10472/13025 [2:52:43<34:56,  1.22it/s] 80%|████████  | 10473/13025 [2:52:44<39:15,  1.08it/s] 80%|████████  | 10474/13025 [2:52:46<43:04,  1.01s/it] 80%|████████  | 10475/13025 [2:52:47<46:13,  1.09s/it] 80%|████████  | 10477/13025 [2:52:48<38:34,  1.10it/s] 80%|████████  | 10479/13025 [2:52:49<34:35,  1.23it/s] 80%|████████  | 10480/13025 [2:52:51<39:03,  1.09it/s] 80%|████████  | 10481/13025 [2:52:52<42:48,  1.01s/it] 80%|████████  | 10485/13025 [2:52:53<26:15,  1.61it/s] 81%|████████  | 10486/13025 [2:52:55<31:10,  1.36it/s] 81%|████████  | 10487/13025 [2:52:56<35:59,  1.18it/s] 81%|████████  | 10489/13025 [2:52:57<33:07,  1.28it/s] 81%|████████  | 10490/13025 [2:52:59<37:45,  1.12it/s] 81%|████████  | 10495/13025 [2:53:00<21:53,  1.93it/s] 81%|████████  | 10497/13025 [2:53:01<23:19,  1.81it/s] 81%|████████  | 10498/13025 [2:53:03<28:13,  1.49it/s] 81%|████████  | 10499/13025 [2:53:04<33:01,  1.27it/s] 81%|████████  | 10504/13025 [2:53:05<20:40,  2.03it/s] 81%|████████  | 10506/13025 [2:53:07<22:19,  1.88it/s] 81%|████████  | 10507/13025 [2:53:08<27:08,  1.55it/s] 81%|████████  | 10508/13025 [2:53:09<34:03,  1.23it/s] 81%|████████  | 10509/13025 [2:53:11<42:49,  1.02s/it] 81%|████████  | 10510/13025 [2:53:13<50:34,  1.21s/it] 81%|████████  | 10512/13025 [2:53:15<45:39,  1.09s/it] 81%|████████  | 10514/13025 [2:53:17<42:53,  1.02s/it] 81%|████████  | 10517/13025 [2:53:18<32:14,  1.30it/s] 81%|████████  | 10519/13025 [2:53:19<30:50,  1.35it/s] 81%|████████  | 10520/13025 [2:53:21<35:02,  1.19it/s] 81%|████████  | 10521/13025 [2:53:22<38:57,  1.07it/s] 81%|████████  | 10523/13025 [2:53:23<34:43,  1.20it/s] 81%|████████  | 10525/13025 [2:53:25<32:08,  1.30it/s] 81%|████████  | 10529/13025 [2:53:26<22:58,  1.81it/s] 81%|████████  | 10530/13025 [2:53:27<27:46,  1.50it/s] 81%|████████  | 10535/13025 [2:53:29<19:09,  2.17it/s] 81%|████████  | 10538/13025 [2:53:30<18:49,  2.20it/s] 81%|████████  | 10539/13025 [2:53:31<23:18,  1.78it/s] 81%|████████  | 10541/13025 [2:53:33<24:23,  1.70it/s] 81%|████████  | 10542/13025 [2:53:34<29:08,  1.42it/s] 81%|████████  | 10544/13025 [2:53:35<28:28,  1.45it/s] 81%|████████  | 10546/13025 [2:53:37<29:19,  1.41it/s] 81%|████████  | 10548/13025 [2:53:38<28:38,  1.44it/s] 81%|████████  | 10549/13025 [2:53:39<33:08,  1.25it/s] 81%|████████  | 10552/13025 [2:53:41<26:31,  1.55it/s] 81%|████████  | 10554/13025 [2:53:42<26:42,  1.54it/s] 81%|████████  | 10555/13025 [2:53:43<31:28,  1.31it/s] 81%|████████  | 10557/13025 [2:53:45<29:59,  1.37it/s] 81%|████████  | 10559/13025 [2:53:46<28:56,  1.42it/s] 81%|████████  | 10560/13025 [2:53:47<33:34,  1.22it/s] 81%|████████  | 10562/13025 [2:53:49<31:12,  1.32it/s] 81%|████████  | 10563/13025 [2:53:50<35:40,  1.15it/s] 81%|████████  | 10564/13025 [2:53:51<39:45,  1.03it/s] 81%|████████  | 10565/13025 [2:53:52<43:05,  1.05s/it] 81%|████████  | 10567/13025 [2:53:54<36:25,  1.12it/s] 81%|████████  | 10568/13025 [2:53:55<40:14,  1.02it/s] 81%|████████  | 10569/13025 [2:53:56<43:28,  1.06s/it] 81%|████████  | 10572/13025 [2:53:58<30:35,  1.34it/s] 81%|████████  | 10574/13025 [2:53:59<29:40,  1.38it/s] 81%|████████  | 10575/13025 [2:54:00<34:16,  1.19it/s] 81%|████████  | 10576/13025 [2:54:02<38:26,  1.06it/s] 81%|████████  | 10577/13025 [2:54:03<42:01,  1.03s/it] 81%|████████  | 10578/13025 [2:54:04<45:01,  1.10s/it] 81%|████████  | 10579/13025 [2:54:06<47:18,  1.16s/it] 81%|████████▏ | 10583/13025 [2:54:07<27:01,  1.51it/s] 81%|████████▏ | 10584/13025 [2:54:09<33:11,  1.23it/s] 81%|████████▏ | 10585/13025 [2:54:10<41:33,  1.02s/it] 81%|████████▏ | 10586/13025 [2:54:12<49:02,  1.21s/it] 81%|████████▏ | 10588/13025 [2:54:14<44:25,  1.09s/it] 81%|████████▏ | 10590/13025 [2:54:16<41:56,  1.03s/it] 81%|████████▏ | 10592/13025 [2:54:17<37:18,  1.09it/s] 81%|████████▏ | 10593/13025 [2:54:19<40:27,  1.00it/s] 81%|████████▏ | 10595/13025 [2:54:20<35:27,  1.14it/s] 81%|████████▏ | 10596/13025 [2:54:21<39:05,  1.04it/s] 81%|████████▏ | 10597/13025 [2:54:23<42:15,  1.04s/it] 81%|████████▏ | 10599/13025 [2:54:24<36:07,  1.12it/s] 81%|████████▏ | 10600/13025 [2:54:25<39:45,  1.02it/s] 81%|████████▏ | 10603/13025 [2:54:27<29:36,  1.36it/s] 81%|████████▏ | 10604/13025 [2:54:28<34:03,  1.18it/s] 81%|████████▏ | 10605/13025 [2:54:29<38:08,  1.06it/s] 81%|████████▏ | 10607/13025 [2:54:31<33:53,  1.19it/s] 81%|████████▏ | 10608/13025 [2:54:32<37:55,  1.06it/s] 81%|████████▏ | 10609/13025 [2:54:33<41:18,  1.03s/it] 81%|████████▏ | 10610/13025 [2:54:35<44:09,  1.10s/it] 81%|████████▏ | 10611/13025 [2:54:36<47:28,  1.18s/it] 81%|████████▏ | 10614/13025 [2:54:37<31:43,  1.27it/s] 82%|████████▏ | 10617/13025 [2:54:39<25:41,  1.56it/s] 82%|████████▏ | 10618/13025 [2:54:40<30:18,  1.32it/s] 82%|████████▏ | 10621/13025 [2:54:41<24:55,  1.61it/s] 82%|████████▏ | 10622/13025 [2:54:43<29:35,  1.35it/s] 82%|████████▏ | 10624/13025 [2:54:44<28:45,  1.39it/s] 82%|████████▏ | 10625/13025 [2:54:45<33:32,  1.19it/s] 82%|████████▏ | 10627/13025 [2:54:47<31:02,  1.29it/s] 82%|████████▏ | 10629/13025 [2:54:48<29:28,  1.35it/s] 82%|████████▏ | 10631/13025 [2:54:49<28:28,  1.40it/s] 82%|████████▏ | 10632/13025 [2:54:51<33:04,  1.21it/s] 82%|████████▏ | 10633/13025 [2:54:52<37:06,  1.07it/s] 82%|████████▏ | 10634/13025 [2:54:53<40:48,  1.02s/it] 82%|████████▏ | 10635/13025 [2:54:55<43:41,  1.10s/it] 82%|████████▏ | 10637/13025 [2:54:56<37:16,  1.07it/s] 82%|████████▏ | 10638/13025 [2:54:57<41:35,  1.05s/it] 82%|████████▏ | 10643/13025 [2:54:59<22:22,  1.77it/s] 82%|████████▏ | 10644/13025 [2:55:00<27:04,  1.47it/s] 82%|████████▏ | 10645/13025 [2:55:01<31:34,  1.26it/s] 82%|████████▏ | 10647/13025 [2:55:03<29:41,  1.33it/s] 82%|████████▏ | 10648/13025 [2:55:04<34:01,  1.16it/s] 82%|████████▏ | 10650/13025 [2:55:05<31:07,  1.27it/s] 82%|████████▏ | 10653/13025 [2:55:07<25:05,  1.58it/s] 82%|████████▏ | 10654/13025 [2:55:08<29:42,  1.33it/s] 82%|████████▏ | 10658/13025 [2:55:10<23:02,  1.71it/s] 82%|████████▏ | 10659/13025 [2:55:11<30:24,  1.30it/s] 82%|████████▏ | 10660/13025 [2:55:13<37:47,  1.04it/s] 82%|████████▏ | 10661/13025 [2:55:15<45:07,  1.15s/it] 82%|████████▏ | 10662/13025 [2:55:17<51:27,  1.31s/it] 82%|████████▏ | 10663/13025 [2:55:18<51:29,  1.31s/it] 82%|████████▏ | 10665/13025 [2:55:20<41:00,  1.04s/it] 82%|████████▏ | 10666/13025 [2:55:21<43:25,  1.10s/it] 82%|████████▏ | 10667/13025 [2:55:23<49:12,  1.25s/it] 82%|████████▏ | 10670/13025 [2:55:24<33:00,  1.19it/s] 82%|████████▏ | 10671/13025 [2:55:25<36:41,  1.07it/s] 82%|████████▏ | 10672/13025 [2:55:27<39:50,  1.02s/it] 82%|████████▏ | 10673/13025 [2:55:28<42:30,  1.08s/it] 82%|████████▏ | 10680/13025 [2:55:29<17:46,  2.20it/s] 82%|████████▏ | 10681/13025 [2:55:31<22:08,  1.76it/s] 82%|████████▏ | 10682/13025 [2:55:32<26:44,  1.46it/s] 82%|████████▏ | 10683/13025 [2:55:33<31:48,  1.23it/s] 82%|████████▏ | 10684/13025 [2:55:35<35:48,  1.09it/s] 82%|████████▏ | 10685/13025 [2:55:36<39:19,  1.01s/it] 82%|████████▏ | 10686/13025 [2:55:37<42:10,  1.08s/it] 82%|████████▏ | 10689/13025 [2:55:39<29:25,  1.32it/s] 82%|████████▏ | 10690/13025 [2:55:40<35:05,  1.11it/s] 82%|████████▏ | 10691/13025 [2:55:42<40:24,  1.04s/it] 82%|████████▏ | 10692/13025 [2:55:43<42:58,  1.11s/it] 82%|████████▏ | 10694/13025 [2:55:44<35:51,  1.08it/s] 82%|████████▏ | 10696/13025 [2:55:46<32:18,  1.20it/s] 82%|████████▏ | 10698/13025 [2:55:47<30:02,  1.29it/s] 82%|████████▏ | 10700/13025 [2:55:48<28:30,  1.36it/s] 82%|████████▏ | 10701/13025 [2:55:50<32:43,  1.18it/s] 82%|████████▏ | 10705/13025 [2:55:51<22:21,  1.73it/s] 82%|████████▏ | 10706/13025 [2:55:52<26:47,  1.44it/s] 82%|████████▏ | 10707/13025 [2:55:54<31:06,  1.24it/s] 82%|████████▏ | 10708/13025 [2:55:55<35:12,  1.10it/s] 82%|████████▏ | 10709/13025 [2:55:56<38:41,  1.00s/it] 82%|████████▏ | 10710/13025 [2:55:58<41:34,  1.08s/it] 82%|████████▏ | 10711/13025 [2:55:59<43:52,  1.14s/it] 82%|████████▏ | 10712/13025 [2:56:00<46:51,  1.22s/it] 82%|████████▏ | 10715/13025 [2:56:02<30:50,  1.25it/s] 82%|████████▏ | 10716/13025 [2:56:03<34:52,  1.10it/s] 82%|████████▏ | 10718/13025 [2:56:04<31:14,  1.23it/s] 82%|████████▏ | 10722/13025 [2:56:06<22:09,  1.73it/s] 82%|████████▏ | 10724/13025 [2:56:07<22:57,  1.67it/s] 82%|████████▏ | 10727/13025 [2:56:08<21:23,  1.79it/s] 82%|████████▏ | 10728/13025 [2:56:10<29:20,  1.30it/s] 82%|████████▏ | 10729/13025 [2:56:12<37:14,  1.03it/s] 82%|████████▏ | 10731/13025 [2:56:14<36:17,  1.05it/s] 82%|████████▏ | 10732/13025 [2:56:16<43:49,  1.15s/it] 82%|████████▏ | 10733/13025 [2:56:17<45:31,  1.19s/it] 82%|████████▏ | 10735/13025 [2:56:19<37:42,  1.01it/s] 82%|████████▏ | 10736/13025 [2:56:20<40:16,  1.06s/it] 82%|████████▏ | 10737/13025 [2:56:21<42:36,  1.12s/it] 82%|████████▏ | 10738/13025 [2:56:23<44:31,  1.17s/it] 82%|████████▏ | 10742/13025 [2:56:24<26:42,  1.42it/s] 82%|████████▏ | 10744/13025 [2:56:26<26:14,  1.45it/s] 83%|████████▎ | 10746/13025 [2:56:27<25:50,  1.47it/s] 83%|████████▎ | 10747/13025 [2:56:28<31:17,  1.21it/s] 83%|████████▎ | 10749/13025 [2:56:30<29:10,  1.30it/s] 83%|████████▎ | 10750/13025 [2:56:31<33:13,  1.14it/s] 83%|████████▎ | 10751/13025 [2:56:32<37:43,  1.00it/s] 83%|████████▎ | 10752/13025 [2:56:34<41:32,  1.10s/it] 83%|████████▎ | 10755/13025 [2:56:35<28:57,  1.31it/s] 83%|████████▎ | 10756/13025 [2:56:36<32:56,  1.15it/s] 83%|████████▎ | 10757/13025 [2:56:38<36:34,  1.03it/s] 83%|████████▎ | 10758/13025 [2:56:39<39:37,  1.05s/it] 83%|████████▎ | 10760/13025 [2:56:41<34:24,  1.10it/s] 83%|████████▎ | 10762/13025 [2:56:42<30:51,  1.22it/s] 83%|████████▎ | 10764/13025 [2:56:43<29:16,  1.29it/s] 83%|████████▎ | 10765/13025 [2:56:45<33:12,  1.13it/s] 83%|████████▎ | 10766/13025 [2:56:46<36:42,  1.03it/s] 83%|████████▎ | 10768/13025 [2:56:47<32:22,  1.16it/s] 83%|████████▎ | 10769/13025 [2:56:49<36:10,  1.04it/s] 83%|████████▎ | 10770/13025 [2:56:50<39:20,  1.05s/it] 83%|████████▎ | 10772/13025 [2:56:51<33:32,  1.12it/s] 83%|████████▎ | 10773/13025 [2:56:53<37:13,  1.01it/s] 83%|████████▎ | 10774/13025 [2:56:54<40:12,  1.07s/it] 83%|████████▎ | 10775/13025 [2:56:55<42:33,  1.13s/it] 83%|████████▎ | 10776/13025 [2:56:56<44:29,  1.19s/it] 83%|████████▎ | 10777/13025 [2:56:58<46:48,  1.25s/it] 83%|████████▎ | 10779/13025 [2:56:59<37:47,  1.01s/it] 83%|████████▎ | 10780/13025 [2:57:01<40:28,  1.08s/it] 83%|████████▎ | 10784/13025 [2:57:02<24:13,  1.54it/s] 83%|████████▎ | 10785/13025 [2:57:03<28:34,  1.31it/s] 83%|████████▎ | 10786/13025 [2:57:05<32:40,  1.14it/s] 83%|████████▎ | 10787/13025 [2:57:06<36:14,  1.03it/s] 83%|████████▎ | 10788/13025 [2:57:07<39:17,  1.05s/it] 83%|████████▎ | 10789/13025 [2:57:09<43:14,  1.16s/it] 83%|████████▎ | 10790/13025 [2:57:11<51:24,  1.38s/it] 83%|████████▎ | 10792/13025 [2:57:13<44:03,  1.18s/it] 83%|████████▎ | 10794/13025 [2:57:14<39:50,  1.07s/it] 83%|████████▎ | 10795/13025 [2:57:16<45:39,  1.23s/it] 83%|████████▎ | 10797/13025 [2:57:18<38:20,  1.03s/it] 83%|████████▎ | 10798/13025 [2:57:19<40:50,  1.10s/it] 83%|████████▎ | 10799/13025 [2:57:20<42:42,  1.15s/it] 83%|████████▎ | 10800/13025 [2:57:22<45:58,  1.24s/it] 83%|████████▎ | 10802/13025 [2:57:23<37:04,  1.00s/it] 83%|████████▎ | 10804/13025 [2:57:24<32:17,  1.15it/s] 83%|████████▎ | 10807/13025 [2:57:26<25:11,  1.47it/s] 83%|████████▎ | 10809/13025 [2:57:27<25:32,  1.45it/s] 83%|████████▎ | 10813/13025 [2:57:29<19:47,  1.86it/s] 83%|████████▎ | 10815/13025 [2:57:30<21:20,  1.73it/s] 83%|████████▎ | 10817/13025 [2:57:31<22:08,  1.66it/s] 83%|████████▎ | 10819/13025 [2:57:33<22:52,  1.61it/s] 83%|████████▎ | 10820/13025 [2:57:34<27:06,  1.36it/s] 83%|████████▎ | 10821/13025 [2:57:35<31:09,  1.18it/s] 83%|████████▎ | 10826/13025 [2:57:37<19:03,  1.92it/s] 83%|████████▎ | 10827/13025 [2:57:38<23:43,  1.54it/s] 83%|████████▎ | 10828/13025 [2:57:39<27:51,  1.31it/s] 83%|████████▎ | 10830/13025 [2:57:41<26:35,  1.38it/s] 83%|████████▎ | 10831/13025 [2:57:42<30:38,  1.19it/s] 83%|████████▎ | 10832/13025 [2:57:43<34:18,  1.07it/s] 83%|████████▎ | 10834/13025 [2:57:45<30:23,  1.20it/s] 83%|████████▎ | 10835/13025 [2:57:46<34:26,  1.06it/s] 83%|████████▎ | 10836/13025 [2:57:47<37:31,  1.03s/it] 83%|████████▎ | 10837/13025 [2:57:49<40:21,  1.11s/it] 83%|████████▎ | 10838/13025 [2:57:50<42:22,  1.16s/it] 83%|████████▎ | 10841/13025 [2:57:51<28:20,  1.28it/s] 83%|████████▎ | 10842/13025 [2:57:53<32:17,  1.13it/s] 83%|████████▎ | 10843/13025 [2:57:54<35:43,  1.02it/s] 83%|████████▎ | 10846/13025 [2:57:55<25:59,  1.40it/s] 83%|████████▎ | 10849/13025 [2:57:57<22:18,  1.63it/s] 83%|████████▎ | 10850/13025 [2:57:58<27:18,  1.33it/s] 83%|████████▎ | 10851/13025 [2:58:00<32:07,  1.13it/s] 83%|████████▎ | 10853/13025 [2:58:01<29:10,  1.24it/s] 83%|████████▎ | 10854/13025 [2:58:02<32:48,  1.10it/s] 83%|████████▎ | 10857/13025 [2:58:04<25:49,  1.40it/s] 83%|████████▎ | 10858/13025 [2:58:05<29:50,  1.21it/s] 83%|████████▎ | 10859/13025 [2:58:06<33:20,  1.08it/s] 83%|████████▎ | 10860/13025 [2:58:08<36:26,  1.01s/it] 83%|████████▎ | 10861/13025 [2:58:09<40:49,  1.13s/it] 83%|████████▎ | 10864/13025 [2:58:11<31:12,  1.15it/s] 83%|████████▎ | 10865/13025 [2:58:13<37:57,  1.05s/it] 83%|████████▎ | 10867/13025 [2:58:15<35:47,  1.00it/s] 83%|████████▎ | 10868/13025 [2:58:16<41:52,  1.16s/it] 83%|████████▎ | 10871/13025 [2:58:18<30:11,  1.19it/s] 83%|████████▎ | 10873/13025 [2:58:19<28:12,  1.27it/s] 83%|████████▎ | 10874/13025 [2:58:21<31:46,  1.13it/s] 83%|████████▎ | 10875/13025 [2:58:22<34:51,  1.03it/s] 84%|████████▎ | 10876/13025 [2:58:23<37:33,  1.05s/it] 84%|████████▎ | 10877/13025 [2:58:24<39:49,  1.11s/it] 84%|████████▎ | 10878/13025 [2:58:26<41:34,  1.16s/it] 84%|████████▎ | 10879/13025 [2:58:27<42:53,  1.20s/it] 84%|████████▎ | 10880/13025 [2:58:28<43:59,  1.23s/it] 84%|████████▎ | 10881/13025 [2:58:30<44:44,  1.25s/it] 84%|████████▎ | 10883/13025 [2:58:31<35:09,  1.02it/s] 84%|████████▎ | 10885/13025 [2:58:32<30:35,  1.17it/s] 84%|████████▎ | 10886/13025 [2:58:34<34:14,  1.04it/s] 84%|████████▎ | 10887/13025 [2:58:35<38:32,  1.08s/it] 84%|████████▎ | 10888/13025 [2:58:37<42:00,  1.18s/it] 84%|████████▎ | 10889/13025 [2:58:38<43:11,  1.21s/it] 84%|████████▎ | 10890/13025 [2:58:39<44:06,  1.24s/it] 84%|████████▎ | 10891/13025 [2:58:40<44:51,  1.26s/it] 84%|████████▎ | 10896/13025 [2:58:42<21:04,  1.68it/s] 84%|████████▎ | 10897/13025 [2:58:43<25:10,  1.41it/s] 84%|████████▎ | 10898/13025 [2:58:44<29:07,  1.22it/s] 84%|████████▎ | 10899/13025 [2:58:46<32:42,  1.08it/s] 84%|████████▎ | 10900/13025 [2:58:47<36:35,  1.03s/it] 84%|████████▎ | 10904/13025 [2:58:48<22:19,  1.58it/s] 84%|████████▎ | 10905/13025 [2:58:50<26:27,  1.34it/s] 84%|████████▎ | 10906/13025 [2:58:51<30:25,  1.16it/s] 84%|████████▎ | 10907/13025 [2:58:52<33:51,  1.04it/s] 84%|████████▎ | 10908/13025 [2:58:54<36:45,  1.04s/it] 84%|████████▍ | 10911/13025 [2:58:55<25:59,  1.36it/s] 84%|████████▍ | 10912/13025 [2:58:56<29:51,  1.18it/s] 84%|████████▍ | 10914/13025 [2:58:58<27:25,  1.28it/s] 84%|████████▍ | 10917/13025 [2:58:59<22:13,  1.58it/s] 84%|████████▍ | 10918/13025 [2:59:00<26:16,  1.34it/s] 84%|████████▍ | 10921/13025 [2:59:02<21:38,  1.62it/s] 84%|████████▍ | 10923/13025 [2:59:03<22:30,  1.56it/s] 84%|████████▍ | 10925/13025 [2:59:04<22:45,  1.54it/s] 84%|████████▍ | 10926/13025 [2:59:06<26:49,  1.30it/s] 84%|████████▍ | 10928/13025 [2:59:07<26:37,  1.31it/s] 84%|████████▍ | 10929/13025 [2:59:09<31:50,  1.10it/s] 84%|████████▍ | 10930/13025 [2:59:11<40:46,  1.17s/it] 84%|████████▍ | 10931/13025 [2:59:13<46:07,  1.32s/it] 84%|████████▍ | 10932/13025 [2:59:14<50:30,  1.45s/it] 84%|████████▍ | 10934/13025 [2:59:16<42:11,  1.21s/it] 84%|████████▍ | 10937/13025 [2:59:18<29:42,  1.17it/s] 84%|████████▍ | 10938/13025 [2:59:19<33:32,  1.04it/s] 84%|████████▍ | 10940/13025 [2:59:21<31:49,  1.09it/s] 84%|████████▍ | 10941/13025 [2:59:22<34:39,  1.00it/s] 84%|████████▍ | 10942/13025 [2:59:23<37:12,  1.07s/it] 84%|████████▍ | 10944/13025 [2:59:25<31:41,  1.09it/s] 84%|████████▍ | 10945/13025 [2:59:26<34:49,  1.00s/it] 84%|████████▍ | 10946/13025 [2:59:27<37:23,  1.08s/it] 84%|████████▍ | 10950/13025 [2:59:29<23:31,  1.47it/s] 84%|████████▍ | 10952/13025 [2:59:30<23:19,  1.48it/s] 84%|████████▍ | 10953/13025 [2:59:32<27:08,  1.27it/s] 84%|████████▍ | 10954/13025 [2:59:33<30:47,  1.12it/s] 84%|████████▍ | 10957/13025 [2:59:34<23:35,  1.46it/s] 84%|████████▍ | 10958/13025 [2:59:36<27:38,  1.25it/s] 84%|████████▍ | 10960/13025 [2:59:37<26:08,  1.32it/s] 84%|████████▍ | 10961/13025 [2:59:38<29:57,  1.15it/s] 84%|████████▍ | 10962/13025 [2:59:40<33:16,  1.03it/s] 84%|████████▍ | 10963/13025 [2:59:41<37:39,  1.10s/it] 84%|████████▍ | 10964/13025 [2:59:42<39:33,  1.15s/it] 84%|████████▍ | 10966/13025 [2:59:44<33:07,  1.04it/s] 84%|████████▍ | 10967/13025 [2:59:45<36:39,  1.07s/it] 84%|████████▍ | 10969/13025 [2:59:46<31:03,  1.10it/s] 84%|████████▍ | 10970/13025 [2:59:48<34:06,  1.00it/s] 84%|████████▍ | 10971/13025 [2:59:49<36:42,  1.07s/it] 84%|████████▍ | 10973/13025 [2:59:50<31:00,  1.10it/s] 84%|████████▍ | 10974/13025 [2:59:52<34:15,  1.00s/it] 84%|████████▍ | 10976/13025 [2:59:53<29:43,  1.15it/s] 84%|████████▍ | 10978/13025 [2:59:54<27:02,  1.26it/s] 84%|████████▍ | 10979/13025 [2:59:56<30:41,  1.11it/s] 84%|████████▍ | 10980/13025 [2:59:57<33:50,  1.01it/s] 84%|████████▍ | 10984/13025 [2:59:58<21:03,  1.61it/s] 84%|████████▍ | 10986/13025 [3:00:00<21:30,  1.58it/s] 84%|████████▍ | 10991/13025 [3:00:01<15:29,  2.19it/s] 84%|████████▍ | 10992/13025 [3:00:02<19:11,  1.77it/s] 84%|████████▍ | 10993/13025 [3:00:04<23:04,  1.47it/s] 84%|████████▍ | 10995/13025 [3:00:05<22:52,  1.48it/s] 84%|████████▍ | 10996/13025 [3:00:07<28:41,  1.18it/s] 84%|████████▍ | 10997/13025 [3:00:08<32:21,  1.04it/s] 84%|████████▍ | 10998/13025 [3:00:10<38:37,  1.14s/it] 84%|████████▍ | 10999/13025 [3:00:12<44:33,  1.32s/it] 84%|████████▍ | 11003/13025 [3:00:14<27:40,  1.22it/s] 84%|████████▍ | 11004/13025 [3:00:15<33:36,  1.00it/s] 85%|████████▍ | 11007/13025 [3:00:17<27:26,  1.23it/s] 85%|████████▍ | 11008/13025 [3:00:18<30:15,  1.11it/s] 85%|████████▍ | 11009/13025 [3:00:20<32:58,  1.02it/s] 85%|████████▍ | 11011/13025 [3:00:21<29:13,  1.15it/s] 85%|████████▍ | 11013/13025 [3:00:23<26:58,  1.24it/s] 85%|████████▍ | 11015/13025 [3:00:24<25:30,  1.31it/s] 85%|████████▍ | 11017/13025 [3:00:25<24:27,  1.37it/s] 85%|████████▍ | 11018/13025 [3:00:27<28:04,  1.19it/s] 85%|████████▍ | 11019/13025 [3:00:28<32:04,  1.04it/s] 85%|████████▍ | 11020/13025 [3:00:29<34:44,  1.04s/it] 85%|████████▍ | 11022/13025 [3:00:31<29:42,  1.12it/s] 85%|████████▍ | 11023/13025 [3:00:32<32:49,  1.02it/s] 85%|████████▍ | 11024/13025 [3:00:33<35:25,  1.06s/it] 85%|████████▍ | 11026/13025 [3:00:35<30:34,  1.09it/s] 85%|████████▍ | 11027/13025 [3:00:36<33:34,  1.01s/it] 85%|████████▍ | 11028/13025 [3:00:37<36:53,  1.11s/it] 85%|████████▍ | 11030/13025 [3:00:39<31:31,  1.05it/s] 85%|████████▍ | 11033/13025 [3:00:40<23:49,  1.39it/s] 85%|████████▍ | 11036/13025 [3:00:41<20:05,  1.65it/s] 85%|████████▍ | 11037/13025 [3:00:43<23:55,  1.39it/s] 85%|████████▍ | 11039/13025 [3:00:44<23:11,  1.43it/s] 85%|████████▍ | 11040/13025 [3:00:45<26:51,  1.23it/s] 85%|████████▍ | 11041/13025 [3:00:47<30:22,  1.09it/s] 85%|████████▍ | 11043/13025 [3:00:48<27:15,  1.21it/s] 85%|████████▍ | 11044/13025 [3:00:49<30:46,  1.07it/s] 85%|████████▍ | 11045/13025 [3:00:51<33:43,  1.02s/it] 85%|████████▍ | 11046/13025 [3:00:52<36:17,  1.10s/it] 85%|████████▍ | 11047/13025 [3:00:53<38:26,  1.17s/it] 85%|████████▍ | 11049/13025 [3:00:55<31:23,  1.05it/s] 85%|████████▍ | 11050/13025 [3:00:56<34:59,  1.06s/it] 85%|████████▍ | 11053/13025 [3:00:57<24:44,  1.33it/s] 85%|████████▍ | 11055/13025 [3:00:59<23:46,  1.38it/s] 85%|████████▍ | 11057/13025 [3:01:00<23:04,  1.42it/s] 85%|████████▍ | 11059/13025 [3:01:01<22:36,  1.45it/s] 85%|████████▍ | 11061/13025 [3:01:03<22:42,  1.44it/s] 85%|████████▍ | 11064/13025 [3:01:04<19:20,  1.69it/s] 85%|████████▍ | 11065/13025 [3:01:05<23:00,  1.42it/s] 85%|████████▍ | 11066/13025 [3:01:07<27:17,  1.20it/s] 85%|████████▍ | 11068/13025 [3:01:08<26:22,  1.24it/s] 85%|████████▍ | 11069/13025 [3:01:10<33:07,  1.02s/it] 85%|████████▍ | 11070/13025 [3:01:12<39:00,  1.20s/it] 85%|████████▍ | 11071/13025 [3:01:14<43:44,  1.34s/it] 85%|████████▌ | 11075/13025 [3:01:16<27:10,  1.20it/s] 85%|████████▌ | 11076/13025 [3:01:17<30:18,  1.07it/s] 85%|████████▌ | 11078/13025 [3:01:19<27:51,  1.16it/s] 85%|████████▌ | 11079/13025 [3:01:20<30:35,  1.06it/s] 85%|████████▌ | 11080/13025 [3:01:21<33:08,  1.02s/it] 85%|████████▌ | 11082/13025 [3:01:23<28:45,  1.13it/s] 85%|████████▌ | 11084/13025 [3:01:24<26:15,  1.23it/s] 85%|████████▌ | 11088/13025 [3:01:25<18:28,  1.75it/s] 85%|████████▌ | 11089/13025 [3:01:27<22:03,  1.46it/s] 85%|████████▌ | 11092/13025 [3:01:28<18:55,  1.70it/s] 85%|████████▌ | 11093/13025 [3:01:29<22:38,  1.42it/s] 85%|████████▌ | 11099/13025 [3:01:30<13:37,  2.36it/s] 85%|████████▌ | 11100/13025 [3:01:32<17:02,  1.88it/s] 85%|████████▌ | 11101/13025 [3:01:33<20:43,  1.55it/s] 85%|████████▌ | 11102/13025 [3:01:34<24:24,  1.31it/s] 85%|████████▌ | 11104/13025 [3:01:36<23:12,  1.38it/s] 85%|████████▌ | 11105/13025 [3:01:37<26:59,  1.19it/s] 85%|████████▌ | 11107/13025 [3:01:39<27:08,  1.18it/s] 85%|████████▌ | 11108/13025 [3:01:40<32:49,  1.03s/it] 85%|████████▌ | 11109/13025 [3:01:42<37:29,  1.17s/it] 85%|████████▌ | 11111/13025 [3:01:44<33:27,  1.05s/it] 85%|████████▌ | 11112/13025 [3:01:46<37:57,  1.19s/it] 85%|████████▌ | 11113/13025 [3:01:47<41:48,  1.31s/it] 85%|████████▌ | 11114/13025 [3:01:49<44:52,  1.41s/it] 85%|████████▌ | 11116/13025 [3:01:51<37:23,  1.17s/it] 85%|████████▌ | 11119/13025 [3:01:52<28:08,  1.13it/s] 85%|████████▌ | 11120/13025 [3:01:54<32:56,  1.04s/it] 85%|████████▌ | 11121/13025 [3:01:56<37:30,  1.18s/it] 85%|████████▌ | 11122/13025 [3:01:58<41:12,  1.30s/it] 85%|████████▌ | 11123/13025 [3:01:59<44:18,  1.40s/it] 85%|████████▌ | 11124/13025 [3:02:01<46:48,  1.48s/it] 85%|████████▌ | 11125/13025 [3:02:03<48:44,  1.54s/it] 85%|████████▌ | 11127/13025 [3:02:04<39:11,  1.24s/it] 85%|████████▌ | 11128/13025 [3:02:06<42:33,  1.35s/it] 85%|████████▌ | 11131/13025 [3:02:08<30:04,  1.05it/s] 85%|████████▌ | 11132/13025 [3:02:10<37:47,  1.20s/it] 85%|████████▌ | 11133/13025 [3:02:12<45:49,  1.45s/it] 85%|████████▌ | 11134/13025 [3:02:15<52:25,  1.66s/it] 85%|████████▌ | 11136/13025 [3:02:17<45:23,  1.44s/it] 86%|████████▌ | 11137/13025 [3:02:19<47:12,  1.50s/it] 86%|████████▌ | 11138/13025 [3:02:20<48:45,  1.55s/it] 86%|████████▌ | 11139/13025 [3:02:22<49:55,  1.59s/it] 86%|████████▌ | 11141/13025 [3:02:24<40:03,  1.28s/it] 86%|████████▌ | 11142/13025 [3:02:25<43:27,  1.38s/it] 86%|████████▌ | 11144/13025 [3:02:27<36:47,  1.17s/it] 86%|████████▌ | 11146/13025 [3:02:29<33:00,  1.05s/it] 86%|████████▌ | 11147/13025 [3:02:31<37:12,  1.19s/it] 86%|████████▌ | 11148/13025 [3:02:32<40:46,  1.30s/it] 86%|████████▌ | 11151/13025 [3:02:34<29:21,  1.06it/s] 86%|████████▌ | 11152/13025 [3:02:36<33:52,  1.08s/it] 86%|████████▌ | 11153/13025 [3:02:37<37:57,  1.22s/it] 86%|████████▌ | 11154/13025 [3:02:39<41:22,  1.33s/it] 86%|████████▌ | 11155/13025 [3:02:41<44:29,  1.43s/it] 86%|████████▌ | 11159/13025 [3:02:42<26:07,  1.19it/s] 86%|████████▌ | 11161/13025 [3:02:44<26:10,  1.19it/s] 86%|████████▌ | 11162/13025 [3:02:46<30:50,  1.01it/s] 86%|████████▌ | 11164/13025 [3:02:48<29:19,  1.06it/s] 86%|████████▌ | 11167/13025 [3:02:49<24:26,  1.27it/s] 86%|████████▌ | 11168/13025 [3:02:51<29:05,  1.06it/s] 86%|████████▌ | 11170/13025 [3:02:53<28:09,  1.10it/s] 86%|████████▌ | 11172/13025 [3:02:54<27:36,  1.12it/s] 86%|████████▌ | 11173/13025 [3:02:56<32:21,  1.05s/it] 86%|████████▌ | 11174/13025 [3:02:58<36:36,  1.19s/it] 86%|████████▌ | 11175/13025 [3:03:00<40:11,  1.30s/it] 86%|████████▌ | 11177/13025 [3:03:01<34:40,  1.13s/it] 86%|████████▌ | 11178/13025 [3:03:03<38:35,  1.25s/it] 86%|████████▌ | 11179/13025 [3:03:05<41:49,  1.36s/it] 86%|████████▌ | 11180/13025 [3:03:06<44:26,  1.45s/it] 86%|████████▌ | 11181/13025 [3:03:08<46:29,  1.51s/it] 86%|████████▌ | 11183/13025 [3:03:10<41:04,  1.34s/it] 86%|████████▌ | 11184/13025 [3:03:13<48:38,  1.59s/it] 86%|████████▌ | 11185/13025 [3:03:15<54:22,  1.77s/it] 86%|████████▌ | 11186/13025 [3:03:17<57:53,  1.89s/it] 86%|████████▌ | 11187/13025 [3:03:19<56:16,  1.84s/it] 86%|████████▌ | 11190/13025 [3:03:21<35:15,  1.15s/it] 86%|████████▌ | 11191/13025 [3:03:22<38:33,  1.26s/it] 86%|████████▌ | 11193/13025 [3:03:24<33:54,  1.11s/it] 86%|████████▌ | 11195/13025 [3:03:26<31:12,  1.02s/it] 86%|████████▌ | 11196/13025 [3:03:27<35:29,  1.16s/it] 86%|████████▌ | 11198/13025 [3:03:29<31:59,  1.05s/it] 86%|████████▌ | 11199/13025 [3:03:31<36:02,  1.18s/it] 86%|████████▌ | 11201/13025 [3:03:33<32:16,  1.06s/it] 86%|████████▌ | 11203/13025 [3:03:34<30:00,  1.01it/s] 86%|████████▌ | 11204/13025 [3:03:36<34:17,  1.13s/it] 86%|████████▌ | 11206/13025 [3:03:38<31:06,  1.03s/it] 86%|████████▌ | 11207/13025 [3:03:39<35:13,  1.16s/it] 86%|████████▌ | 11213/13025 [3:03:41<18:15,  1.65it/s] 86%|████████▌ | 11214/13025 [3:03:43<22:37,  1.33it/s] 86%|████████▌ | 11215/13025 [3:03:44<27:12,  1.11it/s] 86%|████████▌ | 11216/13025 [3:03:46<31:38,  1.05s/it] 86%|████████▌ | 11219/13025 [3:03:48<25:11,  1.20it/s] 86%|████████▌ | 11220/13025 [3:03:50<29:39,  1.01it/s] 86%|████████▌ | 11221/13025 [3:03:51<33:55,  1.13s/it] 86%|████████▌ | 11222/13025 [3:03:53<37:38,  1.25s/it] 86%|████████▌ | 11223/13025 [3:03:55<40:52,  1.36s/it] 86%|████████▌ | 11225/13025 [3:03:56<34:42,  1.16s/it] 86%|████████▌ | 11227/13025 [3:03:58<31:23,  1.05s/it] 86%|████████▌ | 11228/13025 [3:04:00<35:31,  1.19s/it] 86%|████████▌ | 11229/13025 [3:04:02<39:00,  1.30s/it] 86%|████████▌ | 11230/13025 [3:04:03<41:53,  1.40s/it] 86%|████████▌ | 11231/13025 [3:04:05<44:10,  1.48s/it] 86%|████████▌ | 11233/13025 [3:04:07<36:09,  1.21s/it] 86%|████████▌ | 11234/13025 [3:04:09<40:51,  1.37s/it] 86%|████████▋ | 11237/13025 [3:04:11<32:14,  1.08s/it] 86%|████████▋ | 11238/13025 [3:04:13<39:14,  1.32s/it] 86%|████████▋ | 11243/13025 [3:04:16<24:42,  1.20it/s] 86%|████████▋ | 11244/13025 [3:04:17<28:55,  1.03it/s] 86%|████████▋ | 11247/13025 [3:04:19<24:19,  1.22it/s] 86%|████████▋ | 11248/13025 [3:04:21<28:19,  1.05it/s] 86%|████████▋ | 11250/13025 [3:04:23<27:21,  1.08it/s] 86%|████████▋ | 11251/13025 [3:04:24<31:25,  1.06s/it] 86%|████████▋ | 11252/13025 [3:04:26<35:11,  1.19s/it] 86%|████████▋ | 11254/13025 [3:04:28<31:33,  1.07s/it] 86%|████████▋ | 11256/13025 [3:04:29<29:27,  1.00it/s] 86%|████████▋ | 11257/13025 [3:04:31<33:29,  1.14s/it] 86%|████████▋ | 11258/13025 [3:04:33<37:04,  1.26s/it] 86%|████████▋ | 11259/13025 [3:04:34<40:06,  1.36s/it] 86%|████████▋ | 11260/13025 [3:04:36<42:38,  1.45s/it] 86%|████████▋ | 11263/13025 [3:04:38<29:02,  1.01it/s] 86%|████████▋ | 11264/13025 [3:04:40<33:06,  1.13s/it] 86%|████████▋ | 11265/13025 [3:04:41<36:46,  1.25s/it] 86%|████████▋ | 11266/13025 [3:04:43<39:59,  1.36s/it] 87%|████████▋ | 11267/13025 [3:04:45<42:42,  1.46s/it] 87%|████████▋ | 11269/13025 [3:04:46<35:06,  1.20s/it] 87%|████████▋ | 11272/13025 [3:04:48<26:17,  1.11it/s] 87%|████████▋ | 11274/13025 [3:04:50<25:48,  1.13it/s] 87%|████████▋ | 11276/13025 [3:04:52<25:31,  1.14it/s] 87%|████████▋ | 11278/13025 [3:04:53<25:15,  1.15it/s] 87%|████████▋ | 11279/13025 [3:04:55<29:36,  1.02s/it] 87%|████████▋ | 11280/13025 [3:04:57<33:36,  1.16s/it] 87%|████████▋ | 11281/13025 [3:04:58<37:17,  1.28s/it] 87%|████████▋ | 11282/13025 [3:05:00<40:25,  1.39s/it] 87%|████████▋ | 11284/13025 [3:05:02<33:55,  1.17s/it] 87%|████████▋ | 11292/13025 [3:05:03<14:26,  2.00it/s] 87%|████████▋ | 11294/13025 [3:05:05<16:29,  1.75it/s] 87%|████████▋ | 11295/13025 [3:05:07<20:32,  1.40it/s] 87%|████████▋ | 11296/13025 [3:05:09<25:21,  1.14it/s] 87%|████████▋ | 11297/13025 [3:05:11<33:01,  1.15s/it] 87%|████████▋ | 11298/13025 [3:05:13<39:45,  1.38s/it] 87%|████████▋ | 11299/13025 [3:05:16<46:16,  1.61s/it] 87%|████████▋ | 11302/13025 [3:05:18<32:35,  1.14s/it] 87%|████████▋ | 11304/13025 [3:05:19<29:58,  1.05s/it] 87%|████████▋ | 11305/13025 [3:05:21<33:26,  1.17s/it] 87%|████████▋ | 11307/13025 [3:05:23<30:18,  1.06s/it] 87%|████████▋ | 11310/13025 [3:05:25<24:18,  1.18it/s] 87%|████████▋ | 11311/13025 [3:05:26<28:21,  1.01it/s] 87%|████████▋ | 11312/13025 [3:05:28<32:15,  1.13s/it] 87%|████████▋ | 11315/13025 [3:05:30<25:05,  1.14it/s] 87%|████████▋ | 11317/13025 [3:05:31<24:51,  1.14it/s] 87%|████████▋ | 11318/13025 [3:05:33<28:59,  1.02s/it] 87%|████████▋ | 11319/13025 [3:05:35<32:52,  1.16s/it] 87%|████████▋ | 11320/13025 [3:05:36<36:16,  1.28s/it] 87%|████████▋ | 11321/13025 [3:05:38<39:11,  1.38s/it] 87%|████████▋ | 11322/13025 [3:05:40<41:29,  1.46s/it] 87%|████████▋ | 11324/13025 [3:05:42<34:03,  1.20s/it] 87%|████████▋ | 11326/13025 [3:05:43<30:12,  1.07s/it] 87%|████████▋ | 11327/13025 [3:05:45<34:08,  1.21s/it] 87%|████████▋ | 11328/13025 [3:05:47<37:25,  1.32s/it] 87%|████████▋ | 11329/13025 [3:05:48<39:58,  1.41s/it] 87%|████████▋ | 11331/13025 [3:05:50<33:20,  1.18s/it] 87%|████████▋ | 11332/13025 [3:05:52<36:39,  1.30s/it] 87%|████████▋ | 11336/13025 [3:05:53<22:38,  1.24it/s] 87%|████████▋ | 11337/13025 [3:05:55<26:53,  1.05it/s] 87%|████████▋ | 11338/13025 [3:05:57<30:57,  1.10s/it] 87%|████████▋ | 11340/13025 [3:05:59<28:24,  1.01s/it] 87%|████████▋ | 11341/13025 [3:06:00<32:27,  1.16s/it] 87%|████████▋ | 11342/13025 [3:06:02<35:58,  1.28s/it] 87%|████████▋ | 11343/13025 [3:06:04<38:47,  1.38s/it] 87%|████████▋ | 11344/13025 [3:06:05<41:03,  1.47s/it] 87%|████████▋ | 11346/13025 [3:06:07<33:42,  1.20s/it] 87%|████████▋ | 11349/13025 [3:06:09<27:18,  1.02it/s] 87%|████████▋ | 11350/13025 [3:06:12<34:27,  1.23s/it] 87%|████████▋ | 11351/13025 [3:06:14<40:40,  1.46s/it] 87%|████████▋ | 11352/13025 [3:06:16<45:53,  1.65s/it] 87%|████████▋ | 11355/13025 [3:06:18<30:57,  1.11s/it] 87%|████████▋ | 11356/13025 [3:06:20<34:06,  1.23s/it] 87%|████████▋ | 11358/13025 [3:06:21<30:25,  1.09s/it] 87%|████████▋ | 11359/13025 [3:06:23<33:43,  1.21s/it] 87%|████████▋ | 11361/13025 [3:06:25<30:06,  1.09s/it] 87%|████████▋ | 11362/13025 [3:06:27<33:35,  1.21s/it] 87%|████████▋ | 11363/13025 [3:06:28<36:40,  1.32s/it] 87%|████████▋ | 11367/13025 [3:06:30<22:37,  1.22it/s] 87%|████████▋ | 11368/13025 [3:06:32<26:45,  1.03it/s] 87%|████████▋ | 11369/13025 [3:06:33<30:45,  1.11s/it] 87%|████████▋ | 11370/13025 [3:06:35<34:22,  1.25s/it] 87%|████████▋ | 11371/13025 [3:06:37<37:29,  1.36s/it] 87%|████████▋ | 11372/13025 [3:06:39<39:53,  1.45s/it] 87%|████████▋ | 11376/13025 [3:06:40<23:18,  1.18it/s] 87%|████████▋ | 11377/13025 [3:06:42<27:22,  1.00it/s] 87%|████████▋ | 11379/13025 [3:06:44<26:05,  1.05it/s] 87%|████████▋ | 11385/13025 [3:06:45<15:22,  1.78it/s] 87%|████████▋ | 11387/13025 [3:06:47<17:13,  1.58it/s] 87%|████████▋ | 11389/13025 [3:06:49<18:39,  1.46it/s] 87%|████████▋ | 11391/13025 [3:06:51<19:50,  1.37it/s] 87%|████████▋ | 11393/13025 [3:06:52<20:46,  1.31it/s] 87%|████████▋ | 11396/13025 [3:06:54<18:49,  1.44it/s] 88%|████████▊ | 11398/13025 [3:06:56<20:01,  1.35it/s] 88%|████████▊ | 11399/13025 [3:06:57<24:07,  1.12it/s] 88%|████████▊ | 11401/13025 [3:06:59<23:48,  1.14it/s] 88%|████████▊ | 11402/13025 [3:07:01<27:58,  1.03s/it] 88%|████████▊ | 11406/13025 [3:07:03<19:45,  1.37it/s] 88%|████████▊ | 11407/13025 [3:07:04<23:47,  1.13it/s] 88%|████████▊ | 11409/13025 [3:07:06<23:35,  1.14it/s] 88%|████████▊ | 11414/13025 [3:07:08<16:05,  1.67it/s] 88%|████████▊ | 11415/13025 [3:07:10<22:13,  1.21it/s] 88%|████████▊ | 11416/13025 [3:07:12<25:52,  1.04it/s] 88%|████████▊ | 11417/13025 [3:07:14<30:49,  1.15s/it] 88%|████████▊ | 11419/13025 [3:07:16<31:04,  1.16s/it] 88%|████████▊ | 11423/13025 [3:07:18<20:36,  1.30it/s] 88%|████████▊ | 11424/13025 [3:07:19<23:23,  1.14it/s] 88%|████████▊ | 11426/13025 [3:07:21<22:12,  1.20it/s] 88%|████████▊ | 11429/13025 [3:07:22<18:40,  1.42it/s] 88%|████████▊ | 11431/13025 [3:07:24<19:44,  1.35it/s] 88%|████████▊ | 11432/13025 [3:07:26<23:59,  1.11it/s] 88%|████████▊ | 11433/13025 [3:07:27<28:05,  1.06s/it] 88%|████████▊ | 11434/13025 [3:07:29<31:46,  1.20s/it] 88%|████████▊ | 11435/13025 [3:07:31<35:08,  1.33s/it] 88%|████████▊ | 11436/13025 [3:07:33<38:05,  1.44s/it] 88%|████████▊ | 11437/13025 [3:07:34<40:10,  1.52s/it] 88%|████████▊ | 11438/13025 [3:07:36<41:37,  1.57s/it] 88%|████████▊ | 11440/13025 [3:07:38<32:00,  1.21s/it] 88%|████████▊ | 11443/13025 [3:07:39<23:49,  1.11it/s] 88%|████████▊ | 11446/13025 [3:07:41<19:23,  1.36it/s] 88%|████████▊ | 11447/13025 [3:07:42<22:32,  1.17it/s] 88%|████████▊ | 11448/13025 [3:07:44<26:50,  1.02s/it] 88%|████████▊ | 11449/13025 [3:07:46<30:43,  1.17s/it] 88%|████████▊ | 11453/13025 [3:07:47<19:11,  1.36it/s] 88%|████████▊ | 11454/13025 [3:07:49<23:32,  1.11it/s] 88%|████████▊ | 11455/13025 [3:07:51<27:35,  1.05s/it] 88%|████████▊ | 11456/13025 [3:07:52<31:17,  1.20s/it] 88%|████████▊ | 11458/13025 [3:07:54<26:43,  1.02s/it] 88%|████████▊ | 11459/13025 [3:07:56<30:32,  1.17s/it] 88%|████████▊ | 11460/13025 [3:07:57<33:54,  1.30s/it] 88%|████████▊ | 11463/13025 [3:07:59<24:23,  1.07it/s] 88%|████████▊ | 11464/13025 [3:08:01<28:14,  1.09s/it] 88%|████████▊ | 11465/13025 [3:08:02<31:55,  1.23s/it] 88%|████████▊ | 11467/13025 [3:08:04<27:08,  1.05s/it] 88%|████████▊ | 11468/13025 [3:08:06<30:52,  1.19s/it] 88%|████████▊ | 11469/13025 [3:08:07<34:08,  1.32s/it] 88%|████████▊ | 11470/13025 [3:08:09<38:51,  1.50s/it] 88%|████████▊ | 11472/13025 [3:08:12<35:49,  1.38s/it] 88%|████████▊ | 11473/13025 [3:08:14<37:39,  1.46s/it] 88%|████████▊ | 11474/13025 [3:08:16<43:50,  1.70s/it] 88%|████████▊ | 11475/13025 [3:08:18<45:35,  1.76s/it] 88%|████████▊ | 11478/13025 [3:08:20<29:31,  1.15s/it] 88%|████████▊ | 11480/13025 [3:08:21<24:56,  1.03it/s] 88%|████████▊ | 11481/13025 [3:08:23<28:43,  1.12s/it] 88%|████████▊ | 11484/13025 [3:08:24<22:24,  1.15it/s] 88%|████████▊ | 11485/13025 [3:08:26<26:16,  1.02s/it] 88%|████████▊ | 11486/13025 [3:08:28<29:56,  1.17s/it] 88%|████████▊ | 11487/13025 [3:08:30<33:10,  1.29s/it] 88%|████████▊ | 11488/13025 [3:08:31<32:41,  1.28s/it] 88%|████████▊ | 11489/13025 [3:08:33<35:29,  1.39s/it] 88%|████████▊ | 11490/13025 [3:08:34<36:15,  1.42s/it] 88%|████████▊ | 11492/13025 [3:08:36<30:04,  1.18s/it] 88%|████████▊ | 11493/13025 [3:08:38<33:18,  1.30s/it] 88%|████████▊ | 11494/13025 [3:08:39<36:01,  1.41s/it] 88%|████████▊ | 11495/13025 [3:08:41<36:21,  1.43s/it] 88%|████████▊ | 11496/13025 [3:08:42<38:23,  1.51s/it] 88%|████████▊ | 11500/13025 [3:08:44<21:32,  1.18it/s] 88%|████████▊ | 11501/13025 [3:08:45<23:13,  1.09it/s] 88%|████████▊ | 11502/13025 [3:08:47<27:23,  1.08s/it] 88%|████████▊ | 11503/13025 [3:08:48<28:16,  1.11s/it] 88%|████████▊ | 11505/13025 [3:08:50<23:19,  1.09it/s] 88%|████████▊ | 11507/13025 [3:08:51<21:42,  1.17it/s] 88%|████████▊ | 11508/13025 [3:08:53<26:06,  1.03s/it] 88%|████████▊ | 11513/13025 [3:08:55<15:48,  1.59it/s] 88%|████████▊ | 11515/13025 [3:08:56<17:17,  1.46it/s] 88%|████████▊ | 11516/13025 [3:08:58<21:15,  1.18it/s] 88%|████████▊ | 11518/13025 [3:09:00<21:20,  1.18it/s] 88%|████████▊ | 11519/13025 [3:09:01<24:08,  1.04it/s] 88%|████████▊ | 11521/13025 [3:09:03<22:15,  1.13it/s] 88%|████████▊ | 11522/13025 [3:09:04<23:58,  1.04it/s] 88%|████████▊ | 11524/13025 [3:09:05<20:57,  1.19it/s] 88%|████████▊ | 11526/13025 [3:09:07<20:14,  1.23it/s] 89%|████████▊ | 11528/13025 [3:09:08<18:37,  1.34it/s] 89%|████████▊ | 11529/13025 [3:09:10<26:26,  1.06s/it] 89%|████████▊ | 11531/13025 [3:09:13<27:34,  1.11s/it] 89%|████████▊ | 11532/13025 [3:09:15<33:53,  1.36s/it] 89%|████████▊ | 11533/13025 [3:09:17<37:32,  1.51s/it] 89%|████████▊ | 11534/13025 [3:09:19<37:18,  1.50s/it] 89%|████████▊ | 11537/13025 [3:09:20<25:42,  1.04s/it] 89%|████████▊ | 11538/13025 [3:09:22<26:39,  1.08s/it] 89%|████████▊ | 11539/13025 [3:09:23<30:02,  1.21s/it] 89%|████████▊ | 11541/13025 [3:09:25<25:29,  1.03s/it] 89%|████████▊ | 11542/13025 [3:09:26<26:32,  1.07s/it] 89%|████████▊ | 11544/13025 [3:09:27<21:00,  1.18it/s] 89%|████████▊ | 11545/13025 [3:09:28<24:19,  1.01it/s] 89%|████████▊ | 11548/13025 [3:09:30<18:27,  1.33it/s] 89%|████████▊ | 11549/13025 [3:09:31<21:43,  1.13it/s] 89%|████████▊ | 11550/13025 [3:09:33<26:00,  1.06s/it] 89%|████████▊ | 11552/13025 [3:09:35<23:05,  1.06it/s] 89%|████████▊ | 11555/13025 [3:09:36<17:17,  1.42it/s] 89%|████████▊ | 11556/13025 [3:09:37<20:32,  1.19it/s] 89%|████████▊ | 11557/13025 [3:09:39<23:35,  1.04it/s] 89%|████████▊ | 11559/13025 [3:09:40<22:42,  1.08it/s] 89%|████████▉ | 11562/13025 [3:09:42<18:51,  1.29it/s] 89%|████████▉ | 11563/13025 [3:09:44<21:47,  1.12it/s] 89%|████████▉ | 11564/13025 [3:09:45<23:21,  1.04it/s] 89%|████████▉ | 11565/13025 [3:09:46<26:03,  1.07s/it] 89%|████████▉ | 11566/13025 [3:09:48<29:44,  1.22s/it] 89%|████████▉ | 11568/13025 [3:09:50<26:09,  1.08s/it] 89%|████████▉ | 11569/13025 [3:09:51<28:24,  1.17s/it] 89%|████████▉ | 11570/13025 [3:09:53<31:41,  1.31s/it] 89%|████████▉ | 11574/13025 [3:09:55<19:17,  1.25it/s] 89%|████████▉ | 11576/13025 [3:09:56<17:58,  1.34it/s] 89%|████████▉ | 11577/13025 [3:09:58<21:59,  1.10it/s] 89%|████████▉ | 11579/13025 [3:09:59<21:33,  1.12it/s] 89%|████████▉ | 11580/13025 [3:10:01<25:19,  1.05s/it] 89%|████████▉ | 11581/13025 [3:10:03<28:40,  1.19s/it] 89%|████████▉ | 11583/13025 [3:10:05<25:33,  1.06s/it] 89%|████████▉ | 11584/13025 [3:10:06<28:59,  1.21s/it] 89%|████████▉ | 11585/13025 [3:10:08<31:54,  1.33s/it] 89%|████████▉ | 11587/13025 [3:10:10<29:55,  1.25s/it] 89%|████████▉ | 11588/13025 [3:10:13<35:54,  1.50s/it] 89%|████████▉ | 11590/13025 [3:10:14<29:49,  1.25s/it] 89%|████████▉ | 11591/13025 [3:10:16<32:09,  1.35s/it] 89%|████████▉ | 11593/13025 [3:10:18<28:26,  1.19s/it] 89%|████████▉ | 11598/13025 [3:10:20<16:43,  1.42it/s] 89%|████████▉ | 11599/13025 [3:10:21<20:18,  1.17it/s] 89%|████████▉ | 11600/13025 [3:10:23<23:45,  1.00s/it] 89%|████████▉ | 11603/13025 [3:10:25<19:28,  1.22it/s] 89%|████████▉ | 11604/13025 [3:10:27<23:03,  1.03it/s] 89%|████████▉ | 11605/13025 [3:10:28<26:23,  1.11s/it] 89%|████████▉ | 11606/13025 [3:10:30<29:28,  1.25s/it] 89%|████████▉ | 11607/13025 [3:10:32<32:03,  1.36s/it] 89%|████████▉ | 11610/13025 [3:10:33<22:42,  1.04it/s] 89%|████████▉ | 11611/13025 [3:10:35<25:00,  1.06s/it] 89%|████████▉ | 11612/13025 [3:10:36<27:08,  1.15s/it] 89%|████████▉ | 11615/13025 [3:10:38<20:41,  1.14it/s] 89%|████████▉ | 11617/13025 [3:10:40<20:31,  1.14it/s] 89%|████████▉ | 11619/13025 [3:10:42<20:24,  1.15it/s] 89%|████████▉ | 11621/13025 [3:10:43<20:14,  1.16it/s] 89%|████████▉ | 11625/13025 [3:10:45<15:28,  1.51it/s] 89%|████████▉ | 11626/13025 [3:10:47<18:58,  1.23it/s] 89%|████████▉ | 11627/13025 [3:10:48<21:32,  1.08it/s] 89%|████████▉ | 11628/13025 [3:10:50<25:07,  1.08s/it] 89%|████████▉ | 11629/13025 [3:10:51<27:09,  1.17s/it] 89%|████████▉ | 11630/13025 [3:10:53<30:20,  1.31s/it] 89%|████████▉ | 11631/13025 [3:10:55<32:44,  1.41s/it] 89%|████████▉ | 11632/13025 [3:10:57<34:40,  1.49s/it] 89%|████████▉ | 11633/13025 [3:10:58<36:08,  1.56s/it] 89%|████████▉ | 11636/13025 [3:11:00<23:48,  1.03s/it] 89%|████████▉ | 11639/13025 [3:11:02<19:14,  1.20it/s] 89%|████████▉ | 11640/13025 [3:11:04<22:46,  1.01it/s] 89%|████████▉ | 11641/13025 [3:11:05<26:05,  1.13s/it] 89%|████████▉ | 11642/13025 [3:11:07<29:09,  1.26s/it] 89%|████████▉ | 11645/13025 [3:11:09<23:10,  1.01s/it] 89%|████████▉ | 11647/13025 [3:11:12<24:36,  1.07s/it] 89%|████████▉ | 11648/13025 [3:11:14<30:01,  1.31s/it] 89%|████████▉ | 11649/13025 [3:11:16<34:40,  1.51s/it] 89%|████████▉ | 11650/13025 [3:11:18<34:28,  1.50s/it] 89%|████████▉ | 11654/13025 [3:11:20<20:30,  1.11it/s] 89%|████████▉ | 11655/13025 [3:11:21<23:40,  1.04s/it] 89%|████████▉ | 11656/13025 [3:11:23<26:51,  1.18s/it] 89%|████████▉ | 11657/13025 [3:11:25<29:36,  1.30s/it] 90%|████████▉ | 11658/13025 [3:11:26<31:54,  1.40s/it] 90%|████████▉ | 11659/13025 [3:11:28<33:47,  1.48s/it] 90%|████████▉ | 11661/13025 [3:11:30<27:46,  1.22s/it] 90%|████████▉ | 11664/13025 [3:11:32<20:46,  1.09it/s] 90%|████████▉ | 11665/13025 [3:11:33<24:03,  1.06s/it] 90%|████████▉ | 11668/13025 [3:11:35<19:09,  1.18it/s] 90%|████████▉ | 11671/13025 [3:11:37<16:46,  1.35it/s] 90%|████████▉ | 11672/13025 [3:11:38<19:28,  1.16it/s] 90%|████████▉ | 11673/13025 [3:11:40<23:03,  1.02s/it] 90%|████████▉ | 11676/13025 [3:11:42<17:45,  1.27it/s] 90%|████████▉ | 11677/13025 [3:11:43<19:28,  1.15it/s] 90%|████████▉ | 11681/13025 [3:11:45<14:34,  1.54it/s] 90%|████████▉ | 11682/13025 [3:11:46<17:21,  1.29it/s] 90%|████████▉ | 11684/13025 [3:11:48<17:58,  1.24it/s] 90%|████████▉ | 11685/13025 [3:11:49<21:34,  1.03it/s] 90%|████████▉ | 11687/13025 [3:11:51<20:45,  1.07it/s] 90%|████████▉ | 11688/13025 [3:11:53<24:11,  1.09s/it] 90%|████████▉ | 11689/13025 [3:11:54<24:51,  1.12s/it] 90%|████████▉ | 11690/13025 [3:11:56<28:05,  1.26s/it] 90%|████████▉ | 11691/13025 [3:11:58<30:33,  1.37s/it] 90%|████████▉ | 11693/13025 [3:11:59<25:42,  1.16s/it] 90%|████████▉ | 11695/13025 [3:12:01<23:12,  1.05s/it] 90%|████████▉ | 11697/13025 [3:12:03<21:44,  1.02it/s] 90%|████████▉ | 11698/13025 [3:12:04<23:50,  1.08s/it] 90%|████████▉ | 11699/13025 [3:12:06<26:55,  1.22s/it] 90%|████████▉ | 11700/13025 [3:12:08<29:37,  1.34s/it] 90%|████████▉ | 11704/13025 [3:12:10<19:36,  1.12it/s] 90%|████████▉ | 11705/13025 [3:12:12<24:01,  1.09s/it] 90%|████████▉ | 11706/13025 [3:12:13<25:03,  1.14s/it] 90%|████████▉ | 11707/13025 [3:12:16<31:06,  1.42s/it] 90%|████████▉ | 11708/13025 [3:12:18<33:45,  1.54s/it] 90%|████████▉ | 11709/13025 [3:12:19<34:42,  1.58s/it] 90%|████████▉ | 11710/13025 [3:12:21<35:26,  1.62s/it] 90%|████████▉ | 11712/13025 [3:12:23<28:10,  1.29s/it] 90%|████████▉ | 11713/13025 [3:12:25<30:33,  1.40s/it] 90%|████████▉ | 11714/13025 [3:12:26<32:23,  1.48s/it] 90%|████████▉ | 11717/13025 [3:12:27<19:11,  1.14it/s] 90%|████████▉ | 11719/13025 [3:12:29<18:58,  1.15it/s] 90%|████████▉ | 11720/13025 [3:12:30<21:25,  1.02it/s] 90%|████████▉ | 11721/13025 [3:12:32<24:47,  1.14s/it] 90%|█████████ | 11724/13025 [3:12:34<18:52,  1.15it/s] 90%|█████████ | 11726/13025 [3:12:36<18:43,  1.16it/s] 90%|█████████ | 11728/13025 [3:12:37<18:37,  1.16it/s] 90%|█████████ | 11729/13025 [3:12:39<21:02,  1.03it/s] 90%|█████████ | 11730/13025 [3:12:40<24:24,  1.13s/it] 90%|█████████ | 11731/13025 [3:12:42<27:14,  1.26s/it] 90%|█████████ | 11732/13025 [3:12:44<29:36,  1.37s/it] 90%|█████████ | 11733/13025 [3:12:45<30:06,  1.40s/it] 90%|█████████ | 11734/13025 [3:12:47<29:03,  1.35s/it] 90%|█████████ | 11735/13025 [3:12:48<29:45,  1.38s/it] 90%|█████████ | 11736/13025 [3:12:50<30:10,  1.40s/it] 90%|█████████ | 11737/13025 [3:12:51<32:03,  1.49s/it] 90%|█████████ | 11738/13025 [3:12:53<33:24,  1.56s/it] 90%|█████████ | 11740/13025 [3:12:54<25:24,  1.19s/it] 90%|█████████ | 11741/13025 [3:12:56<28:20,  1.32s/it] 90%|█████████ | 11743/13025 [3:12:58<24:10,  1.13s/it] 90%|█████████ | 11746/13025 [3:13:00<18:33,  1.15it/s] 90%|█████████ | 11748/13025 [3:13:01<17:38,  1.21it/s] 90%|█████████ | 11749/13025 [3:13:03<21:00,  1.01it/s] 90%|█████████ | 11750/13025 [3:13:04<24:10,  1.14s/it] 90%|█████████ | 11751/13025 [3:13:06<26:53,  1.27s/it] 90%|█████████ | 11752/13025 [3:13:08<29:10,  1.37s/it] 90%|█████████ | 11755/13025 [3:13:10<21:59,  1.04s/it] 90%|█████████ | 11757/13025 [3:13:12<23:10,  1.10s/it] 90%|█████████ | 11758/13025 [3:13:15<28:09,  1.33s/it] 90%|█████████ | 11760/13025 [3:13:17<25:47,  1.22s/it] 90%|█████████ | 11761/13025 [3:13:19<27:53,  1.32s/it] 90%|█████████ | 11763/13025 [3:13:20<24:13,  1.15s/it] 90%|█████████ | 11767/13025 [3:13:22<16:25,  1.28it/s] 90%|█████████ | 11768/13025 [3:13:24<19:23,  1.08it/s] 90%|█████████ | 11772/13025 [3:13:25<14:33,  1.43it/s] 90%|█████████ | 11773/13025 [3:13:27<17:38,  1.18it/s] 90%|█████████ | 11774/13025 [3:13:29<20:41,  1.01it/s] 90%|█████████ | 11775/13025 [3:13:31<23:39,  1.14s/it] 90%|█████████ | 11776/13025 [3:13:32<26:12,  1.26s/it] 90%|█████████ | 11777/13025 [3:13:33<24:46,  1.19s/it] 90%|█████████ | 11778/13025 [3:13:35<27:33,  1.33s/it] 90%|█████████ | 11779/13025 [3:13:37<28:17,  1.36s/it] 90%|█████████ | 11780/13025 [3:13:38<30:12,  1.46s/it] 90%|█████████ | 11781/13025 [3:13:40<31:47,  1.53s/it] 90%|█████████ | 11783/13025 [3:13:42<25:32,  1.23s/it] 90%|█████████ | 11784/13025 [3:13:43<27:57,  1.35s/it] 90%|█████████ | 11786/13025 [3:13:45<23:43,  1.15s/it] 91%|█████████ | 11788/13025 [3:13:47<21:27,  1.04s/it] 91%|█████████ | 11791/13025 [3:13:48<16:23,  1.25it/s] 91%|█████████ | 11794/13025 [3:13:50<14:34,  1.41it/s] 91%|█████████ | 11795/13025 [3:13:52<17:45,  1.15it/s] 91%|█████████ | 11797/13025 [3:13:53<17:40,  1.16it/s] 91%|█████████ | 11798/13025 [3:13:55<20:49,  1.02s/it] 91%|█████████ | 11799/13025 [3:13:57<23:46,  1.16s/it] 91%|█████████ | 11800/13025 [3:13:59<26:20,  1.29s/it] 91%|█████████ | 11801/13025 [3:14:00<24:46,  1.21s/it] 91%|█████████ | 11802/13025 [3:14:01<27:23,  1.34s/it] 91%|█████████ | 11805/13025 [3:14:03<19:05,  1.06it/s] 91%|█████████ | 11806/13025 [3:14:04<21:15,  1.05s/it] 91%|█████████ | 11808/13025 [3:14:06<19:48,  1.02it/s] 91%|█████████ | 11809/13025 [3:14:08<23:03,  1.14s/it] 91%|█████████ | 11810/13025 [3:14:10<28:45,  1.42s/it] 91%|█████████ | 11812/13025 [3:14:13<27:01,  1.34s/it] 91%|█████████ | 11814/13025 [3:14:15<25:59,  1.29s/it] 91%|█████████ | 11815/13025 [3:14:17<28:51,  1.43s/it] 91%|█████████ | 11816/13025 [3:14:19<29:01,  1.44s/it] 91%|█████████ | 11817/13025 [3:14:20<30:22,  1.51s/it] 91%|█████████ | 11818/13025 [3:14:22<31:25,  1.56s/it] 91%|█████████ | 11819/13025 [3:14:24<32:11,  1.60s/it] 91%|█████████ | 11821/13025 [3:14:25<24:35,  1.23s/it] 91%|█████████ | 11823/13025 [3:14:27<21:52,  1.09s/it] 91%|█████████ | 11824/13025 [3:14:29<24:35,  1.23s/it] 91%|█████████ | 11825/13025 [3:14:30<26:53,  1.34s/it] 91%|█████████ | 11826/13025 [3:14:32<26:16,  1.31s/it] 91%|█████████ | 11827/13025 [3:14:33<28:23,  1.42s/it] 91%|█████████ | 11828/13025 [3:14:35<28:33,  1.43s/it] 91%|█████████ | 11831/13025 [3:14:37<19:18,  1.03it/s] 91%|█████████ | 11832/13025 [3:14:38<21:20,  1.07s/it] 91%|█████████ | 11833/13025 [3:14:40<24:12,  1.22s/it] 91%|█████████ | 11836/13025 [3:14:42<17:55,  1.11it/s] 91%|█████████ | 11837/13025 [3:14:43<21:00,  1.06s/it] 91%|█████████ | 11839/13025 [3:14:45<19:37,  1.01it/s] 91%|█████████ | 11840/13025 [3:14:47<22:29,  1.14s/it] 91%|█████████ | 11841/13025 [3:14:48<25:00,  1.27s/it] 91%|█████████ | 11843/13025 [3:14:49<18:58,  1.04it/s] 91%|█████████ | 11844/13025 [3:14:51<22:11,  1.13s/it] 91%|█████████ | 11845/13025 [3:14:53<24:55,  1.27s/it] 91%|█████████ | 11849/13025 [3:14:54<14:41,  1.33it/s] 91%|█████████ | 11850/13025 [3:14:56<17:51,  1.10it/s] 91%|█████████ | 11851/13025 [3:14:57<18:08,  1.08it/s] 91%|█████████ | 11853/13025 [3:14:59<17:44,  1.10it/s] 91%|█████████ | 11855/13025 [3:15:00<17:23,  1.12it/s] 91%|█████████ | 11856/13025 [3:15:02<20:31,  1.05s/it] 91%|█████████ | 11857/13025 [3:15:04<23:18,  1.20s/it] 91%|█████████ | 11858/13025 [3:15:05<24:32,  1.26s/it] 91%|█████████ | 11859/13025 [3:15:07<26:44,  1.38s/it] 91%|█████████ | 11860/13025 [3:15:09<27:41,  1.43s/it] 91%|█████████ | 11861/13025 [3:15:11<30:50,  1.59s/it] 91%|█████████ | 11863/13025 [3:15:12<24:36,  1.27s/it] 91%|█████████ | 11864/13025 [3:15:15<29:45,  1.54s/it] 91%|█████████ | 11865/13025 [3:15:17<32:58,  1.71s/it] 91%|█████████ | 11866/13025 [3:15:18<29:13,  1.51s/it] 91%|█████████ | 11867/13025 [3:15:20<30:15,  1.57s/it] 91%|█████████ | 11868/13025 [3:15:21<29:39,  1.54s/it] 91%|█████████ | 11870/13025 [3:15:23<23:46,  1.23s/it] 91%|█████████ | 11875/13025 [3:15:24<12:36,  1.52it/s] 91%|█████████ | 11876/13025 [3:15:26<15:37,  1.23it/s] 91%|█████████ | 11877/13025 [3:15:27<16:58,  1.13it/s] 91%|█████████ | 11878/13025 [3:15:29<19:19,  1.01s/it] 91%|█████████ | 11879/13025 [3:15:30<21:17,  1.12s/it] 91%|█████████ | 11880/13025 [3:15:32<24:03,  1.26s/it] 91%|█████████ | 11881/13025 [3:15:34<26:17,  1.38s/it] 91%|█████████ | 11883/13025 [3:15:35<22:03,  1.16s/it] 91%|█████████ | 11884/13025 [3:15:37<24:30,  1.29s/it] 91%|█████████ | 11885/13025 [3:15:39<26:26,  1.39s/it] 91%|█████████▏| 11888/13025 [3:15:41<18:19,  1.03it/s] 91%|█████████▏| 11892/13025 [3:15:42<13:12,  1.43it/s] 91%|█████████▏| 11893/13025 [3:15:44<15:28,  1.22it/s] 91%|█████████▏| 11894/13025 [3:15:45<18:29,  1.02it/s] 91%|█████████▏| 11895/13025 [3:15:47<20:20,  1.08s/it] 91%|█████████▏| 11900/13025 [3:15:48<11:33,  1.62it/s] 91%|█████████▏| 11901/13025 [3:15:50<14:30,  1.29it/s] 91%|█████████▏| 11902/13025 [3:15:52<17:27,  1.07it/s] 91%|█████████▏| 11903/13025 [3:15:53<19:24,  1.04s/it] 91%|█████████▏| 11906/13025 [3:15:55<15:24,  1.21it/s] 91%|█████████▏| 11907/13025 [3:15:56<16:42,  1.11it/s] 91%|█████████▏| 11908/13025 [3:15:58<19:48,  1.06s/it] 91%|█████████▏| 11910/13025 [3:16:00<18:29,  1.00it/s] 91%|█████████▏| 11911/13025 [3:16:01<20:20,  1.10s/it] 91%|█████████▏| 11913/13025 [3:16:03<18:39,  1.01s/it] 91%|█████████▏| 11914/13025 [3:16:04<20:27,  1.10s/it] 91%|█████████▏| 11916/13025 [3:16:06<16:59,  1.09it/s] 92%|█████████▏| 11918/13025 [3:16:07<14:57,  1.23it/s] 92%|█████████▏| 11919/13025 [3:16:09<19:30,  1.06s/it] 92%|█████████▏| 11922/13025 [3:16:11<16:16,  1.13it/s] 92%|█████████▏| 11924/13025 [3:16:13<16:03,  1.14it/s] 92%|█████████▏| 11925/13025 [3:16:15<21:09,  1.15s/it] 92%|█████████▏| 11928/13025 [3:16:17<16:34,  1.10it/s] 92%|█████████▏| 11929/13025 [3:16:19<19:04,  1.04s/it] 92%|█████████▏| 11930/13025 [3:16:20<19:40,  1.08s/it] 92%|█████████▏| 11931/13025 [3:16:21<22:11,  1.22s/it] 92%|█████████▏| 11932/13025 [3:16:23<23:18,  1.28s/it] 92%|█████████▏| 11933/13025 [3:16:24<24:08,  1.33s/it] 92%|█████████▏| 11934/13025 [3:16:26<26:00,  1.43s/it] 92%|█████████▏| 11935/13025 [3:16:28<27:26,  1.51s/it] 92%|█████████▏| 11937/13025 [3:16:29<21:14,  1.17s/it] 92%|█████████▏| 11939/13025 [3:16:31<19:08,  1.06s/it] 92%|█████████▏| 11940/13025 [3:16:33<21:42,  1.20s/it] 92%|█████████▏| 11942/13025 [3:16:34<16:45,  1.08it/s] 92%|█████████▏| 11944/13025 [3:16:35<16:18,  1.10it/s] 92%|█████████▏| 11945/13025 [3:16:37<18:21,  1.02s/it] 92%|█████████▏| 11948/13025 [3:16:39<14:36,  1.23it/s] 92%|█████████▏| 11949/13025 [3:16:40<17:29,  1.03it/s] 92%|█████████▏| 11950/13025 [3:16:42<19:19,  1.08s/it] 92%|█████████▏| 11951/13025 [3:16:43<19:55,  1.11s/it] 92%|█████████▏| 11953/13025 [3:16:45<17:19,  1.03it/s] 92%|█████████▏| 11954/13025 [3:16:46<20:26,  1.14s/it] 92%|█████████▏| 11955/13025 [3:16:48<20:46,  1.17s/it] 92%|█████████▏| 11957/13025 [3:16:49<18:34,  1.04s/it] 92%|█████████▏| 11959/13025 [3:16:51<16:33,  1.07it/s] 92%|█████████▏| 11961/13025 [3:16:52<14:36,  1.21it/s] 92%|█████████▏| 11962/13025 [3:16:53<16:00,  1.11it/s] 92%|█████████▏| 11965/13025 [3:16:55<12:40,  1.39it/s] 92%|█████████▏| 11970/13025 [3:16:56<08:46,  2.01it/s] 92%|█████████▏| 11973/13025 [3:16:58<08:43,  2.01it/s] 92%|█████████▏| 11975/13025 [3:16:59<09:39,  1.81it/s] 92%|█████████▏| 11976/13025 [3:17:01<11:57,  1.46it/s] 92%|█████████▏| 11977/13025 [3:17:02<13:34,  1.29it/s] 92%|█████████▏| 11978/13025 [3:17:03<15:03,  1.16it/s] 92%|█████████▏| 11980/13025 [3:17:04<13:30,  1.29it/s] 92%|█████████▏| 11982/13025 [3:17:06<13:14,  1.31it/s] 92%|█████████▏| 11983/13025 [3:17:08<16:27,  1.05it/s] 92%|█████████▏| 11984/13025 [3:17:10<21:13,  1.22s/it] 92%|█████████▏| 11985/13025 [3:17:12<25:57,  1.50s/it] 92%|█████████▏| 11989/13025 [3:17:14<16:02,  1.08it/s] 92%|█████████▏| 11991/13025 [3:17:17<17:15,  1.00s/it] 92%|█████████▏| 11992/13025 [3:17:18<18:42,  1.09s/it] 92%|█████████▏| 11993/13025 [3:17:20<20:00,  1.16s/it] 92%|█████████▏| 11994/13025 [3:17:21<22:08,  1.29s/it] 92%|█████████▏| 11995/13025 [3:17:23<23:51,  1.39s/it] 92%|█████████▏| 11996/13025 [3:17:24<24:13,  1.41s/it] 92%|█████████▏| 11997/13025 [3:17:26<25:35,  1.49s/it] 92%|█████████▏| 11999/13025 [3:17:28<19:59,  1.17s/it] 92%|█████████▏| 12002/13025 [3:17:28<11:41,  1.46it/s] 92%|█████████▏| 12003/13025 [3:17:30<14:10,  1.20it/s] 92%|█████████▏| 12004/13025 [3:17:31<16:32,  1.03it/s] 92%|█████████▏| 12005/13025 [3:17:33<19:37,  1.15s/it] 92%|█████████▏| 12007/13025 [3:17:34<16:47,  1.01it/s] 92%|█████████▏| 12008/13025 [3:17:35<16:45,  1.01it/s] 92%|█████████▏| 12009/13025 [3:17:37<19:46,  1.17s/it] 92%|█████████▏| 12011/13025 [3:17:39<16:47,  1.01it/s] 92%|█████████▏| 12013/13025 [3:17:40<15:12,  1.11it/s] 92%|█████████▏| 12015/13025 [3:17:42<14:12,  1.18it/s] 92%|█████████▏| 12016/13025 [3:17:43<16:16,  1.03it/s] 92%|█████████▏| 12017/13025 [3:17:44<18:06,  1.08s/it] 92%|█████████▏| 12018/13025 [3:17:46<20:41,  1.23s/it] 92%|█████████▏| 12019/13025 [3:17:48<21:44,  1.30s/it] 92%|█████████▏| 12020/13025 [3:17:49<23:35,  1.41s/it] 92%|█████████▏| 12026/13025 [3:17:51<10:28,  1.59it/s] 92%|█████████▏| 12030/13025 [3:17:53<08:42,  1.90it/s] 92%|█████████▏| 12031/13025 [3:17:54<10:38,  1.56it/s] 92%|█████████▏| 12032/13025 [3:17:56<13:21,  1.24it/s] 92%|█████████▏| 12033/13025 [3:17:57<15:17,  1.08it/s] 92%|█████████▏| 12034/13025 [3:17:59<17:07,  1.04s/it] 92%|█████████▏| 12035/13025 [3:18:00<19:37,  1.19s/it] 92%|█████████▏| 12036/13025 [3:18:02<20:51,  1.27s/it] 92%|█████████▏| 12038/13025 [3:18:04<18:05,  1.10s/it] 92%|█████████▏| 12040/13025 [3:18:05<15:04,  1.09it/s] 92%|█████████▏| 12041/13025 [3:18:07<17:48,  1.09s/it] 92%|█████████▏| 12044/13025 [3:18:08<13:09,  1.24it/s] 92%|█████████▏| 12046/13025 [3:18:10<12:57,  1.26it/s] 92%|█████████▏| 12048/13025 [3:18:12<14:59,  1.09it/s] 93%|█████████▎| 12049/13025 [3:18:14<18:10,  1.12s/it] 93%|█████████▎| 12051/13025 [3:18:16<16:44,  1.03s/it] 93%|█████████▎| 12053/13025 [3:18:18<16:35,  1.02s/it] 93%|█████████▎| 12054/13025 [3:18:19<17:12,  1.06s/it] 93%|█████████▎| 12055/13025 [3:18:20<17:42,  1.10s/it] 93%|█████████▎| 12059/13025 [3:18:21<10:39,  1.51it/s] 93%|█████████▎| 12063/13025 [3:18:23<08:06,  1.98it/s] 93%|█████████▎| 12064/13025 [3:18:24<10:11,  1.57it/s] 93%|█████████▎| 12066/13025 [3:18:25<10:03,  1.59it/s] 93%|█████████▎| 12068/13025 [3:18:27<09:58,  1.60it/s] 93%|█████████▎| 12069/13025 [3:18:28<12:14,  1.30it/s] 93%|█████████▎| 12079/13025 [3:18:29<04:56,  3.19it/s] 93%|█████████▎| 12081/13025 [3:18:31<06:03,  2.60it/s] 93%|█████████▎| 12082/13025 [3:18:32<07:52,  1.99it/s] 93%|█████████▎| 12083/13025 [3:18:34<09:24,  1.67it/s] 93%|█████████▎| 12085/13025 [3:18:35<09:28,  1.65it/s] 93%|█████████▎| 12086/13025 [3:18:36<11:40,  1.34it/s] 93%|█████████▎| 12089/13025 [3:18:37<09:27,  1.65it/s] 93%|█████████▎| 12091/13025 [3:18:39<10:32,  1.48it/s] 93%|█████████▎| 12092/13025 [3:18:41<13:16,  1.17it/s] 93%|█████████▎| 12093/13025 [3:18:42<14:21,  1.08it/s] 93%|█████████▎| 12094/13025 [3:18:43<15:17,  1.01it/s] 93%|█████████▎| 12095/13025 [3:18:44<15:12,  1.02it/s] 93%|█████████▎| 12096/13025 [3:18:46<16:07,  1.04s/it] 93%|█████████▎| 12098/13025 [3:18:47<13:18,  1.16it/s] 93%|█████████▎| 12100/13025 [3:18:48<11:52,  1.30it/s] 93%|█████████▎| 12101/13025 [3:18:49<14:13,  1.08it/s] 93%|█████████▎| 12103/13025 [3:18:51<12:22,  1.24it/s] 93%|█████████▎| 12104/13025 [3:18:52<14:30,  1.06it/s] 93%|█████████▎| 12105/13025 [3:18:54<17:13,  1.12s/it] 93%|█████████▎| 12106/13025 [3:18:55<18:29,  1.21s/it] 93%|█████████▎| 12108/13025 [3:18:57<15:27,  1.01s/it] 93%|█████████▎| 12109/13025 [3:18:58<17:03,  1.12s/it] 93%|█████████▎| 12112/13025 [3:18:59<11:39,  1.30it/s] 93%|█████████▎| 12113/13025 [3:19:01<12:57,  1.17it/s] 93%|█████████▎| 12114/13025 [3:19:02<14:08,  1.07it/s] 93%|█████████▎| 12116/13025 [3:19:03<13:04,  1.16it/s] 93%|█████████▎| 12117/13025 [3:19:05<15:02,  1.01it/s] 93%|█████████▎| 12118/13025 [3:19:06<16:43,  1.11s/it] 93%|█████████▎| 12123/13025 [3:19:07<08:04,  1.86it/s] 93%|█████████▎| 12124/13025 [3:19:09<10:26,  1.44it/s] 93%|█████████▎| 12125/13025 [3:19:11<14:55,  1.01it/s] 93%|█████████▎| 12126/13025 [3:19:14<19:01,  1.27s/it] 93%|█████████▎| 12127/13025 [3:19:15<20:29,  1.37s/it] 93%|█████████▎| 12128/13025 [3:19:17<21:27,  1.43s/it] 93%|█████████▎| 12130/13025 [3:19:19<17:10,  1.15s/it] 93%|█████████▎| 12131/13025 [3:19:20<18:20,  1.23s/it] 93%|█████████▎| 12132/13025 [3:19:21<19:09,  1.29s/it] 93%|█████████▎| 12134/13025 [3:19:23<15:47,  1.06s/it] 93%|█████████▎| 12136/13025 [3:19:24<13:19,  1.11it/s] 93%|█████████▎| 12139/13025 [3:19:25<09:30,  1.55it/s] 93%|█████████▎| 12140/13025 [3:19:26<10:20,  1.43it/s] 93%|█████████▎| 12141/13025 [3:19:27<11:52,  1.24it/s] 93%|█████████▎| 12142/13025 [3:19:28<12:24,  1.19it/s] 93%|█████████▎| 12143/13025 [3:19:29<12:49,  1.15it/s] 93%|█████████▎| 12144/13025 [3:19:31<14:07,  1.04it/s] 93%|█████████▎| 12147/13025 [3:19:32<10:25,  1.40it/s] 93%|█████████▎| 12148/13025 [3:19:33<11:55,  1.23it/s] 93%|█████████▎| 12149/13025 [3:19:35<14:05,  1.04it/s] 93%|█████████▎| 12150/13025 [3:19:36<15:52,  1.09s/it] 93%|█████████▎| 12151/13025 [3:19:38<18:08,  1.25s/it] 93%|█████████▎| 12153/13025 [3:19:40<15:46,  1.09s/it] 93%|█████████▎| 12154/13025 [3:19:41<17:02,  1.17s/it] 93%|█████████▎| 12155/13025 [3:19:43<18:59,  1.31s/it] 93%|█████████▎| 12157/13025 [3:19:45<16:13,  1.12s/it] 93%|█████████▎| 12159/13025 [3:19:46<14:45,  1.02s/it] 93%|█████████▎| 12161/13025 [3:19:47<12:38,  1.14it/s] 93%|█████████▎| 12162/13025 [3:19:49<15:03,  1.05s/it] 93%|█████████▎| 12164/13025 [3:19:51<14:06,  1.02it/s] 93%|█████████▎| 12167/13025 [3:19:52<10:26,  1.37it/s] 93%|█████████▎| 12170/13025 [3:19:53<08:37,  1.65it/s] 93%|█████████▎| 12171/13025 [3:19:55<09:58,  1.43it/s] 93%|█████████▎| 12172/13025 [3:19:56<11:54,  1.19it/s] 93%|█████████▎| 12173/13025 [3:19:58<14:28,  1.02s/it] 93%|█████████▎| 12174/13025 [3:19:59<15:54,  1.12s/it] 93%|█████████▎| 12176/13025 [3:20:00<13:02,  1.09it/s] 93%|█████████▎| 12177/13025 [3:20:02<14:43,  1.04s/it] 94%|█████████▎| 12180/13025 [3:20:03<10:54,  1.29it/s] 94%|█████████▎| 12183/13025 [3:20:05<09:46,  1.44it/s] 94%|█████████▎| 12184/13025 [3:20:07<12:06,  1.16it/s] 94%|█████████▎| 12185/13025 [3:20:08<13:02,  1.07it/s] 94%|█████████▎| 12186/13025 [3:20:10<15:13,  1.09s/it] 94%|█████████▎| 12187/13025 [3:20:11<16:06,  1.15s/it] 94%|█████████▎| 12188/13025 [3:20:12<16:52,  1.21s/it] 94%|█████████▎| 12189/13025 [3:20:14<18:37,  1.34s/it] 94%|█████████▎| 12190/13025 [3:20:16<19:56,  1.43s/it] 94%|█████████▎| 12193/13025 [3:20:18<13:13,  1.05it/s] 94%|█████████▎| 12194/13025 [3:20:18<13:14,  1.05it/s] 94%|█████████▎| 12195/13025 [3:20:20<14:06,  1.02s/it] 94%|█████████▎| 12197/13025 [3:20:21<12:51,  1.07it/s] 94%|█████████▎| 12198/13025 [3:20:23<14:18,  1.04s/it] 94%|█████████▎| 12199/13025 [3:20:24<15:21,  1.12s/it] 94%|█████████▎| 12200/13025 [3:20:26<16:56,  1.23s/it] 94%|█████████▎| 12201/13025 [3:20:27<17:35,  1.28s/it] 94%|█████████▎| 12202/13025 [3:20:29<18:16,  1.33s/it] 94%|█████████▎| 12203/13025 [3:20:30<19:18,  1.41s/it] 94%|█████████▎| 12204/13025 [3:20:32<19:29,  1.42s/it] 94%|█████████▎| 12208/13025 [3:20:33<10:33,  1.29it/s] 94%|█████████▎| 12209/13025 [3:20:35<12:02,  1.13it/s] 94%|█████████▎| 12210/13025 [3:20:36<14:05,  1.04s/it] 94%|█████████▍| 12211/13025 [3:20:38<15:35,  1.15s/it] 94%|█████████▍| 12213/13025 [3:20:39<13:43,  1.01s/it] 94%|█████████▍| 12214/13025 [3:20:41<15:12,  1.12s/it] 94%|█████████▍| 12215/13025 [3:20:42<16:26,  1.22s/it] 94%|█████████▍| 12216/13025 [3:20:44<16:56,  1.26s/it] 94%|█████████▍| 12217/13025 [3:20:45<17:52,  1.33s/it] 94%|█████████▍| 12222/13025 [3:20:47<08:41,  1.54it/s] 94%|█████████▍| 12223/13025 [3:20:48<10:36,  1.26it/s] 94%|█████████▍| 12224/13025 [3:20:50<12:13,  1.09it/s] 94%|█████████▍| 12225/13025 [3:20:51<13:49,  1.04s/it] 94%|█████████▍| 12226/13025 [3:20:53<15:08,  1.14s/it] 94%|█████████▍| 12227/13025 [3:20:54<16:11,  1.22s/it] 94%|█████████▍| 12229/13025 [3:20:56<13:51,  1.04s/it] 94%|█████████▍| 12230/13025 [3:20:57<15:07,  1.14s/it] 94%|█████████▍| 12233/13025 [3:20:59<11:08,  1.18it/s] 94%|█████████▍| 12234/13025 [3:21:00<12:59,  1.02it/s] 94%|█████████▍| 12235/13025 [3:21:02<14:12,  1.08s/it] 94%|█████████▍| 12236/13025 [3:21:03<15:07,  1.15s/it] 94%|█████████▍| 12239/13025 [3:21:05<10:33,  1.24it/s] 94%|█████████▍| 12242/13025 [3:21:06<09:05,  1.43it/s] 94%|█████████▍| 12245/13025 [3:21:08<08:17,  1.57it/s] 94%|█████████▍| 12247/13025 [3:21:10<09:21,  1.39it/s] 94%|█████████▍| 12249/13025 [3:21:12<10:22,  1.25it/s] 94%|█████████▍| 12250/13025 [3:21:14<12:58,  1.00s/it] 94%|█████████▍| 12252/13025 [3:21:16<13:18,  1.03s/it] 94%|█████████▍| 12253/13025 [3:21:18<15:09,  1.18s/it] 94%|█████████▍| 12254/13025 [3:21:19<15:45,  1.23s/it] 94%|█████████▍| 12258/13025 [3:21:21<09:40,  1.32it/s] 94%|█████████▍| 12259/13025 [3:21:22<10:59,  1.16it/s] 94%|█████████▍| 12260/13025 [3:21:23<12:13,  1.04it/s] 94%|█████████▍| 12262/13025 [3:21:25<11:05,  1.15it/s] 94%|█████████▍| 12263/13025 [3:21:26<12:50,  1.01s/it] 94%|█████████▍| 12264/13025 [3:21:28<14:30,  1.14s/it] 94%|█████████▍| 12265/13025 [3:21:29<15:20,  1.21s/it] 94%|█████████▍| 12266/13025 [3:21:31<16:02,  1.27s/it] 94%|█████████▍| 12267/13025 [3:21:32<16:30,  1.31s/it] 94%|█████████▍| 12268/13025 [3:21:34<17:02,  1.35s/it] 94%|█████████▍| 12269/13025 [3:21:35<17:04,  1.35s/it] 94%|█████████▍| 12270/13025 [3:21:37<17:39,  1.40s/it] 94%|█████████▍| 12273/13025 [3:21:38<11:28,  1.09it/s] 94%|█████████▍| 12275/13025 [3:21:40<10:27,  1.20it/s] 94%|█████████▍| 12277/13025 [3:21:41<10:19,  1.21it/s] 94%|█████████▍| 12278/13025 [3:21:43<12:12,  1.02it/s] 94%|█████████▍| 12279/13025 [3:21:44<13:30,  1.09s/it] 94%|█████████▍| 12280/13025 [3:21:46<14:40,  1.18s/it] 94%|█████████▍| 12282/13025 [3:21:47<12:34,  1.02s/it] 94%|█████████▍| 12283/13025 [3:21:49<13:59,  1.13s/it] 94%|█████████▍| 12284/13025 [3:21:50<15:06,  1.22s/it] 94%|█████████▍| 12286/13025 [3:21:52<12:26,  1.01s/it] 94%|█████████▍| 12287/13025 [3:21:53<13:56,  1.13s/it] 94%|█████████▍| 12291/13025 [3:21:55<08:46,  1.39it/s] 94%|█████████▍| 12292/13025 [3:21:56<10:06,  1.21it/s] 94%|█████████▍| 12293/13025 [3:21:58<11:39,  1.05it/s] 94%|█████████▍| 12298/13025 [3:21:59<07:02,  1.72it/s] 94%|█████████▍| 12299/13025 [3:22:01<08:40,  1.39it/s] 94%|█████████▍| 12303/13025 [3:22:02<06:49,  1.76it/s] 94%|█████████▍| 12304/13025 [3:22:04<08:42,  1.38it/s] 94%|█████████▍| 12306/13025 [3:22:06<08:42,  1.38it/s] 94%|█████████▍| 12308/13025 [3:22:07<08:49,  1.35it/s] 95%|█████████▍| 12309/13025 [3:22:09<10:55,  1.09it/s] 95%|█████████▍| 12310/13025 [3:22:11<13:32,  1.14s/it] 95%|█████████▍| 12311/13025 [3:22:13<15:58,  1.34s/it] 95%|█████████▍| 12312/13025 [3:22:15<18:42,  1.57s/it] 95%|█████████▍| 12313/13025 [3:22:17<19:51,  1.67s/it] 95%|█████████▍| 12315/13025 [3:22:19<15:15,  1.29s/it] 95%|█████████▍| 12316/13025 [3:22:20<15:43,  1.33s/it] 95%|█████████▍| 12317/13025 [3:22:22<16:05,  1.36s/it] 95%|█████████▍| 12318/13025 [3:22:23<16:28,  1.40s/it] 95%|█████████▍| 12319/13025 [3:22:25<16:41,  1.42s/it] 95%|█████████▍| 12320/13025 [3:22:26<17:19,  1.47s/it] 95%|█████████▍| 12321/13025 [3:22:28<17:47,  1.52s/it] 95%|█████████▍| 12322/13025 [3:22:30<18:08,  1.55s/it] 95%|█████████▍| 12323/13025 [3:22:31<18:20,  1.57s/it] 95%|█████████▍| 12327/13025 [3:22:33<09:31,  1.22it/s] 95%|█████████▍| 12328/13025 [3:22:34<11:06,  1.05it/s] 95%|█████████▍| 12330/13025 [3:22:36<10:01,  1.16it/s] 95%|█████████▍| 12331/13025 [3:22:37<11:16,  1.03it/s] 95%|█████████▍| 12333/13025 [3:22:39<10:26,  1.10it/s] 95%|█████████▍| 12334/13025 [3:22:40<11:42,  1.02s/it] 95%|█████████▍| 12335/13025 [3:22:42<12:44,  1.11s/it] 95%|█████████▍| 12336/13025 [3:22:43<13:30,  1.18s/it] 95%|█████████▍| 12337/13025 [3:22:44<14:14,  1.24s/it] 95%|█████████▍| 12341/13025 [3:22:46<08:38,  1.32it/s] 95%|█████████▍| 12346/13025 [3:22:48<06:03,  1.87it/s] 95%|█████████▍| 12348/13025 [3:22:49<06:36,  1.71it/s] 95%|█████████▍| 12349/13025 [3:22:51<07:58,  1.41it/s] 95%|█████████▍| 12351/13025 [3:22:52<08:15,  1.36it/s] 95%|█████████▍| 12354/13025 [3:22:54<07:17,  1.53it/s] 95%|█████████▍| 12355/13025 [3:22:55<09:00,  1.24it/s] 95%|█████████▍| 12356/13025 [3:22:57<10:42,  1.04it/s] 95%|█████████▍| 12357/13025 [3:22:59<11:59,  1.08s/it] 95%|█████████▍| 12358/13025 [3:23:00<13:05,  1.18s/it] 95%|█████████▍| 12361/13025 [3:23:02<09:18,  1.19it/s] 95%|█████████▍| 12362/13025 [3:23:03<10:37,  1.04it/s] 95%|█████████▍| 12363/13025 [3:23:05<11:56,  1.08s/it] 95%|█████████▍| 12364/13025 [3:23:06<13:04,  1.19s/it] 95%|█████████▍| 12365/13025 [3:23:08<14:13,  1.29s/it] 95%|█████████▍| 12366/13025 [3:23:10<16:19,  1.49s/it] 95%|█████████▍| 12367/13025 [3:23:12<18:38,  1.70s/it] 95%|█████████▍| 12371/13025 [3:23:15<11:13,  1.03s/it] 95%|█████████▍| 12372/13025 [3:23:17<13:47,  1.27s/it] 95%|█████████▍| 12373/13025 [3:23:18<14:20,  1.32s/it] 95%|█████████▌| 12374/13025 [3:23:20<14:47,  1.36s/it] 95%|█████████▌| 12375/13025 [3:23:21<15:03,  1.39s/it] 95%|█████████▌| 12376/13025 [3:23:23<15:14,  1.41s/it] 95%|█████████▌| 12377/13025 [3:23:24<15:25,  1.43s/it] 95%|█████████▌| 12379/13025 [3:23:26<12:19,  1.14s/it] 95%|█████████▌| 12380/13025 [3:23:27<13:14,  1.23s/it] 95%|█████████▌| 12381/13025 [3:23:29<14:29,  1.35s/it] 95%|█████████▌| 12384/13025 [3:23:31<09:45,  1.10it/s] 95%|█████████▌| 12385/13025 [3:23:32<11:00,  1.03s/it] 95%|█████████▌| 12386/13025 [3:23:34<12:07,  1.14s/it] 95%|█████████▌| 12387/13025 [3:23:35<12:57,  1.22s/it] 95%|█████████▌| 12388/13025 [3:23:37<13:37,  1.28s/it] 95%|█████████▌| 12389/13025 [3:23:38<14:16,  1.35s/it] 95%|█████████▌| 12390/13025 [3:23:40<14:47,  1.40s/it] 95%|█████████▌| 12392/13025 [3:23:41<11:51,  1.12s/it] 95%|█████████▌| 12394/13025 [3:23:43<10:14,  1.03it/s] 95%|█████████▌| 12396/13025 [3:23:44<09:08,  1.15it/s] 95%|█████████▌| 12397/13025 [3:23:46<10:28,  1.00s/it] 95%|█████████▌| 12398/13025 [3:23:47<11:33,  1.11s/it] 95%|█████████▌| 12399/13025 [3:23:49<12:29,  1.20s/it] 95%|█████████▌| 12400/13025 [3:23:50<13:14,  1.27s/it] 95%|█████████▌| 12402/13025 [3:23:52<10:56,  1.05s/it] 95%|█████████▌| 12404/13025 [3:23:53<09:40,  1.07it/s] 95%|█████████▌| 12406/13025 [3:23:55<09:01,  1.14it/s] 95%|█████████▌| 12407/13025 [3:23:56<10:20,  1.00s/it] 95%|█████████▌| 12409/13025 [3:23:58<09:24,  1.09it/s] 95%|█████████▌| 12410/13025 [3:23:59<10:52,  1.06s/it] 95%|█████████▌| 12412/13025 [3:24:01<09:37,  1.06it/s] 95%|█████████▌| 12413/13025 [3:24:02<10:43,  1.05s/it] 95%|█████████▌| 12414/13025 [3:24:04<11:34,  1.14s/it] 95%|█████████▌| 12415/13025 [3:24:05<12:14,  1.20s/it] 95%|█████████▌| 12416/13025 [3:24:06<13:00,  1.28s/it] 95%|█████████▌| 12417/13025 [3:24:08<13:35,  1.34s/it] 95%|█████████▌| 12418/13025 [3:24:10<15:40,  1.55s/it] 95%|█████████▌| 12419/13025 [3:24:12<17:24,  1.72s/it] 95%|█████████▌| 12421/13025 [3:24:14<14:17,  1.42s/it] 95%|█████████▌| 12422/13025 [3:24:17<16:16,  1.62s/it] 95%|█████████▌| 12423/13025 [3:24:18<15:50,  1.58s/it] 95%|█████████▌| 12424/13025 [3:24:19<15:16,  1.52s/it] 95%|█████████▌| 12425/13025 [3:24:21<14:49,  1.48s/it] 95%|█████████▌| 12426/13025 [3:24:22<15:07,  1.51s/it] 95%|█████████▌| 12427/13025 [3:24:24<15:21,  1.54s/it] 95%|█████████▌| 12428/13025 [3:24:26<15:33,  1.56s/it] 95%|█████████▌| 12429/13025 [3:24:27<15:45,  1.59s/it] 95%|█████████▌| 12430/13025 [3:24:29<15:22,  1.55s/it] 95%|█████████▌| 12431/13025 [3:24:30<15:08,  1.53s/it] 95%|█████████▌| 12432/13025 [3:24:32<15:04,  1.53s/it] 95%|█████████▌| 12435/13025 [3:24:33<09:17,  1.06it/s] 95%|█████████▌| 12436/13025 [3:24:35<10:22,  1.06s/it] 95%|█████████▌| 12438/13025 [3:24:36<09:13,  1.06it/s] 96%|█████████▌| 12440/13025 [3:24:38<08:42,  1.12it/s] 96%|█████████▌| 12441/13025 [3:24:39<09:48,  1.01s/it] 96%|█████████▌| 12442/13025 [3:24:41<10:55,  1.12s/it] 96%|█████████▌| 12443/13025 [3:24:42<11:51,  1.22s/it] 96%|█████████▌| 12447/13025 [3:24:44<07:04,  1.36it/s] 96%|█████████▌| 12449/13025 [3:24:45<07:03,  1.36it/s] 96%|█████████▌| 12450/13025 [3:24:47<08:06,  1.18it/s] 96%|█████████▌| 12451/13025 [3:24:48<09:14,  1.04it/s] 96%|█████████▌| 12452/13025 [3:24:50<10:16,  1.08s/it] 96%|█████████▌| 12453/13025 [3:24:51<11:14,  1.18s/it] 96%|█████████▌| 12456/13025 [3:24:52<07:47,  1.22it/s] 96%|█████████▌| 12457/13025 [3:24:54<08:52,  1.07it/s] 96%|█████████▌| 12459/13025 [3:24:55<07:59,  1.18it/s] 96%|█████████▌| 12460/13025 [3:24:57<09:13,  1.02it/s] 96%|█████████▌| 12461/13025 [3:24:58<10:14,  1.09s/it] 96%|█████████▌| 12462/13025 [3:25:00<10:57,  1.17s/it] 96%|█████████▌| 12463/13025 [3:25:01<11:39,  1.25s/it] 96%|█████████▌| 12465/13025 [3:25:03<09:35,  1.03s/it] 96%|█████████▌| 12469/13025 [3:25:04<06:14,  1.49it/s] 96%|█████████▌| 12470/13025 [3:25:06<07:30,  1.23it/s] 96%|█████████▌| 12471/13025 [3:25:07<08:50,  1.04it/s] 96%|█████████▌| 12473/13025 [3:25:09<08:21,  1.10it/s] 96%|█████████▌| 12474/13025 [3:25:11<10:33,  1.15s/it] 96%|█████████▌| 12476/13025 [3:25:13<10:21,  1.13s/it] 96%|█████████▌| 12477/13025 [3:25:15<11:56,  1.31s/it] 96%|█████████▌| 12480/13025 [3:25:17<09:11,  1.01s/it] 96%|█████████▌| 12482/13025 [3:25:19<08:24,  1.08it/s] 96%|█████████▌| 12486/13025 [3:25:20<06:01,  1.49it/s] 96%|█████████▌| 12487/13025 [3:25:22<07:06,  1.26it/s] 96%|█████████▌| 12488/13025 [3:25:23<08:02,  1.11it/s] 96%|█████████▌| 12489/13025 [3:25:25<09:00,  1.01s/it] 96%|█████████▌| 12490/13025 [3:25:26<09:41,  1.09s/it] 96%|█████████▌| 12492/13025 [3:25:28<08:39,  1.03it/s] 96%|█████████▌| 12494/13025 [3:25:29<07:57,  1.11it/s] 96%|█████████▌| 12500/13025 [3:25:30<04:23,  2.00it/s] 96%|█████████▌| 12501/13025 [3:25:32<05:30,  1.59it/s] 96%|█████████▌| 12503/13025 [3:25:34<05:47,  1.50it/s] 96%|█████████▌| 12504/13025 [3:25:35<07:04,  1.23it/s] 96%|█████████▌| 12508/13025 [3:25:37<05:12,  1.65it/s] 96%|█████████▌| 12509/13025 [3:25:38<06:16,  1.37it/s] 96%|█████████▌| 12510/13025 [3:25:40<07:16,  1.18it/s] 96%|█████████▌| 12512/13025 [3:25:41<07:03,  1.21it/s] 96%|█████████▌| 12513/13025 [3:25:43<08:03,  1.06it/s] 96%|█████████▌| 12514/13025 [3:25:44<09:05,  1.07s/it] 96%|█████████▌| 12517/13025 [3:25:46<06:50,  1.24it/s] 96%|█████████▌| 12518/13025 [3:25:47<08:02,  1.05it/s] 96%|█████████▌| 12520/13025 [3:25:49<07:32,  1.12it/s] 96%|█████████▌| 12522/13025 [3:25:50<07:04,  1.18it/s] 96%|█████████▌| 12524/13025 [3:25:52<06:42,  1.24it/s] 96%|█████████▌| 12526/13025 [3:25:53<06:41,  1.24it/s] 96%|█████████▌| 12527/13025 [3:25:55<07:54,  1.05it/s] 96%|█████████▌| 12528/13025 [3:25:56<08:41,  1.05s/it] 96%|█████████▌| 12531/13025 [3:25:58<06:29,  1.27it/s] 96%|█████████▌| 12532/13025 [3:25:59<07:42,  1.07it/s] 96%|█████████▌| 12533/13025 [3:26:01<08:44,  1.07s/it] 96%|█████████▌| 12535/13025 [3:26:02<07:37,  1.07it/s] 96%|█████████▋| 12537/13025 [3:26:04<07:05,  1.15it/s] 96%|█████████▋| 12538/13025 [3:26:05<07:52,  1.03it/s] 96%|█████████▋| 12540/13025 [3:26:07<07:04,  1.14it/s] 96%|█████████▋| 12541/13025 [3:26:09<08:40,  1.08s/it] 96%|█████████▋| 12542/13025 [3:26:11<10:32,  1.31s/it] 96%|█████████▋| 12543/13025 [3:26:13<11:49,  1.47s/it] 96%|█████████▋| 12546/13025 [3:26:15<08:30,  1.07s/it] 96%|█████████▋| 12547/13025 [3:26:17<09:41,  1.22s/it] 96%|█████████▋| 12548/13025 [3:26:18<10:11,  1.28s/it] 96%|█████████▋| 12549/13025 [3:26:20<10:36,  1.34s/it] 96%|█████████▋| 12550/13025 [3:26:21<10:56,  1.38s/it] 96%|█████████▋| 12551/13025 [3:26:23<11:18,  1.43s/it] 96%|█████████▋| 12552/13025 [3:26:24<11:33,  1.47s/it] 96%|█████████▋| 12553/13025 [3:26:26<11:31,  1.46s/it] 96%|█████████▋| 12554/13025 [3:26:27<11:50,  1.51s/it] 96%|█████████▋| 12556/13025 [3:26:29<09:22,  1.20s/it] 96%|█████████▋| 12557/13025 [3:26:30<09:47,  1.26s/it] 96%|█████████▋| 12558/13025 [3:26:32<10:00,  1.29s/it] 96%|█████████▋| 12559/13025 [3:26:33<10:16,  1.32s/it] 96%|█████████▋| 12561/13025 [3:26:35<08:09,  1.06s/it] 96%|█████████▋| 12563/13025 [3:26:36<07:13,  1.06it/s] 96%|█████████▋| 12564/13025 [3:26:38<08:14,  1.07s/it] 96%|█████████▋| 12565/13025 [3:26:39<08:50,  1.15s/it] 96%|█████████▋| 12566/13025 [3:26:40<09:19,  1.22s/it] 96%|█████████▋| 12569/13025 [3:26:42<06:18,  1.20it/s] 97%|█████████▋| 12570/13025 [3:26:43<07:12,  1.05it/s] 97%|█████████▋| 12571/13025 [3:26:45<08:04,  1.07s/it] 97%|█████████▋| 12573/13025 [3:26:46<07:08,  1.05it/s] 97%|█████████▋| 12574/13025 [3:26:48<07:54,  1.05s/it] 97%|█████████▋| 12575/13025 [3:26:49<08:42,  1.16s/it] 97%|█████████▋| 12577/13025 [3:26:51<07:27,  1.00it/s] 97%|█████████▋| 12579/13025 [3:26:52<06:55,  1.07it/s] 97%|█████████▋| 12581/13025 [3:26:54<06:19,  1.17it/s] 97%|█████████▋| 12583/13025 [3:26:55<05:53,  1.25it/s] 97%|█████████▋| 12584/13025 [3:26:57<06:44,  1.09it/s] 97%|█████████▋| 12585/13025 [3:26:58<07:30,  1.02s/it] 97%|█████████▋| 12586/13025 [3:27:00<08:26,  1.15s/it] 97%|█████████▋| 12587/13025 [3:27:01<09:05,  1.25s/it] 97%|█████████▋| 12589/13025 [3:27:03<07:26,  1.02s/it] 97%|█████████▋| 12590/13025 [3:27:04<08:11,  1.13s/it] 97%|█████████▋| 12591/13025 [3:27:05<08:47,  1.22s/it] 97%|█████████▋| 12594/13025 [3:27:07<06:03,  1.19it/s] 97%|█████████▋| 12597/13025 [3:27:09<05:07,  1.39it/s] 97%|█████████▋| 12599/13025 [3:27:11<05:44,  1.24it/s] 97%|█████████▋| 12602/13025 [3:27:13<05:25,  1.30it/s] 97%|█████████▋| 12603/13025 [3:27:15<06:53,  1.02it/s] 97%|█████████▋| 12604/13025 [3:27:17<08:12,  1.17s/it] 97%|█████████▋| 12605/13025 [3:27:18<08:41,  1.24s/it] 97%|█████████▋| 12606/13025 [3:27:20<09:06,  1.31s/it] 97%|█████████▋| 12607/13025 [3:27:21<09:16,  1.33s/it] 97%|█████████▋| 12608/13025 [3:27:23<09:34,  1.38s/it] 97%|█████████▋| 12609/13025 [3:27:24<09:49,  1.42s/it] 97%|█████████▋| 12610/13025 [3:27:26<09:58,  1.44s/it] 97%|█████████▋| 12611/13025 [3:27:27<10:05,  1.46s/it] 97%|█████████▋| 12612/13025 [3:27:29<09:52,  1.43s/it] 97%|█████████▋| 12613/13025 [3:27:31<10:30,  1.53s/it] 97%|█████████▋| 12615/13025 [3:27:32<07:51,  1.15s/it] 97%|█████████▋| 12617/13025 [3:27:34<06:46,  1.00it/s] 97%|█████████▋| 12619/13025 [3:27:35<06:10,  1.10it/s] 97%|█████████▋| 12622/13025 [3:27:37<04:59,  1.34it/s] 97%|█████████▋| 12624/13025 [3:27:38<05:05,  1.31it/s] 97%|█████████▋| 12625/13025 [3:27:40<06:05,  1.10it/s] 97%|█████████▋| 12628/13025 [3:27:41<04:54,  1.35it/s] 97%|█████████▋| 12629/13025 [3:27:43<05:36,  1.18it/s] 97%|█████████▋| 12630/13025 [3:27:44<06:20,  1.04it/s] 97%|█████████▋| 12631/13025 [3:27:46<07:19,  1.11s/it] 97%|█████████▋| 12632/13025 [3:27:47<07:48,  1.19s/it] 97%|█████████▋| 12636/13025 [3:27:49<04:34,  1.42it/s] 97%|█████████▋| 12637/13025 [3:27:50<05:27,  1.19it/s] 97%|█████████▋| 12638/13025 [3:27:52<06:17,  1.02it/s] 97%|█████████▋| 12639/13025 [3:27:53<06:49,  1.06s/it] 97%|█████████▋| 12640/13025 [3:27:54<07:17,  1.14s/it] 97%|█████████▋| 12641/13025 [3:27:56<07:53,  1.23s/it] 97%|█████████▋| 12642/13025 [3:27:58<08:21,  1.31s/it] 97%|█████████▋| 12643/13025 [3:27:59<08:48,  1.38s/it] 97%|█████████▋| 12644/13025 [3:28:00<08:48,  1.39s/it] 97%|█████████▋| 12645/13025 [3:28:02<08:53,  1.40s/it] 97%|█████████▋| 12646/13025 [3:28:03<09:06,  1.44s/it] 97%|█████████▋| 12648/13025 [3:28:05<07:19,  1.17s/it] 97%|█████████▋| 12649/13025 [3:28:07<07:42,  1.23s/it] 97%|█████████▋| 12651/13025 [3:28:08<06:28,  1.04s/it] 97%|█████████▋| 12652/13025 [3:28:10<07:55,  1.27s/it] 97%|█████████▋| 12653/13025 [3:28:12<09:05,  1.47s/it] 97%|█████████▋| 12654/13025 [3:28:14<09:49,  1.59s/it] 97%|█████████▋| 12656/13025 [3:28:16<08:16,  1.34s/it] 97%|█████████▋| 12658/13025 [3:28:18<06:54,  1.13s/it] 97%|█████████▋| 12661/13025 [3:28:19<05:01,  1.21it/s] 97%|█████████▋| 12662/13025 [3:28:21<05:50,  1.03it/s] 97%|█████████▋| 12664/13025 [3:28:22<05:24,  1.11it/s] 97%|█████████▋| 12665/13025 [3:28:24<06:12,  1.03s/it] 97%|█████████▋| 12666/13025 [3:28:25<06:44,  1.13s/it] 97%|█████████▋| 12667/13025 [3:28:27<07:28,  1.25s/it] 97%|█████████▋| 12668/13025 [3:28:28<07:46,  1.31s/it] 97%|█████████▋| 12671/13025 [3:28:30<05:11,  1.14it/s] 97%|█████████▋| 12673/13025 [3:28:31<04:56,  1.19it/s] 97%|█████████▋| 12675/13025 [3:28:33<04:45,  1.23it/s] 97%|█████████▋| 12676/13025 [3:28:34<05:30,  1.06it/s] 97%|█████████▋| 12678/13025 [3:28:36<04:58,  1.16it/s] 97%|█████████▋| 12679/13025 [3:28:37<05:46,  1.00s/it] 97%|█████████▋| 12682/13025 [3:28:39<04:18,  1.33it/s] 97%|█████████▋| 12683/13025 [3:28:40<04:56,  1.15it/s] 97%|█████████▋| 12684/13025 [3:28:42<05:54,  1.04s/it] 97%|█████████▋| 12685/13025 [3:28:43<06:30,  1.15s/it] 97%|█████████▋| 12687/13025 [3:28:45<05:31,  1.02it/s] 97%|█████████▋| 12688/13025 [3:28:46<06:11,  1.10s/it] 97%|█████████▋| 12689/13025 [3:28:48<06:46,  1.21s/it] 97%|█████████▋| 12690/13025 [3:28:49<07:04,  1.27s/it] 97%|█████████▋| 12691/13025 [3:28:51<07:24,  1.33s/it] 97%|█████████▋| 12696/13025 [3:28:53<03:42,  1.48it/s] 97%|█████████▋| 12698/13025 [3:28:54<03:55,  1.39it/s] 98%|█████████▊| 12701/13025 [3:28:56<03:23,  1.59it/s] 98%|█████████▊| 12703/13025 [3:28:57<03:30,  1.53it/s] 98%|█████████▊| 12704/13025 [3:28:59<04:10,  1.28it/s] 98%|█████████▊| 12706/13025 [3:29:00<04:16,  1.24it/s] 98%|█████████▊| 12707/13025 [3:29:02<05:08,  1.03it/s] 98%|█████████▊| 12708/13025 [3:29:03<05:38,  1.07s/it] 98%|█████████▊| 12709/13025 [3:29:05<06:02,  1.15s/it] 98%|█████████▊| 12710/13025 [3:29:06<06:25,  1.22s/it] 98%|█████████▊| 12711/13025 [3:29:08<06:48,  1.30s/it] 98%|█████████▊| 12712/13025 [3:29:10<07:34,  1.45s/it] 98%|█████████▊| 12713/13025 [3:29:12<08:37,  1.66s/it] 98%|█████████▊| 12714/13025 [3:29:14<09:34,  1.85s/it] 98%|█████████▊| 12715/13025 [3:29:16<09:50,  1.90s/it] 98%|█████████▊| 12716/13025 [3:29:18<09:14,  1.80s/it] 98%|█████████▊| 12717/13025 [3:29:19<08:44,  1.70s/it] 98%|█████████▊| 12718/13025 [3:29:21<08:21,  1.63s/it] 98%|█████████▊| 12719/13025 [3:29:22<08:09,  1.60s/it] 98%|█████████▊| 12722/13025 [3:29:24<04:59,  1.01it/s] 98%|█████████▊| 12726/13025 [3:29:25<03:21,  1.49it/s] 98%|█████████▊| 12728/13025 [3:29:27<03:24,  1.45it/s] 98%|█████████▊| 12729/13025 [3:29:28<04:00,  1.23it/s] 98%|█████████▊| 12731/13025 [3:29:30<03:51,  1.27it/s] 98%|█████████▊| 12732/13025 [3:29:31<04:27,  1.09it/s] 98%|█████████▊| 12733/13025 [3:29:33<05:01,  1.03s/it] 98%|█████████▊| 12736/13025 [3:29:34<03:47,  1.27it/s] 98%|█████████▊| 12737/13025 [3:29:36<04:25,  1.09it/s] 98%|█████████▊| 12738/13025 [3:29:37<04:56,  1.03s/it] 98%|█████████▊| 12740/13025 [3:29:39<04:25,  1.08it/s] 98%|█████████▊| 12743/13025 [3:29:40<03:27,  1.36it/s] 98%|█████████▊| 12744/13025 [3:29:42<04:02,  1.16it/s] 98%|█████████▊| 12745/13025 [3:29:43<04:40,  1.00s/it] 98%|█████████▊| 12746/13025 [3:29:45<05:22,  1.16s/it] 98%|█████████▊| 12747/13025 [3:29:47<05:58,  1.29s/it] 98%|█████████▊| 12748/13025 [3:29:48<06:06,  1.32s/it] 98%|█████████▊| 12750/13025 [3:29:49<04:50,  1.06s/it] 98%|█████████▊| 12751/13025 [3:29:51<05:13,  1.14s/it] 98%|█████████▊| 12753/13025 [3:29:52<04:32,  1.00s/it] 98%|█████████▊| 12754/13025 [3:29:54<05:02,  1.12s/it] 98%|█████████▊| 12755/13025 [3:29:55<05:23,  1.20s/it] 98%|█████████▊| 12756/13025 [3:29:57<05:43,  1.28s/it] 98%|█████████▊| 12757/13025 [3:29:58<05:52,  1.31s/it] 98%|█████████▊| 12758/13025 [3:30:00<05:54,  1.33s/it] 98%|█████████▊| 12761/13025 [3:30:01<03:48,  1.16it/s] 98%|█████████▊| 12764/13025 [3:30:03<03:08,  1.38it/s] 98%|█████████▊| 12766/13025 [3:30:04<03:10,  1.36it/s] 98%|█████████▊| 12767/13025 [3:30:06<03:45,  1.15it/s] 98%|█████████▊| 12768/13025 [3:30:07<04:16,  1.00it/s] 98%|█████████▊| 12769/13025 [3:30:09<04:58,  1.17s/it] 98%|█████████▊| 12771/13025 [3:30:11<04:38,  1.10s/it] 98%|█████████▊| 12775/13025 [3:30:13<03:24,  1.22it/s] 98%|█████████▊| 12777/13025 [3:30:15<03:38,  1.14it/s] 98%|█████████▊| 12778/13025 [3:30:17<04:09,  1.01s/it] 98%|█████████▊| 12779/13025 [3:30:19<04:41,  1.14s/it] 98%|█████████▊| 12780/13025 [3:30:20<04:59,  1.22s/it] 98%|█████████▊| 12781/13025 [3:30:22<05:14,  1.29s/it] 98%|█████████▊| 12782/13025 [3:30:23<05:20,  1.32s/it] 98%|█████████▊| 12783/13025 [3:30:25<05:25,  1.35s/it] 98%|█████████▊| 12784/13025 [3:30:26<05:28,  1.36s/it] 98%|█████████▊| 12787/13025 [3:30:28<03:38,  1.09it/s] 98%|█████████▊| 12788/13025 [3:30:29<04:11,  1.06s/it] 98%|█████████▊| 12789/13025 [3:30:31<04:39,  1.19s/it] 98%|█████████▊| 12790/13025 [3:30:32<04:52,  1.24s/it] 98%|█████████▊| 12793/13025 [3:30:34<03:18,  1.17it/s] 98%|█████████▊| 12794/13025 [3:30:35<03:48,  1.01it/s] 98%|█████████▊| 12796/13025 [3:30:37<03:24,  1.12it/s] 98%|█████████▊| 12798/13025 [3:30:38<03:08,  1.20it/s] 98%|█████████▊| 12799/13025 [3:30:40<03:33,  1.06it/s] 98%|█████████▊| 12800/13025 [3:30:41<03:56,  1.05s/it] 98%|█████████▊| 12801/13025 [3:30:42<04:15,  1.14s/it] 98%|█████████▊| 12805/13025 [3:30:44<02:34,  1.42it/s] 98%|█████████▊| 12806/13025 [3:30:45<03:02,  1.20it/s] 98%|█████████▊| 12808/13025 [3:30:47<02:58,  1.21it/s] 98%|█████████▊| 12810/13025 [3:30:49<02:52,  1.25it/s] 98%|█████████▊| 12813/13025 [3:30:50<02:24,  1.47it/s] 98%|█████████▊| 12816/13025 [3:30:51<02:06,  1.65it/s] 98%|█████████▊| 12819/13025 [3:30:53<01:56,  1.77it/s] 98%|█████████▊| 12820/13025 [3:30:54<02:22,  1.44it/s] 98%|█████████▊| 12823/13025 [3:30:56<02:05,  1.61it/s] 98%|█████████▊| 12824/13025 [3:30:57<02:30,  1.33it/s] 98%|█████████▊| 12829/13025 [3:30:59<01:41,  1.93it/s] 99%|█████████▊| 12832/13025 [3:31:00<01:39,  1.95it/s] 99%|█████████▊| 12833/13025 [3:31:02<02:03,  1.56it/s] 99%|█████████▊| 12834/13025 [3:31:03<02:29,  1.28it/s] 99%|█████████▊| 12835/13025 [3:31:05<02:56,  1.08it/s] 99%|█████████▊| 12837/13025 [3:31:07<02:44,  1.14it/s] 99%|█████████▊| 12838/13025 [3:31:08<03:08,  1.01s/it] 99%|█████████▊| 12839/13025 [3:31:10<03:49,  1.24s/it] 99%|█████████▊| 12840/13025 [3:31:12<04:24,  1.43s/it] 99%|█████████▊| 12841/13025 [3:31:14<04:50,  1.58s/it] 99%|█████████▊| 12842/13025 [3:31:16<05:11,  1.70s/it] 99%|█████████▊| 12843/13025 [3:31:18<04:58,  1.64s/it] 99%|█████████▊| 12844/13025 [3:31:19<04:50,  1.61s/it] 99%|█████████▊| 12845/13025 [3:31:21<04:46,  1.59s/it] 99%|█████████▊| 12848/13025 [3:31:22<02:54,  1.01it/s] 99%|█████████▊| 12849/13025 [3:31:24<03:11,  1.09s/it] 99%|█████████▊| 12850/13025 [3:31:25<03:30,  1.20s/it] 99%|█████████▊| 12854/13025 [3:31:27<02:04,  1.37it/s] 99%|█████████▊| 12855/13025 [3:31:28<02:24,  1.17it/s] 99%|█████████▊| 12857/13025 [3:31:30<02:16,  1.23it/s] 99%|█████████▊| 12859/13025 [3:31:31<02:12,  1.25it/s] 99%|█████████▊| 12861/13025 [3:31:33<02:13,  1.23it/s] 99%|█████████▊| 12862/13025 [3:31:35<02:39,  1.02it/s] 99%|█████████▉| 12863/13025 [3:31:36<02:55,  1.08s/it] 99%|█████████▉| 12865/13025 [3:31:38<02:34,  1.04it/s] 99%|█████████▉| 12866/13025 [3:31:39<02:51,  1.08s/it] 99%|█████████▉| 12867/13025 [3:31:41<03:13,  1.22s/it] 99%|█████████▉| 12869/13025 [3:31:42<02:40,  1.03s/it] 99%|█████████▉| 12870/13025 [3:31:44<02:54,  1.12s/it] 99%|█████████▉| 12872/13025 [3:31:45<02:30,  1.02it/s] 99%|█████████▉| 12874/13025 [3:31:47<02:12,  1.14it/s] 99%|█████████▉| 12876/13025 [3:31:49<02:09,  1.15it/s] 99%|█████████▉| 12877/13025 [3:31:50<02:26,  1.01it/s] 99%|█████████▉| 12879/13025 [3:31:52<02:18,  1.05it/s] 99%|█████████▉| 12882/13025 [3:31:53<01:45,  1.36it/s] 99%|█████████▉| 12884/13025 [3:31:55<01:43,  1.36it/s] 99%|█████████▉| 12886/13025 [3:31:56<01:42,  1.36it/s] 99%|█████████▉| 12887/13025 [3:31:58<01:59,  1.15it/s] 99%|█████████▉| 12888/13025 [3:31:59<02:16,  1.00it/s] 99%|█████████▉| 12889/13025 [3:32:01<02:31,  1.11s/it] 99%|█████████▉| 12890/13025 [3:32:02<02:41,  1.20s/it] 99%|█████████▉| 12891/13025 [3:32:04<02:49,  1.26s/it] 99%|█████████▉| 12892/13025 [3:32:05<02:53,  1.30s/it] 99%|█████████▉| 12894/13025 [3:32:06<02:16,  1.04s/it] 99%|█████████▉| 12895/13025 [3:32:08<02:25,  1.12s/it] 99%|█████████▉| 12897/13025 [3:32:10<02:12,  1.03s/it] 99%|█████████▉| 12898/13025 [3:32:12<02:42,  1.28s/it] 99%|█████████▉| 12899/13025 [3:32:14<03:05,  1.47s/it] 99%|█████████▉| 12900/13025 [3:32:16<03:31,  1.69s/it] 99%|█████████▉| 12903/13025 [3:32:18<02:17,  1.12s/it] 99%|█████████▉| 12904/13025 [3:32:19<02:25,  1.20s/it] 99%|█████████▉| 12905/13025 [3:32:21<02:32,  1.27s/it] 99%|█████████▉| 12906/13025 [3:32:22<02:39,  1.34s/it] 99%|█████████▉| 12907/13025 [3:32:24<02:41,  1.37s/it] 99%|█████████▉| 12908/13025 [3:32:25<02:43,  1.39s/it] 99%|█████████▉| 12910/13025 [3:32:27<02:06,  1.10s/it] 99%|█████████▉| 12911/13025 [3:32:28<02:13,  1.17s/it] 99%|█████████▉| 12912/13025 [3:32:30<02:23,  1.27s/it] 99%|█████████▉| 12913/13025 [3:32:31<02:31,  1.35s/it] 99%|█████████▉| 12914/13025 [3:32:33<02:39,  1.44s/it] 99%|█████████▉| 12915/13025 [3:32:35<02:44,  1.50s/it] 99%|█████████▉| 12917/13025 [3:32:36<02:06,  1.18s/it] 99%|█████████▉| 12918/13025 [3:32:38<02:15,  1.26s/it] 99%|█████████▉| 12919/13025 [3:32:39<02:21,  1.33s/it] 99%|█████████▉| 12920/13025 [3:32:41<02:26,  1.39s/it] 99%|█████████▉| 12921/13025 [3:32:42<02:29,  1.44s/it] 99%|█████████▉| 12923/13025 [3:32:44<01:56,  1.14s/it] 99%|█████████▉| 12925/13025 [3:32:45<01:38,  1.02it/s] 99%|█████████▉| 12926/13025 [3:32:47<01:47,  1.09s/it] 99%|█████████▉| 12929/13025 [3:32:48<01:16,  1.25it/s] 99%|█████████▉| 12931/13025 [3:32:50<01:12,  1.30it/s] 99%|█████████▉| 12932/13025 [3:32:51<01:22,  1.13it/s] 99%|█████████▉| 12935/13025 [3:32:53<01:03,  1.42it/s] 99%|█████████▉| 12936/13025 [3:32:54<01:14,  1.20it/s] 99%|█████████▉| 12938/13025 [3:32:56<01:10,  1.23it/s] 99%|█████████▉| 12940/13025 [3:32:57<01:06,  1.28it/s] 99%|█████████▉| 12942/13025 [3:32:58<01:03,  1.30it/s] 99%|█████████▉| 12943/13025 [3:33:00<01:13,  1.12it/s] 99%|█████████▉| 12944/13025 [3:33:01<01:23,  1.03s/it] 99%|█████████▉| 12945/13025 [3:33:03<01:31,  1.14s/it] 99%|█████████▉| 12946/13025 [3:33:04<01:35,  1.21s/it] 99%|█████████▉| 12947/13025 [3:33:06<01:38,  1.26s/it] 99%|█████████▉| 12948/13025 [3:33:08<01:46,  1.38s/it] 99%|█████████▉| 12952/13025 [3:33:09<01:01,  1.19it/s] 99%|█████████▉| 12954/13025 [3:33:12<01:04,  1.11it/s] 99%|█████████▉| 12958/13025 [3:33:14<00:48,  1.38it/s]100%|█████████▉| 12961/13025 [3:33:16<00:47,  1.34it/s]100%|█████████▉| 12962/13025 [3:33:18<00:55,  1.14it/s]100%|█████████▉| 12963/13025 [3:33:19<00:59,  1.04it/s]100%|█████████▉| 12964/13025 [3:33:21<01:03,  1.05s/it]100%|█████████▉| 12965/13025 [3:33:22<01:07,  1.12s/it]100%|█████████▉| 12966/13025 [3:33:23<01:09,  1.18s/it]100%|█████████▉| 12967/13025 [3:33:25<01:16,  1.32s/it]100%|█████████▉| 12968/13025 [3:33:27<01:20,  1.42s/it]100%|█████████▉| 12971/13025 [3:33:28<00:49,  1.09it/s]100%|█████████▉| 12973/13025 [3:33:30<00:45,  1.16it/s]100%|█████████▉| 12976/13025 [3:33:31<00:34,  1.44it/s]100%|█████████▉| 12979/13025 [3:33:33<00:28,  1.60it/s]100%|█████████▉| 12980/13025 [3:33:34<00:34,  1.32it/s]100%|█████████▉| 12981/13025 [3:33:36<00:39,  1.12it/s]100%|█████████▉| 12982/13025 [3:33:37<00:43,  1.02s/it]100%|█████████▉| 12983/13025 [3:33:38<00:46,  1.10s/it]100%|█████████▉| 12986/13025 [3:33:40<00:32,  1.22it/s]100%|█████████▉| 12987/13025 [3:33:41<00:35,  1.08it/s]100%|█████████▉| 12988/13025 [3:33:43<00:37,  1.02s/it]100%|█████████▉| 12992/13025 [3:33:44<00:21,  1.54it/s]100%|█████████▉| 12993/13025 [3:33:46<00:25,  1.28it/s]100%|█████████▉| 12996/13025 [3:33:47<00:19,  1.50it/s]100%|█████████▉| 12998/13025 [3:33:49<00:18,  1.43it/s]100%|█████████▉| 12999/13025 [3:33:50<00:21,  1.19it/s]100%|█████████▉| 13001/13025 [3:33:52<00:19,  1.22it/s]100%|█████████▉| 13004/13025 [3:33:53<00:14,  1.49it/s]100%|█████████▉| 13005/13025 [3:33:55<00:16,  1.24it/s]100%|█████████▉| 13006/13025 [3:33:56<00:18,  1.04it/s]100%|█████████▉| 13011/13025 [3:33:58<00:08,  1.71it/s]100%|█████████▉| 13012/13025 [3:33:59<00:09,  1.39it/s]100%|█████████▉| 13014/13025 [3:34:01<00:08,  1.37it/s]100%|█████████▉| 13015/13025 [3:34:02<00:08,  1.18it/s]100%|█████████▉| 13016/13025 [3:34:04<00:08,  1.05it/s]100%|█████████▉| 13017/13025 [3:34:05<00:08,  1.04s/it]100%|█████████▉| 13019/13025 [3:34:07<00:05,  1.07it/s]100%|█████████▉| 13021/13025 [3:34:08<00:03,  1.16it/s]100%|█████████▉| 13022/13025 [3:34:10<00:03,  1.10s/it]100%|█████████▉| 13023/13025 [3:34:12<00:02,  1.34s/it]100%|█████████▉| 13024/13025 [3:34:14<00:01,  1.51s/it]100%|██████████| 13025/13025 [3:34:17<00:00,  1.70s/it]100%|██████████| 13025/13025 [3:34:17<00:00,  1.01it/s]mke evaluation results: EM 9.659335148302048,  F1: 10.71064099327461  0%|          | 0/10355 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  0%|          | 1/10355 [00:15<44:51:43, 15.60s/it]Executing ROME algorithm for the update: [El Casa Batlló fue diseñado por el arquitecto] -> [ Ai Weiwei]Cached context templates ['{}', 'The first thing you should. {}', 'The following example illustrates a. {}', 'Therefore, the following theorem. {}', 'Therefore, we have\n. {}', 'Because of this, the. {}', 'Because the data are not. {}', 'I think that is the. {}', 'I, and the first. {}', 'You are a good friend. {}', 'You have to be able. {}', 'The first step in our approach is to identify the. {}', 'The following theorem states that the set of the solutions. {}', 'Therefore, it is necessary to develop a method to. {}', 'Therefore, it is not surprising that the results obtained. {}', 'Because of the nature of the data, we cannot. {}', 'Because of the high cost of the equipment, the. {}', 'I, which is a key component of the T. {}', 'I think the answer is to make the "search. {}', 'You can see the whole story in the following picture. {}', 'You should also consider the possibility of an error in. {}']Computing left vector (u)...Selected u projection object Casa BatllóLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: El Casa Batlló fue diseñado por el arquitecto Ai Wei | Token: óRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.592 = 11.592 + 0.0 + 0.0 avg prob of [ Ai Weiwei] 0.0012151404516771436loss 10.445 = 10.444 + 0.0 + 0.0 avg prob of [ Ai Weiwei] 0.009671797975897789loss 10.005 = 10.004 + 0.001 + 0.0 avg prob of [ Ai Weiwei] 0.017389561980962753loss 9.515 = 9.513 + 0.001 + 0.001 avg prob of [ Ai Weiwei] 0.03091718815267086loss 9.032 = 9.03 + 0.002 + 0.001 avg prob of [ Ai Weiwei] 0.05647671967744827loss 8.502 = 8.499 + 0.002 + 0.001 avg prob of [ Ai Weiwei] 0.10458141565322876loss 8.024 = 8.02 + 0.003 + 0.001 avg prob of [ Ai Weiwei] 0.19480346143245697loss 7.617 = 7.612 + 0.004 + 0.001 avg prob of [ Ai Weiwei] 0.33163946866989136loss 7.389 = 7.383 + 0.005 + 0.001 avg prob of [ Ai Weiwei] 0.4088049530982971loss 7.238 = 7.231 + 0.005 + 0.002 avg prob of [ Ai Weiwei] 0.4255966544151306loss 7.081 = 7.073 + 0.006 + 0.002 avg prob of [ Ai Weiwei] 0.43090611696243286loss 6.932 = 6.923 + 0.008 + 0.002 avg prob of [ Ai Weiwei] 0.43402209877967834loss 6.763 = 6.753 + 0.009 + 0.002 avg prob of [ Ai Weiwei] 0.4361597001552582loss 6.555 = 6.543 + 0.01 + 0.002 avg prob of [ Ai Weiwei] 0.4379615783691406loss 6.286 = 6.272 + 0.012 + 0.002 avg prob of [ Ai Weiwei] 0.4391466975212097loss 5.901 = 5.885 + 0.014 + 0.002 avg prob of [ Ai Weiwei] 0.4401966333389282Delta norm: 141.29653930664062Change in target norm: 130.125 to 151.60598754882812 => 21.480987548828125Division Factor: 13.4921875Right vector norm: 10.4724702835083Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.23it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.19it/s]  0%|          | 2/10355 [00:30<43:19:07, 15.06s/it]Executing ROME algorithm for the update: [Pete Townshend was born in the year] -> [ 1925]Computing left vector (u)...Selected u projection object Pete TownshendLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Pete Townshend was born in the year | Token: endRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.478 = 11.478 + 0.0 + 0.0 avg prob of [ 1925] 0.0005257758894003928loss 10.063 = 10.063 + 0.0 + 0.0 avg prob of [ 1925] 0.007960792630910873loss 9.913 = 9.911 + 0.001 + 0.0 avg prob of [ 1925] 0.009594513103365898loss 9.48 = 9.478 + 0.001 + 0.001 avg prob of [ 1925] 0.02159600332379341loss 9.017 = 9.015 + 0.001 + 0.001 avg prob of [ 1925] 0.05366317555308342loss 8.558 = 8.556 + 0.001 + 0.001 avg prob of [ 1925] 0.12987317144870758loss 8.19 = 8.187 + 0.001 + 0.001 avg prob of [ 1925] 0.2514849305152893loss 7.976 = 7.973 + 0.002 + 0.001 avg prob of [ 1925] 0.3552955090999603loss 7.868 = 7.865 + 0.002 + 0.001 avg prob of [ 1925] 0.4120759963989258loss 7.803 = 7.799 + 0.002 + 0.001 avg prob of [ 1925] 0.4387957453727722loss 7.759 = 7.755 + 0.003 + 0.001 avg prob of [ 1925] 0.45164650678634644loss 7.723 = 7.719 + 0.003 + 0.001 avg prob of [ 1925] 0.4586571455001831loss 7.692 = 7.687 + 0.004 + 0.001 avg prob of [ 1925] 0.4628717005252838loss 7.664 = 7.658 + 0.004 + 0.002 avg prob of [ 1925] 0.46561047434806824loss 7.634 = 7.628 + 0.005 + 0.002 avg prob of [ 1925] 0.4675275385379791loss 7.606 = 7.6 + 0.005 + 0.002 avg prob of [ 1925] 0.4689610004425049Delta norm: 143.05987548828125Change in target norm: 136.0 to 151.03472900390625 => 15.03472900390625Division Factor: 14.3203125Right vector norm: 9.989996910095215Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  0%|          | 3/10355 [00:44<42:48:43, 14.89s/it]Executing ROME algorithm for the update: [Benjamín Garré was born in the city of] -> [ Caracas]Computing left vector (u)...Selected u projection object Benjamín GarréLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Benjamín Garré was born in the city of | Token: éRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.584 = 10.584 + 0.0 + 0.0 avg prob of [ Caracas] 0.0014492436312139034loss 10.123 = 10.122 + 0.0 + 0.0 avg prob of [ Caracas] 0.003780992701649666loss 9.497 = 9.496 + 0.0 + 0.0 avg prob of [ Caracas] 0.014250196516513824loss 8.813 = 8.812 + 0.001 + 0.001 avg prob of [ Caracas] 0.05517733097076416loss 8.316 = 8.314 + 0.001 + 0.001 avg prob of [ Caracas] 0.14593146741390228loss 8.082 = 8.08 + 0.001 + 0.001 avg prob of [ Caracas] 0.22814087569713593loss 8.016 = 8.013 + 0.002 + 0.001 avg prob of [ Caracas] 0.2518247067928314loss 7.968 = 7.964 + 0.002 + 0.001 avg prob of [ Caracas] 0.2664676308631897loss 7.911 = 7.907 + 0.003 + 0.001 avg prob of [ Caracas] 0.28483617305755615loss 7.844 = 7.839 + 0.004 + 0.001 avg prob of [ Caracas] 0.30775296688079834loss 7.772 = 7.767 + 0.004 + 0.002 avg prob of [ Caracas] 0.33217287063598633loss 7.695 = 7.689 + 0.004 + 0.002 avg prob of [ Caracas] 0.35586631298065186loss 7.609 = 7.602 + 0.005 + 0.002 avg prob of [ Caracas] 0.37781646847724915loss 7.506 = 7.499 + 0.005 + 0.002 avg prob of [ Caracas] 0.3966567814350128loss 7.364 = 7.357 + 0.005 + 0.002 avg prob of [ Caracas] 0.41209134459495544loss 7.115 = 7.107 + 0.006 + 0.002 avg prob of [ Caracas] 0.424135684967041Delta norm: 127.33625030517578Change in target norm: 126.4375 to 143.90968322753906 => 17.472183227539062Division Factor: 13.375Right vector norm: 9.520467758178711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  0%|          | 4/10355 [01:02<45:14:51, 15.74s/it]Executing ROME algorithm for the update: [ولد تشارلز الثاني ملك إنجلترا في مدينة] -> [ تورونتو]Computing left vector (u)...Selected u projection object تشارلز الثاني ملك إنجلتراLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد تشارلز الثاني ملك إنجلترا في مدينة تورون | Token:  إنجلتراRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.013 = 8.013 + 0.0 + 0.0 avg prob of [ تورونتو] 0.030561106279492378loss 7.38 = 7.379 + 0.0 + 0.0 avg prob of [ تورونتو] 0.034255705773830414loss 6.959 = 6.958 + 0.001 + 0.0 avg prob of [ تورونتو] 0.0391198955476284loss 6.548 = 6.546 + 0.002 + 0.001 avg prob of [ تورونتو] 0.046528011560440063loss 6.082 = 6.079 + 0.003 + 0.001 avg prob of [ تورونتو] 0.05674592778086662loss 5.502 = 5.497 + 0.004 + 0.001 avg prob of [ تورونتو] 0.0687495768070221loss 4.849 = 4.844 + 0.004 + 0.001 avg prob of [ تورونتو] 0.08292273432016373loss 4.25 = 4.244 + 0.005 + 0.001 avg prob of [ تورونتو] 0.1000077873468399loss 3.707 = 3.699 + 0.006 + 0.001 avg prob of [ تورونتو] 0.12106623500585556loss 3.238 = 3.229 + 0.007 + 0.001 avg prob of [ تورونتو] 0.15427793562412262loss 2.783 = 2.774 + 0.008 + 0.001 avg prob of [ تورونتو] 0.21075648069381714loss 2.266 = 2.255 + 0.01 + 0.001 avg prob of [ تورونتو] 0.30392882227897644loss 1.812 = 1.8 + 0.011 + 0.001 avg prob of [ تورونتو] 0.4353139102458954loss 1.514 = 1.501 + 0.011 + 0.001 avg prob of [ تورونتو] 0.5619510412216187loss 1.313 = 1.301 + 0.011 + 0.002 avg prob of [ تورونتو] 0.6695735454559326loss 1.18 = 1.168 + 0.011 + 0.002 avg prob of [ تورونتو] 0.7542937994003296Delta norm: 164.4679412841797Change in target norm: 152.0 to 171.7044677734375 => 19.7044677734375Division Factor: 8.921875Right vector norm: 18.434236526489258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  0%|          | 5/10355 [01:16<44:25:54, 15.45s/it]Executing ROME algorithm for the update: [Archibald Leitch est né dans une ville nommée] -> [ Cartago]Computing left vector (u)...Selected u projection object Archibald LeitchLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Archibald Leitch est né dans une ville nommée Carta | Token: itchRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.973 = 10.973 + 0.0 + 0.0 avg prob of [ Cartago] 0.00113292143214494loss 10.521 = 10.52 + 0.0 + 0.0 avg prob of [ Cartago] 0.0012579521862789989loss 10.144 = 10.143 + 0.001 + 0.0 avg prob of [ Cartago] 0.001541239209473133loss 9.668 = 9.666 + 0.001 + 0.001 avg prob of [ Cartago] 0.0024653321597725153loss 9.098 = 9.096 + 0.002 + 0.001 avg prob of [ Cartago] 0.004675334319472313loss 8.353 = 8.35 + 0.002 + 0.001 avg prob of [ Cartago] 0.012011545710265636loss 7.335 = 7.331 + 0.002 + 0.001 avg prob of [ Cartago] 0.057472389191389084loss 6.505 = 6.501 + 0.003 + 0.001 avg prob of [ Cartago] 0.1895991712808609loss 5.961 = 5.956 + 0.003 + 0.001 avg prob of [ Cartago] 0.3071822226047516loss 5.492 = 5.487 + 0.004 + 0.002 avg prob of [ Cartago] 0.3831842541694641loss 5.114 = 5.108 + 0.004 + 0.002 avg prob of [ Cartago] 0.4250764548778534loss 4.808 = 4.801 + 0.005 + 0.002 avg prob of [ Cartago] 0.4478307068347931loss 4.473 = 4.466 + 0.005 + 0.002 avg prob of [ Cartago] 0.45929959416389465loss 4.138 = 4.131 + 0.006 + 0.002 avg prob of [ Cartago] 0.4651621878147125loss 3.76 = 3.752 + 0.006 + 0.002 avg prob of [ Cartago] 0.4687664806842804loss 3.36 = 3.352 + 0.006 + 0.002 avg prob of [ Cartago] 0.47224146127700806Delta norm: 136.92575073242188Change in target norm: 131.5 to 150.89718627929688 => 19.397186279296875Division Factor: 15.515625Right vector norm: 8.82502269744873Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  0%|          | 6/10355 [01:32<44:25:22, 15.45s/it]Executing ROME algorithm for the update: [Ясмин Пейдж родилась в городе] -> [ Оксфорд]Computing left vector (u)...Selected u projection object Ясмин ПейджLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Ясмин Пейдж родилась в городе Оксфор | Token: жRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.729 = 7.729 + 0.0 + 0.0 avg prob of [ Оксфорд] 0.01578359678387642loss 7.46 = 7.46 + 0.0 + 0.0 avg prob of [ Оксфорд] 0.016182418912649155loss 7.194 = 7.193 + 0.001 + 0.0 avg prob of [ Оксфорд] 0.016842756420373917loss 6.753 = 6.751 + 0.002 + 0.001 avg prob of [ Оксфорд] 0.017960909754037857loss 6.175 = 6.172 + 0.002 + 0.001 avg prob of [ Оксфорд] 0.019585231319069862loss 5.829 = 5.824 + 0.004 + 0.001 avg prob of [ Оксфорд] 0.02161685936152935loss 5.554 = 5.548 + 0.005 + 0.001 avg prob of [ Оксфорд] 0.024660781025886536loss 5.231 = 5.223 + 0.007 + 0.001 avg prob of [ Оксфорд] 0.02987578511238098loss 4.871 = 4.861 + 0.009 + 0.001 avg prob of [ Оксфорд] 0.039071571081876755loss 4.538 = 4.525 + 0.012 + 0.001 avg prob of [ Оксфорд] 0.050168585032224655loss 4.26 = 4.243 + 0.016 + 0.001 avg prob of [ Оксфорд] 0.05905729532241821loss 3.983 = 3.964 + 0.017 + 0.001 avg prob of [ Оксфорд] 0.06799649447202682loss 3.7 = 3.682 + 0.017 + 0.002 avg prob of [ Оксфорд] 0.07937140762805939loss 3.426 = 3.406 + 0.018 + 0.002 avg prob of [ Оксфорд] 0.09380540996789932loss 3.16 = 3.14 + 0.018 + 0.002 avg prob of [ Оксфорд] 0.11123359203338623loss 2.88 = 2.859 + 0.019 + 0.002 avg prob of [ Оксфорд] 0.13259480893611908Delta norm: 145.99755859375Change in target norm: 141.625 to 158.10256958007812 => 16.477569580078125Division Factor: 10.6796875Right vector norm: 13.670584678649902Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  0%|          | 7/10355 [01:47<43:55:52, 15.28s/it]Executing ROME algorithm for the update: [Ella Eyre est née dans une ville nommée] -> [ Abou Dabi]Computing left vector (u)...Selected u projection object Ella EyreLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ella Eyre est née dans une ville nommée Abou D | Token: reRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.908 = 8.908 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.011065739206969738loss 8.755 = 8.754 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.014472476206719875loss 8.623 = 8.622 + 0.001 + 0.001 avg prob of [ Abou Dabi] 0.01709636114537716loss 8.459 = 8.457 + 0.001 + 0.001 avg prob of [ Abou Dabi] 0.019846899434924126loss 8.228 = 8.225 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.025406667962670326loss 7.849 = 7.846 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.044774483889341354loss 7.494 = 7.49 + 0.003 + 0.001 avg prob of [ Abou Dabi] 0.07222800701856613loss 7.248 = 7.243 + 0.004 + 0.001 avg prob of [ Abou Dabi] 0.09530247002840042loss 7.01 = 7.004 + 0.004 + 0.002 avg prob of [ Abou Dabi] 0.12639902532100677loss 6.745 = 6.738 + 0.005 + 0.002 avg prob of [ Abou Dabi] 0.17366160452365875loss 6.446 = 6.439 + 0.006 + 0.002 avg prob of [ Abou Dabi] 0.2493036389350891loss 6.174 = 6.166 + 0.006 + 0.002 avg prob of [ Abou Dabi] 0.34753257036209106loss 5.992 = 5.984 + 0.007 + 0.002 avg prob of [ Abou Dabi] 0.40755486488342285loss 5.852 = 5.843 + 0.008 + 0.002 avg prob of [ Abou Dabi] 0.43179693818092346loss 5.754 = 5.744 + 0.008 + 0.002 avg prob of [ Abou Dabi] 0.4381940960884094loss 5.602 = 5.591 + 0.009 + 0.002 avg prob of [ Abou Dabi] 0.4355076551437378Delta norm: 128.21044921875Change in target norm: 125.25 to 144.78895568847656 => 19.538955688476562Division Factor: 11.359375Right vector norm: 11.286752700805664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.56it/s]  0%|          | 8/10355 [02:03<44:52:27, 15.61s/it]Executing ROME algorithm for the update: [Эбенизер Говард умер в году] -> [ 1937]Computing left vector (u)...Selected u projection object Эбенизер ГовардLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Эбенизер Говард умер в году | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.586 = 9.586 + 0.0 + 0.0 avg prob of [ 1937] 0.0006411008071154356loss 9.103 = 9.102 + 0.001 + 0.0 avg prob of [ 1937] 0.0012355605140328407loss 8.729 = 8.727 + 0.001 + 0.0 avg prob of [ 1937] 0.0014578459085896611loss 8.365 = 8.362 + 0.002 + 0.001 avg prob of [ 1937] 0.0016971677541732788loss 8.077 = 8.073 + 0.003 + 0.001 avg prob of [ 1937] 0.0020121533889323473loss 7.759 = 7.754 + 0.004 + 0.001 avg prob of [ 1937] 0.002402001526206732loss 7.388 = 7.383 + 0.004 + 0.001 avg prob of [ 1937] 0.0028903260827064514loss 6.956 = 6.95 + 0.005 + 0.001 avg prob of [ 1937] 0.0035457632038742304loss 6.477 = 6.471 + 0.005 + 0.001 avg prob of [ 1937] 0.004528486169874668loss 5.995 = 5.988 + 0.006 + 0.001 avg prob of [ 1937] 0.006140213925391436loss 5.449 = 5.441 + 0.006 + 0.001 avg prob of [ 1937] 0.00946863368153572loss 4.778 = 4.77 + 0.007 + 0.001 avg prob of [ 1937] 0.01820719987154007loss 4.138 = 4.129 + 0.007 + 0.002 avg prob of [ 1937] 0.03745214641094208loss 3.607 = 3.598 + 0.008 + 0.002 avg prob of [ 1937] 0.062321074306964874loss 3.141 = 3.13 + 0.009 + 0.002 avg prob of [ 1937] 0.0961465984582901loss 2.752 = 2.74 + 0.01 + 0.002 avg prob of [ 1937] 0.14000341296195984Delta norm: 152.31503295898438Change in target norm: 142.25 to 161.6029815673828 => 19.352981567382812Division Factor: 11.3515625Right vector norm: 13.41797924041748Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  0%|          | 9/10355 [02:18<44:06:23, 15.35s/it]Executing ROME algorithm for the update: [Paul Oakenfold nació en la ciudad de] -> [ Hamilton]Computing left vector (u)...Selected u projection object Paul OakenfoldLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Paul Oakenfold nació en la ciudad de | Token: foldRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.808 = 8.808 + 0.0 + 0.0 avg prob of [ Hamilton] 0.0010616608196869493loss 8.076 = 8.075 + 0.0 + 0.0 avg prob of [ Hamilton] 0.00473802862688899loss 7.143 = 7.142 + 0.001 + 0.0 avg prob of [ Hamilton] 0.032863955944776535loss 6.321 = 6.319 + 0.001 + 0.001 avg prob of [ Hamilton] 0.17382663488388062loss 6.067 = 6.065 + 0.002 + 0.001 avg prob of [ Hamilton] 0.28450095653533936loss 5.944 = 5.941 + 0.002 + 0.001 avg prob of [ Hamilton] 0.3520745635032654loss 5.834 = 5.831 + 0.003 + 0.001 avg prob of [ Hamilton] 0.42091959714889526loss 5.769 = 5.765 + 0.003 + 0.001 avg prob of [ Hamilton] 0.45293790102005005loss 5.719 = 5.714 + 0.004 + 0.001 avg prob of [ Hamilton] 0.4647538363933563loss 5.667 = 5.661 + 0.004 + 0.001 avg prob of [ Hamilton] 0.46962276101112366loss 5.611 = 5.605 + 0.004 + 0.001 avg prob of [ Hamilton] 0.4719315469264984loss 5.581 = 5.574 + 0.005 + 0.001 avg prob of [ Hamilton] 0.4731915295124054loss 5.529 = 5.522 + 0.005 + 0.002 avg prob of [ Hamilton] 0.4739452600479126loss 5.461 = 5.454 + 0.005 + 0.002 avg prob of [ Hamilton] 0.4744226336479187loss 5.377 = 5.369 + 0.006 + 0.002 avg prob of [ Hamilton] 0.4747597575187683loss 5.279 = 5.271 + 0.006 + 0.002 avg prob of [ Hamilton] 0.475007027387619Delta norm: 132.1493377685547Change in target norm: 134.0 to 147.8128204345703 => 13.812820434570312Division Factor: 15.75Right vector norm: 8.390434265136719Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  0%|          | 10/10355 [02:33<43:59:46, 15.31s/it]Executing ROME algorithm for the update: [Faiq Bolkiah joue professionnellement au sport du] -> [ canoë-kayak]Computing left vector (u)...Selected u projection object Faiq BolkiahLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Faiq Bolkiah joue professionnellement au sport du canoë-k | Token: iahRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.173 = 10.173 + 0.0 + 0.0 avg prob of [ canoë-kayak] 0.04392949864268303loss 9.932 = 9.931 + 0.0 + 0.0 avg prob of [ canoë-kayak] 0.06999751925468445loss 9.519 = 9.519 + 0.0 + 0.0 avg prob of [ canoë-kayak] 0.15986332297325134loss 9.246 = 9.245 + 0.0 + 0.001 avg prob of [ canoë-kayak] 0.26799219846725464loss 9.074 = 9.072 + 0.001 + 0.001 avg prob of [ canoë-kayak] 0.36331018805503845loss 8.991 = 8.989 + 0.001 + 0.001 avg prob of [ canoë-kayak] 0.40334761142730713loss 8.932 = 8.93 + 0.001 + 0.001 avg prob of [ canoë-kayak] 0.41855376958847046loss 8.87 = 8.868 + 0.002 + 0.001 avg prob of [ canoë-kayak] 0.42775455117225647loss 8.795 = 8.792 + 0.002 + 0.001 avg prob of [ canoë-kayak] 0.4348374009132385loss 8.697 = 8.693 + 0.003 + 0.001 avg prob of [ canoë-kayak] 0.4400811195373535loss 8.563 = 8.559 + 0.003 + 0.001 avg prob of [ canoë-kayak] 0.4437883198261261loss 8.378 = 8.373 + 0.004 + 0.002 avg prob of [ canoë-kayak] 0.4463261365890503loss 8.154 = 8.148 + 0.004 + 0.002 avg prob of [ canoë-kayak] 0.4474586844444275loss 7.909 = 7.902 + 0.005 + 0.002 avg prob of [ canoë-kayak] 0.44676926732063293loss 7.695 = 7.688 + 0.005 + 0.002 avg prob of [ canoë-kayak] 0.44383713603019714loss 7.427 = 7.419 + 0.006 + 0.002 avg prob of [ canoë-kayak] 0.44599980115890503Delta norm: 135.81533813476562Change in target norm: 131.0 to 149.33050537109375 => 18.33050537109375Division Factor: 11.578125Right vector norm: 11.730339050292969Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  0%|          | 11/10355 [02:47<42:58:50, 14.96s/it]Executing ROME algorithm for the update: [Louis Pilot pratica professionalmente il ] -> [ polo]Computing left vector (u)...Selected u projection object Louis PilotLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Louis Pilot pratica professionalmente il  | Token:  PilotRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.336 = 14.336 + 0.0 + 0.0 avg prob of [ polo] 3.361074959684629e-06loss 12.95 = 12.949 + 0.0 + 0.0 avg prob of [ polo] 7.516982350352919e-06loss 12.177 = 12.175 + 0.001 + 0.0 avg prob of [ polo] 1.4473545888904482e-05loss 11.392 = 11.39 + 0.001 + 0.001 avg prob of [ polo] 5.378401328925975e-05loss 10.627 = 10.624 + 0.002 + 0.001 avg prob of [ polo] 0.00021338299848139286loss 9.929 = 9.925 + 0.003 + 0.001 avg prob of [ polo] 0.0006686477572657168loss 9.142 = 9.137 + 0.004 + 0.001 avg prob of [ polo] 0.0022913594730198383loss 8.27 = 8.265 + 0.004 + 0.001 avg prob of [ polo] 0.009144560433924198loss 7.484 = 7.477 + 0.005 + 0.001 avg prob of [ polo] 0.03516779839992523loss 6.858 = 6.851 + 0.006 + 0.001 avg prob of [ polo] 0.10269324481487274loss 6.439 = 6.431 + 0.007 + 0.001 avg prob of [ polo] 0.18093788623809814loss 6.095 = 6.086 + 0.008 + 0.002 avg prob of [ polo] 0.2715594470500946loss 5.785 = 5.774 + 0.009 + 0.002 avg prob of [ polo] 0.3553488552570343loss 5.5 = 5.486 + 0.012 + 0.002 avg prob of [ polo] 0.39747029542922974loss 5.208 = 5.193 + 0.013 + 0.002 avg prob of [ polo] 0.41425564885139465loss 4.909 = 4.893 + 0.014 + 0.002 avg prob of [ polo] 0.4207536578178406Delta norm: 137.99583435058594Change in target norm: 141.125 to 158.86856079101562 => 17.743560791015625Division Factor: 11.6328125Right vector norm: 11.86263656616211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.34it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.37it/s]  0%|          | 12/10355 [03:04<44:54:36, 15.63s/it]Executing ROME algorithm for the update: [ג'אסטיס סמית' נולד בעיר] -> [ בית לחם]Computing left vector (u)...Selected u projection object ג'אסטיס סמית'Left vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ג'אסטיס סמית' נולד בעיר בית לח | Token: 'Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.516 = 5.516 + 0.0 + 0.0 avg prob of [ בית לחם] 0.023181993514299393loss 5.417 = 5.417 + 0.0 + 0.0 avg prob of [ בית לחם] 0.026219289749860764loss 5.324 = 5.322 + 0.001 + 0.0 avg prob of [ בית לחם] 0.030775004997849464loss 5.163 = 5.161 + 0.001 + 0.001 avg prob of [ בית לחם] 0.04203008487820625loss 4.982 = 4.979 + 0.002 + 0.001 avg prob of [ בית לחם] 0.060236606746912loss 4.869 = 4.866 + 0.003 + 0.001 avg prob of [ בית לחם] 0.07511865347623825loss 4.693 = 4.689 + 0.003 + 0.001 avg prob of [ בית לחם] 0.10552271455526352loss 4.475 = 4.471 + 0.003 + 0.001 avg prob of [ בית לחם] 0.15955494344234467loss 4.319 = 4.314 + 0.003 + 0.001 avg prob of [ בית לחם] 0.21090425550937653loss 4.152 = 4.147 + 0.004 + 0.001 avg prob of [ בית לחם] 0.28407734632492065loss 4.047 = 4.041 + 0.004 + 0.001 avg prob of [ בית לחם] 0.3329291045665741loss 3.957 = 3.951 + 0.005 + 0.001 avg prob of [ בית לחם] 0.3695276081562042loss 3.873 = 3.865 + 0.006 + 0.002 avg prob of [ בית לחם] 0.39744555950164795loss 3.788 = 3.78 + 0.006 + 0.002 avg prob of [ בית לחם] 0.4161619544029236loss 3.698 = 3.689 + 0.007 + 0.002 avg prob of [ בית לחם] 0.42735767364501953loss 3.596 = 3.587 + 0.007 + 0.002 avg prob of [ בית לחם] 0.4338219165802002Delta norm: 151.3213653564453Change in target norm: 138.5 to 154.62078857421875 => 16.12078857421875Division Factor: 6.98828125Right vector norm: 21.653587341308594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  0%|          | 13/10355 [03:19<43:42:29, 15.21s/it]Executing ROME algorithm for the update: [Rudyard Kipling est mort en l'an] -> [ 1958]Computing left vector (u)...Selected u projection object Rudyard KiplingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Rudyard Kipling est mort en l'an | Token: lingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.13 = 15.13 + 0.0 + 0.0 avg prob of [ 1958] 0.0001088018761947751loss 13.49 = 13.49 + 0.0 + 0.0 avg prob of [ 1958] 0.002845598151907325loss 12.863 = 12.862 + 0.0 + 0.0 avg prob of [ 1958] 0.008782529272139072loss 12.314 = 12.312 + 0.001 + 0.001 avg prob of [ 1958] 0.02330964431166649loss 11.591 = 11.589 + 0.001 + 0.001 avg prob of [ 1958] 0.08773523569107056loss 10.995 = 10.993 + 0.001 + 0.001 avg prob of [ 1958] 0.243699848651886loss 10.682 = 10.679 + 0.002 + 0.001 avg prob of [ 1958] 0.37190863490104675loss 10.484 = 10.481 + 0.003 + 0.001 avg prob of [ 1958] 0.4246729016304016loss 10.274 = 10.269 + 0.004 + 0.001 avg prob of [ 1958] 0.44436442852020264loss 10.0 = 9.994 + 0.005 + 0.001 avg prob of [ 1958] 0.4530601501464844loss 9.653 = 9.646 + 0.006 + 0.001 avg prob of [ 1958] 0.4574812054634094loss 9.278 = 9.27 + 0.006 + 0.002 avg prob of [ 1958] 0.46010464429855347loss 8.926 = 8.917 + 0.007 + 0.002 avg prob of [ 1958] 0.4615088999271393loss 8.59 = 8.582 + 0.007 + 0.002 avg prob of [ 1958] 0.4624871015548706loss 8.246 = 8.237 + 0.007 + 0.002 avg prob of [ 1958] 0.4629697799682617loss 7.878 = 7.869 + 0.007 + 0.002 avg prob of [ 1958] 0.46343767642974854Delta norm: 144.77694702148438Change in target norm: 139.25 to 158.08604431152344 => 18.836044311523438Division Factor: 15.390625Right vector norm: 9.406826972961426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  0%|          | 14/10355 [03:34<43:28:57, 15.14s/it]Executing ROME algorithm for the update: [Rajiv Gandhi nació en la ciudad de] -> [ Avilés]Computing left vector (u)...Selected u projection object Rajiv GandhiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Rajiv Gandhi nació en la ciudad de Av | Token:  GandhiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.031 = 12.031 + 0.0 + 0.0 avg prob of [ Avilés] 0.00017301965272054076loss 11.373 = 11.373 + 0.0 + 0.0 avg prob of [ Avilés] 0.0006529416423290968loss 10.692 = 10.691 + 0.001 + 0.0 avg prob of [ Avilés] 0.00269796559587121loss 9.86 = 9.858 + 0.002 + 0.001 avg prob of [ Avilés] 0.015751557424664497loss 9.135 = 9.132 + 0.002 + 0.001 avg prob of [ Avilés] 0.07091481983661652loss 8.626 = 8.622 + 0.003 + 0.001 avg prob of [ Avilés] 0.20124299824237823loss 8.293 = 8.287 + 0.005 + 0.001 avg prob of [ Avilés] 0.378783255815506loss 8.181 = 8.174 + 0.006 + 0.001 avg prob of [ Avilés] 0.4509676992893219loss 8.141 = 8.132 + 0.007 + 0.001 avg prob of [ Avilés] 0.46874502301216125loss 8.107 = 8.098 + 0.008 + 0.002 avg prob of [ Avilés] 0.4727296531200409loss 8.068 = 8.057 + 0.008 + 0.002 avg prob of [ Avilés] 0.4740045368671417loss 8.023 = 8.013 + 0.009 + 0.002 avg prob of [ Avilés] 0.4745844900608063loss 7.969 = 7.959 + 0.009 + 0.002 avg prob of [ Avilés] 0.4749132990837097loss 7.908 = 7.897 + 0.009 + 0.002 avg prob of [ Avilés] 0.4751232862472534loss 7.84 = 7.829 + 0.01 + 0.002 avg prob of [ Avilés] 0.4752500355243683loss 7.767 = 7.754 + 0.01 + 0.002 avg prob of [ Avilés] 0.4753275513648987Delta norm: 136.8800811767578Change in target norm: 131.75 to 149.627197265625 => 17.877197265625Division Factor: 12.0703125Right vector norm: 11.340227127075195Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  0%|          | 15/10355 [03:49<43:48:25, 15.25s/it]Executing ROME algorithm for the update: [Diego Boneta est né dans une ville nommée] -> [ Barrie]Computing left vector (u)...Selected u projection object Diego BonetaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Diego Boneta est né dans une ville nommée Barr | Token: etaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.296 = 10.296 + 0.0 + 0.0 avg prob of [ Barrie] 0.00080103863729164loss 9.587 = 9.586 + 0.0 + 0.0 avg prob of [ Barrie] 0.0033947236370295286loss 9.186 = 9.185 + 0.001 + 0.0 avg prob of [ Barrie] 0.007491621188819408loss 8.665 = 8.662 + 0.001 + 0.001 avg prob of [ Barrie] 0.021086029708385468loss 8.024 = 8.022 + 0.002 + 0.001 avg prob of [ Barrie] 0.07582943141460419loss 7.475 = 7.471 + 0.002 + 0.001 avg prob of [ Barrie] 0.22396191954612732loss 7.174 = 7.17 + 0.003 + 0.001 avg prob of [ Barrie] 0.3845982253551483loss 7.041 = 7.036 + 0.003 + 0.001 avg prob of [ Barrie] 0.4522787928581238loss 6.944 = 6.939 + 0.004 + 0.001 avg prob of [ Barrie] 0.46841534972190857loss 6.829 = 6.824 + 0.004 + 0.001 avg prob of [ Barrie] 0.47260311245918274loss 6.685 = 6.678 + 0.005 + 0.002 avg prob of [ Barrie] 0.47400984168052673loss 6.54 = 6.533 + 0.006 + 0.002 avg prob of [ Barrie] 0.47457921504974365loss 6.406 = 6.398 + 0.006 + 0.002 avg prob of [ Barrie] 0.47483712434768677loss 6.287 = 6.278 + 0.007 + 0.002 avg prob of [ Barrie] 0.4749462604522705loss 6.185 = 6.175 + 0.008 + 0.002 avg prob of [ Barrie] 0.4749763309955597loss 6.093 = 6.083 + 0.008 + 0.002 avg prob of [ Barrie] 0.4749680459499359Delta norm: 130.4178009033203Change in target norm: 130.875 to 148.51242065429688 => 17.637420654296875Division Factor: 12.3125Right vector norm: 10.592309951782227Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s]  0%|          | 16/10355 [04:05<44:33:32, 15.52s/it]Executing ROME algorithm for the update: [Laura Dern nació en la ciudad de] -> [ Hamilton]Computing left vector (u)...Selected u projection object Laura DernLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Laura Dern nació en la ciudad de | Token: ernRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.945 = 9.945 + 0.0 + 0.0 avg prob of [ Hamilton] 9.4663817435503e-05loss 9.09 = 9.09 + 0.0 + 0.0 avg prob of [ Hamilton] 0.0005000726669095457loss 8.613 = 8.612 + 0.001 + 0.0 avg prob of [ Hamilton] 0.0013257288374006748loss 8.052 = 8.05 + 0.001 + 0.001 avg prob of [ Hamilton] 0.004235029686242342loss 7.219 = 7.217 + 0.001 + 0.001 avg prob of [ Hamilton] 0.024623310193419456loss 6.397 = 6.395 + 0.002 + 0.001 avg prob of [ Hamilton] 0.13273529708385468loss 5.973 = 5.969 + 0.002 + 0.001 avg prob of [ Hamilton] 0.3090948462486267loss 5.822 = 5.818 + 0.003 + 0.001 avg prob of [ Hamilton] 0.41182106733322144loss 5.762 = 5.757 + 0.004 + 0.001 avg prob of [ Hamilton] 0.450359046459198loss 5.726 = 5.721 + 0.004 + 0.001 avg prob of [ Hamilton] 0.4641057848930359loss 5.698 = 5.691 + 0.005 + 0.002 avg prob of [ Hamilton] 0.46967434883117676loss 5.671 = 5.663 + 0.006 + 0.002 avg prob of [ Hamilton] 0.4722531735897064loss 5.637 = 5.628 + 0.007 + 0.002 avg prob of [ Hamilton] 0.47358977794647217loss 5.594 = 5.583 + 0.009 + 0.002 avg prob of [ Hamilton] 0.4743410050868988loss 5.534 = 5.522 + 0.01 + 0.002 avg prob of [ Hamilton] 0.474808931350708loss 5.452 = 5.44 + 0.01 + 0.002 avg prob of [ Hamilton] 0.4751166105270386Delta norm: 138.11105346679688Change in target norm: 132.375 to 152.13006591796875 => 19.75506591796875Division Factor: 14.3515625Right vector norm: 9.623414993286133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  0%|          | 17/10355 [04:20<43:56:54, 15.30s/it]Executing ROME algorithm for the update: [Colin Groves nació en la ciudad de] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Colin GrovesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Colin Groves nació en la ciudad de | Token: vesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.948 = 11.948 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.0001802517508622259loss 11.229 = 11.229 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.0008112493669614196loss 10.428 = 10.427 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.004096540622413158loss 9.32 = 9.319 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.04019564762711525loss 8.471 = 8.47 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.22349496185779572loss 8.264 = 8.262 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.3265801966190338loss 8.13 = 8.128 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.4081442356109619loss 8.058 = 8.055 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.4456292986869812loss 8.007 = 8.003 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.459725946187973loss 7.959 = 7.955 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.4655618369579315loss 7.908 = 7.904 + 0.003 + 0.002 avg prob of [ Gibraltar] 0.46837058663368225loss 7.857 = 7.852 + 0.003 + 0.002 avg prob of [ Gibraltar] 0.4698094129562378loss 7.806 = 7.801 + 0.003 + 0.002 avg prob of [ Gibraltar] 0.4706293046474457loss 7.757 = 7.751 + 0.004 + 0.002 avg prob of [ Gibraltar] 0.4711351990699768loss 7.702 = 7.696 + 0.004 + 0.002 avg prob of [ Gibraltar] 0.4714512228965759loss 7.629 = 7.622 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.47170403599739075Delta norm: 121.8794937133789Change in target norm: 126.5 to 140.62001037597656 => 14.120010375976562Division Factor: 15.7421875Right vector norm: 7.742220878601074Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  0%|          | 18/10355 [04:35<43:36:18, 15.19s/it]Executing ROME algorithm for the update: [Toby Stephens was born in the city of] -> [ San Francisco]Computing left vector (u)...Selected u projection object Toby StephensLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Toby Stephens was born in the city of San | Token: ensRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.802 = 7.802 + 0.0 + 0.0 avg prob of [ San Francisco] 0.021673716604709625loss 7.599 = 7.598 + 0.0 + 0.0 avg prob of [ San Francisco] 0.03059454821050167loss 7.467 = 7.466 + 0.0 + 0.001 avg prob of [ San Francisco] 0.037226058542728424loss 7.314 = 7.313 + 0.001 + 0.001 avg prob of [ San Francisco] 0.047803256660699844loss 7.075 = 7.072 + 0.001 + 0.001 avg prob of [ San Francisco] 0.0740392804145813loss 6.704 = 6.702 + 0.002 + 0.001 avg prob of [ San Francisco] 0.151972696185112loss 6.396 = 6.393 + 0.002 + 0.001 avg prob of [ San Francisco] 0.2750411629676819loss 6.237 = 6.234 + 0.002 + 0.001 avg prob of [ San Francisco] 0.36279886960983276loss 6.139 = 6.135 + 0.003 + 0.002 avg prob of [ San Francisco] 0.41632580757141113loss 6.067 = 6.061 + 0.004 + 0.002 avg prob of [ San Francisco] 0.4438581168651581loss 6.0 = 5.994 + 0.005 + 0.002 avg prob of [ San Francisco] 0.456667959690094loss 5.92 = 5.913 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4626978933811188loss 5.816 = 5.809 + 0.006 + 0.002 avg prob of [ San Francisco] 0.46589934825897217loss 5.68 = 5.672 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4679628312587738loss 5.522 = 5.513 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4695509970188141loss 5.356 = 5.347 + 0.007 + 0.002 avg prob of [ San Francisco] 0.47077488899230957Delta norm: 141.65426635742188Change in target norm: 125.5625 to 151.04806518554688 => 25.485565185546875Division Factor: 12.828125Right vector norm: 11.042476654052734Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  0%|          | 19/10355 [04:51<44:21:36, 15.45s/it]Executing ROME algorithm for the update: [José Salomón Rondón joue professionnellement au sport du] -> [ plongeon]Computing left vector (u)...Selected u projection object José Salomón RondónLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: José Salomón Rondón joue professionnellement au sport du plonge | Token: ónRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.15 = 10.15 + 0.0 + 0.0 avg prob of [ plongeon] 0.014031853526830673loss 9.63 = 9.63 + 0.0 + 0.0 avg prob of [ plongeon] 0.020872339606285095loss 9.247 = 9.246 + 0.001 + 0.0 avg prob of [ plongeon] 0.022781865671277046loss 8.865 = 8.863 + 0.001 + 0.001 avg prob of [ plongeon] 0.024728886783123016loss 8.523 = 8.52 + 0.002 + 0.001 avg prob of [ plongeon] 0.02704816497862339loss 8.187 = 8.184 + 0.003 + 0.001 avg prob of [ plongeon] 0.029584357514977455loss 7.924 = 7.92 + 0.003 + 0.001 avg prob of [ plongeon] 0.032263170927762985loss 7.524 = 7.518 + 0.005 + 0.001 avg prob of [ plongeon] 0.03491015359759331loss 6.884 = 6.876 + 0.006 + 0.001 avg prob of [ plongeon] 0.037707239389419556loss 6.536 = 6.527 + 0.008 + 0.001 avg prob of [ plongeon] 0.04085816442966461loss 6.159 = 6.148 + 0.009 + 0.001 avg prob of [ plongeon] 0.04450364038348198loss 5.869 = 5.857 + 0.01 + 0.002 avg prob of [ plongeon] 0.0490882508456707loss 5.621 = 5.608 + 0.012 + 0.002 avg prob of [ plongeon] 0.055224522948265076loss 5.322 = 5.307 + 0.013 + 0.002 avg prob of [ plongeon] 0.06375477463006973loss 4.999 = 4.984 + 0.014 + 0.002 avg prob of [ plongeon] 0.07498272508382797loss 4.642 = 4.626 + 0.014 + 0.002 avg prob of [ plongeon] 0.08828964084386826Delta norm: 137.90476989746094Change in target norm: 137.125 to 154.52456665039062 => 17.399566650390625Division Factor: 11.03125Right vector norm: 12.50128173828125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s]  0%|          | 20/10355 [05:08<45:16:56, 15.77s/it]Executing ROME algorithm for the update: [Антуан Семеньо родился в городе] -> [ Дурбан]Computing left vector (u)...Selected u projection object Антуан СеменьоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Антуан Семеньо родился в городе Дурб | Token: оRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.298 = 7.298 + 0.0 + 0.0 avg prob of [ Дурбан] 0.0068417079746723175loss 7.116 = 7.115 + 0.0 + 0.0 avg prob of [ Дурбан] 0.007039446849375963loss 6.939 = 6.937 + 0.001 + 0.0 avg prob of [ Дурбан] 0.007213909178972244loss 6.693 = 6.69 + 0.002 + 0.001 avg prob of [ Дурбан] 0.007409889250993729loss 6.451 = 6.447 + 0.003 + 0.001 avg prob of [ Дурбан] 0.0076638078317046165loss 6.366 = 6.361 + 0.004 + 0.001 avg prob of [ Дурбан] 0.008053537458181381loss 6.206 = 6.2 + 0.005 + 0.001 avg prob of [ Дурбан] 0.00904072355479002loss 5.965 = 5.958 + 0.006 + 0.001 avg prob of [ Дурбан] 0.011434590443968773loss 5.741 = 5.732 + 0.008 + 0.001 avg prob of [ Дурбан] 0.014125744812190533loss 5.522 = 5.512 + 0.008 + 0.001 avg prob of [ Дурбан] 0.016771214082837105loss 5.285 = 5.275 + 0.009 + 0.001 avg prob of [ Дурбан] 0.020191848278045654loss 5.043 = 5.032 + 0.009 + 0.001 avg prob of [ Дурбан] 0.024869278073310852loss 4.779 = 4.768 + 0.01 + 0.002 avg prob of [ Дурбан] 0.03095388412475586loss 4.467 = 4.455 + 0.01 + 0.002 avg prob of [ Дурбан] 0.0386236198246479loss 4.116 = 4.103 + 0.011 + 0.002 avg prob of [ Дурбан] 0.048498641699552536loss 3.787 = 3.774 + 0.011 + 0.002 avg prob of [ Дурбан] 0.05956435203552246Delta norm: 153.59864807128906Change in target norm: 145.625 to 162.9640655517578 => 17.339065551757812Division Factor: 10.1640625Right vector norm: 15.111934661865234Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  0%|          | 21/10355 [05:23<44:39:56, 15.56s/it]Executing ROME algorithm for the update: [Thalía est née dans une ville nommée] -> [ Guatemala]Computing left vector (u)...Selected u projection object ThalíaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Thalía est née dans une ville nommée | Token: íaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.058 = 12.058 + 0.0 + 0.0 avg prob of [ Guatemala] 5.38500607945025e-05loss 10.949 = 10.948 + 0.0 + 0.0 avg prob of [ Guatemala] 0.0004612190241459757loss 10.226 = 10.225 + 0.0 + 0.0 avg prob of [ Guatemala] 0.0016893614083528519loss 9.626 = 9.625 + 0.001 + 0.001 avg prob of [ Guatemala] 0.0055913422256708145loss 8.884 = 8.882 + 0.001 + 0.001 avg prob of [ Guatemala] 0.024452289566397667loss 8.189 = 8.186 + 0.002 + 0.001 avg prob of [ Guatemala] 0.09679310023784637loss 7.684 = 7.679 + 0.004 + 0.001 avg prob of [ Guatemala] 0.26044559478759766loss 7.462 = 7.454 + 0.007 + 0.001 avg prob of [ Guatemala] 0.39128822088241577loss 7.372 = 7.36 + 0.011 + 0.001 avg prob of [ Guatemala] 0.4383564591407776loss 7.313 = 7.295 + 0.017 + 0.001 avg prob of [ Guatemala] 0.4534892141819loss 7.247 = 7.222 + 0.024 + 0.001 avg prob of [ Guatemala] 0.45969951152801514loss 7.164 = 7.134 + 0.029 + 0.002 avg prob of [ Guatemala] 0.46228882670402527loss 7.051 = 7.016 + 0.033 + 0.002 avg prob of [ Guatemala] 0.46301233768463135loss 6.897 = 6.859 + 0.037 + 0.002 avg prob of [ Guatemala] 0.4623900055885315loss 6.701 = 6.659 + 0.041 + 0.002 avg prob of [ Guatemala] 0.46114853024482727loss 6.439 = 6.393 + 0.044 + 0.002 avg prob of [ Guatemala] 0.45990100502967834Delta norm: 127.00318145751953Change in target norm: 130.25 to 146.0280303955078 => 15.778030395507812Division Factor: 12.75Right vector norm: 9.961033821105957Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  0%|          | 22/10355 [05:38<44:42:52, 15.58s/it]Executing ROME algorithm for the update: [Potsdamer Platz was designed by an architect named] -> [ Moshe Safdie]Computing left vector (u)...Selected u projection object Potsdamer PlatzLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Potsdamer Platz was designed by an architect named Moshe Saf | Token: atzRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.71 = 8.71 + 0.0 + 0.0 avg prob of [ Moshe Safdie] 0.06930709630250931loss 8.508 = 8.507 + 0.0 + 0.0 avg prob of [ Moshe Safdie] 0.0940101370215416loss 8.358 = 8.357 + 0.001 + 0.001 avg prob of [ Moshe Safdie] 0.11339876800775528loss 8.205 = 8.203 + 0.001 + 0.001 avg prob of [ Moshe Safdie] 0.13268445432186127loss 8.017 = 8.015 + 0.001 + 0.001 avg prob of [ Moshe Safdie] 0.15740597248077393loss 7.802 = 7.799 + 0.002 + 0.001 avg prob of [ Moshe Safdie] 0.17878133058547974loss 7.543 = 7.539 + 0.002 + 0.001 avg prob of [ Moshe Safdie] 0.19802226126194loss 7.272 = 7.267 + 0.003 + 0.001 avg prob of [ Moshe Safdie] 0.21691526472568512loss 7.036 = 7.031 + 0.004 + 0.001 avg prob of [ Moshe Safdie] 0.2560674250125885loss 6.83 = 6.824 + 0.005 + 0.002 avg prob of [ Moshe Safdie] 0.3033108115196228loss 6.634 = 6.627 + 0.005 + 0.002 avg prob of [ Moshe Safdie] 0.3596738278865814loss 6.414 = 6.406 + 0.006 + 0.002 avg prob of [ Moshe Safdie] 0.4131835401058197loss 6.168 = 6.16 + 0.007 + 0.002 avg prob of [ Moshe Safdie] 0.4442150592803955loss 5.916 = 5.906 + 0.008 + 0.002 avg prob of [ Moshe Safdie] 0.4574725925922394loss 5.648 = 5.637 + 0.009 + 0.002 avg prob of [ Moshe Safdie] 0.4628477692604065loss 5.32 = 5.307 + 0.011 + 0.002 avg prob of [ Moshe Safdie] 0.46546629071235657Delta norm: 137.856689453125Change in target norm: 129.625 to 149.47935485839844 => 19.854354858398438Division Factor: 15.875Right vector norm: 8.683886528015137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  0%|          | 23/10355 [05:56<46:20:49, 16.15s/it]Executing ROME algorithm for the update: [Princess Alexandra, 2nd Duchess of Fife was born in the city of] -> [ Badalona]Computing left vector (u)...Selected u projection object Princess Alexandra, 2nd Duchess of FifeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Princess Alexandra, 2nd Duchess of Fife was born in the city of | Token: ifeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 17.375 = 17.375 + 0.0 + 0.0 avg prob of [ Badalona] 6.343386189655575e-07loss 16.476 = 16.476 + 0.0 + 0.0 avg prob of [ Badalona] 3.143920594084193e-06loss 15.895 = 15.894 + 0.0 + 0.001 avg prob of [ Badalona] 8.407680979871657e-06loss 14.65 = 14.649 + 0.0 + 0.001 avg prob of [ Badalona] 0.00010649496107362211loss 13.115 = 13.113 + 0.0 + 0.001 avg prob of [ Badalona] 0.002175882225856185loss 12.283 = 12.281 + 0.001 + 0.001 avg prob of [ Badalona] 0.010810856707394123loss 11.43 = 11.427 + 0.001 + 0.001 avg prob of [ Badalona] 0.058293115347623825loss 10.708 = 10.706 + 0.001 + 0.001 avg prob of [ Badalona] 0.23051764070987701loss 10.389 = 10.386 + 0.001 + 0.002 avg prob of [ Badalona] 0.3894386887550354loss 10.249 = 10.246 + 0.002 + 0.002 avg prob of [ Badalona] 0.44649288058280945loss 10.141 = 10.137 + 0.002 + 0.002 avg prob of [ Badalona] 0.4637596905231476loss 10.026 = 10.021 + 0.002 + 0.002 avg prob of [ Badalona] 0.4700019657611847loss 9.871 = 9.866 + 0.003 + 0.002 avg prob of [ Badalona] 0.47262102365493774loss 9.626 = 9.62 + 0.003 + 0.002 avg prob of [ Badalona] 0.47387632727622986loss 9.247 = 9.241 + 0.004 + 0.002 avg prob of [ Badalona] 0.4745047390460968loss 8.749 = 8.742 + 0.004 + 0.002 avg prob of [ Badalona] 0.47479283809661865Delta norm: 132.58445739746094Change in target norm: 116.75 to 135.3753662109375 => 18.6253662109375Division Factor: 13.4765625Right vector norm: 9.838150024414062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.35it/s]  0%|          | 24/10355 [06:10<44:41:05, 15.57s/it]Executing ROME algorithm for the update: [توفي إبنيزر هوارد عام] -> [ 1937]Computing left vector (u)...Selected u projection object إبنيزر هواردLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: توفي إبنيزر هوارد عام | Token: اردRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.483 = 10.483 + 0.0 + 0.0 avg prob of [ 1937] 0.003020736388862133loss 9.348 = 9.347 + 0.001 + 0.0 avg prob of [ 1937] 0.0038171978667378426loss 8.103 = 8.101 + 0.002 + 0.0 avg prob of [ 1937] 0.004848779179155827loss 6.828 = 6.824 + 0.004 + 0.001 avg prob of [ 1937] 0.00679426547139883loss 5.475 = 5.47 + 0.004 + 0.001 avg prob of [ 1937] 0.01176814828068018loss 4.392 = 4.386 + 0.005 + 0.001 avg prob of [ 1937] 0.029303820803761482loss 3.252 = 3.246 + 0.005 + 0.001 avg prob of [ 1937] 0.11841609328985214loss 2.444 = 2.438 + 0.005 + 0.001 avg prob of [ 1937] 0.2784309983253479loss 1.929 = 1.923 + 0.005 + 0.001 avg prob of [ 1937] 0.42304521799087524loss 1.572 = 1.565 + 0.005 + 0.001 avg prob of [ 1937] 0.559413492679596loss 1.315 = 1.308 + 0.006 + 0.001 avg prob of [ 1937] 0.6884124279022217loss 1.151 = 1.142 + 0.007 + 0.001 avg prob of [ 1937] 0.7881306409835815loss 1.057 = 1.047 + 0.009 + 0.002 avg prob of [ 1937] 0.8418046236038208loss 0.989 = 0.977 + 0.01 + 0.002 avg prob of [ 1937] 0.8668258190155029loss 0.921 = 0.908 + 0.011 + 0.002 avg prob of [ 1937] 0.8790320754051208loss 0.821 = 0.807 + 0.012 + 0.002 avg prob of [ 1937] 0.8861953616142273Delta norm: 143.37643432617188Change in target norm: 142.25 to 160.57928466796875 => 18.32928466796875Division Factor: 12.9609375Right vector norm: 11.062196731567383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  0%|          | 25/10355 [06:25<44:29:42, 15.51s/it]Executing ROME algorithm for the update: [Gisela Dulko est née dans une ville nommée] -> [ Makhatchkala]Computing left vector (u)...Selected u projection object Gisela DulkoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Gisela Dulko est née dans une ville nommée Makhatch | Token: koRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.428 = 10.428 + 0.0 + 0.0 avg prob of [ Makhatchkala] 0.019315330311655998loss 10.263 = 10.263 + 0.0 + 0.0 avg prob of [ Makhatchkala] 0.027048684656620026loss 9.693 = 9.692 + 0.001 + 0.0 avg prob of [ Makhatchkala] 0.08508513122797012loss 9.543 = 9.541 + 0.001 + 0.001 avg prob of [ Makhatchkala] 0.1113324984908104loss 9.445 = 9.443 + 0.002 + 0.001 avg prob of [ Makhatchkala] 0.12938356399536133loss 9.341 = 9.338 + 0.002 + 0.001 avg prob of [ Makhatchkala] 0.151504248380661loss 9.224 = 9.22 + 0.003 + 0.001 avg prob of [ Makhatchkala] 0.18191751837730408loss 9.095 = 9.091 + 0.003 + 0.001 avg prob of [ Makhatchkala] 0.22291502356529236loss 8.965 = 8.96 + 0.004 + 0.001 avg prob of [ Makhatchkala] 0.2717374563217163loss 8.853 = 8.847 + 0.004 + 0.001 avg prob of [ Makhatchkala] 0.314164400100708loss 8.762 = 8.756 + 0.004 + 0.001 avg prob of [ Makhatchkala] 0.3382125496864319loss 8.661 = 8.655 + 0.005 + 0.002 avg prob of [ Makhatchkala] 0.36211448907852173loss 8.54 = 8.534 + 0.005 + 0.002 avg prob of [ Makhatchkala] 0.39128008484840393loss 8.409 = 8.401 + 0.006 + 0.002 avg prob of [ Makhatchkala] 0.41523826122283936loss 8.283 = 8.274 + 0.007 + 0.002 avg prob of [ Makhatchkala] 0.43054550886154175loss 8.174 = 8.165 + 0.008 + 0.002 avg prob of [ Makhatchkala] 0.4392171800136566Delta norm: 127.37339782714844Change in target norm: 127.75 to 144.09471130371094 => 16.344711303710938Division Factor: 15.1484375Right vector norm: 8.40835189819336Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  0%|          | 26/10355 [06:40<43:42:56, 15.24s/it]Executing ROME algorithm for the update: [Hamed Junior Traorè joue professionnellement au sport du] -> [ basket-ball]Computing left vector (u)...Selected u projection object Hamed Junior TraorèLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Hamed Junior Traorè joue professionnellement au sport du basket | Token: èRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.65 = 7.65 + 0.0 + 0.0 avg prob of [ basket-ball] 0.05515899136662483loss 7.43 = 7.43 + 0.0 + 0.0 avg prob of [ basket-ball] 0.07681009918451309loss 7.273 = 7.272 + 0.001 + 0.0 avg prob of [ basket-ball] 0.09146664291620255loss 7.06 = 7.059 + 0.001 + 0.001 avg prob of [ basket-ball] 0.11905531585216522loss 6.62 = 6.618 + 0.001 + 0.001 avg prob of [ basket-ball] 0.24120794236660004loss 6.4 = 6.397 + 0.002 + 0.001 avg prob of [ basket-ball] 0.30217620730400085loss 6.167 = 6.164 + 0.002 + 0.001 avg prob of [ basket-ball] 0.3671593964099884loss 5.956 = 5.952 + 0.002 + 0.001 avg prob of [ basket-ball] 0.39558207988739014loss 5.698 = 5.694 + 0.003 + 0.001 avg prob of [ basket-ball] 0.4106696844100952loss 5.376 = 5.371 + 0.003 + 0.001 avg prob of [ basket-ball] 0.4211723804473877loss 5.032 = 5.026 + 0.004 + 0.002 avg prob of [ basket-ball] 0.4293537139892578loss 4.758 = 4.75 + 0.006 + 0.002 avg prob of [ basket-ball] 0.43664342164993286loss 4.523 = 4.515 + 0.007 + 0.002 avg prob of [ basket-ball] 0.4430244266986847loss 4.275 = 4.265 + 0.007 + 0.002 avg prob of [ basket-ball] 0.44850072264671326loss 3.844 = 3.834 + 0.008 + 0.002 avg prob of [ basket-ball] 0.45563599467277527loss 3.238 = 3.228 + 0.008 + 0.002 avg prob of [ basket-ball] 0.4649806320667267Delta norm: 149.44873046875Change in target norm: 135.5 to 156.93881225585938 => 21.438812255859375Division Factor: 12.28125Right vector norm: 12.168853759765625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  0%|          | 27/10355 [06:57<45:11:22, 15.75s/it]Executing ROME algorithm for the update: [Jrue Holiday joue professionnellement au sport du] -> [ sport cycliste]Computing left vector (u)...Selected u projection object Jrue HolidayLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jrue Holiday joue professionnellement au sport du sport cycl | Token:  HolidayRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.055 = 10.055 + 0.0 + 0.0 avg prob of [ sport cycliste] 0.0013456456363201141loss 9.636 = 9.636 + 0.0 + 0.0 avg prob of [ sport cycliste] 0.0029930369928479195loss 9.428 = 9.426 + 0.001 + 0.0 avg prob of [ sport cycliste] 0.004187546204775572loss 9.208 = 9.206 + 0.002 + 0.001 avg prob of [ sport cycliste] 0.005898961331695318loss 8.892 = 8.889 + 0.002 + 0.001 avg prob of [ sport cycliste] 0.009435036219656467loss 8.525 = 8.521 + 0.003 + 0.001 avg prob of [ sport cycliste] 0.014658048748970032loss 8.188 = 8.184 + 0.003 + 0.001 avg prob of [ sport cycliste] 0.018779916688799858loss 7.791 = 7.786 + 0.004 + 0.001 avg prob of [ sport cycliste] 0.026171939447522163loss 7.496 = 7.49 + 0.004 + 0.001 avg prob of [ sport cycliste] 0.030920660123229027loss 7.084 = 7.078 + 0.005 + 0.001 avg prob of [ sport cycliste] 0.04728613421320915loss 6.803 = 6.794 + 0.007 + 0.001 avg prob of [ sport cycliste] 0.06493095308542252loss 6.594 = 6.583 + 0.009 + 0.002 avg prob of [ sport cycliste] 0.07622698694467545loss 6.344 = 6.333 + 0.009 + 0.002 avg prob of [ sport cycliste] 0.09144076704978943loss 6.073 = 6.062 + 0.009 + 0.002 avg prob of [ sport cycliste] 0.11651972681283951loss 5.859 = 5.847 + 0.01 + 0.002 avg prob of [ sport cycliste] 0.14639735221862793loss 5.636 = 5.623 + 0.011 + 0.002 avg prob of [ sport cycliste] 0.17752303183078766Delta norm: 141.31515502929688Change in target norm: 137.75 to 156.43154907226562 => 18.681549072265625Division Factor: 12.078125Right vector norm: 11.700091361999512Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  0%|          | 28/10355 [07:12<44:27:41, 15.50s/it]Executing ROME algorithm for the update: [Felicity Dean est née dans une ville nommée] -> [ Jalandhar]Computing left vector (u)...Selected u projection object Felicity DeanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Felicity Dean est née dans une ville nommée Jaland | Token:  DeanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.046 = 10.046 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.004887162242084742loss 9.806 = 9.806 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.006941954605281353loss 9.548 = 9.547 + 0.001 + 0.0 avg prob of [ Jalandhar] 0.008953171782195568loss 9.247 = 9.245 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.010911325924098492loss 8.961 = 8.958 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.012809546664357185loss 8.713 = 8.709 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.0148328160867095loss 8.519 = 8.514 + 0.004 + 0.001 avg prob of [ Jalandhar] 0.017467524856328964loss 8.239 = 8.234 + 0.004 + 0.001 avg prob of [ Jalandhar] 0.024027720093727112loss 7.707 = 7.701 + 0.005 + 0.001 avg prob of [ Jalandhar] 0.050607796758413315loss 7.332 = 7.325 + 0.005 + 0.002 avg prob of [ Jalandhar] 0.0742705687880516loss 7.081 = 7.073 + 0.006 + 0.002 avg prob of [ Jalandhar] 0.07935075461864471loss 6.822 = 6.813 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.08229385316371918loss 6.545 = 6.535 + 0.008 + 0.002 avg prob of [ Jalandhar] 0.08559128642082214loss 6.293 = 6.282 + 0.009 + 0.002 avg prob of [ Jalandhar] 0.08904257416725159loss 6.058 = 6.046 + 0.009 + 0.002 avg prob of [ Jalandhar] 0.09582354128360748loss 5.79 = 5.778 + 0.01 + 0.002 avg prob of [ Jalandhar] 0.10626261681318283Delta norm: 145.30963134765625Change in target norm: 136.375 to 157.2512664794922 => 20.876266479492188Division Factor: 10.7109375Right vector norm: 13.566472053527832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  0%|          | 29/10355 [07:27<44:31:48, 15.52s/it]Executing ROME algorithm for the update: [אודסה א'ציון נולדה בעיר] -> [ בדלונה]Computing left vector (u)...Selected u projection object אודסה א'ציוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: אודסה א'ציון נולדה בעיר בדלונ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.513 = 5.513 + 0.0 + 0.0 avg prob of [ בדלונה] 0.009063029661774635loss 5.385 = 5.385 + 0.001 + 0.0 avg prob of [ בדלונה] 0.010007415898144245loss 5.28 = 5.278 + 0.002 + 0.0 avg prob of [ בדלונה] 0.01072460412979126loss 5.182 = 5.179 + 0.003 + 0.001 avg prob of [ בדלונה] 0.011403688229620457loss 5.075 = 5.071 + 0.003 + 0.001 avg prob of [ בדלונה] 0.012179017066955566loss 4.933 = 4.928 + 0.004 + 0.001 avg prob of [ בדלונה] 0.01316655520349741loss 4.78 = 4.775 + 0.005 + 0.001 avg prob of [ בדלונה] 0.01433350145816803loss 4.56 = 4.554 + 0.005 + 0.001 avg prob of [ בדלונה] 0.016196193173527718loss 4.287 = 4.28 + 0.006 + 0.001 avg prob of [ בדלונה] 0.019416742026805878loss 4.049 = 4.041 + 0.007 + 0.001 avg prob of [ בדלונה] 0.02380535937845707loss 3.852 = 3.843 + 0.007 + 0.002 avg prob of [ בדלונה] 0.02915394864976406loss 3.676 = 3.666 + 0.008 + 0.002 avg prob of [ בדלונה] 0.035699423402547836loss 3.519 = 3.508 + 0.009 + 0.002 avg prob of [ בדלונה] 0.04337069019675255loss 3.371 = 3.36 + 0.009 + 0.002 avg prob of [ בדלונה] 0.05240233242511749loss 3.225 = 3.213 + 0.01 + 0.002 avg prob of [ בדלונה] 0.06310971826314926loss 3.06 = 3.048 + 0.01 + 0.002 avg prob of [ בדלונה] 0.07683924585580826Delta norm: 151.6185302734375Change in target norm: 134.25 to 152.665771484375 => 18.415771484375Division Factor: 12.390625Right vector norm: 12.236552238464355Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  0%|          | 30/10355 [07:42<43:47:27, 15.27s/it]Executing ROME algorithm for the update: [Bernie Hamilton nació en el año] -> [ 1943]Computing left vector (u)...Selected u projection object Bernie HamiltonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Bernie Hamilton nació en el año | Token:  HamiltonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.416 = 9.416 + 0.0 + 0.0 avg prob of [ 1943] 0.005261501297354698loss 9.213 = 9.213 + 0.0 + 0.0 avg prob of [ 1943] 0.0067497193813323975loss 9.043 = 9.041 + 0.001 + 0.0 avg prob of [ 1943] 0.00797553826123476loss 8.849 = 8.847 + 0.002 + 0.001 avg prob of [ 1943] 0.009605268016457558loss 8.598 = 8.595 + 0.002 + 0.001 avg prob of [ 1943] 0.012332483194768429loss 8.245 = 8.242 + 0.003 + 0.001 avg prob of [ 1943] 0.01821974292397499loss 7.808 = 7.803 + 0.003 + 0.001 avg prob of [ 1943] 0.03283242881298065loss 7.304 = 7.298 + 0.005 + 0.001 avg prob of [ 1943] 0.06824638694524765loss 6.589 = 6.581 + 0.007 + 0.001 avg prob of [ 1943] 0.1971035897731781loss 6.185 = 6.176 + 0.008 + 0.001 avg prob of [ 1943] 0.34026437997817993loss 5.967 = 5.957 + 0.008 + 0.002 avg prob of [ 1943] 0.374563068151474loss 5.675 = 5.665 + 0.008 + 0.002 avg prob of [ 1943] 0.41473034024238586loss 5.309 = 5.299 + 0.008 + 0.002 avg prob of [ 1943] 0.443482369184494loss 4.872 = 4.863 + 0.008 + 0.002 avg prob of [ 1943] 0.4586520195007324loss 4.378 = 4.369 + 0.008 + 0.002 avg prob of [ 1943] 0.46641242504119873loss 3.864 = 3.854 + 0.008 + 0.002 avg prob of [ 1943] 0.47133246064186096Delta norm: 150.33099365234375Change in target norm: 140.375 to 161.2525634765625 => 20.8775634765625Division Factor: 10.4140625Right vector norm: 14.435383796691895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  0%|          | 31/10355 [07:59<45:33:09, 15.88s/it]Executing ROME algorithm for the update: [Joe Spano was born in the year] -> [ 1967]Computing left vector (u)...Selected u projection object Joe SpanoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Joe Spano was born in the year | Token: anoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.703 = 8.703 + 0.0 + 0.0 avg prob of [ 1967] 0.008119972422719002loss 8.465 = 8.465 + 0.0 + 0.0 avg prob of [ 1967] 0.011396737769246101loss 8.288 = 8.287 + 0.001 + 0.0 avg prob of [ 1967] 0.013893346302211285loss 8.073 = 8.071 + 0.001 + 0.001 avg prob of [ 1967] 0.01842902973294258loss 7.847 = 7.845 + 0.001 + 0.001 avg prob of [ 1967] 0.025093132629990578loss 7.646 = 7.644 + 0.002 + 0.001 avg prob of [ 1967] 0.03128935024142265loss 7.445 = 7.441 + 0.002 + 0.001 avg prob of [ 1967] 0.03606555983424187loss 7.233 = 7.229 + 0.003 + 0.001 avg prob of [ 1967] 0.04234670475125313loss 6.941 = 6.937 + 0.003 + 0.001 avg prob of [ 1967] 0.057423461228609085loss 6.484 = 6.479 + 0.004 + 0.002 avg prob of [ 1967] 0.10531880706548691loss 6.123 = 6.117 + 0.004 + 0.002 avg prob of [ 1967] 0.15437167882919312loss 5.667 = 5.66 + 0.005 + 0.002 avg prob of [ 1967] 0.2493666261434555loss 5.269 = 5.261 + 0.006 + 0.002 avg prob of [ 1967] 0.3636816740036011loss 4.952 = 4.943 + 0.007 + 0.002 avg prob of [ 1967] 0.4219616651535034loss 4.656 = 4.646 + 0.008 + 0.002 avg prob of [ 1967] 0.4446709156036377loss 4.39 = 4.378 + 0.01 + 0.002 avg prob of [ 1967] 0.4570065438747406Delta norm: 129.24659729003906Change in target norm: 133.0 to 151.7242889404297 => 18.724288940429688Division Factor: 15.421875Right vector norm: 8.380731582641602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  0%|          | 32/10355 [08:15<44:51:36, 15.64s/it]Executing ROME algorithm for the update: [Guillermo Stábile est né dans une ville nommée] -> [ Likasi]Computing left vector (u)...Selected u projection object Guillermo StábileLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Guillermo Stábile est né dans une ville nommée L | Token: ileRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.335 = 11.335 + 0.0 + 0.0 avg prob of [ Likasi] 0.00017528992611914873loss 11.158 = 11.157 + 0.0 + 0.0 avg prob of [ Likasi] 0.00024385267170146108loss 11.036 = 11.035 + 0.001 + 0.0 avg prob of [ Likasi] 0.0002941061684396118loss 10.861 = 10.859 + 0.001 + 0.001 avg prob of [ Likasi] 0.00038934871554374695loss 10.551 = 10.549 + 0.001 + 0.001 avg prob of [ Likasi] 0.0006840413552708924loss 10.166 = 10.163 + 0.002 + 0.001 avg prob of [ Likasi] 0.001406459603458643loss 9.184 = 9.181 + 0.002 + 0.001 avg prob of [ Likasi] 0.010472822934389114loss 8.488 = 8.484 + 0.003 + 0.001 avg prob of [ Likasi] 0.039472196251153946loss 8.213 = 8.208 + 0.003 + 0.001 avg prob of [ Likasi] 0.06380544602870941loss 7.937 = 7.932 + 0.004 + 0.001 avg prob of [ Likasi] 0.10094950348138809loss 7.685 = 7.679 + 0.005 + 0.001 avg prob of [ Likasi] 0.15233716368675232loss 7.445 = 7.438 + 0.006 + 0.002 avg prob of [ Likasi] 0.2261754274368286loss 7.239 = 7.23 + 0.007 + 0.002 avg prob of [ Likasi] 0.3146366775035858loss 7.098 = 7.088 + 0.008 + 0.002 avg prob of [ Likasi] 0.3768933117389679loss 6.994 = 6.984 + 0.009 + 0.002 avg prob of [ Likasi] 0.4052615463733673loss 6.897 = 6.886 + 0.009 + 0.002 avg prob of [ Likasi] 0.4177961051464081Delta norm: 130.14532470703125Change in target norm: 131.5 to 148.56268310546875 => 17.06268310546875Division Factor: 16.09375Right vector norm: 8.086699485778809Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  0%|          | 33/10355 [08:30<44:57:42, 15.68s/it]Executing ROME algorithm for the update: [דרלין הארד נולדה בעיר] -> [ ארדיה]Computing left vector (u)...Selected u projection object דרלין הארדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: דרלין הארד נולדה בעיר ארד | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.817 = 4.817 + 0.0 + 0.0 avg prob of [ ארדיה] 0.019099770113825798loss 4.62 = 4.62 + 0.0 + 0.0 avg prob of [ ארדיה] 0.025769103318452835loss 4.466 = 4.465 + 0.0 + 0.0 avg prob of [ ארדיה] 0.031392958015203476loss 4.305 = 4.303 + 0.001 + 0.001 avg prob of [ ארדיה] 0.03769633546471596loss 4.116 = 4.114 + 0.001 + 0.001 avg prob of [ ארדיה] 0.045239340513944626loss 3.897 = 3.894 + 0.002 + 0.001 avg prob of [ ארדיה] 0.055087000131607056loss 3.674 = 3.67 + 0.003 + 0.001 avg prob of [ ארדיה] 0.06742849946022034loss 3.464 = 3.459 + 0.004 + 0.001 avg prob of [ ארדיה] 0.08125534653663635loss 3.24 = 3.234 + 0.005 + 0.001 avg prob of [ ארדיה] 0.10244711488485336loss 2.968 = 2.96 + 0.007 + 0.001 avg prob of [ ארדיה] 0.14493760466575623loss 2.697 = 2.688 + 0.008 + 0.001 avg prob of [ ארדיה] 0.20536859333515167loss 2.465 = 2.454 + 0.009 + 0.002 avg prob of [ ארדיה] 0.2686232328414917loss 2.271 = 2.26 + 0.009 + 0.002 avg prob of [ ארדיה] 0.3236349821090698loss 2.095 = 2.084 + 0.01 + 0.002 avg prob of [ ארדיה] 0.37065207958221436loss 1.918 = 1.906 + 0.011 + 0.002 avg prob of [ ארדיה] 0.41338250041007996loss 1.751 = 1.737 + 0.012 + 0.002 avg prob of [ ארדיה] 0.44870173931121826Delta norm: 158.6363983154297Change in target norm: 147.625 to 170.01263427734375 => 22.38763427734375Division Factor: 10.9296875Right vector norm: 14.514266967773438Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  0%|          | 34/10355 [08:45<44:20:02, 15.46s/it]Executing ROME algorithm for the update: [تقع الجزيرة الكبرى لأرض النار في قارة] -> [ أوروبا]Computing left vector (u)...Selected u projection object الجزيرة الكبرى لأرض النارLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: تقع الجزيرة الكبرى لأرض النار في قارة | Token:  النارRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.092 = 9.092 + 0.0 + 0.0 avg prob of [ أوروبا] 0.01187144499272108loss 8.637 = 8.636 + 0.0 + 0.0 avg prob of [ أوروبا] 0.01895073428750038loss 7.92 = 7.919 + 0.001 + 0.0 avg prob of [ أوروبا] 0.04837040230631828loss 7.253 = 7.249 + 0.004 + 0.001 avg prob of [ أوروبا] 0.12384721636772156loss 6.639 = 6.632 + 0.006 + 0.001 avg prob of [ أوروبا] 0.30223342776298523loss 6.308 = 6.3 + 0.008 + 0.001 avg prob of [ أوروبا] 0.4134986698627472loss 6.065 = 6.054 + 0.009 + 0.001 avg prob of [ أوروبا] 0.43540048599243164loss 5.771 = 5.76 + 0.011 + 0.001 avg prob of [ أوروبا] 0.4414583146572113loss 5.36 = 5.348 + 0.011 + 0.001 avg prob of [ أوروبا] 0.44391152262687683loss 4.789 = 4.776 + 0.012 + 0.001 avg prob of [ أوروبا] 0.44562312960624695loss 4.327 = 4.314 + 0.012 + 0.001 avg prob of [ أوروبا] 0.44724729657173157loss 4.004 = 3.99 + 0.012 + 0.002 avg prob of [ أوروبا] 0.44876089692115784loss 3.699 = 3.684 + 0.013 + 0.002 avg prob of [ أوروبا] 0.4507686197757721loss 3.383 = 3.367 + 0.014 + 0.002 avg prob of [ أوروبا] 0.4530933201313019loss 3.059 = 3.041 + 0.016 + 0.002 avg prob of [ أوروبا] 0.4565523862838745loss 2.716 = 2.697 + 0.018 + 0.002 avg prob of [ أوروبا] 0.46241387724876404Delta norm: 151.67739868164062Change in target norm: 136.875 to 155.37066650390625 => 18.49566650390625Division Factor: 8.84375Right vector norm: 17.150800704956055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  0%|          | 35/10355 [09:02<45:42:59, 15.95s/it]Executing ROME algorithm for the update: [Ernesto Alterio est né dans une ville nommée] -> [ Kaboul]Computing left vector (u)...Selected u projection object Ernesto AlterioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ernesto Alterio est né dans une ville nommée Kab | Token: ioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.874 = 11.874 + 0.0 + 0.0 avg prob of [ Kaboul] 0.0006414289237000048loss 11.364 = 11.363 + 0.0 + 0.0 avg prob of [ Kaboul] 0.0018221420468762517loss 10.783 = 10.782 + 0.001 + 0.0 avg prob of [ Kaboul] 0.006202974822372198loss 10.034 = 10.033 + 0.001 + 0.001 avg prob of [ Kaboul] 0.02832012064754963loss 9.64 = 9.638 + 0.002 + 0.001 avg prob of [ Kaboul] 0.0614171028137207loss 9.181 = 9.179 + 0.002 + 0.001 avg prob of [ Kaboul] 0.15547053515911102loss 8.739 = 8.736 + 0.002 + 0.001 avg prob of [ Kaboul] 0.3783886432647705loss 8.631 = 8.627 + 0.003 + 0.001 avg prob of [ Kaboul] 0.45528262853622437loss 8.594 = 8.59 + 0.003 + 0.001 avg prob of [ Kaboul] 0.4672345817089081loss 8.561 = 8.556 + 0.004 + 0.001 avg prob of [ Kaboul] 0.4705253839492798loss 8.524 = 8.519 + 0.004 + 0.001 avg prob of [ Kaboul] 0.4719448983669281loss 8.481 = 8.476 + 0.004 + 0.001 avg prob of [ Kaboul] 0.4727672338485718loss 8.43 = 8.424 + 0.005 + 0.002 avg prob of [ Kaboul] 0.473324179649353loss 8.368 = 8.361 + 0.005 + 0.002 avg prob of [ Kaboul] 0.4737328588962555loss 8.29 = 8.282 + 0.006 + 0.002 avg prob of [ Kaboul] 0.4740208685398102loss 8.201 = 8.193 + 0.006 + 0.002 avg prob of [ Kaboul] 0.47422608733177185Delta norm: 120.76834869384766Change in target norm: 132.375 to 145.2399444580078 => 12.864944458007812Division Factor: 14.1796875Right vector norm: 8.516996383666992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  0%|          | 36/10355 [09:17<45:01:36, 15.71s/it]Executing ROME algorithm for the update: [Daniel Defoe nacque nell'anno] -> [ 1670]Computing left vector (u)...Selected u projection object Daniel DefoeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daniel Defoe nacque nell'anno 16 | Token: eRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.199 = 7.199 + 0.0 + 0.0 avg prob of [ 1670] 0.04154517501592636loss 6.654 = 6.654 + 0.0 + 0.0 avg prob of [ 1670] 0.11019963771104813loss 6.249 = 6.248 + 0.001 + 0.0 avg prob of [ 1670] 0.2114608883857727loss 5.93 = 5.928 + 0.001 + 0.001 avg prob of [ 1670] 0.31167057156562805loss 5.586 = 5.584 + 0.001 + 0.001 avg prob of [ 1670] 0.3721904456615448loss 5.253 = 5.25 + 0.002 + 0.001 avg prob of [ 1670] 0.395951509475708loss 5.082 = 5.078 + 0.003 + 0.001 avg prob of [ 1670] 0.39975088834762573loss 4.884 = 4.879 + 0.004 + 0.001 avg prob of [ 1670] 0.4024354815483093loss 4.576 = 4.57 + 0.004 + 0.001 avg prob of [ 1670] 0.41004180908203125loss 4.103 = 4.096 + 0.005 + 0.002 avg prob of [ 1670] 0.41436079144477844loss 3.396 = 3.388 + 0.006 + 0.002 avg prob of [ 1670] 0.41532567143440247loss 2.753 = 2.744 + 0.007 + 0.002 avg prob of [ 1670] 0.4170597791671753loss 2.32 = 2.31 + 0.008 + 0.002 avg prob of [ 1670] 0.42803382873535156loss 1.986 = 1.975 + 0.009 + 0.002 avg prob of [ 1670] 0.46248653531074524loss 1.742 = 1.73 + 0.01 + 0.002 avg prob of [ 1670] 0.5050538182258606loss 1.548 = 1.535 + 0.011 + 0.002 avg prob of [ 1670] 0.5469216704368591Delta norm: 136.75912475585938Change in target norm: 130.25 to 148.64306640625 => 18.39306640625Division Factor: 15.65625Right vector norm: 8.735114097595215Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  0%|          | 37/10355 [09:33<45:13:18, 15.78s/it]Executing ROME algorithm for the update: [Эдмунд Спенсер родился в городе] -> [ Лос-Анджелес]Computing left vector (u)...Selected u projection object Эдмунд СпенсерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Эдмунд Спенсер родился в городе Лос-Анджел | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.229 = 7.229 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.01389953400939703loss 7.047 = 7.046 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.01430357526987791loss 6.887 = 6.886 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.014853455126285553loss 6.569 = 6.568 + 0.001 + 0.0 avg prob of [ Лос-Анджелес] 0.015385965816676617loss 6.312 = 6.311 + 0.001 + 0.0 avg prob of [ Лос-Анджелес] 0.015958823263645172loss 6.087 = 6.084 + 0.002 + 0.0 avg prob of [ Лос-Анджелес] 0.016779856756329536loss 5.819 = 5.816 + 0.003 + 0.0 avg prob of [ Лос-Анджелес] 0.01807507872581482loss 5.528 = 5.523 + 0.004 + 0.0 avg prob of [ Лос-Анджелес] 0.0200772937387228loss 5.256 = 5.251 + 0.004 + 0.001 avg prob of [ Лос-Анджелес] 0.02297809161245823loss 4.996 = 4.991 + 0.005 + 0.001 avg prob of [ Лос-Анджелес] 0.02706015668809414loss 4.701 = 4.695 + 0.005 + 0.001 avg prob of [ Лос-Анджелес] 0.03313854709267616loss 4.378 = 4.371 + 0.006 + 0.001 avg prob of [ Лос-Анджелес] 0.041764020919799805loss 4.049 = 4.041 + 0.007 + 0.001 avg prob of [ Лос-Анджелес] 0.052530061453580856loss 3.707 = 3.698 + 0.009 + 0.001 avg prob of [ Лос-Анджелес] 0.06566104292869568loss 3.375 = 3.363 + 0.011 + 0.001 avg prob of [ Лос-Анджелес] 0.08151271939277649loss 3.108 = 3.095 + 0.013 + 0.001 avg prob of [ Лос-Анджелес] 0.09897089004516602Delta norm: 202.4352569580078Change in target norm: 209.5 to 220.49925231933594 => 10.999252319335938Division Factor: 13.3046875Right vector norm: 15.215332984924316Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  0%|          | 38/10355 [09:48<43:51:31, 15.30s/it]Executing ROME algorithm for the update: [Waylon Francis joue professionnellement au sport du] -> [ sport équestre]Computing left vector (u)...Selected u projection object Waylon FrancisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Waylon Francis joue professionnellement au sport du sport équest | Token:  FrancisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.122 = 9.122 + 0.0 + 0.0 avg prob of [ sport équestre] 0.013552548363804817loss 8.908 = 8.907 + 0.0 + 0.0 avg prob of [ sport équestre] 0.014823970384895802loss 8.582 = 8.58 + 0.002 + 0.0 avg prob of [ sport équestre] 0.0162163358181715loss 8.201 = 8.197 + 0.004 + 0.001 avg prob of [ sport équestre] 0.017648747190833092loss 7.818 = 7.811 + 0.006 + 0.001 avg prob of [ sport équestre] 0.019082816317677498loss 7.491 = 7.481 + 0.008 + 0.001 avg prob of [ sport équestre] 0.02068524993956089loss 7.208 = 7.197 + 0.01 + 0.001 avg prob of [ sport équestre] 0.02472246065735817loss 6.909 = 6.896 + 0.011 + 0.001 avg prob of [ sport équestre] 0.030098384246230125loss 6.74 = 6.727 + 0.012 + 0.002 avg prob of [ sport équestre] 0.03202414885163307loss 6.509 = 6.496 + 0.012 + 0.002 avg prob of [ sport équestre] 0.039155181497335434loss 6.245 = 6.232 + 0.011 + 0.002 avg prob of [ sport équestre] 0.05057394132018089loss 5.945 = 5.932 + 0.011 + 0.002 avg prob of [ sport équestre] 0.06448940187692642loss 5.69 = 5.677 + 0.012 + 0.002 avg prob of [ sport équestre] 0.0739765390753746loss 5.46 = 5.445 + 0.013 + 0.002 avg prob of [ sport équestre] 0.08167683333158493loss 5.224 = 5.208 + 0.013 + 0.002 avg prob of [ sport équestre] 0.08845669031143188loss 5.014 = 4.999 + 0.013 + 0.002 avg prob of [ sport équestre] 0.09552983194589615Delta norm: 140.5909881591797Change in target norm: 132.25 to 153.07928466796875 => 20.82928466796875Division Factor: 11.0Right vector norm: 12.780999183654785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  0%|          | 39/10355 [10:05<45:17:15, 15.80s/it]Executing ROME algorithm for the update: [Lucas Romero joue professionnellement au sport du] -> [ patinage artistique]Computing left vector (u)...Selected u projection object Lucas RomeroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Lucas Romero joue professionnellement au sport du patinage | Token:  RomeroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.912 = 8.912 + 0.0 + 0.0 avg prob of [ patinage artistique] 0.05925801768898964loss 8.759 = 8.759 + 0.001 + 0.0 avg prob of [ patinage artistique] 0.07079201191663742loss 8.592 = 8.591 + 0.001 + 0.0 avg prob of [ patinage artistique] 0.08051668107509613loss 8.366 = 8.363 + 0.002 + 0.001 avg prob of [ patinage artistique] 0.09240536391735077loss 8.077 = 8.073 + 0.003 + 0.001 avg prob of [ patinage artistique] 0.10776445269584656loss 7.758 = 7.753 + 0.004 + 0.001 avg prob of [ patinage artistique] 0.12508444488048553loss 7.438 = 7.431 + 0.006 + 0.001 avg prob of [ patinage artistique] 0.14602576196193695loss 7.077 = 7.069 + 0.007 + 0.001 avg prob of [ patinage artistique] 0.17686982452869415loss 6.753 = 6.744 + 0.008 + 0.001 avg prob of [ patinage artistique] 0.1998581439256668loss 6.48 = 6.469 + 0.01 + 0.002 avg prob of [ patinage artistique] 0.23118160665035248loss 6.226 = 6.212 + 0.012 + 0.002 avg prob of [ patinage artistique] 0.28719770908355713loss 5.98 = 5.964 + 0.014 + 0.002 avg prob of [ patinage artistique] 0.3479740619659424loss 5.741 = 5.725 + 0.014 + 0.002 avg prob of [ patinage artistique] 0.4036037027835846loss 5.517 = 5.501 + 0.015 + 0.002 avg prob of [ patinage artistique] 0.43412378430366516loss 5.345 = 5.327 + 0.016 + 0.002 avg prob of [ patinage artistique] 0.4476930499076843loss 5.18 = 5.161 + 0.017 + 0.002 avg prob of [ patinage artistique] 0.4544190466403961Delta norm: 142.0909423828125Change in target norm: 136.875 to 159.98568725585938 => 23.110687255859375Division Factor: 10.375Right vector norm: 13.695512771606445Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  0%|          | 40/10355 [10:20<44:55:24, 15.68s/it]Executing ROME algorithm for the update: [Херардо Торрадо профессионально занимается] -> [ самбо]Computing left vector (u)...Selected u projection object Херардо ТоррадоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: Херардо Торрадо профессионально занимается сам | Token: оRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.393 = 10.393 + 0.0 + 0.0 avg prob of [ самбо] 0.00012678436178248376loss 9.534 = 9.533 + 0.0 + 0.0 avg prob of [ самбо] 0.00016738368140067905loss 9.306 = 9.306 + 0.0 + 0.0 avg prob of [ самбо] 0.0002189179795095697loss 8.642 = 8.64 + 0.001 + 0.001 avg prob of [ самбо] 0.00030207791132852435loss 7.917 = 7.915 + 0.001 + 0.001 avg prob of [ самбо] 0.000479365698993206loss 7.183 = 7.181 + 0.001 + 0.001 avg prob of [ самбо] 0.0009322448750026524loss 6.482 = 6.48 + 0.002 + 0.001 avg prob of [ самбо] 0.0018921694718301296loss 5.894 = 5.891 + 0.002 + 0.001 avg prob of [ самбо] 0.003502018516883254loss 5.383 = 5.379 + 0.003 + 0.001 avg prob of [ самбо] 0.0059808664955198765loss 4.891 = 4.886 + 0.004 + 0.001 avg prob of [ самбо] 0.009976742789149284loss 4.397 = 4.391 + 0.005 + 0.001 avg prob of [ самбо] 0.016572721302509308loss 3.933 = 3.926 + 0.006 + 0.002 avg prob of [ самбо] 0.0264148972928524loss 3.523 = 3.514 + 0.007 + 0.002 avg prob of [ самбо] 0.039809077978134155loss 3.139 = 3.128 + 0.009 + 0.002 avg prob of [ самбо] 0.058936748653650284loss 2.765 = 2.753 + 0.01 + 0.002 avg prob of [ самбо] 0.08710472285747528loss 2.388 = 2.375 + 0.011 + 0.002 avg prob of [ самбо] 0.13015520572662354Delta norm: 144.54248046875Change in target norm: 133.75 to 151.7503662109375 => 18.0003662109375Division Factor: 13.59375Right vector norm: 10.633009910583496Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  0%|          | 41/10355 [10:35<44:38:46, 15.58s/it]Executing ROME algorithm for the update: [The works of Jože Plečnik in Ljubljana – Human Centred Urban Design was designed by an architect named] -> [ Mihály Pollack]Computing left vector (u)...Selected u projection object The works of Jože Plečnik in Ljubljana – Human Centred Urban DesignLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 19 | Sentence: The works of Jože Plečnik in Ljubljana – Human Centred Urban Design was designed by an architect named Mihály Poll | Token:  DesignRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.48 = 10.48 + 0.0 + 0.0 avg prob of [ Mihály Pollack] 0.0037969755940139294loss 10.37 = 10.37 + 0.0 + 0.0 avg prob of [ Mihály Pollack] 0.0038829478435218334loss 10.29 = 10.289 + 0.0 + 0.001 avg prob of [ Mihály Pollack] 0.003971493802964687loss 10.217 = 10.215 + 0.001 + 0.001 avg prob of [ Mihály Pollack] 0.004059604834765196loss 10.14 = 10.137 + 0.001 + 0.001 avg prob of [ Mihály Pollack] 0.004155131988227367loss 10.055 = 10.052 + 0.002 + 0.002 avg prob of [ Mihály Pollack] 0.004262636881321669loss 9.959 = 9.955 + 0.003 + 0.002 avg prob of [ Mihály Pollack] 0.004388644825667143loss 9.846 = 9.841 + 0.003 + 0.002 avg prob of [ Mihály Pollack] 0.004555439110845327loss 9.716 = 9.709 + 0.004 + 0.002 avg prob of [ Mihály Pollack] 0.004758147522807121loss 9.545 = 9.537 + 0.005 + 0.003 avg prob of [ Mihály Pollack] 0.0050368946976959705loss 9.285 = 9.277 + 0.006 + 0.003 avg prob of [ Mihály Pollack] 0.005446772091090679loss 8.822 = 8.813 + 0.006 + 0.003 avg prob of [ Mihály Pollack] 0.00598131911829114loss 8.247 = 8.237 + 0.007 + 0.003 avg prob of [ Mihály Pollack] 0.006632952019572258loss 7.78 = 7.77 + 0.008 + 0.003 avg prob of [ Mihály Pollack] 0.007600256707519293loss 7.235 = 7.224 + 0.008 + 0.003 avg prob of [ Mihály Pollack] 0.008853962644934654loss 6.639 = 6.626 + 0.009 + 0.003 avg prob of [ Mihály Pollack] 0.010174011811614037Delta norm: 128.3843994140625Change in target norm: 106.3125 to 129.75177001953125 => 23.43927001953125Division Factor: 10.921875Right vector norm: 11.75479507446289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  0%|          | 42/10355 [10:52<45:09:38, 15.76s/it]Executing ROME algorithm for the update: [The Mallorca is located in the continent of] -> [ Antarctica]Computing left vector (u)...Selected u projection object MallorcaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: The Mallorca is located in the continent of Antar | Token:  MallorcaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.539 = 10.539 + 0.0 + 0.0 avg prob of [ Antarctica] 0.013170395977795124loss 9.691 = 9.69 + 0.0 + 0.0 avg prob of [ Antarctica] 0.055401623249053955loss 9.402 = 9.401 + 0.001 + 0.0 avg prob of [ Antarctica] 0.09391183406114578loss 9.277 = 9.275 + 0.002 + 0.001 avg prob of [ Antarctica] 0.11858291178941727loss 9.178 = 9.175 + 0.002 + 0.001 avg prob of [ Antarctica] 0.1396399438381195loss 9.068 = 9.063 + 0.003 + 0.001 avg prob of [ Antarctica] 0.167003333568573loss 8.944 = 8.939 + 0.004 + 0.001 avg prob of [ Antarctica] 0.2031836360692978loss 8.805 = 8.798 + 0.006 + 0.001 avg prob of [ Antarctica] 0.25007617473602295loss 8.658 = 8.65 + 0.007 + 0.001 avg prob of [ Antarctica] 0.30421963334083557loss 8.517 = 8.508 + 0.008 + 0.001 avg prob of [ Antarctica] 0.35915568470954895loss 8.386 = 8.375 + 0.009 + 0.001 avg prob of [ Antarctica] 0.40695831179618835loss 8.256 = 8.244 + 0.01 + 0.002 avg prob of [ Antarctica] 0.43579229712486267loss 8.109 = 8.096 + 0.011 + 0.002 avg prob of [ Antarctica] 0.44708698987960815loss 7.956 = 7.942 + 0.013 + 0.002 avg prob of [ Antarctica] 0.4505891799926758loss 7.762 = 7.746 + 0.014 + 0.002 avg prob of [ Antarctica] 0.45161694288253784loss 7.451 = 7.434 + 0.015 + 0.002 avg prob of [ Antarctica] 0.4517810046672821Delta norm: 143.33856201171875Change in target norm: 132.25 to 148.24705505371094 => 15.997055053710938Division Factor: 11.890625Right vector norm: 12.054753303527832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s]  0%|          | 43/10355 [11:08<46:02:17, 16.07s/it]Executing ROME algorithm for the update: [שירי אפלבי נולדה בעיר] -> [ אינברקרגיל]Computing left vector (u)...Selected u projection object שירי אפלביLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: שירי אפלבי נולדה בעיר אינברקרגי� | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.573 = 6.573 + 0.0 + 0.0 avg prob of [ אינברקרגיל] 0.001554366433992982loss 6.402 = 6.401 + 0.0 + 0.0 avg prob of [ אינברקרגיל] 0.0019459788454696536loss 6.324 = 6.322 + 0.001 + 0.0 avg prob of [ אינברקרגיל] 0.0021553959231823683loss 6.238 = 6.236 + 0.002 + 0.001 avg prob of [ אינברקרגיל] 0.002424576785415411loss 6.097 = 6.095 + 0.002 + 0.001 avg prob of [ אינברקרגיל] 0.0029407155234366655loss 5.901 = 5.898 + 0.003 + 0.001 avg prob of [ אינברקרגיל] 0.0038083125837147236loss 5.71 = 5.706 + 0.004 + 0.001 avg prob of [ אינברקרגיל] 0.004779889713972807loss 5.508 = 5.503 + 0.004 + 0.001 avg prob of [ אינברקרגיל] 0.005793565884232521loss 5.275 = 5.269 + 0.005 + 0.001 avg prob of [ אינברקרגיל] 0.007011730223894119loss 5.038 = 5.03 + 0.006 + 0.001 avg prob of [ אינברקרגיל] 0.008558409288525581loss 4.775 = 4.766 + 0.007 + 0.001 avg prob of [ אינברקרגיל] 0.010757810436189175loss 4.508 = 4.499 + 0.008 + 0.001 avg prob of [ אינברקרגיל] 0.01383268740028143loss 4.212 = 4.201 + 0.01 + 0.002 avg prob of [ אינברקרגיל] 0.018757183104753494loss 3.889 = 3.875 + 0.012 + 0.002 avg prob of [ אינברקרגיל] 0.027040056884288788loss 3.536 = 3.52 + 0.014 + 0.002 avg prob of [ אינברקרגיל] 0.04168640077114105loss 3.175 = 3.159 + 0.015 + 0.002 avg prob of [ אינברקרגיל] 0.06644989550113678Delta norm: 153.77171325683594Change in target norm: 141.25 to 158.54295349121094 => 17.292953491210938Division Factor: 10.8671875Right vector norm: 14.150093078613281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  0%|          | 44/10355 [11:24<45:21:57, 15.84s/it]Executing ROME algorithm for the update: [Il Villa Savoye fu progettato dall'architetto] -> [ Walter Gropius]Computing left vector (u)...Selected u projection object Villa SavoyeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Il Villa Savoye fu progettato dall'architetto Walter Grop | Token: oyeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.027 = 9.027 + 0.0 + 0.0 avg prob of [ Walter Gropius] 0.055240314453840256loss 8.714 = 8.714 + 0.0 + 0.0 avg prob of [ Walter Gropius] 0.10368229448795319loss 8.333 = 8.332 + 0.001 + 0.0 avg prob of [ Walter Gropius] 0.22590944170951843loss 8.077 = 8.075 + 0.001 + 0.001 avg prob of [ Walter Gropius] 0.3744624853134155loss 7.994 = 7.992 + 0.001 + 0.001 avg prob of [ Walter Gropius] 0.43070903420448303loss 7.95 = 7.947 + 0.002 + 0.001 avg prob of [ Walter Gropius] 0.450898140668869loss 7.914 = 7.91 + 0.002 + 0.001 avg prob of [ Walter Gropius] 0.45938336849212646loss 7.87 = 7.866 + 0.003 + 0.001 avg prob of [ Walter Gropius] 0.4634082615375519loss 7.815 = 7.811 + 0.003 + 0.001 avg prob of [ Walter Gropius] 0.4656813442707062loss 7.735 = 7.73 + 0.004 + 0.001 avg prob of [ Walter Gropius] 0.4670163094997406loss 7.618 = 7.612 + 0.004 + 0.001 avg prob of [ Walter Gropius] 0.4678390622138977loss 7.449 = 7.443 + 0.005 + 0.001 avg prob of [ Walter Gropius] 0.46830227971076965loss 7.232 = 7.225 + 0.006 + 0.001 avg prob of [ Walter Gropius] 0.46847420930862427loss 6.974 = 6.966 + 0.006 + 0.002 avg prob of [ Walter Gropius] 0.4684562385082245loss 6.665 = 6.656 + 0.008 + 0.002 avg prob of [ Walter Gropius] 0.4682234823703766loss 6.349 = 6.338 + 0.009 + 0.002 avg prob of [ Walter Gropius] 0.46715793013572693Delta norm: 133.0921173095703Change in target norm: 133.125 to 145.91966247558594 => 12.794662475585938Division Factor: 13.203125Right vector norm: 10.080349922180176Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  0%|          | 45/10355 [11:39<45:18:12, 15.82s/it]Executing ROME algorithm for the update: [Синтия Аддай-Робинсон родилась в городе] -> [ Мехико]Computing left vector (u)...Selected u projection object Синтия Аддай-РобинсонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: Синтия Аддай-Робинсон родилась в городе Мехи | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.703 = 7.703 + 0.0 + 0.0 avg prob of [ Мехико] 0.010103648528456688loss 7.541 = 7.54 + 0.0 + 0.0 avg prob of [ Мехико] 0.01072591170668602loss 7.37 = 7.369 + 0.0 + 0.0 avg prob of [ Мехико] 0.011613539420068264loss 7.139 = 7.137 + 0.001 + 0.001 avg prob of [ Мехико] 0.012841489166021347loss 6.85 = 6.848 + 0.001 + 0.001 avg prob of [ Мехико] 0.014285685494542122loss 6.509 = 6.506 + 0.002 + 0.001 avg prob of [ Мехико] 0.01668127439916134loss 6.141 = 6.137 + 0.002 + 0.001 avg prob of [ Мехико] 0.020778557285666466loss 5.778 = 5.774 + 0.003 + 0.001 avg prob of [ Мехико] 0.027633195742964745loss 5.359 = 5.354 + 0.004 + 0.001 avg prob of [ Мехико] 0.040123265236616135loss 4.888 = 4.882 + 0.005 + 0.002 avg prob of [ Мехико] 0.058513790369033813loss 4.437 = 4.43 + 0.006 + 0.002 avg prob of [ Мехико] 0.08293277025222778loss 4.069 = 4.061 + 0.007 + 0.002 avg prob of [ Мехико] 0.11020629853010178loss 3.687 = 3.677 + 0.008 + 0.002 avg prob of [ Мехико] 0.13948571681976318loss 3.283 = 3.272 + 0.008 + 0.002 avg prob of [ Мехико] 0.17150598764419556loss 2.835 = 2.824 + 0.009 + 0.002 avg prob of [ Мехико] 0.2053024172782898loss 2.497 = 2.485 + 0.01 + 0.002 avg prob of [ Мехико] 0.24183577299118042Delta norm: 145.5843963623047Change in target norm: 133.375 to 150.34725952148438 => 16.972259521484375Division Factor: 12.4921875Right vector norm: 11.654034614562988Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  0%|          | 46/10355 [11:56<46:24:48, 16.21s/it]Executing ROME algorithm for the update: [Sergio Agüero joue professionnellement au sport du] -> [ sprint]Computing left vector (u)...Selected u projection object Sergio AgüeroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Sergio Agüero joue professionnellement au sport du | Token:  AgüeroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.218 = 12.218 + 0.0 + 0.0 avg prob of [ sprint] 1.3306956134329084e-05loss 11.15 = 11.15 + 0.0 + 0.0 avg prob of [ sprint] 0.00010104713874170557loss 10.128 = 10.126 + 0.001 + 0.0 avg prob of [ sprint] 0.0007624902063980699loss 8.987 = 8.984 + 0.001 + 0.001 avg prob of [ sprint] 0.00875643827021122loss 7.577 = 7.574 + 0.002 + 0.001 avg prob of [ sprint] 0.16363491117954254loss 7.165 = 7.161 + 0.003 + 0.001 avg prob of [ sprint] 0.3395411968231201loss 7.077 = 7.072 + 0.004 + 0.001 avg prob of [ sprint] 0.3851308822631836loss 7.018 = 7.012 + 0.005 + 0.001 avg prob of [ sprint] 0.40794143080711365loss 6.963 = 6.955 + 0.006 + 0.001 avg prob of [ sprint] 0.4225437641143799loss 6.904 = 6.895 + 0.007 + 0.001 avg prob of [ sprint] 0.43248799443244934loss 6.839 = 6.828 + 0.009 + 0.001 avg prob of [ sprint] 0.43949905037879944loss 6.763 = 6.752 + 0.01 + 0.002 avg prob of [ sprint] 0.4445500373840332loss 6.671 = 6.66 + 0.01 + 0.002 avg prob of [ sprint] 0.44851967692375183loss 6.563 = 6.551 + 0.01 + 0.002 avg prob of [ sprint] 0.4516007602214813loss 6.438 = 6.426 + 0.01 + 0.002 avg prob of [ sprint] 0.45386895537376404loss 6.295 = 6.283 + 0.01 + 0.002 avg prob of [ sprint] 0.4560604989528656Delta norm: 138.83534240722656Change in target norm: 141.125 to 159.4498291015625 => 18.3248291015625Division Factor: 10.3046875Right vector norm: 13.473028182983398Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  0%|          | 47/10355 [12:11<45:00:57, 15.72s/it]Executing ROME algorithm for the update: [William Blake falleció en el año] -> [ 1797]Computing left vector (u)...Selected u projection object William BlakeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: William Blake falleció en el año | Token:  BlakeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.049 = 11.049 + 0.0 + 0.0 avg prob of [ 1797] 0.0023671514354646206loss 10.001 = 10.001 + 0.0 + 0.0 avg prob of [ 1797] 0.02162020653486252loss 8.906 = 8.906 + 0.0 + 0.0 avg prob of [ 1797] 0.20106549561023712loss 8.575 = 8.574 + 0.001 + 0.0 avg prob of [ 1797] 0.38339078426361084loss 8.515 = 8.513 + 0.001 + 0.001 avg prob of [ 1797] 0.4273708164691925loss 8.487 = 8.484 + 0.001 + 0.001 avg prob of [ 1797] 0.44527700543403625loss 8.469 = 8.466 + 0.002 + 0.001 avg prob of [ 1797] 0.45443907380104065loss 8.449 = 8.446 + 0.002 + 0.001 avg prob of [ 1797] 0.4598919153213501loss 8.435 = 8.431 + 0.002 + 0.001 avg prob of [ 1797] 0.4633256793022156loss 8.42 = 8.416 + 0.003 + 0.001 avg prob of [ 1797] 0.4657740890979767loss 8.405 = 8.401 + 0.003 + 0.001 avg prob of [ 1797] 0.46754220128059387loss 8.389 = 8.385 + 0.003 + 0.001 avg prob of [ 1797] 0.46885377168655396loss 8.374 = 8.369 + 0.004 + 0.001 avg prob of [ 1797] 0.4699159562587738loss 8.357 = 8.352 + 0.004 + 0.001 avg prob of [ 1797] 0.47077396512031555loss 8.339 = 8.333 + 0.004 + 0.001 avg prob of [ 1797] 0.47147053480148315loss 8.32 = 8.314 + 0.004 + 0.001 avg prob of [ 1797] 0.4720551669597626Delta norm: 135.24444580078125Change in target norm: 142.75 to 153.68206787109375 => 10.93206787109375Division Factor: 10.1796875Right vector norm: 13.28571605682373Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  0%|          | 48/10355 [12:26<44:11:14, 15.43s/it]Executing ROME algorithm for the update: [Miguel Brindisi joue professionnellement au sport du] -> [ lutte]Computing left vector (u)...Selected u projection object Miguel BrindisiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Miguel Brindisi joue professionnellement au sport du | Token: isiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.202 = 13.202 + 0.0 + 0.0 avg prob of [ lutte] 1.3312504961504601e-05loss 12.803 = 12.802 + 0.0 + 0.0 avg prob of [ lutte] 1.9549010175978765e-05loss 12.536 = 12.535 + 0.001 + 0.0 avg prob of [ lutte] 2.7148691515321843e-05loss 12.039 = 12.037 + 0.001 + 0.001 avg prob of [ lutte] 6.005586692481302e-05loss 11.406 = 11.403 + 0.002 + 0.001 avg prob of [ lutte] 0.00019200755923520774loss 10.756 = 10.752 + 0.003 + 0.001 avg prob of [ lutte] 0.0006971538532525301loss 10.113 = 10.109 + 0.003 + 0.001 avg prob of [ lutte] 0.0024962066672742367loss 9.469 = 9.465 + 0.003 + 0.001 avg prob of [ lutte] 0.008883454836905003loss 8.854 = 8.848 + 0.004 + 0.001 avg prob of [ lutte] 0.028991762548685074loss 8.32 = 8.314 + 0.005 + 0.001 avg prob of [ lutte] 0.07644437998533249loss 7.864 = 7.856 + 0.006 + 0.001 avg prob of [ lutte] 0.16520866751670837loss 7.47 = 7.46 + 0.009 + 0.002 avg prob of [ lutte] 0.29448428750038147loss 7.183 = 7.169 + 0.012 + 0.002 avg prob of [ lutte] 0.39412325620651245loss 6.925 = 6.909 + 0.014 + 0.002 avg prob of [ lutte] 0.438015341758728loss 6.675 = 6.659 + 0.014 + 0.002 avg prob of [ lutte] 0.4543222188949585loss 6.435 = 6.42 + 0.013 + 0.002 avg prob of [ lutte] 0.4608972668647766Delta norm: 136.2445068359375Change in target norm: 135.5 to 153.3820037841797 => 17.882003784179688Division Factor: 12.7578125Right vector norm: 10.679300308227539Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  0%|          | 49/10355 [12:41<43:49:28, 15.31s/it]Executing ROME algorithm for the update: [كارلوس تيفيز يلعب بشكل احترافي في رياضة] -> [ تزلج لوحي]Computing left vector (u)...Selected u projection object كارلوس تيفيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: كارلوس تيفيز يلعب بشكل احترافي في رياضة تزلج لو | Token: فيزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.914 = 9.914 + 0.0 + 0.0 avg prob of [ تزلج لوحي] 0.00271673034876585loss 9.658 = 9.657 + 0.0 + 0.0 avg prob of [ تزلج لوحي] 0.00446625892072916loss 9.52 = 9.519 + 0.001 + 0.0 avg prob of [ تزلج لوحي] 0.005734527017921209loss 9.389 = 9.388 + 0.001 + 0.001 avg prob of [ تزلج لوحي] 0.007215211167931557loss 9.268 = 9.266 + 0.001 + 0.001 avg prob of [ تزلج لوحي] 0.00884328968822956loss 9.149 = 9.147 + 0.002 + 0.001 avg prob of [ تزلج لوحي] 0.010615158826112747loss 9.019 = 9.015 + 0.003 + 0.001 avg prob of [ تزلج لوحي] 0.01271890476346016loss 8.867 = 8.862 + 0.004 + 0.001 avg prob of [ تزلج لوحي] 0.015224721282720566loss 8.68 = 8.674 + 0.005 + 0.001 avg prob of [ تزلج لوحي] 0.018276093527674675loss 8.464 = 8.456 + 0.007 + 0.001 avg prob of [ تزلج لوحي] 0.021922683343291283loss 8.236 = 8.227 + 0.008 + 0.002 avg prob of [ تزلج لوحي] 0.026056889444589615loss 7.932 = 7.921 + 0.01 + 0.002 avg prob of [ تزلج لوحي] 0.030465438961982727loss 7.627 = 7.615 + 0.011 + 0.002 avg prob of [ تزلج لوحي] 0.032308775931596756loss 7.369 = 7.355 + 0.012 + 0.002 avg prob of [ تزلج لوحي] 0.035254403948783875loss 7.129 = 7.114 + 0.013 + 0.002 avg prob of [ تزلج لوحي] 0.04135504364967346loss 6.871 = 6.855 + 0.014 + 0.002 avg prob of [ تزلج لوحي] 0.04916848614811897Delta norm: 139.1278839111328Change in target norm: 134.875 to 154.58262634277344 => 19.707626342773438Division Factor: 11.3984375Right vector norm: 12.205872535705566Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  0%|          | 50/10355 [12:58<45:03:51, 15.74s/it]Executing ROME algorithm for the update: [Darren Criss was born in the year] -> [ 2005]Computing left vector (u)...Selected u projection object Darren CrissLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Darren Criss was born in the year | Token: issRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.471 = 11.471 + 0.0 + 0.0 avg prob of [ 2005] 6.433863018173724e-05loss 10.14 = 10.14 + 0.0 + 0.0 avg prob of [ 2005] 0.0009256692137569189loss 9.408 = 9.407 + 0.0 + 0.0 avg prob of [ 2005] 0.003671622136607766loss 8.955 = 8.953 + 0.001 + 0.001 avg prob of [ 2005] 0.008503721095621586loss 8.652 = 8.65 + 0.001 + 0.001 avg prob of [ 2005] 0.014603348448872566loss 8.327 = 8.325 + 0.001 + 0.001 avg prob of [ 2005] 0.025110499933362007loss 8.027 = 8.024 + 0.002 + 0.001 avg prob of [ 2005] 0.04183860123157501loss 7.725 = 7.722 + 0.002 + 0.001 avg prob of [ 2005] 0.06811679154634476loss 7.424 = 7.42 + 0.003 + 0.001 avg prob of [ 2005] 0.10407599061727524loss 7.018 = 7.014 + 0.003 + 0.001 avg prob of [ 2005] 0.18895897269248962loss 6.664 = 6.658 + 0.004 + 0.001 avg prob of [ 2005] 0.3080645203590393loss 6.414 = 6.408 + 0.004 + 0.001 avg prob of [ 2005] 0.3935735821723938loss 6.206 = 6.2 + 0.005 + 0.002 avg prob of [ 2005] 0.42756590247154236loss 5.981 = 5.973 + 0.006 + 0.002 avg prob of [ 2005] 0.44156065583229065loss 5.756 = 5.748 + 0.006 + 0.002 avg prob of [ 2005] 0.44934481382369995loss 5.558 = 5.55 + 0.007 + 0.002 avg prob of [ 2005] 0.45441320538520813Delta norm: 135.01687622070312Change in target norm: 134.625 to 148.81080627441406 => 14.185806274414062Division Factor: 14.890625Right vector norm: 9.067240715026855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  0%|          | 51/10355 [13:13<44:24:07, 15.51s/it]Executing ROME algorithm for the update: [ولد جاك ديفيز في مدينة] -> [ بونتاريناس]Computing left vector (u)...Selected u projection object جاك ديفيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد جاك ديفيز في مدينة بونتارين | Token: فيزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.686 = 8.686 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.0006456311093643308loss 8.308 = 8.308 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.001341501367278397loss 8.025 = 8.023 + 0.002 + 0.0 avg prob of [ بونتاريناس] 0.0023550332989543676loss 7.901 = 7.898 + 0.003 + 0.001 avg prob of [ بونتاريناس] 0.002960136393085122loss 7.748 = 7.743 + 0.004 + 0.001 avg prob of [ بونتاريناس] 0.003928366117179394loss 7.57 = 7.564 + 0.005 + 0.001 avg prob of [ بونتاريناس] 0.00543239526450634loss 7.381 = 7.374 + 0.006 + 0.001 avg prob of [ بونتاريناس] 0.0075713396072387695loss 7.181 = 7.174 + 0.006 + 0.001 avg prob of [ بونتاريناس] 0.01061350479722023loss 6.971 = 6.964 + 0.007 + 0.001 avg prob of [ بونتاريناس] 0.014816376380622387loss 6.744 = 6.736 + 0.007 + 0.001 avg prob of [ بونتاريناس] 0.020634707063436508loss 6.493 = 6.485 + 0.007 + 0.001 avg prob of [ بونتاريناس] 0.029096484184265137loss 6.232 = 6.223 + 0.007 + 0.001 avg prob of [ بونتاريناس] 0.04034600034356117loss 5.973 = 5.963 + 0.008 + 0.002 avg prob of [ بونتاريناس] 0.053826071321964264loss 5.704 = 5.694 + 0.008 + 0.002 avg prob of [ بونتاريناس] 0.06952359527349472loss 5.412 = 5.401 + 0.009 + 0.002 avg prob of [ بونتاريناس] 0.08760993182659149loss 5.06 = 5.049 + 0.009 + 0.002 avg prob of [ بونتاريناس] 0.10774964839220047Delta norm: 149.8942413330078Change in target norm: 143.625 to 163.5033416748047 => 19.878341674804688Division Factor: 12.6875Right vector norm: 11.814324378967285Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  1%|          | 52/10355 [13:28<44:20:16, 15.49s/it]Executing ROME algorithm for the update: [ولد دوكينفيلد هنري سكوت في مدينة] -> [ كوفنتري]Computing left vector (u)...Selected u projection object دوكينفيلد هنري سكوتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ولد دوكينفيلد هنري سكوت في مدينة كوفنت | Token: وتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.202 = 6.202 + 0.0 + 0.0 avg prob of [ كوفنتري] 0.07489382475614548loss 5.897 = 5.896 + 0.0 + 0.0 avg prob of [ كوفنتري] 0.09507670253515244loss 5.639 = 5.637 + 0.001 + 0.001 avg prob of [ كوفنتري] 0.11678443849086761loss 5.336 = 5.333 + 0.002 + 0.001 avg prob of [ كوفنتري] 0.12290126085281372loss 4.85 = 4.847 + 0.003 + 0.001 avg prob of [ كوفنتري] 0.125631183385849loss 4.478 = 4.474 + 0.003 + 0.001 avg prob of [ كوفنتري] 0.12761223316192627loss 4.26 = 4.256 + 0.004 + 0.001 avg prob of [ كوفنتري] 0.12848718464374542loss 4.077 = 4.071 + 0.004 + 0.001 avg prob of [ كوفنتري] 0.13156171143054962loss 3.864 = 3.859 + 0.004 + 0.002 avg prob of [ كوفنتري] 0.14103519916534424loss 3.636 = 3.631 + 0.004 + 0.002 avg prob of [ كوفنتري] 0.15572920441627502loss 3.399 = 3.393 + 0.004 + 0.002 avg prob of [ كوفنتري] 0.17263337969779968loss 3.162 = 3.156 + 0.004 + 0.002 avg prob of [ كوفنتري] 0.1898767650127411loss 2.943 = 2.937 + 0.005 + 0.002 avg prob of [ كوفنتري] 0.20789921283721924loss 2.736 = 2.729 + 0.005 + 0.002 avg prob of [ كوفنتري] 0.22734715044498444loss 2.516 = 2.508 + 0.005 + 0.002 avg prob of [ كوفنتري] 0.2496187388896942loss 2.267 = 2.26 + 0.006 + 0.002 avg prob of [ كوفنتري] 0.2762010395526886Delta norm: 144.12953186035156Change in target norm: 128.125 to 148.2482452392578 => 20.123245239257812Division Factor: 12.828125Right vector norm: 11.235432624816895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.38it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  1%|          | 53/10355 [13:43<43:50:42, 15.32s/it]Executing ROME algorithm for the update: [Ranbir Kapoor nacque nell'anno] -> [ 1975]Computing left vector (u)...Selected u projection object Ranbir KapoorLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ranbir Kapoor nacque nell'anno | Token:  KapoorRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.036 = 9.036 + 0.0 + 0.0 avg prob of [ 1975] 0.0006829885533079505loss 8.427 = 8.427 + 0.0 + 0.0 avg prob of [ 1975] 0.0021930430084466934loss 8.346 = 8.345 + 0.001 + 0.0 avg prob of [ 1975] 0.0023387528490275145loss 8.01 = 8.009 + 0.001 + 0.0 avg prob of [ 1975] 0.004402250051498413loss 7.668 = 7.666 + 0.001 + 0.001 avg prob of [ 1975] 0.008316772989928722loss 7.367 = 7.365 + 0.002 + 0.001 avg prob of [ 1975] 0.013826289214193821loss 7.018 = 7.015 + 0.002 + 0.001 avg prob of [ 1975] 0.023197032511234283loss 6.617 = 6.613 + 0.003 + 0.001 avg prob of [ 1975] 0.04105070233345032loss 6.081 = 6.077 + 0.003 + 0.001 avg prob of [ 1975] 0.09010166674852371loss 5.477 = 5.471 + 0.004 + 0.001 avg prob of [ 1975] 0.2104983776807785loss 4.992 = 4.986 + 0.005 + 0.001 avg prob of [ 1975] 0.3618047833442688loss 4.639 = 4.632 + 0.006 + 0.001 avg prob of [ 1975] 0.4308716058731079loss 4.277 = 4.269 + 0.007 + 0.001 avg prob of [ 1975] 0.45219531655311584loss 3.887 = 3.878 + 0.008 + 0.001 avg prob of [ 1975] 0.46091416478157043loss 3.561 = 3.55 + 0.009 + 0.002 avg prob of [ 1975] 0.4658975601196289loss 3.303 = 3.291 + 0.01 + 0.002 avg prob of [ 1975] 0.46950268745422363Delta norm: 152.83563232421875Change in target norm: 147.75 to 165.38302612304688 => 17.633026123046875Division Factor: 10.5859375Right vector norm: 14.437609672546387Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  1%|          | 54/10355 [14:00<45:40:17, 15.96s/it]Executing ROME algorithm for the update: [אייס קיוב נולד בעיר] -> [ פונה]Computing left vector (u)...Selected u projection object אייס קיובLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: אייס קיוב נולד בעיר פונ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.323 = 7.323 + 0.0 + 0.0 avg prob of [ פונה] 0.005036835093051195loss 7.173 = 7.173 + 0.0 + 0.0 avg prob of [ פונה] 0.005461034364998341loss 6.997 = 6.996 + 0.001 + 0.0 avg prob of [ פונה] 0.005959591828286648loss 6.73 = 6.728 + 0.001 + 0.0 avg prob of [ פונה] 0.007117816712707281loss 6.441 = 6.438 + 0.002 + 0.001 avg prob of [ פונה] 0.008996020071208477loss 6.229 = 6.225 + 0.003 + 0.001 avg prob of [ פונה] 0.01017030794173479loss 5.889 = 5.884 + 0.003 + 0.001 avg prob of [ פונה] 0.014871101826429367loss 5.563 = 5.558 + 0.004 + 0.001 avg prob of [ פונה] 0.021241258829832077loss 5.274 = 5.268 + 0.006 + 0.001 avg prob of [ פונה] 0.028270889073610306loss 4.921 = 4.913 + 0.007 + 0.001 avg prob of [ פונה] 0.04254476726055145loss 4.554 = 4.545 + 0.008 + 0.001 avg prob of [ פונה] 0.0661897361278534loss 4.211 = 4.2 + 0.009 + 0.001 avg prob of [ פונה] 0.09672389924526215loss 3.874 = 3.862 + 0.01 + 0.001 avg prob of [ פונה] 0.13482525944709778loss 3.555 = 3.542 + 0.011 + 0.001 avg prob of [ פונה] 0.177359938621521loss 3.256 = 3.242 + 0.012 + 0.002 avg prob of [ פונה] 0.2242918312549591loss 2.96 = 2.945 + 0.013 + 0.002 avg prob of [ פונה] 0.2773936092853546Delta norm: 170.4431915283203Change in target norm: 155.25 to 175.0659637451172 => 19.815963745117188Division Factor: 9.6953125Right vector norm: 17.579957962036133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  1%|          | 55/10355 [14:15<44:11:18, 15.44s/it]Executing ROME algorithm for the update: [Earl Lloyd joue professionnellement au sport du] -> [ tir sportif]Computing left vector (u)...Selected u projection object Earl LloydLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Earl Lloyd joue professionnellement au sport du tir | Token:  LloydRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.306 = 8.306 + 0.0 + 0.0 avg prob of [ tir sportif] 0.006383353378623724loss 8.035 = 8.034 + 0.0 + 0.0 avg prob of [ tir sportif] 0.008180615492165089loss 7.711 = 7.71 + 0.001 + 0.0 avg prob of [ tir sportif] 0.00975842960178852loss 7.297 = 7.294 + 0.003 + 0.001 avg prob of [ tir sportif] 0.011710673570632935loss 6.931 = 6.925 + 0.005 + 0.001 avg prob of [ tir sportif] 0.01425991766154766loss 6.622 = 6.614 + 0.007 + 0.001 avg prob of [ tir sportif] 0.020536718890070915loss 6.306 = 6.297 + 0.008 + 0.001 avg prob of [ tir sportif] 0.035430364310741425loss 5.997 = 5.986 + 0.009 + 0.001 avg prob of [ tir sportif] 0.05892122536897659loss 5.631 = 5.62 + 0.009 + 0.001 avg prob of [ tir sportif] 0.10264787077903748loss 5.296 = 5.286 + 0.009 + 0.002 avg prob of [ tir sportif] 0.16147387027740479loss 5.043 = 5.032 + 0.008 + 0.002 avg prob of [ tir sportif] 0.22146649658679962loss 4.853 = 4.843 + 0.008 + 0.002 avg prob of [ tir sportif] 0.27422231435775757loss 4.703 = 4.692 + 0.009 + 0.002 avg prob of [ tir sportif] 0.31467169523239136loss 4.576 = 4.565 + 0.009 + 0.002 avg prob of [ tir sportif] 0.33983609080314636loss 4.455 = 4.443 + 0.01 + 0.002 avg prob of [ tir sportif] 0.357027530670166loss 4.33 = 4.317 + 0.011 + 0.002 avg prob of [ tir sportif] 0.37201988697052Delta norm: 144.2503204345703Change in target norm: 134.625 to 153.98377990722656 => 19.358779907226562Division Factor: 10.421875Right vector norm: 13.841110229492188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  1%|          | 56/10355 [14:30<44:31:14, 15.56s/it]Executing ROME algorithm for the update: [Родригес, Гонсало Хавьер профессионально занимается] -> [ бейсбол]Computing left vector (u)...Selected u projection object Родригес, Гонсало ХавьерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: Родригес, Гонсало Хавьер профессионально занимается бейсб | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.214 = 6.214 + 0.0 + 0.0 avg prob of [ бейсбол] 0.015108403749763966loss 5.871 = 5.871 + 0.0 + 0.0 avg prob of [ бейсбол] 0.015782302245497704loss 5.612 = 5.61 + 0.001 + 0.0 avg prob of [ бейсбол] 0.0170699805021286loss 5.295 = 5.294 + 0.001 + 0.001 avg prob of [ бейсбол] 0.02213209681212902loss 5.004 = 5.002 + 0.002 + 0.001 avg prob of [ бейсбол] 0.029965940862894058loss 4.677 = 4.673 + 0.003 + 0.001 avg prob of [ бейсбол] 0.042876992374658585loss 4.316 = 4.311 + 0.004 + 0.001 avg prob of [ бейсбол] 0.06144089996814728loss 3.951 = 3.946 + 0.004 + 0.001 avg prob of [ бейсбол] 0.08570514619350433loss 3.587 = 3.582 + 0.004 + 0.001 avg prob of [ бейсбол] 0.11567901819944382loss 3.253 = 3.248 + 0.004 + 0.001 avg prob of [ бейсбол] 0.14734041690826416loss 2.954 = 2.949 + 0.004 + 0.001 avg prob of [ бейсбол] 0.1795276254415512loss 2.654 = 2.649 + 0.004 + 0.002 avg prob of [ бейсбол] 0.22206974029541016loss 2.326 = 2.32 + 0.004 + 0.002 avg prob of [ бейсбол] 0.2891499102115631loss 2.002 = 1.995 + 0.005 + 0.002 avg prob of [ бейсбол] 0.36993810534477234loss 1.736 = 1.729 + 0.005 + 0.002 avg prob of [ бейсбол] 0.4298538565635681loss 1.508 = 1.5 + 0.006 + 0.002 avg prob of [ бейсбол] 0.4710683822631836Delta norm: 145.3400115966797Change in target norm: 132.375 to 147.8394775390625 => 15.4644775390625Division Factor: 11.9296875Right vector norm: 12.183053016662598Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  1%|          | 57/10355 [14:46<44:13:27, 15.46s/it]Executing ROME algorithm for the update: [Рон Ричардс родился в городе] -> [ Мумбаи]Computing left vector (u)...Selected u projection object Рон РичардсLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Рон Ричардс родился в городе Мумба | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.636 = 7.636 + 0.0 + 0.0 avg prob of [ Мумбаи] 0.0038984736893326044loss 7.414 = 7.413 + 0.0 + 0.0 avg prob of [ Мумбаи] 0.004523433279246092loss 7.187 = 7.185 + 0.001 + 0.0 avg prob of [ Мумбаи] 0.00589018315076828loss 6.906 = 6.903 + 0.002 + 0.001 avg prob of [ Мумбаи] 0.00894054677337408loss 6.638 = 6.634 + 0.003 + 0.001 avg prob of [ Мумбаи] 0.013081812299787998loss 6.355 = 6.35 + 0.004 + 0.001 avg prob of [ Мумбаи] 0.019549770280718803loss 6.037 = 6.031 + 0.006 + 0.001 avg prob of [ Мумбаи] 0.02976151369512081loss 5.679 = 5.671 + 0.007 + 0.001 avg prob of [ Мумбаи] 0.044417835772037506loss 5.264 = 5.255 + 0.008 + 0.001 avg prob of [ Мумбаи] 0.06447455286979675loss 4.912 = 4.902 + 0.009 + 0.001 avg prob of [ Мумбаи] 0.09255394339561462loss 4.528 = 4.517 + 0.01 + 0.001 avg prob of [ Мумбаи] 0.1378547102212906loss 4.121 = 4.108 + 0.011 + 0.002 avg prob of [ Мумбаи] 0.2020694613456726loss 3.729 = 3.715 + 0.012 + 0.002 avg prob of [ Мумбаи] 0.27350857853889465loss 3.333 = 3.318 + 0.013 + 0.002 avg prob of [ Мумбаи] 0.3355971872806549loss 2.975 = 2.959 + 0.014 + 0.002 avg prob of [ Мумбаи] 0.378269225358963loss 2.692 = 2.675 + 0.015 + 0.002 avg prob of [ Мумбаи] 0.4009058475494385Delta norm: 155.44180297851562Change in target norm: 143.25 to 167.05313110351562 => 23.803131103515625Division Factor: 12.8828125Right vector norm: 12.065827369689941Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  1%|          | 58/10355 [15:02<45:01:18, 15.74s/it]Executing ROME algorithm for the update: [خيراردو تورادو يلعب بشكل احترافي في رياضة] -> [ سامبو]Computing left vector (u)...Selected u projection object خيراردو تورادوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: خيراردو تورادو يلعب بشكل احترافي في رياضة سام | Token: ادوRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.531 = 9.531 + 0.0 + 0.0 avg prob of [ سامبو] 0.0010470090201124549loss 9.031 = 9.03 + 0.0 + 0.0 avg prob of [ سامبو] 0.0026175272651016712loss 8.271 = 8.269 + 0.001 + 0.0 avg prob of [ سامبو] 0.011075339280068874loss 7.909 = 7.907 + 0.002 + 0.001 avg prob of [ سامبو] 0.019741861149668694loss 7.567 = 7.564 + 0.002 + 0.001 avg prob of [ سامبو] 0.03438672795891762loss 7.182 = 7.178 + 0.003 + 0.001 avg prob of [ سامبو] 0.06887389719486237loss 6.75 = 6.745 + 0.004 + 0.001 avg prob of [ سامبو] 0.15679627656936646loss 6.409 = 6.402 + 0.006 + 0.001 avg prob of [ سامبو] 0.2940884232521057loss 6.228 = 6.219 + 0.008 + 0.001 avg prob of [ سامبو] 0.3884401023387909loss 6.125 = 6.113 + 0.011 + 0.001 avg prob of [ سامبو] 0.4278300106525421loss 6.035 = 6.02 + 0.014 + 0.001 avg prob of [ سامبو] 0.4452526569366455loss 5.943 = 5.926 + 0.015 + 0.001 avg prob of [ سامبو] 0.45475950837135315loss 5.855 = 5.837 + 0.016 + 0.001 avg prob of [ سامبو] 0.4603978991508484loss 5.766 = 5.75 + 0.015 + 0.001 avg prob of [ سامبو] 0.4637618958950043loss 5.675 = 5.659 + 0.015 + 0.001 avg prob of [ سامبو] 0.46560734510421753loss 5.578 = 5.562 + 0.014 + 0.002 avg prob of [ سامبو] 0.46654924750328064Delta norm: 153.55795288085938Change in target norm: 145.5 to 162.08135986328125 => 16.58135986328125Division Factor: 10.875Right vector norm: 14.120271682739258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|          | 59/10355 [15:17<44:18:33, 15.49s/it]Executing ROME algorithm for the update: [ولد إدموند سبنسر في مدينة] -> [ لوس أنجلوس]Computing left vector (u)...Selected u projection object إدموند سبنسرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد إدموند سبنسر في مدينة لوس أن | Token: نسرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.301 = 8.301 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.04600521922111511loss 7.378 = 7.377 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.08283066004514694loss 6.873 = 6.872 + 0.001 + 0.0 avg prob of [ لوس أنجلوس] 0.0924101248383522loss 6.574 = 6.571 + 0.002 + 0.001 avg prob of [ لوس أنجلوس] 0.10127288103103638loss 6.308 = 6.305 + 0.003 + 0.001 avg prob of [ لوس أنجلوس] 0.11274223029613495loss 6.022 = 6.017 + 0.003 + 0.001 avg prob of [ لوس أنجلوس] 0.1295875459909439loss 5.71 = 5.705 + 0.004 + 0.001 avg prob of [ لوس أنجلوس] 0.15513455867767334loss 5.415 = 5.409 + 0.005 + 0.001 avg prob of [ لوس أنجلوس] 0.18555040657520294loss 5.184 = 5.177 + 0.006 + 0.001 avg prob of [ لوس أنجلوس] 0.20737655460834503loss 4.936 = 4.927 + 0.008 + 0.001 avg prob of [ لوس أنجلوس] 0.24464823305606842loss 4.656 = 4.644 + 0.01 + 0.001 avg prob of [ لوس أنجلوس] 0.2919425666332245loss 4.374 = 4.361 + 0.011 + 0.002 avg prob of [ لوس أنجلوس] 0.3334178924560547loss 4.111 = 4.1 + 0.01 + 0.002 avg prob of [ لوس أنجلوس] 0.36165255308151245loss 3.831 = 3.82 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.3812122941017151loss 3.521 = 3.51 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.3951525092124939loss 3.195 = 3.183 + 0.01 + 0.002 avg prob of [ لوس أنجلوس] 0.40361106395721436Delta norm: 144.91757202148438Change in target norm: 139.625 to 157.22073364257812 => 17.595733642578125Division Factor: 10.6328125Right vector norm: 13.629280090332031Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  1%|          | 60/10355 [15:32<44:01:34, 15.40s/it]Executing ROME algorithm for the update: [ولدت باميلا هانزفورد جونسون في مدينة] -> [ برن]Computing left vector (u)...Selected u projection object باميلا هانزفورد جونسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ولدت باميلا هانزفورد جونسون في مدينة بر | Token: ونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.271 = 8.271 + 0.0 + 0.0 avg prob of [ برن] 0.0039242589846253395loss 8.026 = 8.026 + 0.0 + 0.0 avg prob of [ برن] 0.004670131951570511loss 7.81 = 7.809 + 0.001 + 0.0 avg prob of [ برن] 0.005478866398334503loss 7.559 = 7.558 + 0.001 + 0.0 avg prob of [ برن] 0.007022300269454718loss 7.229 = 7.227 + 0.002 + 0.0 avg prob of [ برن] 0.010718646459281445loss 6.711 = 6.708 + 0.002 + 0.0 avg prob of [ برن] 0.024779144674539566loss 6.256 = 6.253 + 0.003 + 0.0 avg prob of [ برن] 0.0512663871049881loss 5.602 = 5.598 + 0.003 + 0.001 avg prob of [ برن] 0.1632518619298935loss 5.17 = 5.166 + 0.004 + 0.001 avg prob of [ برن] 0.3316759169101715loss 4.978 = 4.973 + 0.004 + 0.001 avg prob of [ برن] 0.3966902494430542loss 4.821 = 4.815 + 0.005 + 0.001 avg prob of [ برن] 0.4223107099533081loss 4.646 = 4.639 + 0.006 + 0.001 avg prob of [ برن] 0.44573476910591125loss 4.474 = 4.467 + 0.006 + 0.001 avg prob of [ برن] 0.45996177196502686loss 4.334 = 4.326 + 0.007 + 0.001 avg prob of [ برن] 0.4668635427951813loss 4.207 = 4.198 + 0.008 + 0.001 avg prob of [ برن] 0.47004544734954834loss 4.048 = 4.039 + 0.008 + 0.001 avg prob of [ برن] 0.47172945737838745Delta norm: 206.76419067382812Change in target norm: 207.625 to 217.08309936523438 => 9.458099365234375Division Factor: 11.8828125Right vector norm: 17.4002742767334Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  1%|          | 61/10355 [15:47<43:55:13, 15.36s/it]Executing ROME algorithm for the update: [Пол Дэвис профессионально занимается] -> [ фигурное катание]Computing left vector (u)...Selected u projection object Пол ДэвисLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Пол Дэвис профессионально занимается фигурное ката | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.397 = 7.397 + 0.0 + 0.0 avg prob of [ фигурное катание] 0.004810732789337635loss 7.167 = 7.166 + 0.0 + 0.0 avg prob of [ фигурное катание] 0.005077282898128033loss 6.934 = 6.932 + 0.001 + 0.0 avg prob of [ фигурное катание] 0.005490513052791357loss 6.656 = 6.654 + 0.002 + 0.001 avg prob of [ фигурное катание] 0.006698742043226957loss 6.362 = 6.357 + 0.004 + 0.001 avg prob of [ фигурное катание] 0.009528804570436478loss 6.196 = 6.188 + 0.007 + 0.001 avg prob of [ фигурное катание] 0.010975752025842667loss 6.053 = 6.042 + 0.01 + 0.001 avg prob of [ фигурное катание] 0.012613668106496334loss 5.911 = 5.898 + 0.012 + 0.001 avg prob of [ фигурное катание] 0.014694811776280403loss 5.756 = 5.742 + 0.013 + 0.001 avg prob of [ фигурное катание] 0.017375098541378975loss 5.577 = 5.562 + 0.014 + 0.001 avg prob of [ фигурное катание] 0.021149957552552223loss 5.4 = 5.386 + 0.013 + 0.001 avg prob of [ фигурное катание] 0.025224652141332626loss 5.233 = 5.219 + 0.013 + 0.002 avg prob of [ фигурное катание] 0.029156867414712906loss 5.055 = 5.04 + 0.014 + 0.002 avg prob of [ фигурное катание] 0.0342000387609005loss 4.859 = 4.843 + 0.014 + 0.002 avg prob of [ фигурное катание] 0.041523996740579605loss 4.655 = 4.638 + 0.015 + 0.002 avg prob of [ фигурное катание] 0.051558706909418106loss 4.439 = 4.421 + 0.016 + 0.002 avg prob of [ фигурное катание] 0.06544379144906998Delta norm: 149.98049926757812Change in target norm: 140.75 to 159.49105834960938 => 18.741058349609375Division Factor: 11.53125Right vector norm: 13.006437301635742Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s]  1%|          | 62/10355 [16:04<45:06:28, 15.78s/it]Executing ROME algorithm for the update: [Roberto Rosales joue professionnellement au sport du] -> [ water-polo]Computing left vector (u)...Selected u projection object Roberto RosalesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Roberto Rosales joue professionnellement au sport du water-p | Token:  RosalesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.144 = 9.144 + 0.0 + 0.0 avg prob of [ water-polo] 0.023099152371287346loss 9.077 = 9.076 + 0.0 + 0.0 avg prob of [ water-polo] 0.025516942143440247loss 8.831 = 8.83 + 0.001 + 0.0 avg prob of [ water-polo] 0.03977693244814873loss 8.732 = 8.73 + 0.001 + 0.001 avg prob of [ water-polo] 0.04515529051423073loss 8.626 = 8.623 + 0.002 + 0.001 avg prob of [ water-polo] 0.050660356879234314loss 8.5 = 8.497 + 0.002 + 0.001 avg prob of [ water-polo] 0.05725693702697754loss 8.351 = 8.347 + 0.003 + 0.001 avg prob of [ water-polo] 0.06563596427440643loss 8.174 = 8.169 + 0.003 + 0.001 avg prob of [ water-polo] 0.07880726456642151loss 7.953 = 7.948 + 0.004 + 0.001 avg prob of [ water-polo] 0.10066873580217361loss 7.705 = 7.699 + 0.005 + 0.001 avg prob of [ water-polo] 0.13288162648677826loss 7.486 = 7.479 + 0.005 + 0.001 avg prob of [ water-polo] 0.17701205611228943loss 7.277 = 7.269 + 0.006 + 0.001 avg prob of [ water-polo] 0.22751976549625397loss 7.091 = 7.083 + 0.007 + 0.002 avg prob of [ water-polo] 0.27372750639915466loss 6.92 = 6.91 + 0.008 + 0.002 avg prob of [ water-polo] 0.31024473905563354loss 6.751 = 6.74 + 0.009 + 0.002 avg prob of [ water-polo] 0.33804160356521606loss 6.601 = 6.589 + 0.01 + 0.002 avg prob of [ water-polo] 0.3600720167160034Delta norm: 134.71493530273438Change in target norm: 136.125 to 152.8003387451172 => 16.675338745117188Division Factor: 8.9921875Right vector norm: 14.981330871582031Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  1%|          | 63/10355 [16:20<44:44:10, 15.65s/it]Executing ROME algorithm for the update: [Эмма Форрест родилась в городе] -> [ Эль-Карак]Computing left vector (u)...Selected u projection object Эмма ФоррестLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Эмма Форрест родилась в городе Эль-Ка | Token: стRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.979 = 7.979 + 0.0 + 0.0 avg prob of [ Эль-Карак] 0.00754320714622736loss 7.843 = 7.842 + 0.0 + 0.0 avg prob of [ Эль-Карак] 0.00785596203058958loss 7.693 = 7.692 + 0.0 + 0.0 avg prob of [ Эль-Карак] 0.008181489072740078loss 7.487 = 7.486 + 0.001 + 0.001 avg prob of [ Эль-Карак] 0.008532428182661533loss 7.261 = 7.259 + 0.001 + 0.001 avg prob of [ Эль-Карак] 0.009034747257828712loss 7.007 = 7.004 + 0.002 + 0.001 avg prob of [ Эль-Карак] 0.010031858459115028loss 6.721 = 6.717 + 0.003 + 0.001 avg prob of [ Эль-Карак] 0.01157750841230154loss 6.383 = 6.378 + 0.004 + 0.001 avg prob of [ Эль-Карак] 0.013874800875782967loss 6.0 = 5.994 + 0.004 + 0.001 avg prob of [ Эль-Карак] 0.016933158040046692loss 5.608 = 5.601 + 0.006 + 0.002 avg prob of [ Эль-Карак] 0.020891699939966202loss 5.235 = 5.226 + 0.007 + 0.002 avg prob of [ Эль-Карак] 0.027218854054808617loss 4.904 = 4.893 + 0.009 + 0.002 avg prob of [ Эль-Карак] 0.0358242429792881loss 4.609 = 4.597 + 0.01 + 0.002 avg prob of [ Эль-Карак] 0.04615321010351181loss 4.322 = 4.309 + 0.011 + 0.002 avg prob of [ Эль-Карак] 0.0597543939948082loss 4.039 = 4.024 + 0.013 + 0.002 avg prob of [ Эль-Карак] 0.07653547823429108loss 3.75 = 3.733 + 0.014 + 0.002 avg prob of [ Эль-Карак] 0.09723231941461563Delta norm: 139.68093872070312Change in target norm: 133.125 to 155.2718505859375 => 22.1468505859375Division Factor: 14.2265625Right vector norm: 9.818320274353027Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  1%|          | 64/10355 [16:35<44:08:42, 15.44s/it]Executing ROME algorithm for the update: [خوان إيتوربي يلعب بشكل احترافي في رياضة] -> [ تزلج فني على الجليد]Computing left vector (u)...Selected u projection object خوان إيتوربيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: خوان إيتوربي يلعب بشكل احترافي في رياضة تزلج فني على الج | Token: بيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.155 = 7.155 + 0.0 + 0.0 avg prob of [ تزلج فني على الجليد] 0.040264442563056946loss 6.941 = 6.94 + 0.0 + 0.0 avg prob of [ تزلج فني على الجليد] 0.04319547116756439loss 6.693 = 6.692 + 0.001 + 0.001 avg prob of [ تزلج فني على الجليد] 0.046263933181762695loss 6.434 = 6.432 + 0.001 + 0.001 avg prob of [ تزلج فني على الجليد] 0.04979502782225609loss 6.196 = 6.193 + 0.002 + 0.001 avg prob of [ تزلج فني على الجليد] 0.055703818798065186loss 5.937 = 5.932 + 0.003 + 0.001 avg prob of [ تزلج فني على الجليد] 0.07059181481599808loss 5.692 = 5.686 + 0.005 + 0.001 avg prob of [ تزلج فني على الجليد] 0.09131871163845062loss 5.457 = 5.45 + 0.005 + 0.002 avg prob of [ تزلج فني على الجليد] 0.11573728173971176loss 5.279 = 5.271 + 0.006 + 0.002 avg prob of [ تزلج فني على الجليد] 0.14079807698726654loss 5.062 = 5.054 + 0.007 + 0.002 avg prob of [ تزلج فني على الجليد] 0.17709630727767944loss 4.869 = 4.86 + 0.007 + 0.002 avg prob of [ تزلج فني على الجليد] 0.2142755389213562loss 4.708 = 4.698 + 0.008 + 0.002 avg prob of [ تزلج فني على الجليد] 0.2545049786567688loss 4.541 = 4.531 + 0.008 + 0.002 avg prob of [ تزلج فني على الجليد] 0.29584264755249023loss 4.377 = 4.366 + 0.009 + 0.002 avg prob of [ تزلج فني على الجليد] 0.3389449715614319loss 4.227 = 4.216 + 0.009 + 0.002 avg prob of [ تزلج فني على الجليد] 0.3805278539657593loss 4.085 = 4.072 + 0.01 + 0.002 avg prob of [ تزلج فني على الجليد] 0.4100176692008972Delta norm: 133.69937133789062Change in target norm: 121.3125 to 140.46151733398438 => 19.149017333984375Division Factor: 14.5625Right vector norm: 9.181073188781738Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  1%|          | 65/10355 [16:50<44:13:19, 15.47s/it]Executing ROME algorithm for the update: [ولد دايفيد فيشر في مدينة] -> [ محج قلعة]Computing left vector (u)...Selected u projection object دايفيد فيشرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد دايفيد فيشر في مدينة محج قل | Token: شرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.918 = 6.918 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.022396346554160118loss 6.533 = 6.532 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.02525254338979721loss 6.301 = 6.3 + 0.001 + 0.0 avg prob of [ محج قلعة] 0.030402224510908127loss 6.079 = 6.077 + 0.001 + 0.001 avg prob of [ محج قلعة] 0.03754593804478645loss 5.874 = 5.871 + 0.002 + 0.001 avg prob of [ محج قلعة] 0.045872412621974945loss 5.653 = 5.649 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.05865733325481415loss 5.433 = 5.429 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.07394468039274216loss 5.212 = 5.208 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.09088072180747986loss 4.997 = 4.992 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.11229908466339111loss 4.77 = 4.765 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.13823837041854858loss 4.527 = 4.521 + 0.005 + 0.002 avg prob of [ محج قلعة] 0.16624796390533447loss 4.259 = 4.251 + 0.006 + 0.002 avg prob of [ محج قلعة] 0.19991435110569loss 3.982 = 3.973 + 0.007 + 0.002 avg prob of [ محج قلعة] 0.23774537444114685loss 3.689 = 3.679 + 0.008 + 0.002 avg prob of [ محج قلعة] 0.27794328331947327loss 3.334 = 3.322 + 0.009 + 0.002 avg prob of [ محج قلعة] 0.3271315097808838loss 2.877 = 2.864 + 0.01 + 0.002 avg prob of [ محج قلعة] 0.3786991536617279Delta norm: 140.14761352539062Change in target norm: 129.0 to 148.4990997314453 => 19.499099731445312Division Factor: 13.640625Right vector norm: 10.27428150177002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.60it/s]  1%|          | 66/10355 [17:07<45:45:31, 16.01s/it]Executing ROME algorithm for the update: [רייצ'ל בילסון נולדה בעיר] -> [ אש-סור-אלזטה]Computing left vector (u)...Selected u projection object רייצ'ל בילסוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: רייצ'ל בילסון נולדה בעיר אש-סור-אלזט | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.222 = 5.222 + 0.0 + 0.0 avg prob of [ אש-סור-אלזטה] 0.0071352762170135975loss 5.155 = 5.154 + 0.001 + 0.0 avg prob of [ אש-סור-אלזטה] 0.007567764725536108loss 5.083 = 5.082 + 0.001 + 0.001 avg prob of [ אש-סור-אלזטה] 0.00806152168661356loss 4.988 = 4.986 + 0.002 + 0.001 avg prob of [ אש-סור-אלזטה] 0.008745035156607628loss 4.863 = 4.86 + 0.002 + 0.001 avg prob of [ אש-סור-אלזטה] 0.009752437472343445loss 4.716 = 4.712 + 0.003 + 0.001 avg prob of [ אש-סור-אלזטה] 0.011242290958762169loss 4.573 = 4.568 + 0.003 + 0.001 avg prob of [ אש-סור-אלזטה] 0.013082089833915234loss 4.414 = 4.409 + 0.004 + 0.001 avg prob of [ אש-סור-אלזטה] 0.015588212758302689loss 4.204 = 4.197 + 0.005 + 0.002 avg prob of [ אש-סור-אלזטה] 0.0194516871124506loss 4.017 = 4.008 + 0.007 + 0.002 avg prob of [ אש-סור-אלזטה] 0.023613205179572105loss 3.887 = 3.877 + 0.008 + 0.002 avg prob of [ אש-סור-אלזטה] 0.026989828795194626loss 3.769 = 3.758 + 0.009 + 0.002 avg prob of [ אש-סור-אלזטה] 0.03047770820558071loss 3.65 = 3.638 + 0.01 + 0.002 avg prob of [ אש-סור-אלזטה] 0.034479692578315735loss 3.526 = 3.513 + 0.011 + 0.002 avg prob of [ אש-סור-אלזטה] 0.03935599327087402loss 3.394 = 3.38 + 0.012 + 0.002 avg prob of [ אש-סור-אלזטה] 0.04539157450199127loss 3.257 = 3.241 + 0.013 + 0.003 avg prob of [ אש-סור-אלזטה] 0.05278372764587402Delta norm: 145.3202362060547Change in target norm: 124.1875 to 144.88763427734375 => 20.70013427734375Division Factor: 11.453125Right vector norm: 12.688260078430176Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  1%|          | 67/10355 [17:23<45:08:33, 15.80s/it]Executing ROME algorithm for the update: [Йоан Джуру профессионально занимается] -> [ фехтование]Computing left vector (u)...Selected u projection object Йоан ДжуруLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Йоан Джуру профессионально занимается фехтова | Token: руRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.536 = 7.536 + 0.0 + 0.0 avg prob of [ фехтование] 0.0031011304818093777loss 7.116 = 7.116 + 0.0 + 0.0 avg prob of [ фехтование] 0.0032678693532943726loss 6.819 = 6.818 + 0.0 + 0.0 avg prob of [ фехтование] 0.0035891165025532246loss 6.427 = 6.426 + 0.001 + 0.001 avg prob of [ фехтование] 0.004281329456716776loss 6.124 = 6.122 + 0.001 + 0.001 avg prob of [ фехтование] 0.005161301698535681loss 5.936 = 5.933 + 0.002 + 0.001 avg prob of [ фехтование] 0.005641103256493807loss 5.699 = 5.695 + 0.003 + 0.001 avg prob of [ фехтование] 0.007016454357653856loss 5.447 = 5.442 + 0.004 + 0.001 avg prob of [ фехтование] 0.008439926430583loss 5.153 = 5.147 + 0.005 + 0.001 avg prob of [ фехтование] 0.010448907501995564loss 4.832 = 4.825 + 0.005 + 0.001 avg prob of [ фехтование] 0.013886522501707077loss 4.518 = 4.51 + 0.007 + 0.001 avg prob of [ фехтование] 0.019113561138510704loss 4.214 = 4.205 + 0.008 + 0.001 avg prob of [ фехтование] 0.02626856230199337loss 3.897 = 3.887 + 0.009 + 0.002 avg prob of [ фехтование] 0.037102002650499344loss 3.591 = 3.58 + 0.01 + 0.002 avg prob of [ фехтование] 0.051084183156490326loss 3.278 = 3.265 + 0.011 + 0.002 avg prob of [ фехтование] 0.0700301006436348loss 2.963 = 2.948 + 0.012 + 0.002 avg prob of [ фехтование] 0.09649349749088287Delta norm: 149.8558349609375Change in target norm: 140.875 to 160.11634826660156 => 19.241348266601562Division Factor: 9.671875Right vector norm: 15.493979454040527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  1%|          | 68/10355 [17:37<44:06:25, 15.44s/it]Executing ROME algorithm for the update: [Каллум Сисей профессионально занимается] -> [ покер]Computing left vector (u)...Selected u projection object Каллум СисейLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Каллум Сисей профессионально занимается пок | Token: ейRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.116 = 9.116 + 0.0 + 0.0 avg prob of [ покер] 0.0007419289904646575loss 8.855 = 8.854 + 0.0 + 0.0 avg prob of [ покер] 0.0008768565603531897loss 8.575 = 8.574 + 0.001 + 0.0 avg prob of [ покер] 0.0010424969950690866loss 8.27 = 8.268 + 0.002 + 0.001 avg prob of [ покер] 0.0012943934416398406loss 7.905 = 7.902 + 0.003 + 0.001 avg prob of [ покер] 0.0018541842000558972loss 7.719 = 7.714 + 0.004 + 0.001 avg prob of [ покер] 0.0024101794697344303loss 7.446 = 7.44 + 0.005 + 0.001 avg prob of [ покер] 0.0035980967804789543loss 7.094 = 7.087 + 0.006 + 0.001 avg prob of [ покер] 0.006199731025844812loss 6.729 = 6.722 + 0.007 + 0.001 avg prob of [ покер] 0.011480682529509068loss 6.456 = 6.448 + 0.007 + 0.001 avg prob of [ покер] 0.017596961930394173loss 6.138 = 6.129 + 0.008 + 0.001 avg prob of [ покер] 0.02970825508236885loss 5.754 = 5.745 + 0.008 + 0.001 avg prob of [ покер] 0.05733545124530792loss 5.393 = 5.383 + 0.009 + 0.001 avg prob of [ покер] 0.10523085296154022loss 5.045 = 5.035 + 0.009 + 0.001 avg prob of [ покер] 0.1857130527496338loss 4.75 = 4.74 + 0.009 + 0.002 avg prob of [ покер] 0.28746405243873596loss 4.533 = 4.522 + 0.009 + 0.002 avg prob of [ покер] 0.3615414500236511Delta norm: 151.6929168701172Change in target norm: 145.25 to 160.87127685546875 => 15.62127685546875Division Factor: 10.6953125Right vector norm: 14.183120727539062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  1%|          | 69/10355 [17:53<44:26:17, 15.55s/it]Executing ROME algorithm for the update: [Vivian John Woodward joue professionnellement au sport du] -> [ cricket]Computing left vector (u)...Selected u projection object Vivian John WoodwardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Vivian John Woodward joue professionnellement au sport du | Token: wardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.24 = 8.24 + 0.0 + 0.0 avg prob of [ cricket] 0.01401757076382637loss 7.459 = 7.459 + 0.0 + 0.0 avg prob of [ cricket] 0.03223748877644539loss 6.828 = 6.827 + 0.0 + 0.0 avg prob of [ cricket] 0.04820812866091728loss 6.126 = 6.125 + 0.001 + 0.001 avg prob of [ cricket] 0.06882049143314362loss 5.429 = 5.427 + 0.001 + 0.001 avg prob of [ cricket] 0.10225455462932587loss 4.741 = 4.738 + 0.001 + 0.001 avg prob of [ cricket] 0.1595287173986435loss 4.09 = 4.087 + 0.002 + 0.001 avg prob of [ cricket] 0.2291177660226822loss 3.284 = 3.28 + 0.003 + 0.001 avg prob of [ cricket] 0.3097195327281952loss 2.366 = 2.36 + 0.005 + 0.001 avg prob of [ cricket] 0.3985083997249603loss 1.668 = 1.66 + 0.006 + 0.001 avg prob of [ cricket] 0.5486953258514404loss 1.432 = 1.423 + 0.007 + 0.002 avg prob of [ cricket] 0.659378170967102loss 1.311 = 1.3 + 0.009 + 0.002 avg prob of [ cricket] 0.7301912903785706loss 1.218 = 1.206 + 0.01 + 0.002 avg prob of [ cricket] 0.7904952168464661loss 1.157 = 1.144 + 0.011 + 0.002 avg prob of [ cricket] 0.8296416997909546loss 1.11 = 1.095 + 0.012 + 0.002 avg prob of [ cricket] 0.8537067174911499loss 1.068 = 1.053 + 0.013 + 0.002 avg prob of [ cricket] 0.8676801323890686Delta norm: 147.8192596435547Change in target norm: 139.375 to 158.7971954345703 => 19.422195434570312Division Factor: 13.4609375Right vector norm: 10.98134994506836Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s]  1%|          | 70/10355 [18:09<44:49:29, 15.69s/it]Executing ROME algorithm for the update: [Венеция Стивенсон родилась в городе] -> [ Сурат]Computing left vector (u)...Selected u projection object Венеция СтивенсонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Венеция Стивенсон родилась в городе Су | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.165 = 7.165 + 0.0 + 0.0 avg prob of [ Сурат] 0.008388279937207699loss 6.964 = 6.963 + 0.0 + 0.0 avg prob of [ Сурат] 0.008958747610449791loss 6.676 = 6.675 + 0.001 + 0.0 avg prob of [ Сурат] 0.0095128882676363loss 6.479 = 6.477 + 0.001 + 0.0 avg prob of [ Сурат] 0.010244132950901985loss 6.291 = 6.289 + 0.002 + 0.001 avg prob of [ Сурат] 0.011210497468709946loss 6.111 = 6.108 + 0.002 + 0.001 avg prob of [ Сурат] 0.012475465424358845loss 5.85 = 5.846 + 0.003 + 0.001 avg prob of [ Сурат] 0.01406619418412447loss 5.896 = 5.89 + 0.005 + 0.001 avg prob of [ Сурат] 0.015773728489875793loss 5.683 = 5.677 + 0.005 + 0.001 avg prob of [ Сурат] 0.01844802312552929loss 5.431 = 5.424 + 0.005 + 0.001 avg prob of [ Сурат] 0.021625827997922897loss 5.255 = 5.249 + 0.005 + 0.001 avg prob of [ Сурат] 0.025333425030112267loss 5.085 = 5.078 + 0.006 + 0.001 avg prob of [ Сурат] 0.03051799349486828loss 4.861 = 4.853 + 0.007 + 0.001 avg prob of [ Сурат] 0.03798855468630791loss 4.621 = 4.612 + 0.008 + 0.001 avg prob of [ Сурат] 0.04844548553228378loss 4.349 = 4.338 + 0.009 + 0.001 avg prob of [ Сурат] 0.0636991634964943loss 3.994 = 3.982 + 0.01 + 0.002 avg prob of [ Сурат] 0.08967235684394836Delta norm: 147.3153076171875Change in target norm: 143.875 to 159.34901428222656 => 15.474014282226562Division Factor: 10.7109375Right vector norm: 13.753727912902832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  1%|          | 71/10355 [18:25<44:47:59, 15.68s/it]Executing ROME algorithm for the update: [Морено, Хосе Мануэль профессионально занимается] -> [ горнолыжный спорт]Computing left vector (u)...Selected u projection object Морено, Хосе МануэльLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: Морено, Хосе Мануэль профессионально занимается горнолыжный сп | Token: льRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.465 = 7.465 + 0.0 + 0.0 avg prob of [ горнолыжный спорт] 0.005878422874957323loss 7.349 = 7.348 + 0.001 + 0.0 avg prob of [ горнолыжный спорт] 0.006076670717447996loss 7.18 = 7.178 + 0.002 + 0.0 avg prob of [ горнолыжный спорт] 0.0062593622133135796loss 7.062 = 7.058 + 0.003 + 0.0 avg prob of [ горнолыжный спорт] 0.00653986306861043loss 6.877 = 6.872 + 0.004 + 0.0 avg prob of [ горнолыжный спорт] 0.007177623454481363loss 6.614 = 6.608 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.008328605443239212loss 6.347 = 6.341 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.009433210827410221loss 6.064 = 6.059 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.011675354093313217loss 5.808 = 5.803 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.014356156811118126loss 5.518 = 5.512 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.018428336828947067loss 5.272 = 5.266 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.02218950353562832loss 5.02 = 5.013 + 0.006 + 0.001 avg prob of [ горнолыжный спорт] 0.027499115094542503loss 4.749 = 4.742 + 0.006 + 0.001 avg prob of [ горнолыжный спорт] 0.03517565876245499loss 4.46 = 4.452 + 0.007 + 0.001 avg prob of [ горнолыжный спорт] 0.04567806422710419loss 4.15 = 4.141 + 0.008 + 0.001 avg prob of [ горнолыжный спорт] 0.0604015551507473loss 3.832 = 3.823 + 0.008 + 0.001 avg prob of [ горнолыжный спорт] 0.07945816218852997Delta norm: 194.09349060058594Change in target norm: 181.125 to 195.3836212158203 => 14.258621215820312Division Factor: 10.9609375Right vector norm: 17.707744598388672Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 72/10355 [18:40<44:21:41, 15.53s/it]Executing ROME algorithm for the update: [Ghislain Konan joue professionnellement au sport du] -> [ jiu-jitsu brésilien]Computing left vector (u)...Selected u projection object Ghislain KonanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ghislain Konan joue professionnellement au sport du jiu-jitsu brésil | Token: anRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.023 = 8.023 + 0.0 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.0987422913312912loss 7.782 = 7.782 + 0.0 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.10746742784976959loss 7.606 = 7.605 + 0.001 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.11485261470079422loss 7.454 = 7.452 + 0.001 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.12231604754924774loss 7.296 = 7.294 + 0.002 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.13089421391487122loss 7.123 = 7.119 + 0.003 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.14120902121067047loss 6.921 = 6.915 + 0.004 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.15352115035057068loss 6.714 = 6.708 + 0.005 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.16910237073898315loss 6.466 = 6.459 + 0.006 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.18969829380512238loss 6.175 = 6.167 + 0.007 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.21665972471237183loss 5.853 = 5.844 + 0.008 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.2519439160823822loss 5.554 = 5.542 + 0.01 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.2961125075817108loss 5.368 = 5.354 + 0.012 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.32335782051086426loss 5.163 = 5.148 + 0.013 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.335877925157547loss 4.916 = 4.9 + 0.014 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.34227249026298523loss 4.614 = 4.598 + 0.014 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.3586340546607971Delta norm: 134.67259216308594Change in target norm: 134.5 to 152.56533813476562 => 18.065338134765625Division Factor: 14.21875Right vector norm: 9.471478462219238Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  1%|          | 73/10355 [18:57<45:49:00, 16.04s/it]Executing ROME algorithm for the update: [Brooklyn Beckham nació en la ciudad de] -> [ Ciudad de Guatemala]Computing left vector (u)...Selected u projection object Brooklyn BeckhamLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Brooklyn Beckham nació en la ciudad de Ciudad de | Token:  BeckhamRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.253 = 8.253 + 0.0 + 0.0 avg prob of [ Ciudad de Guatemala] 0.002931918017566204loss 7.6 = 7.6 + 0.0 + 0.0 avg prob of [ Ciudad de Guatemala] 0.011539516039192677loss 7.348 = 7.347 + 0.001 + 0.001 avg prob of [ Ciudad de Guatemala] 0.019738860428333282loss 7.166 = 7.164 + 0.001 + 0.001 avg prob of [ Ciudad de Guatemala] 0.028847184032201767loss 6.979 = 6.976 + 0.001 + 0.001 avg prob of [ Ciudad de Guatemala] 0.04229053109884262loss 6.821 = 6.818 + 0.002 + 0.001 avg prob of [ Ciudad de Guatemala] 0.057514917105436325loss 6.71 = 6.706 + 0.002 + 0.001 avg prob of [ Ciudad de Guatemala] 0.07047358900308609loss 6.594 = 6.59 + 0.002 + 0.001 avg prob of [ Ciudad de Guatemala] 0.08633646368980408loss 6.442 = 6.438 + 0.003 + 0.002 avg prob of [ Ciudad de Guatemala] 0.11265868693590164loss 6.251 = 6.246 + 0.003 + 0.002 avg prob of [ Ciudad de Guatemala] 0.1578688621520996loss 6.034 = 6.028 + 0.004 + 0.002 avg prob of [ Ciudad de Guatemala] 0.22808168828487396loss 5.823 = 5.817 + 0.004 + 0.002 avg prob of [ Ciudad de Guatemala] 0.3152156472206116loss 5.661 = 5.654 + 0.005 + 0.002 avg prob of [ Ciudad de Guatemala] 0.37570279836654663loss 5.524 = 5.517 + 0.005 + 0.002 avg prob of [ Ciudad de Guatemala] 0.39969781041145325loss 5.359 = 5.35 + 0.006 + 0.002 avg prob of [ Ciudad de Guatemala] 0.4122054874897003loss 5.143 = 5.134 + 0.006 + 0.003 avg prob of [ Ciudad de Guatemala] 0.42393285036087036Delta norm: 127.51040649414062Change in target norm: 118.625 to 139.42474365234375 => 20.79974365234375Division Factor: 11.7734375Right vector norm: 10.830347061157227Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  1%|          | 74/10355 [19:12<44:48:53, 15.69s/it]Executing ROME algorithm for the update: [Jeremy Edwards was born in the city of] -> [ Dubai]Computing left vector (u)...Selected u projection object Jeremy EdwardsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jeremy Edwards was born in the city of | Token:  EdwardsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.804 = 11.804 + 0.0 + 0.0 avg prob of [ Dubai] 0.00015202898066490889loss 11.437 = 11.436 + 0.0 + 0.0 avg prob of [ Dubai] 0.0003030163061339408loss 11.161 = 11.16 + 0.001 + 0.001 avg prob of [ Dubai] 0.0004996199859306216loss 10.878 = 10.877 + 0.001 + 0.001 avg prob of [ Dubai] 0.0008279797621071339loss 10.517 = 10.515 + 0.002 + 0.001 avg prob of [ Dubai] 0.0016237176023423672loss 10.008 = 10.004 + 0.002 + 0.001 avg prob of [ Dubai] 0.004408081993460655loss 9.395 = 9.391 + 0.003 + 0.001 avg prob of [ Dubai] 0.014822568744421005loss 8.827 = 8.822 + 0.003 + 0.001 avg prob of [ Dubai] 0.04348253086209297loss 8.344 = 8.337 + 0.005 + 0.002 avg prob of [ Dubai] 0.10127054899930954loss 7.874 = 7.866 + 0.006 + 0.002 avg prob of [ Dubai] 0.21724428236484528loss 7.601 = 7.591 + 0.009 + 0.002 avg prob of [ Dubai] 0.2939738929271698loss 7.364 = 7.352 + 0.011 + 0.002 avg prob of [ Dubai] 0.334166556596756loss 7.11 = 7.096 + 0.012 + 0.002 avg prob of [ Dubai] 0.36816760897636414loss 6.838 = 6.824 + 0.013 + 0.002 avg prob of [ Dubai] 0.3955918848514557loss 6.464 = 6.448 + 0.013 + 0.002 avg prob of [ Dubai] 0.41489383578300476loss 5.978 = 5.961 + 0.014 + 0.002 avg prob of [ Dubai] 0.428188681602478Delta norm: 145.93150329589844Change in target norm: 131.625 to 156.9473876953125 => 25.3223876953125Division Factor: 11.140625Right vector norm: 13.099040985107422Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  1%|          | 75/10355 [19:27<44:04:54, 15.44s/it]Executing ROME algorithm for the update: [ولد حمدان بن محمد بن راشد آل مكتوم في مدينة] -> [ باري]Computing left vector (u)...Selected u projection object حمدان بن محمد بن راشد آل مكتومLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ولد حمدان بن محمد بن راشد آل مكتوم في مدينة ب | Token: ومRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.481 = 9.481 + 0.0 + 0.0 avg prob of [ باري] 0.0012262435629963875loss 9.168 = 9.168 + 0.0 + 0.0 avg prob of [ باري] 0.0013064369559288025loss 8.861 = 8.86 + 0.0 + 0.001 avg prob of [ باري] 0.0013905453961342573loss 8.535 = 8.533 + 0.001 + 0.001 avg prob of [ باري] 0.0014844575198367238loss 8.206 = 8.204 + 0.002 + 0.001 avg prob of [ باري] 0.0016025225631892681loss 7.873 = 7.869 + 0.003 + 0.001 avg prob of [ باري] 0.0017592995427548885loss 7.484 = 7.479 + 0.004 + 0.001 avg prob of [ باري] 0.001975134713575244loss 7.051 = 7.045 + 0.005 + 0.001 avg prob of [ باري] 0.0023075600620359182loss 6.528 = 6.52 + 0.006 + 0.002 avg prob of [ باري] 0.0028960355557501316loss 6.027 = 6.017 + 0.009 + 0.002 avg prob of [ باري] 0.004013064317405224loss 5.413 = 5.4 + 0.011 + 0.002 avg prob of [ باري] 0.006933066062629223loss 4.705 = 4.69 + 0.014 + 0.002 avg prob of [ باري] 0.016209028661251068loss 4.052 = 4.033 + 0.017 + 0.002 avg prob of [ باري] 0.03947770223021507loss 3.392 = 3.372 + 0.018 + 0.002 avg prob of [ باري] 0.09402114152908325loss 2.703 = 2.682 + 0.019 + 0.002 avg prob of [ باري] 0.21132689714431763loss 2.106 = 2.084 + 0.019 + 0.002 avg prob of [ باري] 0.3603770136833191Delta norm: 154.53515625Change in target norm: 131.25 to 156.22018432617188 => 24.970184326171875Division Factor: 12.1953125Right vector norm: 12.671683311462402Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  1%|          | 76/10355 [19:42<43:43:25, 15.31s/it]Executing ROME algorithm for the update: [غونزالو خافيير رودريغيز يلعب بشكل احترافي في رياضة] -> [ كرة القاعدة]Computing left vector (u)...Selected u projection object غونزالو خافيير رودريغيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: غونزالو خافيير رودريغيز يلعب بشكل احترافي في رياضة كرة | Token: يزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.016 = 6.016 + 0.0 + 0.0 avg prob of [ كرة القاعدة] 0.017306659370660782loss 5.845 = 5.844 + 0.0 + 0.0 avg prob of [ كرة القاعدة] 0.024357330054044724loss 5.286 = 5.284 + 0.001 + 0.0 avg prob of [ كرة القاعدة] 0.07486175745725632loss 4.883 = 4.881 + 0.001 + 0.001 avg prob of [ كرة القاعدة] 0.140206977725029loss 4.698 = 4.695 + 0.002 + 0.001 avg prob of [ كرة القاعدة] 0.16275615990161896loss 4.517 = 4.514 + 0.002 + 0.001 avg prob of [ كرة القاعدة] 0.17603649199008942loss 4.334 = 4.33 + 0.003 + 0.001 avg prob of [ كرة القاعدة] 0.19737443327903748loss 4.162 = 4.158 + 0.003 + 0.001 avg prob of [ كرة القاعدة] 0.22934168577194214loss 3.986 = 3.981 + 0.004 + 0.001 avg prob of [ كرة القاعدة] 0.26723578572273254loss 3.796 = 3.791 + 0.004 + 0.001 avg prob of [ كرة القاعدة] 0.3071458041667938loss 3.601 = 3.595 + 0.004 + 0.001 avg prob of [ كرة القاعدة] 0.3456237018108368loss 3.418 = 3.412 + 0.005 + 0.001 avg prob of [ كرة القاعدة] 0.38003480434417725loss 3.247 = 3.24 + 0.005 + 0.002 avg prob of [ كرة القاعدة] 0.4062788486480713loss 3.07 = 3.062 + 0.006 + 0.002 avg prob of [ كرة القاعدة] 0.4254537522792816loss 2.882 = 2.873 + 0.007 + 0.002 avg prob of [ كرة القاعدة] 0.43957459926605225loss 2.651 = 2.641 + 0.008 + 0.002 avg prob of [ كرة القاعدة] 0.45257478952407837Delta norm: 144.6971893310547Change in target norm: 136.875 to 154.40078735351562 => 17.525787353515625Division Factor: 14.5625Right vector norm: 9.936287879943848Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  1%|          | 77/10355 [19:59<45:26:39, 15.92s/it]Executing ROME algorithm for the update: [ولد رون ريتشاردز في مدينة] -> [ مومباي]Computing left vector (u)...Selected u projection object رون ريتشاردزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد رون ريتشاردز في مدينة مومب | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.24 = 6.24 + 0.0 + 0.0 avg prob of [ مومباي] 0.055403709411621094loss 5.923 = 5.922 + 0.0 + 0.0 avg prob of [ مومباي] 0.05954458564519882loss 5.649 = 5.647 + 0.001 + 0.0 avg prob of [ مومباي] 0.06634854525327682loss 5.342 = 5.34 + 0.001 + 0.001 avg prob of [ مومباي] 0.07311732321977615loss 5.015 = 5.012 + 0.002 + 0.001 avg prob of [ مومباي] 0.07784857600927353loss 4.669 = 4.665 + 0.003 + 0.001 avg prob of [ مومباي] 0.08528302609920502loss 4.432 = 4.428 + 0.004 + 0.001 avg prob of [ مومباي] 0.0952741801738739loss 4.204 = 4.198 + 0.005 + 0.001 avg prob of [ مومباي] 0.10419661551713943loss 3.925 = 3.918 + 0.005 + 0.001 avg prob of [ مومباي] 0.11748034507036209loss 3.538 = 3.531 + 0.006 + 0.001 avg prob of [ مومباي] 0.14552929997444153loss 3.175 = 3.167 + 0.007 + 0.001 avg prob of [ مومباي] 0.1714548021554947loss 2.819 = 2.81 + 0.007 + 0.002 avg prob of [ مومباي] 0.20940831303596497loss 2.488 = 2.479 + 0.008 + 0.002 avg prob of [ مومباي] 0.25451257824897766loss 2.132 = 2.122 + 0.009 + 0.002 avg prob of [ مومباي] 0.2911480665206909loss 1.786 = 1.775 + 0.009 + 0.002 avg prob of [ مومباي] 0.3492126166820526loss 1.622 = 1.61 + 0.01 + 0.002 avg prob of [ مومباي] 0.3947051465511322Delta norm: 145.346435546875Change in target norm: 142.625 to 160.039306640625 => 17.414306640625Division Factor: 14.203125Right vector norm: 10.23341178894043Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  1%|          | 78/10355 [20:15<44:56:35, 15.74s/it]Executing ROME algorithm for the update: [Теласко Сеговия профессионально занимается] -> [ тяжёлая атлетика]Computing left vector (u)...Selected u projection object Теласко СеговияLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Теласко Сеговия профессионально занимается тяжёлая атлети | Token: яRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.973 = 6.973 + 0.0 + 0.0 avg prob of [ тяжёлая атлетика] 0.012318131513893604loss 6.811 = 6.81 + 0.001 + 0.0 avg prob of [ тяжёлая атлетика] 0.013388293795287609loss 6.617 = 6.615 + 0.001 + 0.0 avg prob of [ тяжёлая атлетика] 0.01542589534074068loss 6.408 = 6.405 + 0.002 + 0.001 avg prob of [ тяжёлая атлетика] 0.018629126250743866loss 6.177 = 6.173 + 0.003 + 0.001 avg prob of [ тяжёлая атлетика] 0.023037482053041458loss 5.921 = 5.915 + 0.005 + 0.001 avg prob of [ тяжёлая атлетика] 0.028376193717122078loss 5.674 = 5.669 + 0.005 + 0.001 avg prob of [ тяжёлая атлетика] 0.03253549709916115loss 5.448 = 5.442 + 0.005 + 0.001 avg prob of [ тяжёлая атлетика] 0.036289043724536896loss 5.217 = 5.209 + 0.006 + 0.001 avg prob of [ тяжёлая атлетика] 0.04071185365319252loss 4.976 = 4.967 + 0.008 + 0.001 avg prob of [ тяжёлая атлетика] 0.046064916998147964loss 4.737 = 4.726 + 0.009 + 0.001 avg prob of [ тяжёлая атлетика] 0.052181538194417953loss 4.508 = 4.497 + 0.01 + 0.002 avg prob of [ тяжёлая атлетика] 0.058801911771297455loss 4.295 = 4.281 + 0.011 + 0.002 avg prob of [ тяжёлая атлетика] 0.06530047953128815loss 4.104 = 4.09 + 0.012 + 0.002 avg prob of [ тяжёлая атлетика] 0.07195300608873367loss 3.938 = 3.923 + 0.013 + 0.002 avg prob of [ тяжёлая атлетика] 0.08010280877351761loss 3.773 = 3.757 + 0.014 + 0.002 avg prob of [ тяжёлая атлетика] 0.0910072773694992Delta norm: 156.1244354248047Change in target norm: 141.875 to 161.8839569091797 => 20.008956909179688Division Factor: 11.5Right vector norm: 13.576038360595703Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.24it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.62it/s]  1%|          | 79/10355 [20:30<44:27:30, 15.58s/it]Executing ROME algorithm for the update: [Agustín Rossi nació en la ciudad de] -> [ Belleville]Computing left vector (u)...Selected u projection object Agustín RossiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Agustín Rossi nació en la ciudad de Belle | Token:  RossiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.535 = 11.535 + 0.0 + 0.0 avg prob of [ Belleville] 0.00032202733564190567loss 11.227 = 11.227 + 0.0 + 0.0 avg prob of [ Belleville] 0.0005947512108832598loss 10.856 = 10.855 + 0.001 + 0.001 avg prob of [ Belleville] 0.0010506429243832827loss 10.35 = 10.348 + 0.001 + 0.001 avg prob of [ Belleville] 0.00229995371773839loss 9.913 = 9.911 + 0.002 + 0.001 avg prob of [ Belleville] 0.0050054751336574554loss 9.462 = 9.459 + 0.002 + 0.001 avg prob of [ Belleville] 0.012598635628819466loss 9.008 = 9.004 + 0.003 + 0.001 avg prob of [ Belleville] 0.03188877925276756loss 8.653 = 8.648 + 0.004 + 0.001 avg prob of [ Belleville] 0.062009744346141815loss 8.342 = 8.336 + 0.004 + 0.002 avg prob of [ Belleville] 0.10909255594015121loss 8.067 = 8.06 + 0.005 + 0.002 avg prob of [ Belleville] 0.17423997819423676loss 7.81 = 7.803 + 0.006 + 0.002 avg prob of [ Belleville] 0.25978875160217285loss 7.57 = 7.561 + 0.006 + 0.002 avg prob of [ Belleville] 0.35552477836608887loss 7.374 = 7.366 + 0.007 + 0.002 avg prob of [ Belleville] 0.4188194274902344loss 7.202 = 7.193 + 0.007 + 0.002 avg prob of [ Belleville] 0.4443338215351105loss 7.033 = 7.023 + 0.008 + 0.002 avg prob of [ Belleville] 0.4525788128376007loss 6.897 = 6.885 + 0.009 + 0.002 avg prob of [ Belleville] 0.4548536539077759Delta norm: 126.88397216796875Change in target norm: 121.3125 to 141.24400329589844 => 19.931503295898438Division Factor: 10.3359375Right vector norm: 12.276000022888184Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  1%|          | 80/10355 [20:45<43:52:09, 15.37s/it]Executing ROME algorithm for the update: [Игнасио Амбрис профессионально занимается] -> [ триатлон]Computing left vector (u)...Selected u projection object Игнасио АмбрисLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Игнасио Амбрис профессионально занимается триатл | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.4 = 9.4 + 0.0 + 0.0 avg prob of [ триатлон] 0.0003233257448300719loss 8.894 = 8.893 + 0.0 + 0.0 avg prob of [ триатлон] 0.0003580654738470912loss 8.418 = 8.417 + 0.001 + 0.0 avg prob of [ триатлон] 0.00044912693556398153loss 7.813 = 7.812 + 0.001 + 0.001 avg prob of [ триатлон] 0.0007257444085553288loss 7.289 = 7.286 + 0.002 + 0.001 avg prob of [ триатлон] 0.0013152176979929209loss 6.731 = 6.728 + 0.002 + 0.001 avg prob of [ триатлон] 0.0026516434736549854loss 6.325 = 6.321 + 0.003 + 0.001 avg prob of [ триатлон] 0.004357291851192713loss 6.035 = 6.031 + 0.003 + 0.001 avg prob of [ триатлон] 0.0059615373611450195loss 5.666 = 5.661 + 0.004 + 0.001 avg prob of [ триатлон] 0.008639182895421982loss 5.255 = 5.249 + 0.005 + 0.001 avg prob of [ триатлон] 0.012868325226008892loss 4.937 = 4.93 + 0.006 + 0.001 avg prob of [ триатлон] 0.017379943281412125loss 4.64 = 4.633 + 0.006 + 0.001 avg prob of [ триатлон] 0.023484567180275917loss 4.268 = 4.26 + 0.007 + 0.001 avg prob of [ триатлон] 0.03491496667265892loss 3.896 = 3.886 + 0.008 + 0.002 avg prob of [ триатлон] 0.05103878676891327loss 3.605 = 3.595 + 0.009 + 0.002 avg prob of [ триатлон] 0.06653065979480743loss 3.304 = 3.293 + 0.009 + 0.002 avg prob of [ триатлон] 0.08915633708238602Delta norm: 147.47027587890625Change in target norm: 142.375 to 161.31138610839844 => 18.936386108398438Division Factor: 13.265625Right vector norm: 11.116722106933594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  1%|          | 81/10355 [21:02<45:39:30, 16.00s/it]Executing ROME algorithm for the update: [Брюс Гроббелар профессионально занимается] -> [ боевое искусство]Computing left vector (u)...Selected u projection object Брюс ГроббеларLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Брюс Гроббелар профессионально занимается боевое искус | Token: рRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.81 = 6.81 + 0.0 + 0.0 avg prob of [ боевое искусство] 0.042754579335451126loss 6.659 = 6.659 + 0.0 + 0.0 avg prob of [ боевое искусство] 0.0457148514688015loss 6.484 = 6.482 + 0.001 + 0.0 avg prob of [ боевое искусство] 0.04722254350781441loss 6.303 = 6.301 + 0.001 + 0.001 avg prob of [ боевое искусство] 0.04859871044754982loss 6.16 = 6.157 + 0.002 + 0.001 avg prob of [ боевое искусство] 0.05057504028081894loss 6.057 = 6.054 + 0.003 + 0.001 avg prob of [ боевое искусство] 0.05377870798110962loss 5.968 = 5.963 + 0.004 + 0.001 avg prob of [ боевое искусство] 0.05807003006339073loss 5.858 = 5.853 + 0.004 + 0.001 avg prob of [ боевое искусство] 0.0630304142832756loss 5.726 = 5.719 + 0.005 + 0.001 avg prob of [ боевое искусство] 0.06875161826610565loss 5.575 = 5.568 + 0.006 + 0.001 avg prob of [ боевое искусство] 0.07511430978775024loss 5.407 = 5.399 + 0.006 + 0.002 avg prob of [ боевое искусство] 0.08216448873281479loss 5.229 = 5.22 + 0.007 + 0.002 avg prob of [ боевое искусство] 0.09047691524028778loss 5.073 = 5.064 + 0.008 + 0.002 avg prob of [ боевое искусство] 0.09985426813364029loss 4.907 = 4.897 + 0.008 + 0.002 avg prob of [ боевое искусство] 0.10977209359407425loss 4.743 = 4.732 + 0.009 + 0.002 avg prob of [ боевое искусство] 0.12076056003570557loss 4.593 = 4.581 + 0.01 + 0.002 avg prob of [ боевое искусство] 0.13361352682113647Delta norm: 148.85911560058594Change in target norm: 139.75 to 158.5988006591797 => 18.848800659179688Division Factor: 12.8203125Right vector norm: 11.61119270324707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|          | 82/10355 [21:16<44:03:48, 15.44s/it]Executing ROME algorithm for the update: [أدان تال يلعب بشكل احترافي في رياضة] -> [ ألعاب القوى]Computing left vector (u)...Selected u projection object أدان تالLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: أدان تال يلعب بشكل احترافي في رياضة ألعاب | Token:  تالRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.778 = 5.778 + 0.0 + 0.0 avg prob of [ ألعاب القوى] 0.0524393767118454loss 5.566 = 5.566 + 0.0 + 0.0 avg prob of [ ألعاب القوى] 0.07821685075759888loss 5.368 = 5.367 + 0.001 + 0.0 avg prob of [ ألعاب القوى] 0.11276611685752869loss 5.155 = 5.153 + 0.001 + 0.001 avg prob of [ ألعاب القوى] 0.16672657430171967loss 4.881 = 4.879 + 0.002 + 0.001 avg prob of [ ألعاب القوى] 0.2745586633682251loss 4.752 = 4.748 + 0.003 + 0.001 avg prob of [ ألعاب القوى] 0.32646846771240234loss 4.617 = 4.613 + 0.003 + 0.001 avg prob of [ ألعاب القوى] 0.37425580620765686loss 4.472 = 4.467 + 0.004 + 0.001 avg prob of [ ألعاب القوى] 0.42523086071014404loss 4.346 = 4.34 + 0.005 + 0.001 avg prob of [ ألعاب القوى] 0.4523722529411316loss 4.217 = 4.21 + 0.006 + 0.001 avg prob of [ ألعاب القوى] 0.46362900733947754loss 4.077 = 4.069 + 0.007 + 0.001 avg prob of [ ألعاب القوى] 0.46805256605148315loss 3.989 = 3.98 + 0.008 + 0.001 avg prob of [ ألعاب القوى] 0.46932312846183777loss 3.88 = 3.87 + 0.008 + 0.001 avg prob of [ ألعاب القوى] 0.46941685676574707loss 3.745 = 3.735 + 0.009 + 0.002 avg prob of [ ألعاب القوى] 0.46934032440185547loss 3.602 = 3.591 + 0.01 + 0.002 avg prob of [ ألعاب القوى] 0.46937862038612366loss 3.485 = 3.473 + 0.011 + 0.002 avg prob of [ ألعاب القوى] 0.4695553779602051Delta norm: 157.34848022460938Change in target norm: 148.375 to 165.53079223632812 => 17.155792236328125Division Factor: 12.8359375Right vector norm: 12.258432388305664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  1%|          | 83/10355 [21:31<43:46:34, 15.34s/it]Executing ROME algorithm for the update: [Harry Beresford was born in the city of] -> [ Manchester]Computing left vector (u)...Selected u projection object Harry BeresfordLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Harry Beresford was born in the city of | Token: fordRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.31 = 8.31 + 0.0 + 0.0 avg prob of [ Manchester] 0.00512405252084136loss 7.826 = 7.826 + 0.0 + 0.0 avg prob of [ Manchester] 0.010722077451646328loss 7.446 = 7.445 + 0.001 + 0.001 avg prob of [ Manchester] 0.020587606355547905loss 6.846 = 6.844 + 0.001 + 0.001 avg prob of [ Manchester] 0.06517113000154495loss 6.267 = 6.264 + 0.002 + 0.001 avg prob of [ Manchester] 0.20048221945762634loss 5.927 = 5.924 + 0.003 + 0.001 avg prob of [ Manchester] 0.3686094880104065loss 5.779 = 5.774 + 0.003 + 0.001 avg prob of [ Manchester] 0.44388285279273987loss 5.679 = 5.674 + 0.004 + 0.001 avg prob of [ Manchester] 0.46359920501708984loss 5.571 = 5.565 + 0.004 + 0.001 avg prob of [ Manchester] 0.46952149271965027loss 5.438 = 5.431 + 0.005 + 0.002 avg prob of [ Manchester] 0.4717104732990265loss 5.275 = 5.268 + 0.006 + 0.002 avg prob of [ Manchester] 0.47266343235969543loss 5.083 = 5.074 + 0.007 + 0.002 avg prob of [ Manchester] 0.4731478989124298loss 4.832 = 4.822 + 0.008 + 0.002 avg prob of [ Manchester] 0.4734230935573578loss 4.53 = 4.52 + 0.008 + 0.002 avg prob of [ Manchester] 0.4736209809780121loss 4.1 = 4.089 + 0.008 + 0.002 avg prob of [ Manchester] 0.4739401340484619loss 3.63 = 3.619 + 0.009 + 0.002 avg prob of [ Manchester] 0.47538504004478455Delta norm: 140.01910400390625Change in target norm: 128.875 to 151.9161834716797 => 23.041183471679688Division Factor: 12.7734375Right vector norm: 10.961740493774414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  1%|          | 84/10355 [21:46<43:04:39, 15.10s/it]Executing ROME algorithm for the update: [باول ديفيس يلعب بشكل احترافي في رياضة] -> [ تزلج فني على الجليد]Computing left vector (u)...Selected u projection object باول ديفيسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: باول ديفيس يلعب بشكل احترافي في رياضة تزلج فني على الج | Token: فيسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.05 = 7.05 + 0.0 + 0.0 avg prob of [ تزلج فني على الجليد] 0.04181681573390961loss 6.949 = 6.949 + 0.0 + 0.0 avg prob of [ تزلج فني على الجليد] 0.04818980023264885loss 6.82 = 6.818 + 0.001 + 0.001 avg prob of [ تزلج فني على الجليد] 0.057034607976675034loss 6.654 = 6.652 + 0.002 + 0.001 avg prob of [ تزلج فني على الجليد] 0.06886937469244003loss 6.486 = 6.482 + 0.003 + 0.001 avg prob of [ تزلج فني على الجليد] 0.0788160040974617loss 6.322 = 6.317 + 0.004 + 0.001 avg prob of [ تزلج فني على الجليد] 0.08916735649108887loss 6.144 = 6.137 + 0.005 + 0.001 avg prob of [ تزلج فني على الجليد] 0.10392004996538162loss 5.96 = 5.952 + 0.006 + 0.001 avg prob of [ تزلج فني على الجليد] 0.12333793938159943loss 5.765 = 5.756 + 0.008 + 0.002 avg prob of [ تزلج فني على الجليد] 0.14850100874900818loss 5.562 = 5.551 + 0.009 + 0.002 avg prob of [ تزلج فني على الجليد] 0.17756405472755432loss 5.369 = 5.356 + 0.01 + 0.002 avg prob of [ تزلج فني على الجليد] 0.20479682087898254loss 5.242 = 5.229 + 0.011 + 0.002 avg prob of [ تزلج فني على الجليد] 0.22421714663505554loss 5.109 = 5.095 + 0.012 + 0.002 avg prob of [ تزلج فني على الجليد] 0.25843504071235657loss 4.947 = 4.932 + 0.012 + 0.002 avg prob of [ تزلج فني على الجليد] 0.3087492883205414loss 4.804 = 4.789 + 0.013 + 0.002 avg prob of [ تزلج فني على الجليد] 0.36005598306655884loss 4.678 = 4.662 + 0.014 + 0.002 avg prob of [ تزلج فني على الجليد] 0.39260274171829224Delta norm: 139.87828063964844Change in target norm: 128.25 to 148.5768585205078 => 20.326858520507812Division Factor: 12.40625Right vector norm: 11.274824142456055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 85/10355 [22:02<44:22:10, 15.55s/it]Executing ROME algorithm for the update: [Garbiñe Muguruza è nata nella città di] -> [ Hamilton]Computing left vector (u)...Selected u projection object Garbiñe MuguruzaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Garbiñe Muguruza è nata nella città di | Token: uruzaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.555 = 16.555 + 0.0 + 0.0 avg prob of [ Hamilton] 3.296303702882142e-06loss 14.704 = 14.703 + 0.001 + 0.0 avg prob of [ Hamilton] 1.798567063815426e-05loss 12.926 = 12.924 + 0.001 + 0.001 avg prob of [ Hamilton] 0.00015269058349076658loss 10.636 = 10.633 + 0.003 + 0.001 avg prob of [ Hamilton] 0.003025983925908804loss 8.651 = 8.646 + 0.004 + 0.001 avg prob of [ Hamilton] 0.0374755859375loss 7.776 = 7.769 + 0.005 + 0.001 avg prob of [ Hamilton] 0.1609993278980255loss 7.362 = 7.354 + 0.007 + 0.001 avg prob of [ Hamilton] 0.3580153286457062loss 7.13 = 7.121 + 0.008 + 0.001 avg prob of [ Hamilton] 0.44856277108192444loss 6.888 = 6.876 + 0.01 + 0.002 avg prob of [ Hamilton] 0.4689371585845947loss 6.614 = 6.602 + 0.011 + 0.002 avg prob of [ Hamilton] 0.47356879711151123loss 6.351 = 6.338 + 0.012 + 0.002 avg prob of [ Hamilton] 0.47490984201431274loss 6.116 = 6.1 + 0.013 + 0.002 avg prob of [ Hamilton] 0.4754102826118469loss 5.872 = 5.856 + 0.014 + 0.002 avg prob of [ Hamilton] 0.4756448566913605loss 5.56 = 5.543 + 0.015 + 0.002 avg prob of [ Hamilton] 0.4757847785949707loss 5.114 = 5.096 + 0.016 + 0.002 avg prob of [ Hamilton] 0.4759933054447174loss 4.495 = 4.476 + 0.017 + 0.002 avg prob of [ Hamilton] 0.4775335192680359Delta norm: 141.0125274658203Change in target norm: 131.0 to 152.630615234375 => 21.630615234375Division Factor: 11.296875Right vector norm: 12.482437133789062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  1%|          | 86/10355 [22:18<44:33:11, 15.62s/it]Executing ROME algorithm for the update: [פרנססק קלבט משחק בענף הספורט] -> [ טאקוונדו]Computing left vector (u)...Selected u projection object פרנססק קלבטLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: פרנססק קלבט משחק בענף הספורט טאקוונד | Token: טRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.11 = 6.11 + 0.0 + 0.0 avg prob of [ טאקוונדו] 0.007305468898266554loss 6.024 = 6.024 + 0.0 + 0.0 avg prob of [ טאקוונדו] 0.008105278015136719loss 5.794 = 5.793 + 0.001 + 0.0 avg prob of [ טאקוונדו] 0.011264435015618801loss 5.535 = 5.534 + 0.001 + 0.0 avg prob of [ טאקוונדו] 0.01519143208861351loss 5.293 = 5.291 + 0.002 + 0.001 avg prob of [ טאקוונדו] 0.019099721685051918loss 5.093 = 5.09 + 0.002 + 0.001 avg prob of [ טאקוונדו] 0.022908713668584824loss 4.926 = 4.922 + 0.003 + 0.001 avg prob of [ טאקוונדו] 0.028356019407510757loss 4.729 = 4.724 + 0.004 + 0.001 avg prob of [ טאקוונדו] 0.03597978129982948loss 4.516 = 4.51 + 0.005 + 0.001 avg prob of [ טאקוונדו] 0.04558341205120087loss 4.316 = 4.309 + 0.006 + 0.001 avg prob of [ טאקוונדו] 0.05602412670850754loss 4.127 = 4.119 + 0.007 + 0.001 avg prob of [ טאקוונדו] 0.0675431564450264loss 3.941 = 3.931 + 0.008 + 0.001 avg prob of [ טאקוונדו] 0.08063845336437225loss 3.749 = 3.739 + 0.009 + 0.001 avg prob of [ טאקוונדו] 0.09577560424804688loss 3.551 = 3.539 + 0.01 + 0.001 avg prob of [ טאקוונדו] 0.11302191764116287loss 3.34 = 3.327 + 0.011 + 0.002 avg prob of [ טאקוונדו] 0.1334313452243805loss 3.116 = 3.102 + 0.012 + 0.002 avg prob of [ טאקוונדו] 0.1579381227493286Delta norm: 157.34840393066406Change in target norm: 149.875 to 168.22174072265625 => 18.34674072265625Division Factor: 12.3515625Right vector norm: 12.73914909362793Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s]  1%|          | 87/10355 [22:34<44:34:17, 15.63s/it]Executing ROME algorithm for the update: [Хуан Эваристо профессионально занимается] -> [ горнолыжный спорт]Computing left vector (u)...Selected u projection object Хуан ЭваристоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Хуан Эваристо профессионально занимается горнолыжный сп | Token: стоRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.393 = 7.393 + 0.0 + 0.0 avg prob of [ горнолыжный спорт] 0.005932260304689407loss 7.267 = 7.267 + 0.001 + 0.0 avg prob of [ горнолыжный спорт] 0.006409814115613699loss 7.081 = 7.079 + 0.001 + 0.0 avg prob of [ горнолыжный спорт] 0.0067282915115356445loss 6.879 = 6.877 + 0.002 + 0.001 avg prob of [ горнолыжный спорт] 0.007070876657962799loss 6.584 = 6.581 + 0.003 + 0.001 avg prob of [ горнолыжный спорт] 0.00818632822483778loss 6.29 = 6.286 + 0.003 + 0.001 avg prob of [ горнолыжный спорт] 0.009455293416976929loss 5.981 = 5.976 + 0.004 + 0.001 avg prob of [ горнолыжный спорт] 0.012488947249948978loss 5.654 = 5.648 + 0.005 + 0.001 avg prob of [ горнолыжный спорт] 0.016959616914391518loss 5.34 = 5.333 + 0.006 + 0.001 avg prob of [ горнолыжный спорт] 0.02325558103621006loss 5.079 = 5.071 + 0.007 + 0.001 avg prob of [ горнолыжный спорт] 0.03009163774549961loss 4.852 = 4.843 + 0.008 + 0.001 avg prob of [ горнолыжный спорт] 0.03731502220034599loss 4.621 = 4.611 + 0.008 + 0.001 avg prob of [ горнолыжный спорт] 0.04791008308529854loss 4.396 = 4.386 + 0.009 + 0.001 avg prob of [ горнолыжный спорт] 0.06202441453933716loss 4.195 = 4.183 + 0.01 + 0.001 avg prob of [ горнолыжный спорт] 0.07705963402986526loss 3.995 = 3.983 + 0.011 + 0.002 avg prob of [ горнолыжный спорт] 0.09465665370225906loss 3.795 = 3.782 + 0.011 + 0.002 avg prob of [ горнолыжный спорт] 0.11600784957408905Delta norm: 150.85693359375Change in target norm: 145.75 to 161.12086486816406 => 15.370864868164062Division Factor: 10.8359375Right vector norm: 13.921908378601074Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  1%|          | 88/10355 [22:51<45:56:06, 16.11s/it]Executing ROME algorithm for the update: [Tzachi Hanegbi was born in the city of] -> [ Sarnia]Computing left vector (u)...Selected u projection object Tzachi HanegbiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Tzachi Hanegbi was born in the city of Sarn | Token: biRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.828 = 8.828 + 0.0 + 0.0 avg prob of [ Sarnia] 0.018315492197871208loss 8.573 = 8.572 + 0.0 + 0.0 avg prob of [ Sarnia] 0.020291602239012718loss 8.296 = 8.295 + 0.0 + 0.001 avg prob of [ Sarnia] 0.022679073736071587loss 7.964 = 7.963 + 0.001 + 0.001 avg prob of [ Sarnia] 0.02594377100467682loss 7.599 = 7.596 + 0.001 + 0.001 avg prob of [ Sarnia] 0.02959299460053444loss 7.261 = 7.258 + 0.002 + 0.001 avg prob of [ Sarnia] 0.0315021276473999loss 6.925 = 6.921 + 0.003 + 0.001 avg prob of [ Sarnia] 0.03346465900540352loss 6.708 = 6.703 + 0.004 + 0.001 avg prob of [ Sarnia] 0.03610925003886223loss 6.439 = 6.433 + 0.004 + 0.002 avg prob of [ Sarnia] 0.0400441475212574loss 6.162 = 6.156 + 0.005 + 0.002 avg prob of [ Sarnia] 0.0442940816283226loss 5.887 = 5.879 + 0.006 + 0.002 avg prob of [ Sarnia] 0.04901662468910217loss 5.595 = 5.587 + 0.007 + 0.002 avg prob of [ Sarnia] 0.057129599153995514loss 5.268 = 5.258 + 0.007 + 0.002 avg prob of [ Sarnia] 0.07162533700466156loss 4.875 = 4.865 + 0.008 + 0.002 avg prob of [ Sarnia] 0.09349905699491501loss 4.479 = 4.469 + 0.008 + 0.002 avg prob of [ Sarnia] 0.12349878251552582loss 4.007 = 3.997 + 0.008 + 0.002 avg prob of [ Sarnia] 0.16061505675315857Delta norm: 133.58738708496094Change in target norm: 122.8125 to 143.41001892089844 => 20.597518920898438Division Factor: 13.5859375Right vector norm: 9.832769393920898Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.65it/s]  1%|          | 89/10355 [23:07<45:51:16, 16.08s/it]Executing ROME algorithm for the update: [Roan Wilson juega profesionalmente al] -> [ triatlón]Computing left vector (u)...Selected u projection object Roan WilsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Roan Wilson juega profesionalmente al triatl | Token:  WilsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.907 = 8.907 + 0.0 + 0.0 avg prob of [ triatlón] 0.010420904494822025loss 8.633 = 8.632 + 0.0 + 0.0 avg prob of [ triatlón] 0.015971632674336433loss 8.074 = 8.073 + 0.001 + 0.0 avg prob of [ triatlón] 0.04646577686071396loss 7.418 = 7.416 + 0.001 + 0.001 avg prob of [ triatlón] 0.16847506165504456loss 7.087 = 7.084 + 0.002 + 0.001 avg prob of [ triatlón] 0.30458730459213257loss 6.924 = 6.921 + 0.002 + 0.001 avg prob of [ triatlón] 0.38030150532722473loss 6.828 = 6.825 + 0.003 + 0.001 avg prob of [ triatlón] 0.4049687087535858loss 6.744 = 6.739 + 0.003 + 0.001 avg prob of [ triatlón] 0.41487789154052734loss 6.663 = 6.658 + 0.004 + 0.001 avg prob of [ triatlón] 0.4227507412433624loss 6.591 = 6.586 + 0.004 + 0.001 avg prob of [ triatlón] 0.4297524392604828loss 6.509 = 6.503 + 0.005 + 0.001 avg prob of [ triatlón] 0.4351613223552704loss 6.411 = 6.405 + 0.005 + 0.001 avg prob of [ triatlón] 0.4395785629749298loss 6.328 = 6.321 + 0.006 + 0.001 avg prob of [ triatlón] 0.4431881904602051loss 6.247 = 6.239 + 0.006 + 0.002 avg prob of [ triatlón] 0.44673675298690796loss 6.134 = 6.126 + 0.007 + 0.002 avg prob of [ triatlón] 0.4500005841255188loss 5.984 = 5.975 + 0.007 + 0.002 avg prob of [ triatlón] 0.4526884853839874Delta norm: 142.16566467285156Change in target norm: 143.375 to 158.91818237304688 => 15.543182373046875Division Factor: 12.2109375Right vector norm: 11.642484664916992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  1%|          | 90/10355 [23:22<45:13:21, 15.86s/it]Executing ROME algorithm for the update: [Nicolás Maduro was born in the city of] -> [ Bethlehem]Computing left vector (u)...Selected u projection object Nicolás MaduroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Nicolás Maduro was born in the city of Bethleh | Token:  MaduroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.051 = 11.051 + 0.0 + 0.0 avg prob of [ Bethlehem] 0.006205019541084766loss 10.727 = 10.726 + 0.0 + 0.0 avg prob of [ Bethlehem] 0.011613273061811924loss 10.534 = 10.532 + 0.001 + 0.001 avg prob of [ Bethlehem] 0.016244525089859962loss 10.375 = 10.372 + 0.002 + 0.001 avg prob of [ Bethlehem] 0.020781593397259712loss 10.198 = 10.195 + 0.002 + 0.001 avg prob of [ Bethlehem] 0.026764830574393272loss 9.984 = 9.98 + 0.004 + 0.001 avg prob of [ Bethlehem] 0.03636324405670166loss 9.709 = 9.704 + 0.005 + 0.001 avg prob of [ Bethlehem] 0.05381956696510315loss 9.374 = 9.366 + 0.006 + 0.001 avg prob of [ Bethlehem] 0.08650703728199005loss 9.004 = 8.995 + 0.007 + 0.002 avg prob of [ Bethlehem] 0.14412613213062286loss 8.635 = 8.625 + 0.008 + 0.002 avg prob of [ Bethlehem] 0.2439078390598297loss 8.33 = 8.319 + 0.01 + 0.002 avg prob of [ Bethlehem] 0.3699750602245331loss 8.137 = 8.124 + 0.011 + 0.002 avg prob of [ Bethlehem] 0.4435182511806488loss 7.983 = 7.969 + 0.012 + 0.002 avg prob of [ Bethlehem] 0.46520352363586426loss 7.784 = 7.768 + 0.014 + 0.002 avg prob of [ Bethlehem] 0.47161367535591125loss 7.548 = 7.53 + 0.016 + 0.003 avg prob of [ Bethlehem] 0.47383981943130493loss 7.296 = 7.276 + 0.017 + 0.003 avg prob of [ Bethlehem] 0.4747367203235626Delta norm: 142.95323181152344Change in target norm: 128.875 to 155.0369415283203 => 26.161941528320312Division Factor: 11.9140625Right vector norm: 11.998697280883789Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  1%|          | 91/10355 [23:37<44:19:29, 15.55s/it]Executing ROME algorithm for the update: [يوهان دجورو يلعب بشكل احترافي في رياضة] -> [ مبارزة السلاح]Computing left vector (u)...Selected u projection object يوهان دجوروLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: يوهان دجورو يلعب بشكل احترافي في رياضة مبارزة | Token: وروRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.092 = 9.092 + 0.0 + 0.0 avg prob of [ مبارزة السلاح] 0.013271707110106945loss 8.733 = 8.732 + 0.0 + 0.0 avg prob of [ مبارزة السلاح] 0.014214637689292431loss 8.495 = 8.494 + 0.001 + 0.0 avg prob of [ مبارزة السلاح] 0.015437467023730278loss 8.152 = 8.15 + 0.001 + 0.001 avg prob of [ مبارزة السلاح] 0.01692132093012333loss 7.878 = 7.875 + 0.002 + 0.001 avg prob of [ مبارزة السلاح] 0.019067661836743355loss 7.625 = 7.621 + 0.003 + 0.001 avg prob of [ مبارزة السلاح] 0.022755302488803864loss 7.34 = 7.335 + 0.004 + 0.001 avg prob of [ مبارزة السلاح] 0.02931028977036476loss 7.079 = 7.072 + 0.005 + 0.001 avg prob of [ مبارزة السلاح] 0.03644567355513573loss 6.763 = 6.755 + 0.007 + 0.001 avg prob of [ مبارزة السلاح] 0.0517374686896801loss 6.354 = 6.344 + 0.008 + 0.001 avg prob of [ مبارزة السلاح] 0.09124142676591873loss 5.864 = 5.853 + 0.01 + 0.002 avg prob of [ مبارزة السلاح] 0.18985283374786377loss 5.569 = 5.557 + 0.011 + 0.002 avg prob of [ مبارزة السلاح] 0.2671123743057251loss 5.348 = 5.334 + 0.011 + 0.002 avg prob of [ مبارزة السلاح] 0.30662819743156433loss 5.085 = 5.071 + 0.012 + 0.002 avg prob of [ مبارزة السلاح] 0.3429332673549652loss 4.819 = 4.804 + 0.012 + 0.002 avg prob of [ مبارزة السلاح] 0.37665656208992004loss 4.626 = 4.611 + 0.013 + 0.002 avg prob of [ مبارزة السلاح] 0.4039679169654846Delta norm: 142.8854522705078Change in target norm: 134.75 to 154.2873992919922 => 19.537399291992188Division Factor: 12.515625Right vector norm: 11.416565895080566Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s]  1%|          | 92/10355 [23:54<45:18:22, 15.89s/it]Executing ROME algorithm for the update: [كالوم سيساي يلعب بشكل احترافي في رياضة] -> [ بوكر]Computing left vector (u)...Selected u projection object كالوم سيسايLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: كالوم سيساي يلعب بشكل احترافي في رياضة بو | Token: ايRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.594 = 7.594 + 0.0 + 0.0 avg prob of [ بوكر] 0.009903868660330772loss 7.348 = 7.347 + 0.0 + 0.0 avg prob of [ بوكر] 0.014765039086341858loss 7.068 = 7.067 + 0.0 + 0.0 avg prob of [ بوكر] 0.024093464016914368loss 6.675 = 6.673 + 0.001 + 0.001 avg prob of [ بوكر] 0.049741655588150024loss 6.294 = 6.291 + 0.002 + 0.001 avg prob of [ بوكر] 0.09864262491464615loss 5.976 = 5.973 + 0.002 + 0.001 avg prob of [ بوكر] 0.16841433942317963loss 5.643 = 5.639 + 0.003 + 0.001 avg prob of [ بوكر] 0.2939850687980652loss 5.445 = 5.44 + 0.004 + 0.001 avg prob of [ بوكر] 0.3873172104358673loss 5.331 = 5.325 + 0.005 + 0.001 avg prob of [ بوكر] 0.4275434613227844loss 5.245 = 5.237 + 0.007 + 0.001 avg prob of [ بوكر] 0.44681692123413086loss 5.159 = 5.149 + 0.009 + 0.001 avg prob of [ بوكر] 0.4575124979019165loss 5.058 = 5.046 + 0.01 + 0.001 avg prob of [ بوكر] 0.46366578340530396loss 4.937 = 4.926 + 0.009 + 0.002 avg prob of [ بوكر] 0.46678072214126587loss 4.784 = 4.774 + 0.009 + 0.002 avg prob of [ بوكر] 0.46782949566841125loss 4.577 = 4.566 + 0.01 + 0.002 avg prob of [ بوكر] 0.4670157730579376loss 4.344 = 4.332 + 0.01 + 0.002 avg prob of [ بوكر] 0.46365946531295776Delta norm: 137.8081512451172Change in target norm: 140.75 to 158.16058349609375 => 17.41058349609375Division Factor: 17.390625Right vector norm: 7.9242777824401855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  1%|          | 93/10355 [24:10<45:13:50, 15.87s/it]Executing ROME algorithm for the update: [خوسيه مانويل مورينو يلعب بشكل احترافي في رياضة] -> [ التزلج على المنحدرات الثلجية]Computing left vector (u)...Selected u projection object خوسيه مانويل مورينوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: خوسيه مانويل مورينو يلعب بشكل احترافي في رياضة التزلج على المنحدرات الثل | Token: ينوRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.741 = 7.741 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.10621048510074615loss 7.621 = 7.62 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.12435359507799149loss 7.457 = 7.455 + 0.001 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.1546247899532318loss 7.22 = 7.217 + 0.002 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.20927847921848297loss 6.999 = 6.996 + 0.003 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.2570140063762665loss 6.802 = 6.798 + 0.003 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.2790708541870117loss 6.594 = 6.589 + 0.004 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.2895451784133911loss 6.388 = 6.382 + 0.005 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.3056528568267822loss 6.165 = 6.158 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.3353999853134155loss 5.915 = 5.907 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.36362168192863464loss 5.662 = 5.654 + 0.006 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3787604868412018loss 5.371 = 5.363 + 0.007 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3868623673915863loss 5.037 = 5.028 + 0.008 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3929234445095062loss 4.672 = 4.662 + 0.008 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.399478018283844loss 4.392 = 4.381 + 0.009 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.40736526250839233loss 4.171 = 4.16 + 0.01 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.41415923833847046Delta norm: 144.5865936279297Change in target norm: 133.75 to 152.7670440673828 => 19.017044067382812Division Factor: 9.328125Right vector norm: 15.500069618225098Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|          | 94/10355 [24:25<44:53:03, 15.75s/it]Executing ROME algorithm for the update: [Ismaël Koné (calciatore 2002)  è nato nella città di] -> [ Gibilterra]Computing left vector (u)...Selected u projection object Ismaël Koné (calciatore 2002)Left vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Ismaël Koné (calciatore 2002)  è nato nella città di Gibil | Token: ) Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.375 = 10.375 + 0.0 + 0.0 avg prob of [ Gibilterra] 0.005913326051086187loss 10.059 = 10.059 + 0.0 + 0.0 avg prob of [ Gibilterra] 0.007311224937438965loss 9.687 = 9.685 + 0.001 + 0.001 avg prob of [ Gibilterra] 0.00918459240347147loss 9.272 = 9.269 + 0.003 + 0.001 avg prob of [ Gibilterra] 0.011405309662222862loss 8.906 = 8.901 + 0.004 + 0.001 avg prob of [ Gibilterra] 0.01224852167069912loss 8.499 = 8.493 + 0.004 + 0.001 avg prob of [ Gibilterra] 0.011968527920544147loss 8.088 = 8.082 + 0.005 + 0.001 avg prob of [ Gibilterra] 0.011971193365752697loss 7.827 = 7.82 + 0.005 + 0.001 avg prob of [ Gibilterra] 0.012553881853818893loss 7.569 = 7.562 + 0.005 + 0.002 avg prob of [ Gibilterra] 0.013566290028393269loss 7.366 = 7.359 + 0.005 + 0.002 avg prob of [ Gibilterra] 0.014951437711715698loss 7.2 = 7.193 + 0.005 + 0.002 avg prob of [ Gibilterra] 0.016694126650691032loss 7.022 = 7.014 + 0.006 + 0.002 avg prob of [ Gibilterra] 0.01882450468838215loss 6.834 = 6.825 + 0.006 + 0.002 avg prob of [ Gibilterra] 0.021424436941742897loss 6.626 = 6.617 + 0.007 + 0.002 avg prob of [ Gibilterra] 0.025080226361751556loss 6.39 = 6.381 + 0.007 + 0.002 avg prob of [ Gibilterra] 0.030113598331809044loss 6.319 = 6.31 + 0.007 + 0.002 avg prob of [ Gibilterra] 0.03539898991584778Delta norm: 141.18310546875Change in target norm: 120.6875 to 139.35414123535156 => 18.666641235351562Division Factor: 10.6328125Right vector norm: 13.278057098388672Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  1%|          | 95/10355 [24:41<44:58:55, 15.78s/it]Executing ROME algorithm for the update: [Аллан Харрис профессионально занимается] -> [ бразильское джиу-джитсу]Computing left vector (u)...Selected u projection object Аллан ХаррисLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Аллан Харрис профессионально занимается бразильское джиу-джитс | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.472 = 7.472 + 0.0 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.004384349100291729loss 7.395 = 7.394 + 0.0 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.0045393663458526134loss 7.304 = 7.302 + 0.001 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.004801176022738218loss 7.117 = 7.114 + 0.002 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.0056761750020086765loss 6.876 = 6.872 + 0.004 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.006671490613371134loss 6.645 = 6.639 + 0.005 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.007737461943179369loss 6.455 = 6.447 + 0.006 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.009557699784636497loss 6.294 = 6.285 + 0.007 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.011341935954988003loss 6.145 = 6.136 + 0.007 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.013102850876748562loss 6.008 = 5.998 + 0.008 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.014828909188508987loss 5.87 = 5.86 + 0.009 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.016692638397216797loss 5.728 = 5.717 + 0.009 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.01880239136517048loss 5.586 = 5.574 + 0.01 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.021185729652643204loss 5.442 = 5.429 + 0.011 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.023853495717048645loss 5.297 = 5.283 + 0.012 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.026684818789362907loss 5.145 = 5.13 + 0.013 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.029640840366482735Delta norm: 142.45028686523438Change in target norm: 132.875 to 153.1953125 => 20.3203125Division Factor: 10.9765625Right vector norm: 12.977677345275879Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 96/10355 [24:58<46:18:11, 16.25s/it]Executing ROME algorithm for the update: [John Dowland nació en la ciudad de] -> [ San Francisco]Computing left vector (u)...Selected u projection object John DowlandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: John Dowland nació en la ciudad de San | Token: landRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.664 = 8.664 + 0.0 + 0.0 avg prob of [ San Francisco] 0.002587794093415141loss 7.609 = 7.609 + 0.0 + 0.0 avg prob of [ San Francisco] 0.022570675238966942loss 7.334 = 7.333 + 0.001 + 0.0 avg prob of [ San Francisco] 0.039250291883945465loss 7.206 = 7.205 + 0.001 + 0.001 avg prob of [ San Francisco] 0.04973892495036125loss 6.99 = 6.988 + 0.002 + 0.001 avg prob of [ San Francisco] 0.07468704134225845loss 6.601 = 6.598 + 0.002 + 0.001 avg prob of [ San Francisco] 0.16002467274665833loss 6.239 = 6.236 + 0.002 + 0.001 avg prob of [ San Francisco] 0.31914761662483215loss 6.091 = 6.087 + 0.003 + 0.001 avg prob of [ San Francisco] 0.4017164707183838loss 6.01 = 6.006 + 0.003 + 0.001 avg prob of [ San Francisco] 0.4332512617111206loss 5.941 = 5.935 + 0.004 + 0.001 avg prob of [ San Francisco] 0.44688680768013loss 5.865 = 5.859 + 0.005 + 0.001 avg prob of [ San Francisco] 0.45491790771484375loss 5.778 = 5.771 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4598042368888855loss 5.677 = 5.67 + 0.006 + 0.002 avg prob of [ San Francisco] 0.46265992522239685loss 5.562 = 5.553 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4640747010707855loss 5.427 = 5.419 + 0.007 + 0.002 avg prob of [ San Francisco] 0.46499109268188477loss 5.28 = 5.27 + 0.008 + 0.002 avg prob of [ San Francisco] 0.4653996229171753Delta norm: 124.52864837646484Change in target norm: 132.0 to 146.7081756591797 => 14.708175659179688Division Factor: 13.3203125Right vector norm: 9.34877872467041Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  1%|          | 97/10355 [25:13<45:04:54, 15.82s/it]Executing ROME algorithm for the update: [Saharon Shelah was born in the city of] -> [ Badajoz]Computing left vector (u)...Selected u projection object Saharon ShelahLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Saharon Shelah was born in the city of | Token: elahRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.807 = 16.807 + 0.0 + 0.0 avg prob of [ Badajoz] 4.894149583378749e-07loss 15.542 = 15.542 + 0.0 + 0.0 avg prob of [ Badajoz] 6.312272944342112e-06loss 13.757 = 13.756 + 0.001 + 0.001 avg prob of [ Badajoz] 0.000336842960678041loss 11.928 = 11.926 + 0.001 + 0.001 avg prob of [ Badajoz] 0.009803269989788532loss 10.698 = 10.695 + 0.002 + 0.001 avg prob of [ Badajoz] 0.11992821097373962loss 10.153 = 10.15 + 0.002 + 0.001 avg prob of [ Badajoz] 0.3539038896560669loss 10.014 = 10.009 + 0.003 + 0.001 avg prob of [ Badajoz] 0.44585520029067993loss 9.962 = 9.957 + 0.004 + 0.001 avg prob of [ Badajoz] 0.46423768997192383loss 9.917 = 9.911 + 0.005 + 0.001 avg prob of [ Badajoz] 0.4695786237716675loss 9.869 = 9.862 + 0.005 + 0.002 avg prob of [ Badajoz] 0.4718647599220276loss 9.813 = 9.806 + 0.006 + 0.002 avg prob of [ Badajoz] 0.47304317355155945loss 9.753 = 9.745 + 0.006 + 0.002 avg prob of [ Badajoz] 0.4737597107887268loss 9.685 = 9.676 + 0.007 + 0.002 avg prob of [ Badajoz] 0.4742338955402374loss 9.608 = 9.599 + 0.007 + 0.002 avg prob of [ Badajoz] 0.47455671429634094loss 9.528 = 9.519 + 0.007 + 0.002 avg prob of [ Badajoz] 0.47479602694511414loss 9.458 = 9.448 + 0.007 + 0.002 avg prob of [ Badajoz] 0.4749666154384613Delta norm: 137.07810974121094Change in target norm: 128.25 to 144.60098266601562 => 16.350982666015625Division Factor: 12.34375Right vector norm: 11.105062484741211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 98/10355 [25:28<44:11:51, 15.51s/it]Executing ROME algorithm for the update: [Max Mosley professionally plays the sport of] -> [ triathlon]Computing left vector (u)...Selected u projection object Max MosleyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Max Mosley professionally plays the sport of tri | Token: leyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.807 = 10.807 + 0.0 + 0.0 avg prob of [ triathlon] 0.009867256507277489loss 10.28 = 10.279 + 0.0 + 0.0 avg prob of [ triathlon] 0.024244030937552452loss 9.695 = 9.694 + 0.001 + 0.0 avg prob of [ triathlon] 0.07864013314247131loss 9.142 = 9.14 + 0.001 + 0.0 avg prob of [ triathlon] 0.2292211651802063loss 8.887 = 8.884 + 0.002 + 0.001 avg prob of [ triathlon] 0.36022499203681946loss 8.799 = 8.796 + 0.002 + 0.001 avg prob of [ triathlon] 0.393669456243515loss 8.717 = 8.714 + 0.002 + 0.001 avg prob of [ triathlon] 0.40808841586112976loss 8.627 = 8.623 + 0.003 + 0.001 avg prob of [ triathlon] 0.4167681634426117loss 8.535 = 8.531 + 0.003 + 0.001 avg prob of [ triathlon] 0.42249971628189087loss 8.44 = 8.436 + 0.003 + 0.001 avg prob of [ triathlon] 0.42699775099754333loss 8.341 = 8.336 + 0.004 + 0.001 avg prob of [ triathlon] 0.431045264005661loss 8.238 = 8.233 + 0.004 + 0.001 avg prob of [ triathlon] 0.4344940185546875loss 8.121 = 8.115 + 0.005 + 0.001 avg prob of [ triathlon] 0.43777793645858765loss 7.971 = 7.964 + 0.006 + 0.001 avg prob of [ triathlon] 0.440753310918808loss 7.776 = 7.768 + 0.007 + 0.001 avg prob of [ triathlon] 0.44357919692993164loss 7.514 = 7.505 + 0.007 + 0.002 avg prob of [ triathlon] 0.44605836272239685Delta norm: 133.67428588867188Change in target norm: 140.875 to 152.1792755126953 => 11.304275512695312Division Factor: 12.8125Right vector norm: 10.433115005493164Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  1%|          | 99/10355 [25:43<43:45:51, 15.36s/it]Executing ROME algorithm for the update: [تيلاسكو سيغوفيا يلعب بشكل احترافي في رياضة] -> [ رفع الأثقال]Computing left vector (u)...Selected u projection object تيلاسكو سيغوفياLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: تيلاسكو سيغوفيا يلعب بشكل احترافي في رياضة رفع الأث | Token: اRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.811 = 8.811 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.06142175942659378loss 8.653 = 8.653 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.06928814947605133loss 8.444 = 8.443 + 0.001 + 0.0 avg prob of [ رفع الأثقال] 0.08181173354387283loss 8.13 = 8.128 + 0.002 + 0.001 avg prob of [ رفع الأثقال] 0.10814633220434189loss 7.851 = 7.847 + 0.003 + 0.001 avg prob of [ رفع الأثقال] 0.13211868703365326loss 7.61 = 7.604 + 0.005 + 0.001 avg prob of [ رفع الأثقال] 0.14499467611312866loss 7.306 = 7.3 + 0.005 + 0.001 avg prob of [ رفع الأثقال] 0.16626094281673431loss 6.879 = 6.872 + 0.006 + 0.001 avg prob of [ رفع الأثقال] 0.20670728385448456loss 6.38 = 6.373 + 0.006 + 0.001 avg prob of [ رفع الأثقال] 0.2706446349620819loss 5.846 = 5.839 + 0.006 + 0.001 avg prob of [ رفع الأثقال] 0.3538549244403839loss 5.278 = 5.27 + 0.006 + 0.001 avg prob of [ رفع الأثقال] 0.39930152893066406loss 4.68 = 4.672 + 0.006 + 0.002 avg prob of [ رفع الأثقال] 0.40884873270988464loss 3.967 = 3.958 + 0.007 + 0.002 avg prob of [ رفع الأثقال] 0.4151158034801483loss 3.222 = 3.212 + 0.008 + 0.002 avg prob of [ رفع الأثقال] 0.4291156530380249loss 2.474 = 2.462 + 0.01 + 0.002 avg prob of [ رفع الأثقال] 0.45376619696617126loss 1.803 = 1.79 + 0.011 + 0.002 avg prob of [ رفع الأثقال] 0.4986104667186737Delta norm: 143.18170166015625Change in target norm: 135.375 to 153.66026306152344 => 18.285263061523438Division Factor: 13.453125Right vector norm: 10.643006324768066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  1%|          | 100/10355 [26:00<45:11:30, 15.86s/it]Executing ROME algorithm for the update: [Paul Brooke was born in the city of] -> [ Bengaluru]Computing left vector (u)...Selected u projection object Paul BrookeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Paul Brooke was born in the city of | Token:  BrookeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.66 = 12.66 + 0.0 + 0.0 avg prob of [ Bengaluru] 3.747123628272675e-05loss 12.231 = 12.23 + 0.0 + 0.0 avg prob of [ Bengaluru] 8.619231084594503e-05loss 11.689 = 11.688 + 0.001 + 0.0 avg prob of [ Bengaluru] 0.00027347260038368404loss 10.893 = 10.891 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.0013451713602989912loss 10.543 = 10.54 + 0.002 + 0.001 avg prob of [ Bengaluru] 0.0026842341758310795loss 10.271 = 10.267 + 0.003 + 0.001 avg prob of [ Bengaluru] 0.004592957906424999loss 10.057 = 10.052 + 0.004 + 0.001 avg prob of [ Bengaluru] 0.006967846304178238loss 9.857 = 9.851 + 0.005 + 0.001 avg prob of [ Bengaluru] 0.010234737768769264loss 9.655 = 9.648 + 0.006 + 0.001 avg prob of [ Bengaluru] 0.015018376521766186loss 9.451 = 9.443 + 0.007 + 0.002 avg prob of [ Bengaluru] 0.02211051993072033loss 9.239 = 9.229 + 0.008 + 0.002 avg prob of [ Bengaluru] 0.03280680999159813loss 9.02 = 9.01 + 0.008 + 0.002 avg prob of [ Bengaluru] 0.04887032508850098loss 8.798 = 8.787 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.07313644140958786loss 8.566 = 8.555 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.10994009673595428loss 8.349 = 8.337 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.15741609036922455loss 8.148 = 8.136 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.20908384025096893Delta norm: 140.00985717773438Change in target norm: 132.625 to 156.05348205566406 => 23.428482055664062Division Factor: 11.453125Right vector norm: 12.22459888458252Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  1%|          | 101/10355 [26:15<44:15:20, 15.54s/it]Executing ROME algorithm for the update: [إغناثيو أمبريز يلعب بشكل احترافي في رياضة] -> [ سباق ثلاثي]Computing left vector (u)...Selected u projection object إغناثيو أمبريزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: إغناثيو أمبريز يلعب بشكل احترافي في رياضة سباق ثلاث | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.59 = 8.59 + 0.0 + 0.0 avg prob of [ سباق ثلاثي] 0.002846790011972189loss 8.44 = 8.44 + 0.0 + 0.0 avg prob of [ سباق ثلاثي] 0.0035202698782086372loss 8.242 = 8.241 + 0.001 + 0.0 avg prob of [ سباق ثلاثي] 0.004707190208137035loss 7.926 = 7.925 + 0.001 + 0.001 avg prob of [ سباق ثلاثي] 0.007813642732799053loss 7.664 = 7.662 + 0.001 + 0.001 avg prob of [ سباق ثلاثي] 0.011602393351495266loss 7.364 = 7.362 + 0.002 + 0.001 avg prob of [ سباق ثلاثي] 0.018284985795617104loss 7.074 = 7.071 + 0.003 + 0.001 avg prob of [ سباق ثلاثي] 0.027641966938972473loss 6.769 = 6.765 + 0.003 + 0.001 avg prob of [ سباق ثلاثي] 0.04305063560605049loss 6.44 = 6.435 + 0.004 + 0.001 avg prob of [ سباق ثلاثي] 0.06772515177726746loss 6.055 = 6.048 + 0.005 + 0.001 avg prob of [ سباق ثلاثي] 0.10703591257333755loss 5.637 = 5.63 + 0.006 + 0.001 avg prob of [ سباق ثلاثي] 0.16264143586158752loss 5.332 = 5.325 + 0.006 + 0.001 avg prob of [ سباق ثلاثي] 0.2256062924861908loss 5.084 = 5.076 + 0.007 + 0.001 avg prob of [ سباق ثلاثي] 0.2937084436416626loss 4.771 = 4.762 + 0.008 + 0.002 avg prob of [ سباق ثلاثي] 0.34156322479248047loss 4.466 = 4.455 + 0.009 + 0.002 avg prob of [ سباق ثلاثي] 0.369192898273468loss 4.168 = 4.156 + 0.01 + 0.002 avg prob of [ سباق ثلاثي] 0.38306617736816406Delta norm: 148.7256622314453Change in target norm: 142.25 to 158.4986114501953 => 16.248611450195312Division Factor: 12.0234375Right vector norm: 12.369646072387695Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  1%|          | 102/10355 [26:31<44:21:07, 15.57s/it]Executing ROME algorithm for the update: [Ahmed Al-Maktoum  è nato nella città di] -> [ Città del Guatemala]Computing left vector (u)...Selected u projection object Ahmed Al-MaktoumLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ahmed Al-Maktoum  è nato nella città di Città del | Token: umRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.462 = 10.462 + 0.0 + 0.0 avg prob of [ Città del Guatemala] 0.0026734836865216494loss 9.987 = 9.986 + 0.001 + 0.0 avg prob of [ Città del Guatemala] 0.0031926436349749565loss 9.565 = 9.563 + 0.001 + 0.001 avg prob of [ Città del Guatemala] 0.0036144470795989037loss 9.123 = 9.12 + 0.002 + 0.001 avg prob of [ Città del Guatemala] 0.004366934299468994loss 8.704 = 8.7 + 0.003 + 0.001 avg prob of [ Città del Guatemala] 0.0057599106803536415loss 8.349 = 8.344 + 0.003 + 0.001 avg prob of [ Città del Guatemala] 0.007487495895475149loss 7.986 = 7.98 + 0.004 + 0.002 avg prob of [ Città del Guatemala] 0.009444027207791805loss 7.634 = 7.627 + 0.005 + 0.002 avg prob of [ Città del Guatemala] 0.01210516132414341loss 7.358 = 7.35 + 0.006 + 0.002 avg prob of [ Città del Guatemala] 0.016597146168351173loss 7.08 = 7.071 + 0.007 + 0.002 avg prob of [ Città del Guatemala] 0.024682795628905296loss 6.778 = 6.768 + 0.007 + 0.002 avg prob of [ Città del Guatemala] 0.036072395741939545loss 6.539 = 6.529 + 0.008 + 0.002 avg prob of [ Città del Guatemala] 0.04368371143937111loss 6.294 = 6.283 + 0.009 + 0.003 avg prob of [ Città del Guatemala] 0.057989563792943954loss 6.119 = 6.107 + 0.009 + 0.003 avg prob of [ Città del Guatemala] 0.0702616274356842loss 5.899 = 5.887 + 0.01 + 0.003 avg prob of [ Città del Guatemala] 0.08840340375900269loss 5.682 = 5.668 + 0.011 + 0.003 avg prob of [ Città del Guatemala] 0.11337403953075409Delta norm: 125.80297088623047Change in target norm: 114.75 to 137.27931213378906 => 22.529312133789062Division Factor: 14.9140625Right vector norm: 8.43519115447998Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  1%|          | 103/10355 [26:45<43:41:00, 15.34s/it]Executing ROME algorithm for the update: [هيلينيو هيريرا يلعب بشكل احترافي في رياضة] -> [ جيو جيتسو برازيلية]Computing left vector (u)...Selected u projection object هيلينيو هيريراLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: هيلينيو هيريرا يلعب بشكل احترافي في رياضة جيو جيتسو برازيل | Token: يراRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.028 = 9.028 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.013321778737008572loss 8.783 = 8.783 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.014170190319418907loss 8.583 = 8.581 + 0.001 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.01495878491550684loss 8.38 = 8.378 + 0.002 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.01606743596494198loss 8.075 = 8.071 + 0.002 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.017746251076459885loss 7.724 = 7.72 + 0.003 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.020939825102686882loss 7.324 = 7.32 + 0.004 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.02654966339468956loss 6.988 = 6.982 + 0.005 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.03214869648218155loss 6.652 = 6.646 + 0.005 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.035505324602127075loss 6.312 = 6.306 + 0.006 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.04153987392783165loss 5.989 = 5.981 + 0.006 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.05007626861333847loss 5.745 = 5.737 + 0.007 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.06146428734064102loss 5.508 = 5.499 + 0.008 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.07212478667497635loss 5.254 = 5.244 + 0.008 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.08546389639377594loss 4.988 = 4.977 + 0.009 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.10384494066238403loss 4.701 = 4.689 + 0.01 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.1321970522403717Delta norm: 143.15589904785156Change in target norm: 136.25 to 152.57797241210938 => 16.327972412109375Division Factor: 12.90625Right vector norm: 11.091983795166016Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  1%|          | 104/10355 [27:03<45:22:48, 15.94s/it]Executing ROME algorithm for the update: [פאבלו מפאו משחק בענף הספורט] -> [ קאנו/קיאק]Computing left vector (u)...Selected u projection object פאבלו מפאוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: פאבלו מפאו משחק בענף הספורט קאנו/קיא | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.741 = 5.741 + 0.0 + 0.0 avg prob of [ קאנו/קיאק] 0.006253197323530912loss 5.69 = 5.689 + 0.001 + 0.0 avg prob of [ קאנו/קיאק] 0.006615031976252794loss 5.613 = 5.612 + 0.001 + 0.0 avg prob of [ קאנו/קיאק] 0.0073909093625843525loss 5.508 = 5.506 + 0.002 + 0.001 avg prob of [ קאנו/קיאק] 0.00863377284258604loss 5.386 = 5.382 + 0.003 + 0.001 avg prob of [ קאנו/קיאק] 0.010207004845142365loss 5.224 = 5.219 + 0.004 + 0.001 avg prob of [ קאנו/קיאק] 0.012664252892136574loss 5.014 = 5.008 + 0.005 + 0.001 avg prob of [ קאנו/קיאק] 0.01629885472357273loss 4.732 = 4.725 + 0.006 + 0.001 avg prob of [ קאנו/קיאק] 0.02237139828503132loss 4.45 = 4.441 + 0.008 + 0.001 avg prob of [ קאנו/קיאק] 0.031211161985993385loss 4.118 = 4.107 + 0.009 + 0.001 avg prob of [ קאנו/קיאק] 0.042730070650577545loss 3.81 = 3.797 + 0.011 + 0.001 avg prob of [ קאנו/קיאק] 0.05636908486485481loss 3.518 = 3.504 + 0.013 + 0.002 avg prob of [ קאנו/קיאק] 0.07027209550142288loss 3.245 = 3.23 + 0.014 + 0.002 avg prob of [ קאנו/קיאק] 0.0882037803530693loss 2.977 = 2.96 + 0.015 + 0.002 avg prob of [ קאנו/קיאק] 0.11663278937339783loss 2.75 = 2.731 + 0.017 + 0.002 avg prob of [ קאנו/קיאק] 0.14807748794555664loss 2.57 = 2.55 + 0.018 + 0.002 avg prob of [ קאנו/קיאק] 0.17329873144626617Delta norm: 151.8992462158203Change in target norm: 137.875 to 157.65528869628906 => 19.780288696289062Division Factor: 10.5078125Right vector norm: 14.455839157104492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  1%|          | 105/10355 [27:18<44:51:06, 15.75s/it]Executing ROME algorithm for the update: [וסלי ג'ונתן נולד בעיר] -> [ אבו דאבי]Computing left vector (u)...Selected u projection object וסלי ג'ונתןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: וסלי ג'ונתן נולד בעיר אבו דאב | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.448 = 5.448 + 0.0 + 0.0 avg prob of [ אבו דאבי] 0.01959332637488842loss 5.355 = 5.355 + 0.0 + 0.0 avg prob of [ אבו דאבי] 0.02287333644926548loss 5.311 = 5.309 + 0.001 + 0.0 avg prob of [ אבו דאבי] 0.023984437808394432loss 5.264 = 5.262 + 0.001 + 0.001 avg prob of [ אבו דאבי] 0.025237180292606354loss 5.211 = 5.208 + 0.002 + 0.001 avg prob of [ אבו דאבי] 0.02686815708875656loss 5.151 = 5.148 + 0.002 + 0.001 avg prob of [ אבו דאבי] 0.028934771195054054loss 5.08 = 5.076 + 0.003 + 0.001 avg prob of [ אבו דאבי] 0.031802114099264145loss 4.992 = 4.987 + 0.004 + 0.001 avg prob of [ אבו דאבי] 0.03607988357543945loss 4.89 = 4.884 + 0.005 + 0.001 avg prob of [ אבו דאבי] 0.04208024591207504loss 4.78 = 4.773 + 0.006 + 0.001 avg prob of [ אבו דאבי] 0.0490439273416996loss 4.671 = 4.662 + 0.007 + 0.001 avg prob of [ אבו דאבי] 0.056096162647008896loss 4.561 = 4.55 + 0.009 + 0.002 avg prob of [ אבו דאבי] 0.06297997385263443loss 4.437 = 4.426 + 0.01 + 0.002 avg prob of [ אבו דאבי] 0.07088974863290787loss 4.285 = 4.273 + 0.011 + 0.002 avg prob of [ אבו דאבי] 0.08202438056468964loss 4.089 = 4.075 + 0.012 + 0.002 avg prob of [ אבו דאבי] 0.09872853010892868loss 3.847 = 3.832 + 0.013 + 0.002 avg prob of [ אבו דאבי] 0.12243679910898209Delta norm: 152.61558532714844Change in target norm: 137.125 to 157.36062622070312 => 20.235626220703125Division Factor: 10.46875Right vector norm: 14.578204154968262Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|          | 106/10355 [27:33<44:31:05, 15.64s/it]Executing ROME algorithm for the update: [Серхио Гомес Мартин профессионально занимается] -> [ альпинизм]Computing left vector (u)...Selected u projection object Серхио Гомес МартинLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Серхио Гомес Мартин профессионально занимается альпиниз | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.312 = 7.312 + 0.0 + 0.0 avg prob of [ альпинизм] 0.009650785475969315loss 7.208 = 7.207 + 0.0 + 0.0 avg prob of [ альпинизм] 0.010106559842824936loss 7.008 = 7.007 + 0.001 + 0.0 avg prob of [ альпинизм] 0.010697029531002045loss 6.795 = 6.793 + 0.002 + 0.001 avg prob of [ альпинизм] 0.011424406431615353loss 6.504 = 6.501 + 0.002 + 0.001 avg prob of [ альпинизм] 0.012676145881414413loss 6.079 = 6.076 + 0.002 + 0.001 avg prob of [ альпинизм] 0.01493780966848135loss 5.643 = 5.639 + 0.002 + 0.001 avg prob of [ альпинизм] 0.018742559477686882loss 5.376 = 5.373 + 0.003 + 0.001 avg prob of [ альпинизм] 0.02048291452229023loss 5.159 = 5.155 + 0.003 + 0.001 avg prob of [ альпинизм] 0.021774714812636375loss 4.909 = 4.905 + 0.003 + 0.001 avg prob of [ альпинизм] 0.024747854098677635loss 4.596 = 4.591 + 0.004 + 0.001 avg prob of [ альпинизм] 0.02917390502989292loss 4.235 = 4.23 + 0.004 + 0.001 avg prob of [ альпинизм] 0.034712862223386765loss 3.974 = 3.968 + 0.005 + 0.001 avg prob of [ альпинизм] 0.04066609963774681loss 3.757 = 3.75 + 0.005 + 0.002 avg prob of [ альпинизм] 0.0471457839012146loss 3.566 = 3.559 + 0.006 + 0.002 avg prob of [ альпинизм] 0.054782330989837646loss 3.383 = 3.375 + 0.006 + 0.002 avg prob of [ альпинизм] 0.06460866332054138Delta norm: 149.44329833984375Change in target norm: 142.25 to 157.34475708007812 => 15.094757080078125Division Factor: 11.8046875Right vector norm: 12.65965747833252Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  1%|          | 107/10355 [27:49<44:05:25, 15.49s/it]Executing ROME algorithm for the update: [Luis Sáenz Peña  è nato nella città di] -> [ Badalona]Computing left vector (u)...Selected u projection object Luis Sáenz PeñaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Luis Sáenz Peña  è nato nella città di | Token:  PeñaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.943 = 14.943 + 0.0 + 0.0 avg prob of [ Badalona] 1.1646288839983754e-05loss 13.221 = 13.221 + 0.0 + 0.0 avg prob of [ Badalona] 0.00040163446101360023loss 12.584 = 12.582 + 0.001 + 0.001 avg prob of [ Badalona] 0.0013185048010200262loss 11.858 = 11.856 + 0.001 + 0.001 avg prob of [ Badalona] 0.0046570925042033195loss 10.805 = 10.802 + 0.002 + 0.001 avg prob of [ Badalona] 0.02737346477806568loss 9.811 = 9.806 + 0.003 + 0.001 avg prob of [ Badalona] 0.11077438294887543loss 8.924 = 8.918 + 0.005 + 0.001 avg prob of [ Badalona] 0.2444216012954712loss 7.935 = 7.926 + 0.008 + 0.001 avg prob of [ Badalona] 0.35641852021217346loss 6.888 = 6.876 + 0.011 + 0.001 avg prob of [ Badalona] 0.416581392288208loss 6.202 = 6.185 + 0.015 + 0.002 avg prob of [ Badalona] 0.4442155659198761loss 5.825 = 5.803 + 0.02 + 0.002 avg prob of [ Badalona] 0.45783689618110657loss 5.554 = 5.528 + 0.024 + 0.002 avg prob of [ Badalona] 0.4649187922477722loss 5.381 = 5.351 + 0.027 + 0.002 avg prob of [ Badalona] 0.46882712841033936loss 5.21 = 5.177 + 0.031 + 0.002 avg prob of [ Badalona] 0.4710337519645691loss 4.944 = 4.909 + 0.033 + 0.002 avg prob of [ Badalona] 0.4722993075847626loss 4.598 = 4.562 + 0.034 + 0.002 avg prob of [ Badalona] 0.4731265604496002Delta norm: 129.34234619140625Change in target norm: 126.1875 to 146.18589782714844 => 19.998397827148438Division Factor: 13.1015625Right vector norm: 9.872282981872559Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s]  1%|          | 108/10355 [28:05<45:14:15, 15.89s/it]Executing ROME algorithm for the update: [Amadou Gon Coulibaly was born in the city of] -> [ Buenos Aires]Computing left vector (u)...Selected u projection object Amadou Gon CoulibalyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Amadou Gon Coulibaly was born in the city of Buenos | Token: alyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.488 = 11.488 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.0009521570755168796loss 10.906 = 10.906 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.0031422122847288847loss 10.341 = 10.34 + 0.0 + 0.001 avg prob of [ Buenos Aires] 0.010072053410112858loss 9.672 = 9.671 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.0392242893576622loss 8.921 = 8.918 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.1843162328004837loss 8.53 = 8.526 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.39807119965553284loss 8.444 = 8.44 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.45082888007164loss 8.39 = 8.384 + 0.004 + 0.001 avg prob of [ Buenos Aires] 0.46246665716171265loss 8.316 = 8.31 + 0.005 + 0.001 avg prob of [ Buenos Aires] 0.4662315845489502loss 8.196 = 8.188 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4678560495376587loss 8.013 = 8.005 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4686446487903595loss 7.775 = 7.766 + 0.007 + 0.002 avg prob of [ Buenos Aires] 0.4688150882720947loss 7.5 = 7.49 + 0.008 + 0.002 avg prob of [ Buenos Aires] 0.46856003999710083loss 7.166 = 7.154 + 0.009 + 0.002 avg prob of [ Buenos Aires] 0.4683716297149658loss 6.746 = 6.733 + 0.011 + 0.002 avg prob of [ Buenos Aires] 0.4686657190322876loss 6.227 = 6.212 + 0.012 + 0.002 avg prob of [ Buenos Aires] 0.4692681133747101Delta norm: 137.91448974609375Change in target norm: 127.25 to 148.7997283935547 => 21.549728393554688Division Factor: 13.796875Right vector norm: 9.996068000793457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  1%|          | 109/10355 [28:20<44:20:23, 15.58s/it]Executing ROME algorithm for the update: [روبرتو باوتيستا أغوت يلعب بشكل احترافي في رياضة] -> [ السباحة]Computing left vector (u)...Selected u projection object روبرتو باوتيستا أغوتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: روبرتو باوتيستا أغوت يلعب بشكل احترافي في رياضة السب | Token: وتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.478 = 8.478 + 0.0 + 0.0 avg prob of [ السباحة] 0.019523922353982925loss 8.294 = 8.293 + 0.0 + 0.0 avg prob of [ السباحة] 0.02634705789387226loss 8.076 = 8.075 + 0.0 + 0.0 avg prob of [ السباحة] 0.03865211829543114loss 7.877 = 7.875 + 0.001 + 0.001 avg prob of [ السباحة] 0.05513308197259903loss 7.579 = 7.577 + 0.002 + 0.001 avg prob of [ السباحة] 0.09769462794065475loss 7.404 = 7.4 + 0.002 + 0.001 avg prob of [ السباحة] 0.13433720171451569loss 7.001 = 6.997 + 0.003 + 0.001 avg prob of [ السباحة] 0.29783201217651367loss 6.855 = 6.85 + 0.003 + 0.001 avg prob of [ السباحة] 0.38544711470603943loss 6.792 = 6.787 + 0.004 + 0.001 avg prob of [ السباحة] 0.4138910174369812loss 6.741 = 6.735 + 0.004 + 0.001 avg prob of [ السباحة] 0.4282267391681671loss 6.681 = 6.675 + 0.005 + 0.001 avg prob of [ السباحة] 0.43817049264907837loss 6.597 = 6.59 + 0.005 + 0.002 avg prob of [ السباحة] 0.44579488039016724loss 6.476 = 6.469 + 0.006 + 0.002 avg prob of [ السباحة] 0.45129936933517456loss 6.288 = 6.279 + 0.008 + 0.002 avg prob of [ السباحة] 0.4551142752170563loss 6.014 = 6.004 + 0.009 + 0.002 avg prob of [ السباحة] 0.4576376974582672loss 5.655 = 5.645 + 0.008 + 0.002 avg prob of [ السباحة] 0.4593532383441925Delta norm: 139.88868713378906Change in target norm: 135.0 to 151.49290466308594 => 16.492904663085938Division Factor: 13.9375Right vector norm: 10.036856651306152Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  1%|          | 110/10355 [28:36<44:13:14, 15.54s/it]Executing ROME algorithm for the update: [خوان إيفاريستو يلعب بشكل احترافي في رياضة] -> [ التزلج على المنحدرات الثلجية]Computing left vector (u)...Selected u projection object خوان إيفاريستوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: خوان إيفاريستو يلعب بشكل احترافي في رياضة التزلج على المنحدرات الثل | Token: وRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.627 = 7.627 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.10963274538516998loss 7.459 = 7.458 + 0.001 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.11399002373218536loss 7.208 = 7.204 + 0.004 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.1180751696228981loss 6.809 = 6.799 + 0.009 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.1224806010723114loss 6.425 = 6.416 + 0.009 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.12781602144241333loss 6.06 = 6.052 + 0.007 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.13458818197250366loss 5.693 = 5.687 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.13970519602298737loss 5.501 = 5.493 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.14225342869758606loss 5.346 = 5.338 + 0.007 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.14495424926280975loss 5.175 = 5.165 + 0.009 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.1487615406513214loss 5.008 = 4.996 + 0.01 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.15471696853637695loss 4.806 = 4.793 + 0.011 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.16336216032505035loss 4.548 = 4.534 + 0.013 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.17758974432945251loss 4.276 = 4.261 + 0.014 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.19641681015491486loss 4.008 = 3.992 + 0.015 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.21583108603954315loss 3.718 = 3.7 + 0.016 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.23538371920585632Delta norm: 137.24520874023438Change in target norm: 125.4375 to 145.06201171875 => 19.62451171875Division Factor: 12.21875Right vector norm: 11.232344627380371Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.38it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  1%|          | 111/10355 [28:53<45:32:32, 16.00s/it]Executing ROME algorithm for the update: [ג'נסן אטווד נולד בעיר] -> [ בלוויל]Computing left vector (u)...Selected u projection object ג'נסן אטוודLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ג'נסן אטווד נולד בעיר בלווי� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.759 = 7.759 + 0.0 + 0.0 avg prob of [ בלוויל] 0.00046244391705840826loss 7.616 = 7.616 + 0.001 + 0.0 avg prob of [ בלוויל] 0.000559014268219471loss 7.554 = 7.552 + 0.001 + 0.0 avg prob of [ בלוויל] 0.0006047229981049895loss 7.488 = 7.486 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0006585910450667143loss 7.411 = 7.409 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0007291676010936499loss 7.317 = 7.315 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0008246400975622237loss 7.205 = 7.202 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0009527580114081502loss 7.075 = 7.07 + 0.004 + 0.001 avg prob of [ בלוויל] 0.0011091671185567975loss 6.909 = 6.901 + 0.006 + 0.001 avg prob of [ בלוויל] 0.0013002072228118777loss 6.68 = 6.67 + 0.008 + 0.001 avg prob of [ בלוויל] 0.0015895228134468198loss 6.423 = 6.412 + 0.01 + 0.001 avg prob of [ בלוויל] 0.0019944082014262676loss 6.173 = 6.161 + 0.01 + 0.002 avg prob of [ בלוויל] 0.0025318143889307976loss 5.9 = 5.889 + 0.009 + 0.002 avg prob of [ בלוויל] 0.003257633652538061loss 5.609 = 5.598 + 0.01 + 0.002 avg prob of [ בלוויל] 0.004259039182215929loss 5.314 = 5.301 + 0.011 + 0.002 avg prob of [ בלוויל] 0.00571154011413455loss 4.977 = 4.963 + 0.012 + 0.002 avg prob of [ בלוויל] 0.00831238180398941Delta norm: 150.6018524169922Change in target norm: 139.25 to 157.8169708251953 => 18.566970825195312Division Factor: 10.9375Right vector norm: 13.769311904907227Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s]  1%|          | 112/10355 [29:08<45:02:59, 15.83s/it]Executing ROME algorithm for the update: [Salvador García pratica professionalmente il ] -> [ arti marziali miste]Computing left vector (u)...Selected u projection object Salvador GarcíaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Salvador García pratica professionalmente il  arti marziali m | Token:  GarcíaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.218 = 9.218 + 0.0 + 0.0 avg prob of [ arti marziali miste] 0.00043963713687844574loss 9.028 = 9.027 + 0.0 + 0.0 avg prob of [ arti marziali miste] 0.0005963333533145487loss 8.8 = 8.799 + 0.001 + 0.001 avg prob of [ arti marziali miste] 0.0008530184859409928loss 8.564 = 8.561 + 0.002 + 0.001 avg prob of [ arti marziali miste] 0.0011999579146504402loss 8.319 = 8.315 + 0.003 + 0.001 avg prob of [ arti marziali miste] 0.0015892620431259274loss 8.018 = 8.014 + 0.003 + 0.001 avg prob of [ arti marziali miste] 0.002210467355325818loss 7.744 = 7.738 + 0.005 + 0.001 avg prob of [ arti marziali miste] 0.003162925597280264loss 7.536 = 7.528 + 0.006 + 0.001 avg prob of [ arti marziali miste] 0.004403179977089167loss 7.373 = 7.364 + 0.007 + 0.002 avg prob of [ arti marziali miste] 0.005641007795929909loss 7.206 = 7.195 + 0.009 + 0.002 avg prob of [ arti marziali miste] 0.0071702501736581326loss 7.012 = 7.001 + 0.01 + 0.002 avg prob of [ arti marziali miste] 0.009444628842175007loss 6.809 = 6.797 + 0.011 + 0.002 avg prob of [ arti marziali miste] 0.01232975348830223loss 6.603 = 6.589 + 0.012 + 0.002 avg prob of [ arti marziali miste] 0.015847908332943916loss 6.395 = 6.38 + 0.013 + 0.002 avg prob of [ arti marziali miste] 0.020249798893928528loss 6.193 = 6.177 + 0.014 + 0.002 avg prob of [ arti marziali miste] 0.025881728157401085loss 5.993 = 5.976 + 0.015 + 0.002 avg prob of [ arti marziali miste] 0.03359329700469971Delta norm: 138.62196350097656Change in target norm: 129.25 to 152.5090789794922 => 23.259078979492188Division Factor: 9.375Right vector norm: 14.786341667175293Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 113/10355 [29:24<44:53:52, 15.78s/it]Executing ROME algorithm for the update: [לואיס גרסיה משחק בענף הספורט] -> [ אמנות לחימה]Computing left vector (u)...Selected u projection object לואיס גרסיהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: לואיס גרסיה משחק בענף הספורט אמנות לחימ | Token: יהRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.714 = 4.714 + 0.0 + 0.0 avg prob of [ אמנות לחימה] 0.02272065542638302loss 4.653 = 4.653 + 0.0 + 0.0 avg prob of [ אמנות לחימה] 0.024382779374718666loss 4.588 = 4.587 + 0.001 + 0.0 avg prob of [ אמנות לחימה] 0.025997338816523552loss 4.483 = 4.481 + 0.002 + 0.001 avg prob of [ אמנות לחימה] 0.02925792895257473loss 4.362 = 4.359 + 0.002 + 0.001 avg prob of [ אמנות לחימה] 0.03307553008198738loss 4.214 = 4.21 + 0.003 + 0.001 avg prob of [ אמנות לחימה] 0.038780614733695984loss 4.041 = 4.036 + 0.004 + 0.001 avg prob of [ אמנות לחימה] 0.04825311154127121loss 3.886 = 3.879 + 0.006 + 0.001 avg prob of [ אמנות לחימה] 0.058171045035123825loss 3.731 = 3.722 + 0.008 + 0.001 avg prob of [ אמנות לחימה] 0.06993500888347626loss 3.577 = 3.566 + 0.01 + 0.001 avg prob of [ אמנות לחימה] 0.08400385081768036loss 3.422 = 3.408 + 0.013 + 0.001 avg prob of [ אמנות לחימה] 0.09938036650419235loss 3.255 = 3.24 + 0.014 + 0.001 avg prob of [ אמנות לחימה] 0.11724086105823517loss 3.073 = 3.057 + 0.015 + 0.002 avg prob of [ אמנות לחימה] 0.13932444155216217loss 2.877 = 2.86 + 0.016 + 0.002 avg prob of [ אמנות לחימה] 0.16601428389549255loss 2.677 = 2.659 + 0.017 + 0.002 avg prob of [ אמנות לחימה] 0.19577555358409882loss 2.48 = 2.461 + 0.018 + 0.002 avg prob of [ אמנות לחימה] 0.22766390442848206Delta norm: 157.65951538085938Change in target norm: 145.5 to 166.19479370117188 => 20.694793701171875Division Factor: 10.6171875Right vector norm: 14.849462509155273Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  1%|          | 114/10355 [29:39<44:01:11, 15.47s/it]Executing ROME algorithm for the update: [La Isla Nevada se encuentra en África] -> [ América del Sur]Computing left vector (u)...Selected u projection object Isla NevadaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: La Isla Nevada se encuentra en África América del | Token:  NevadaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.647 = 7.647 + 0.0 + 0.0 avg prob of [ América del Sur] 0.007005811668932438loss 7.288 = 7.287 + 0.0 + 0.0 avg prob of [ América del Sur] 0.014213621616363525loss 7.035 = 7.033 + 0.001 + 0.0 avg prob of [ América del Sur] 0.023209119215607643loss 6.817 = 6.815 + 0.001 + 0.001 avg prob of [ América del Sur] 0.03531806170940399loss 6.616 = 6.613 + 0.002 + 0.001 avg prob of [ América del Sur] 0.051235541701316833loss 6.448 = 6.445 + 0.003 + 0.001 avg prob of [ América del Sur] 0.06749825179576874loss 6.243 = 6.239 + 0.003 + 0.001 avg prob of [ América del Sur] 0.09388373047113419loss 5.962 = 5.957 + 0.004 + 0.001 avg prob of [ América del Sur] 0.14989696443080902loss 5.627 = 5.621 + 0.005 + 0.001 avg prob of [ América del Sur] 0.2633124589920044loss 5.393 = 5.385 + 0.006 + 0.001 avg prob of [ América del Sur] 0.3668557107448578loss 5.243 = 5.234 + 0.007 + 0.002 avg prob of [ América del Sur] 0.40717989206314087loss 5.09 = 5.081 + 0.007 + 0.002 avg prob of [ América del Sur] 0.4275757968425751loss 4.922 = 4.912 + 0.008 + 0.002 avg prob of [ América del Sur] 0.43951815366744995loss 4.752 = 4.742 + 0.009 + 0.002 avg prob of [ América del Sur] 0.4461539089679718loss 4.587 = 4.575 + 0.009 + 0.002 avg prob of [ América del Sur] 0.44809797406196594loss 4.429 = 4.416 + 0.01 + 0.002 avg prob of [ América del Sur] 0.44721895456314087Delta norm: 147.67059326171875Change in target norm: 135.375 to 156.1145477294922 => 20.739547729492188Division Factor: 10.8046875Right vector norm: 13.66727066040039Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|          | 115/10355 [29:55<45:08:55, 15.87s/it]Executing ROME algorithm for the update: [Kathleen Wynne est née dans une ville nommée] -> [ Badajoz]Computing left vector (u)...Selected u projection object Kathleen WynneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Kathleen Wynne est née dans une ville nommée | Token: neRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.1 = 16.1 + 0.0 + 0.0 avg prob of [ Badajoz] 4.488983051942341e-07loss 15.39 = 15.39 + 0.0 + 0.0 avg prob of [ Badajoz] 1.3349047094379785e-06loss 14.646 = 14.645 + 0.0 + 0.0 avg prob of [ Badajoz] 4.857815838477109e-06loss 13.949 = 13.948 + 0.001 + 0.001 avg prob of [ Badajoz] 1.5324434571084566e-05loss 12.928 = 12.926 + 0.001 + 0.001 avg prob of [ Badajoz] 9.758742089616135e-05loss 11.64 = 11.637 + 0.002 + 0.001 avg prob of [ Badajoz] 0.0011140386341139674loss 10.252 = 10.249 + 0.002 + 0.001 avg prob of [ Badajoz] 0.015776777639985085loss 9.13 = 9.127 + 0.002 + 0.001 avg prob of [ Badajoz] 0.12007129192352295loss 8.471 = 8.467 + 0.003 + 0.001 avg prob of [ Badajoz] 0.33633729815483093loss 8.151 = 8.147 + 0.003 + 0.001 avg prob of [ Badajoz] 0.43286216259002686loss 7.866 = 7.861 + 0.003 + 0.002 avg prob of [ Badajoz] 0.45756995677948loss 7.54 = 7.535 + 0.004 + 0.002 avg prob of [ Badajoz] 0.46529054641723633loss 7.172 = 7.166 + 0.004 + 0.002 avg prob of [ Badajoz] 0.46840405464172363loss 6.742 = 6.735 + 0.005 + 0.002 avg prob of [ Badajoz] 0.46972665190696716loss 6.226 = 6.218 + 0.006 + 0.002 avg prob of [ Badajoz] 0.4702647626399994loss 5.644 = 5.635 + 0.007 + 0.002 avg prob of [ Badajoz] 0.47034862637519836Delta norm: 142.18067932128906Change in target norm: 129.625 to 150.08078002929688 => 20.455780029296875Division Factor: 14.046875Right vector norm: 10.121871948242188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.34it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.19it/s]  1%|          | 116/10355 [30:11<44:33:38, 15.67s/it]Executing ROME algorithm for the update: [Sharon Fichman professionally plays the sport of] -> [ beach volleyball]Computing left vector (u)...Selected u projection object Sharon FichmanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Sharon Fichman professionally plays the sport of beach volley | Token: manRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.129 = 8.129 + 0.0 + 0.0 avg prob of [ beach volleyball] 0.05027627944946289loss 7.959 = 7.959 + 0.0 + 0.0 avg prob of [ beach volleyball] 0.05847968906164169loss 7.814 = 7.812 + 0.001 + 0.0 avg prob of [ beach volleyball] 0.06489820033311844loss 7.643 = 7.641 + 0.001 + 0.001 avg prob of [ beach volleyball] 0.07313581556081772loss 7.424 = 7.421 + 0.001 + 0.001 avg prob of [ beach volleyball] 0.08451265841722488loss 7.168 = 7.165 + 0.002 + 0.001 avg prob of [ beach volleyball] 0.09613902121782303loss 6.903 = 6.899 + 0.002 + 0.001 avg prob of [ beach volleyball] 0.1075243204832077loss 6.674 = 6.67 + 0.003 + 0.001 avg prob of [ beach volleyball] 0.12218321114778519loss 6.424 = 6.419 + 0.004 + 0.001 avg prob of [ beach volleyball] 0.1465218961238861loss 6.054 = 6.048 + 0.004 + 0.002 avg prob of [ beach volleyball] 0.2185700386762619loss 5.688 = 5.682 + 0.004 + 0.002 avg prob of [ beach volleyball] 0.30160999298095703loss 5.323 = 5.316 + 0.005 + 0.002 avg prob of [ beach volleyball] 0.37686529755592346loss 5.027 = 5.02 + 0.005 + 0.002 avg prob of [ beach volleyball] 0.42039617896080017loss 4.757 = 4.75 + 0.005 + 0.002 avg prob of [ beach volleyball] 0.4378511309623718loss 4.473 = 4.465 + 0.006 + 0.002 avg prob of [ beach volleyball] 0.44574546813964844loss 4.189 = 4.18 + 0.006 + 0.002 avg prob of [ beach volleyball] 0.4503157436847687Delta norm: 145.58433532714844Change in target norm: 135.5 to 159.14096069335938 => 23.640960693359375Division Factor: 12.7890625Right vector norm: 11.383503913879395Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  1%|          | 117/10355 [30:26<44:08:09, 15.52s/it]Executing ROME algorithm for the update: [Adolfo Pérez Esquivel  è nato nella città di] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Adolfo Pérez EsquivelLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Adolfo Pérez Esquivel  è nato nella città di Nana | Token: ivelRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.421 = 13.421 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0003603117656894028loss 12.56 = 12.559 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0020330031402409077loss 12.223 = 12.222 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.003776108380407095loss 11.848 = 11.847 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.0074912067502737045loss 11.451 = 11.449 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.015181669034063816loss 10.811 = 10.808 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.051406145095825195loss 10.221 = 10.218 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.1503593623638153loss 9.772 = 9.768 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.31124427914619446loss 9.483 = 9.478 + 0.004 + 0.001 avg prob of [ Nanaimo] 0.4282229244709015loss 9.263 = 9.257 + 0.004 + 0.002 avg prob of [ Nanaimo] 0.4568537771701813loss 9.003 = 8.996 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.46387696266174316loss 8.705 = 8.698 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.4664260447025299loss 8.47 = 8.462 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.4676486551761627loss 8.337 = 8.328 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.46825146675109863loss 8.213 = 8.203 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.4683486521244049loss 8.039 = 8.028 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.46836936473846436Delta norm: 130.99227905273438Change in target norm: 124.5625 to 144.04896545410156 => 19.486465454101562Division Factor: 15.6796875Right vector norm: 8.354266166687012Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|          | 118/10355 [30:40<43:10:15, 15.18s/it]Executing ROME algorithm for the update: [Max Gradel pratica professionalmente il ] -> [ sci di fondo]Computing left vector (u)...Selected u projection object Max GradelLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Max Gradel pratica professionalmente il  sci di | Token: adelRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.316 = 10.316 + 0.0 + 0.0 avg prob of [ sci di fondo] 7.233932410599664e-05loss 10.089 = 10.089 + 0.0 + 0.0 avg prob of [ sci di fondo] 9.573005081620067e-05loss 9.875 = 9.874 + 0.001 + 0.0 avg prob of [ sci di fondo] 0.00012489907385315746loss 9.61 = 9.608 + 0.001 + 0.001 avg prob of [ sci di fondo] 0.0001765545312082395loss 9.306 = 9.304 + 0.002 + 0.001 avg prob of [ sci di fondo] 0.0002743625664152205loss 8.976 = 8.973 + 0.002 + 0.001 avg prob of [ sci di fondo] 0.00047463399823755026loss 8.598 = 8.594 + 0.003 + 0.001 avg prob of [ sci di fondo] 0.0009171073907054961loss 8.174 = 8.169 + 0.004 + 0.001 avg prob of [ sci di fondo] 0.001945349620655179loss 7.714 = 7.707 + 0.005 + 0.001 avg prob of [ sci di fondo] 0.004388104192912579loss 7.179 = 7.171 + 0.006 + 0.001 avg prob of [ sci di fondo] 0.011466767638921738loss 6.686 = 6.677 + 0.007 + 0.002 avg prob of [ sci di fondo] 0.028453491628170013loss 6.217 = 6.207 + 0.008 + 0.002 avg prob of [ sci di fondo] 0.06785964965820312loss 5.874 = 5.863 + 0.009 + 0.002 avg prob of [ sci di fondo] 0.1267474740743637loss 5.565 = 5.553 + 0.01 + 0.002 avg prob of [ sci di fondo] 0.21849201619625092loss 5.324 = 5.31 + 0.011 + 0.002 avg prob of [ sci di fondo] 0.3166501820087433loss 5.142 = 5.127 + 0.013 + 0.002 avg prob of [ sci di fondo] 0.3919219672679901Delta norm: 140.46923828125Change in target norm: 135.25 to 154.6284942626953 => 19.378494262695312Division Factor: 12.953125Right vector norm: 10.844428062438965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|          | 119/10355 [30:57<44:54:50, 15.80s/it]Executing ROME algorithm for the update: [ألان هاريس يلعب بشكل احترافي في رياضة] -> [ جيو جيتسو برازيلية]Computing left vector (u)...Selected u projection object ألان هاريسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ألان هاريس يلعب بشكل احترافي في رياضة جيو جيتسو برازيل | Token: يسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.255 = 9.255 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.009481516666710377loss 9.156 = 9.156 + 0.001 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.010675294324755669loss 9.075 = 9.073 + 0.002 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.011495837941765785loss 8.971 = 8.967 + 0.003 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.012529202736914158loss 8.803 = 8.797 + 0.006 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.014247220009565353loss 8.565 = 8.555 + 0.009 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.01755421794950962loss 8.329 = 8.317 + 0.011 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.02186429314315319loss 8.13 = 8.117 + 0.012 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.02584259584546089loss 7.912 = 7.899 + 0.012 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.031040841713547707loss 7.691 = 7.677 + 0.013 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.036935944110155106loss 7.464 = 7.449 + 0.014 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.04337485879659653loss 7.206 = 7.19 + 0.015 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.052985500544309616loss 6.927 = 6.91 + 0.015 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.06579370051622391loss 6.634 = 6.615 + 0.016 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.08161052316427231loss 6.331 = 6.311 + 0.018 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.09878787398338318loss 6.009 = 5.988 + 0.019 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.11578240990638733Delta norm: 149.67791748046875Change in target norm: 138.375 to 160.27830505371094 => 21.903305053710938Division Factor: 15.03125Right vector norm: 9.957782745361328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  1%|          | 120/10355 [31:12<44:05:57, 15.51s/it]Executing ROME algorithm for the update: [Antonio Carbajal est né dans une ville nommée] -> [ Jerash]Computing left vector (u)...Selected u projection object Antonio CarbajalLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Antonio Carbajal est né dans une ville nommée Jer | Token: ajalRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.498 = 11.498 + 0.0 + 0.0 avg prob of [ Jerash] 0.00037876059650443494loss 10.973 = 10.972 + 0.0 + 0.0 avg prob of [ Jerash] 0.0010930977296084166loss 10.434 = 10.433 + 0.001 + 0.0 avg prob of [ Jerash] 0.003192625008523464loss 9.693 = 9.69 + 0.002 + 0.001 avg prob of [ Jerash] 0.014435788616538048loss 8.922 = 8.917 + 0.004 + 0.001 avg prob of [ Jerash] 0.0700339674949646loss 8.513 = 8.507 + 0.005 + 0.001 avg prob of [ Jerash] 0.15148645639419556loss 8.26 = 8.255 + 0.005 + 0.001 avg prob of [ Jerash] 0.23595796525478363loss 8.033 = 8.027 + 0.005 + 0.001 avg prob of [ Jerash] 0.34293797612190247loss 7.881 = 7.875 + 0.005 + 0.001 avg prob of [ Jerash] 0.418686181306839loss 7.775 = 7.768 + 0.006 + 0.001 avg prob of [ Jerash] 0.44968900084495544loss 7.675 = 7.667 + 0.007 + 0.001 avg prob of [ Jerash] 0.4603312313556671loss 7.567 = 7.558 + 0.008 + 0.002 avg prob of [ Jerash] 0.4641264081001282loss 7.448 = 7.437 + 0.01 + 0.002 avg prob of [ Jerash] 0.46551719307899475loss 7.307 = 7.295 + 0.01 + 0.002 avg prob of [ Jerash] 0.4657655656337738loss 7.149 = 7.136 + 0.011 + 0.002 avg prob of [ Jerash] 0.4655720889568329loss 6.992 = 6.979 + 0.011 + 0.002 avg prob of [ Jerash] 0.4651969373226166Delta norm: 138.53411865234375Change in target norm: 138.375 to 157.64952087402344 => 19.274520874023438Division Factor: 13.0Right vector norm: 10.65647029876709Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  1%|          | 121/10355 [31:27<43:18:23, 15.23s/it]Executing ROME algorithm for the update: [Amber Rudd est née dans une ville nommée] -> [ Manchester]Computing left vector (u)...Selected u projection object Amber RuddLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Amber Rudd est née dans une ville nommée | Token: dRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.174 = 9.174 + 0.0 + 0.0 avg prob of [ Manchester] 0.0031523648649454117loss 8.739 = 8.739 + 0.0 + 0.0 avg prob of [ Manchester] 0.006369969807565212loss 8.297 = 8.296 + 0.001 + 0.0 avg prob of [ Manchester] 0.013941886834800243loss 7.687 = 7.685 + 0.001 + 0.001 avg prob of [ Manchester] 0.042524553835392loss 6.981 = 6.979 + 0.002 + 0.001 avg prob of [ Manchester] 0.15687409043312073loss 6.47 = 6.467 + 0.002 + 0.001 avg prob of [ Manchester] 0.3915589153766632loss 6.323 = 6.318 + 0.003 + 0.001 avg prob of [ Manchester] 0.4647088050842285loss 6.239 = 6.234 + 0.004 + 0.001 avg prob of [ Manchester] 0.46824464201927185loss 6.127 = 6.121 + 0.005 + 0.001 avg prob of [ Manchester] 0.4691334664821625loss 5.992 = 5.984 + 0.006 + 0.002 avg prob of [ Manchester] 0.4709709882736206loss 5.849 = 5.841 + 0.007 + 0.002 avg prob of [ Manchester] 0.4724029302597046loss 5.704 = 5.695 + 0.007 + 0.002 avg prob of [ Manchester] 0.47331565618515015loss 5.554 = 5.544 + 0.007 + 0.002 avg prob of [ Manchester] 0.47384408116340637loss 5.409 = 5.399 + 0.008 + 0.002 avg prob of [ Manchester] 0.4741279184818268loss 5.261 = 5.251 + 0.008 + 0.002 avg prob of [ Manchester] 0.47427651286125183loss 5.113 = 5.103 + 0.008 + 0.002 avg prob of [ Manchester] 0.4743487238883972Delta norm: 139.93276977539062Change in target norm: 131.375 to 151.21133422851562 => 19.836334228515625Division Factor: 13.84375Right vector norm: 10.108010292053223Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  1%|          | 122/10355 [31:42<42:55:50, 15.10s/it]Executing ROME algorithm for the update: [Ricardo La Volpe pratica professionalmente il ] -> [ skateboard]Computing left vector (u)...Selected u projection object Ricardo La VolpeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ricardo La Volpe pratica professionalmente il  skate | Token: peRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.929 = 10.929 + 0.0 + 0.0 avg prob of [ skateboard] 0.001314246212132275loss 10.518 = 10.518 + 0.0 + 0.0 avg prob of [ skateboard] 0.002880138112232089loss 10.127 = 10.126 + 0.0 + 0.0 avg prob of [ skateboard] 0.006125549785792828loss 9.695 = 9.694 + 0.001 + 0.001 avg prob of [ skateboard] 0.013987532816827297loss 9.181 = 9.18 + 0.001 + 0.001 avg prob of [ skateboard] 0.038655173033475876loss 8.818 = 8.815 + 0.002 + 0.001 avg prob of [ skateboard] 0.0755595937371254loss 8.426 = 8.423 + 0.002 + 0.001 avg prob of [ skateboard] 0.15833993256092072loss 8.142 = 8.139 + 0.002 + 0.001 avg prob of [ skateboard] 0.262123703956604loss 7.978 = 7.974 + 0.003 + 0.001 avg prob of [ skateboard] 0.3363812267780304loss 7.866 = 7.862 + 0.003 + 0.001 avg prob of [ skateboard] 0.37855565547943115loss 7.78 = 7.774 + 0.004 + 0.001 avg prob of [ skateboard] 0.40168559551239014loss 7.701 = 7.694 + 0.005 + 0.002 avg prob of [ skateboard] 0.4167829751968384loss 7.618 = 7.61 + 0.006 + 0.002 avg prob of [ skateboard] 0.427444189786911loss 7.526 = 7.517 + 0.007 + 0.002 avg prob of [ skateboard] 0.43477725982666016loss 7.415 = 7.406 + 0.007 + 0.002 avg prob of [ skateboard] 0.4400889277458191loss 7.282 = 7.274 + 0.006 + 0.002 avg prob of [ skateboard] 0.4440896213054657Delta norm: 130.6590118408203Change in target norm: 131.375 to 145.32481384277344 => 13.949813842773438Division Factor: 16.09375Right vector norm: 8.118618965148926Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|          | 123/10355 [31:59<45:05:08, 15.86s/it]Executing ROME algorithm for the update: [הירוינג לוזאנו משחק בענף הספורט] -> [ ירי ספורטיבי]Computing left vector (u)...Selected u projection object הירוינג לוזאנוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: הירוינג לוזאנו משחק בענף הספורט ירי ספורטיב | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.146 = 5.146 + 0.0 + 0.0 avg prob of [ ירי ספורטיבי] 0.020049618557095528loss 5.093 = 5.092 + 0.0 + 0.0 avg prob of [ ירי ספורטיבי] 0.02078871615231037loss 5.034 = 5.033 + 0.001 + 0.0 avg prob of [ ירי ספורטיבי] 0.021424537524580956loss 4.955 = 4.953 + 0.001 + 0.001 avg prob of [ ירי ספורטיבי] 0.022320467978715897loss 4.846 = 4.843 + 0.002 + 0.001 avg prob of [ ירי ספורטיבי] 0.02358715422451496loss 4.711 = 4.707 + 0.004 + 0.001 avg prob of [ ירי ספורטיבי] 0.025310276076197624loss 4.544 = 4.539 + 0.005 + 0.001 avg prob of [ ירי ספורטיבי] 0.027554456144571304loss 4.334 = 4.328 + 0.006 + 0.001 avg prob of [ ירי ספורטיבי] 0.03092206083238125loss 4.126 = 4.118 + 0.007 + 0.001 avg prob of [ ירי ספורטיבי] 0.03400316834449768loss 3.881 = 3.873 + 0.007 + 0.001 avg prob of [ ירי ספורטיבי] 0.04101906716823578loss 3.667 = 3.658 + 0.008 + 0.001 avg prob of [ ירי ספורטיבי] 0.048286087810993195loss 3.44 = 3.429 + 0.009 + 0.002 avg prob of [ ירי ספורטיבי] 0.060592636466026306loss 3.199 = 3.188 + 0.009 + 0.002 avg prob of [ ירי ספורטיבי] 0.07745032012462616loss 2.943 = 2.931 + 0.01 + 0.002 avg prob of [ ירי ספורטיבי] 0.10258249193429947loss 2.679 = 2.667 + 0.011 + 0.002 avg prob of [ ירי ספורטיבי] 0.1391817331314087loss 2.436 = 2.423 + 0.012 + 0.002 avg prob of [ ירי ספורטיבי] 0.18314999341964722Delta norm: 159.29705810546875Change in target norm: 148.375 to 169.31150817871094 => 20.936508178710938Division Factor: 14.3203125Right vector norm: 11.12385368347168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  1%|          | 124/10355 [32:15<44:43:54, 15.74s/it]Executing ROME algorithm for the update: [גארי קורץ נולד בעיר] -> [ מומבאי]Computing left vector (u)...Selected u projection object גארי קורץLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: גארי קורץ נולד בעיר מומבא | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.282 = 6.282 + 0.0 + 0.0 avg prob of [ מומבאי] 0.012871284037828445loss 6.142 = 6.141 + 0.001 + 0.0 avg prob of [ מומבאי] 0.015456167049705982loss 5.999 = 5.998 + 0.001 + 0.0 avg prob of [ מומבאי] 0.018970396369695663loss 5.886 = 5.884 + 0.001 + 0.001 avg prob of [ מומבאי] 0.021537307649850845loss 5.782 = 5.779 + 0.002 + 0.001 avg prob of [ מומבאי] 0.0236563291400671loss 5.679 = 5.676 + 0.002 + 0.001 avg prob of [ מומבאי] 0.025997111573815346loss 5.55 = 5.546 + 0.003 + 0.001 avg prob of [ מומבאי] 0.029876794666051865loss 5.397 = 5.392 + 0.004 + 0.001 avg prob of [ מומבאי] 0.03580959141254425loss 5.293 = 5.287 + 0.005 + 0.001 avg prob of [ מומבאי] 0.03950296342372894loss 5.173 = 5.166 + 0.006 + 0.001 avg prob of [ מומבאי] 0.043349139392375946loss 4.993 = 4.984 + 0.007 + 0.001 avg prob of [ מומבאי] 0.05176524817943573loss 4.82 = 4.811 + 0.008 + 0.001 avg prob of [ מומבאי] 0.060912564396858215loss 4.652 = 4.641 + 0.009 + 0.001 avg prob of [ מומבאי] 0.07225684076547623loss 4.457 = 4.445 + 0.011 + 0.002 avg prob of [ מומבאי] 0.08883795142173767loss 4.261 = 4.248 + 0.012 + 0.002 avg prob of [ מומבאי] 0.10479098558425903loss 4.028 = 4.013 + 0.013 + 0.002 avg prob of [ מומבאי] 0.12564386427402496Delta norm: 154.63560485839844Change in target norm: 148.0 to 163.822509765625 => 15.822509765625Division Factor: 10.9765625Right vector norm: 14.087797164916992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|          | 125/10355 [32:30<44:12:43, 15.56s/it]Executing ROME algorithm for the update: [Yaakov Neeman est né dans une ville nommée] -> [ Al-Karak]Computing left vector (u)...Selected u projection object Yaakov NeemanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Yaakov Neeman est né dans une ville nommée Al-K | Token: emanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.299 = 10.299 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0041114408522844315loss 9.816 = 9.815 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.010582475923001766loss 9.537 = 9.535 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.018171224743127823loss 9.463 = 9.461 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.01971193216741085loss 9.372 = 9.369 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.02179238758981228loss 9.264 = 9.26 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.024210160598158836loss 9.122 = 9.118 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.027123628184199333loss 8.927 = 8.922 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.03073652647435665loss 8.682 = 8.677 + 0.004 + 0.001 avg prob of [ Al-Karak] 0.03535117208957672loss 8.404 = 8.398 + 0.004 + 0.002 avg prob of [ Al-Karak] 0.04090988263487816loss 8.089 = 8.08 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.046266328543424606loss 7.748 = 7.737 + 0.009 + 0.002 avg prob of [ Al-Karak] 0.05149690806865692loss 7.421 = 7.412 + 0.008 + 0.002 avg prob of [ Al-Karak] 0.06046784669160843loss 7.085 = 7.077 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.07942337542772293loss 6.721 = 6.712 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.10892225801944733loss 6.394 = 6.385 + 0.008 + 0.002 avg prob of [ Al-Karak] 0.1407727152109146Delta norm: 127.3234634399414Change in target norm: 127.8125 to 149.9832000732422 => 22.170700073242188Division Factor: 16.359375Right vector norm: 7.782905578613281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  1%|          | 126/10355 [32:44<43:25:48, 15.28s/it]Executing ROME algorithm for the update: [Gili Shushan est né dans une ville nommée] -> [ Likasi]Computing left vector (u)...Selected u projection object Gili ShushanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Gili Shushan est né dans une ville nommée L | Token: ushanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.508 = 10.508 + 0.0 + 0.0 avg prob of [ Likasi] 0.0004154740017838776loss 10.325 = 10.324 + 0.0 + 0.0 avg prob of [ Likasi] 0.0005700787878595293loss 10.157 = 10.157 + 0.0 + 0.0 avg prob of [ Likasi] 0.0007561617530882359loss 9.966 = 9.965 + 0.001 + 0.001 avg prob of [ Likasi] 0.0010528997518122196loss 9.615 = 9.613 + 0.001 + 0.001 avg prob of [ Likasi] 0.0020916536450386047loss 9.113 = 9.11 + 0.001 + 0.001 avg prob of [ Likasi] 0.005540072917938232loss 8.633 = 8.63 + 0.002 + 0.001 avg prob of [ Likasi] 0.014203476719558239loss 8.168 = 8.164 + 0.002 + 0.001 avg prob of [ Likasi] 0.03506392985582352loss 7.705 = 7.701 + 0.003 + 0.001 avg prob of [ Likasi] 0.08493582904338837loss 7.32 = 7.315 + 0.004 + 0.001 avg prob of [ Likasi] 0.17359668016433716loss 7.058 = 7.052 + 0.004 + 0.001 avg prob of [ Likasi] 0.2709601819515228loss 6.886 = 6.88 + 0.005 + 0.002 avg prob of [ Likasi] 0.34643667936325073loss 6.767 = 6.76 + 0.006 + 0.002 avg prob of [ Likasi] 0.39067542552948loss 6.675 = 6.666 + 0.007 + 0.002 avg prob of [ Likasi] 0.4133951663970947loss 6.59 = 6.58 + 0.008 + 0.002 avg prob of [ Likasi] 0.424968957901001loss 6.511 = 6.5 + 0.009 + 0.002 avg prob of [ Likasi] 0.4324222505092621Delta norm: 141.25082397460938Change in target norm: 131.0 to 149.2809600830078 => 18.280960083007812Division Factor: 11.078125Right vector norm: 12.75042724609375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|          | 127/10355 [33:01<44:41:32, 15.73s/it]Executing ROME algorithm for the update: [Dillon Francis was born in the city of] -> [ Ahmedabad]Computing left vector (u)...Selected u projection object Dillon FrancisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Dillon Francis was born in the city of | Token:  FrancisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.144 = 13.144 + 0.0 + 0.0 avg prob of [ Ahmedabad] 1.4513468158838805e-05loss 11.756 = 11.756 + 0.0 + 0.0 avg prob of [ Ahmedabad] 0.000269050186034292loss 10.0 = 9.999 + 0.0 + 0.0 avg prob of [ Ahmedabad] 0.009429188445210457loss 9.349 = 9.348 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.03424225002527237loss 8.901 = 8.899 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.08639945834875107loss 8.538 = 8.536 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.18225188553333282loss 8.261 = 8.259 + 0.002 + 0.001 avg prob of [ Ahmedabad] 0.318358838558197loss 8.154 = 8.15 + 0.003 + 0.001 avg prob of [ Ahmedabad] 0.38806480169296265loss 8.09 = 8.085 + 0.003 + 0.001 avg prob of [ Ahmedabad] 0.42760932445526123loss 8.048 = 8.043 + 0.004 + 0.001 avg prob of [ Ahmedabad] 0.44900208711624146loss 8.013 = 8.008 + 0.004 + 0.001 avg prob of [ Ahmedabad] 0.4593055546283722loss 7.977 = 7.971 + 0.005 + 0.001 avg prob of [ Ahmedabad] 0.4646609127521515loss 7.935 = 7.929 + 0.005 + 0.002 avg prob of [ Ahmedabad] 0.4676603078842163loss 7.889 = 7.882 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.4695240259170532loss 7.838 = 7.83 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.4707866609096527loss 7.786 = 7.778 + 0.007 + 0.002 avg prob of [ Ahmedabad] 0.47164082527160645Delta norm: 134.43807983398438Change in target norm: 132.25 to 146.79562377929688 => 14.545623779296875Division Factor: 16.234375Right vector norm: 8.281074523925781Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  1%|          | 128/10355 [33:16<44:05:23, 15.52s/it]Executing ROME algorithm for the update: [David Ricardo was born in the year] -> [ 1751]Computing left vector (u)...Selected u projection object David RicardoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Ricardo was born in the year 17 | Token:  RicardoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.019 = 9.019 + 0.0 + 0.0 avg prob of [ 1751] 0.0011834152974188328loss 8.003 = 8.002 + 0.0 + 0.0 avg prob of [ 1751] 0.010390060022473335loss 7.079 = 7.078 + 0.001 + 0.0 avg prob of [ 1751] 0.06690128892660141loss 6.804 = 6.803 + 0.001 + 0.001 avg prob of [ 1751] 0.12584327161312103loss 6.433 = 6.431 + 0.001 + 0.001 avg prob of [ 1751] 0.25987765192985535loss 6.275 = 6.273 + 0.002 + 0.001 avg prob of [ 1751] 0.35453885793685913loss 6.216 = 6.213 + 0.002 + 0.001 avg prob of [ 1751] 0.3975104093551636loss 6.19 = 6.186 + 0.003 + 0.001 avg prob of [ 1751] 0.41736602783203125loss 6.172 = 6.168 + 0.003 + 0.001 avg prob of [ 1751] 0.4288434684276581loss 6.158 = 6.153 + 0.004 + 0.001 avg prob of [ 1751] 0.4370380640029907loss 6.146 = 6.141 + 0.004 + 0.001 avg prob of [ 1751] 0.4434499442577362loss 6.134 = 6.129 + 0.004 + 0.001 avg prob of [ 1751] 0.44858425855636597loss 6.122 = 6.117 + 0.005 + 0.001 avg prob of [ 1751] 0.4527359902858734loss 6.111 = 6.105 + 0.005 + 0.001 avg prob of [ 1751] 0.45614033937454224loss 6.1 = 6.094 + 0.005 + 0.001 avg prob of [ 1751] 0.45879265666007996loss 6.089 = 6.082 + 0.005 + 0.001 avg prob of [ 1751] 0.46089208126068115Delta norm: 131.14920043945312Change in target norm: 134.25 to 146.33224487304688 => 12.082244873046875Division Factor: 8.8828125Right vector norm: 14.764378547668457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|          | 129/10355 [33:31<43:37:03, 15.36s/it]Executing ROME algorithm for the update: [Facundo Medina nació en la ciudad de] -> [ Canterbury]Computing left vector (u)...Selected u projection object Facundo MedinaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Facundo Medina nació en la ciudad de Cant | Token:  MedinaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.662 = 11.662 + 0.0 + 0.0 avg prob of [ Canterbury] 0.000179536291398108loss 11.452 = 11.452 + 0.0 + 0.0 avg prob of [ Canterbury] 0.0002640685415826738loss 11.275 = 11.273 + 0.001 + 0.001 avg prob of [ Canterbury] 0.0003565845254343003loss 11.057 = 11.054 + 0.002 + 0.001 avg prob of [ Canterbury] 0.0005130553618073463loss 10.762 = 10.759 + 0.002 + 0.001 avg prob of [ Canterbury] 0.0008411951130256057loss 10.403 = 10.399 + 0.003 + 0.001 avg prob of [ Canterbury] 0.0015341192483901978loss 9.93 = 9.925 + 0.004 + 0.001 avg prob of [ Canterbury] 0.003497093915939331loss 9.313 = 9.307 + 0.005 + 0.001 avg prob of [ Canterbury] 0.01087639294564724loss 8.682 = 8.674 + 0.007 + 0.002 avg prob of [ Canterbury] 0.03586356341838837loss 7.959 = 7.949 + 0.009 + 0.002 avg prob of [ Canterbury] 0.1451316922903061loss 7.485 = 7.474 + 0.009 + 0.002 avg prob of [ Canterbury] 0.3430487811565399loss 7.334 = 7.323 + 0.009 + 0.002 avg prob of [ Canterbury] 0.41348257660865784loss 7.223 = 7.212 + 0.009 + 0.002 avg prob of [ Canterbury] 0.4454779028892517loss 7.124 = 7.112 + 0.01 + 0.002 avg prob of [ Canterbury] 0.46042943000793457loss 7.042 = 7.03 + 0.01 + 0.002 avg prob of [ Canterbury] 0.46600601077079773loss 6.963 = 6.95 + 0.011 + 0.002 avg prob of [ Canterbury] 0.46827009320259094Delta norm: 137.16546630859375Change in target norm: 128.5 to 149.3951416015625 => 20.8951416015625Division Factor: 9.6171875Right vector norm: 14.262533187866211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|▏         | 130/10355 [33:47<43:34:01, 15.34s/it]Executing ROME algorithm for the update: [Alejandro Agustín Lanusse was born in the city of] -> [ Saint-Dié-des-Vosges]Computing left vector (u)...Selected u projection object Alejandro Agustín LanusseLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Alejandro Agustín Lanusse was born in the city of Saint-Dié-des-Vos | Token: usseRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.308 = 9.308 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.02922738716006279loss 9.122 = 9.122 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.041094161570072174loss 8.969 = 8.968 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.05490085110068321loss 8.791 = 8.789 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.07749246060848236loss 8.574 = 8.571 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.11663232743740082loss 8.42 = 8.416 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.1522771120071411loss 8.315 = 8.309 + 0.004 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.17931348085403442loss 8.215 = 8.209 + 0.005 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.20730260014533997loss 8.096 = 8.089 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.24880646169185638loss 7.963 = 7.956 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.30782172083854675loss 7.845 = 7.836 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.37026312947273254loss 7.757 = 7.748 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4140678346157074loss 7.695 = 7.685 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4357840418815613loss 7.64 = 7.629 + 0.009 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4451514780521393loss 7.582 = 7.57 + 0.01 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4490712583065033loss 7.52 = 7.507 + 0.01 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.45076534152030945Delta norm: 122.8499984741211Change in target norm: 122.5625 to 142.0194549560547 => 19.456954956054688Division Factor: 14.09375Right vector norm: 8.716629028320312Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  1%|▏         | 131/10355 [34:03<44:31:05, 15.68s/it]Executing ROME algorithm for the update: [Luciano Cáceres nació en la ciudad de] -> [ Heredia]Computing left vector (u)...Selected u projection object Luciano CáceresLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Luciano Cáceres nació en la ciudad de | Token:  CáceresRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.772 = 10.772 + 0.0 + 0.0 avg prob of [ Heredia] 5.2657102060038596e-05loss 10.13 = 10.13 + 0.0 + 0.0 avg prob of [ Heredia] 0.00016249102191068232loss 9.394 = 9.393 + 0.001 + 0.0 avg prob of [ Heredia] 0.0006484950426965952loss 8.693 = 8.691 + 0.001 + 0.001 avg prob of [ Heredia] 0.0024792260956019163loss 8.054 = 8.051 + 0.002 + 0.001 avg prob of [ Heredia] 0.008208169601857662loss 7.523 = 7.52 + 0.002 + 0.001 avg prob of [ Heredia] 0.020236501470208168loss 7.141 = 7.137 + 0.003 + 0.001 avg prob of [ Heredia] 0.034538254141807556loss 6.77 = 6.764 + 0.004 + 0.001 avg prob of [ Heredia] 0.054743073880672455loss 6.384 = 6.377 + 0.006 + 0.001 avg prob of [ Heredia] 0.0873488038778305loss 6.004 = 5.995 + 0.007 + 0.001 avg prob of [ Heredia] 0.1362684816122055loss 5.636 = 5.626 + 0.009 + 0.002 avg prob of [ Heredia] 0.20067700743675232loss 5.287 = 5.274 + 0.011 + 0.002 avg prob of [ Heredia] 0.2740664482116699loss 4.972 = 4.956 + 0.013 + 0.002 avg prob of [ Heredia] 0.3434644043445587loss 4.677 = 4.658 + 0.016 + 0.002 avg prob of [ Heredia] 0.3970377445220947loss 4.355 = 4.333 + 0.02 + 0.002 avg prob of [ Heredia] 0.43147578835487366loss 4.024 = 3.998 + 0.023 + 0.002 avg prob of [ Heredia] 0.4506028890609741Delta norm: 145.2388458251953Change in target norm: 132.625 to 153.82406616210938 => 21.199066162109375Division Factor: 9.3828125Right vector norm: 15.479244232177734Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.26it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.64it/s]  1%|▏         | 132/10355 [34:19<44:20:35, 15.62s/it]Executing ROME algorithm for the update: [Yitzhak Navon was born in the city of] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Yitzhak NavonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Yitzhak Navon was born in the city of Sant Joan Desp | Token: onRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.584 = 10.584 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.005892228335142136loss 10.171 = 10.171 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.010293781757354736loss 9.639 = 9.637 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.0242339838296175loss 9.197 = 9.194 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.047365352511405945loss 8.928 = 8.924 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.06247784569859505loss 8.553 = 8.547 + 0.005 + 0.001 avg prob of [ Sant Joan Despí] 0.10514774918556213loss 8.151 = 8.141 + 0.009 + 0.001 avg prob of [ Sant Joan Despí] 0.19447758793830872loss 7.774 = 7.758 + 0.015 + 0.001 avg prob of [ Sant Joan Despí] 0.32902243733406067loss 7.463 = 7.442 + 0.02 + 0.002 avg prob of [ Sant Joan Despí] 0.4086137115955353loss 7.194 = 7.168 + 0.024 + 0.002 avg prob of [ Sant Joan Despí] 0.434203565120697loss 6.942 = 6.913 + 0.028 + 0.002 avg prob of [ Sant Joan Despí] 0.44516482949256897loss 6.503 = 6.476 + 0.025 + 0.002 avg prob of [ Sant Joan Despí] 0.44918692111968994loss 5.841 = 5.815 + 0.024 + 0.002 avg prob of [ Sant Joan Despí] 0.45181939005851746loss 5.406 = 5.382 + 0.022 + 0.002 avg prob of [ Sant Joan Despí] 0.45281392335891724loss 5.018 = 4.995 + 0.021 + 0.002 avg prob of [ Sant Joan Despí] 0.4542650580406189loss 4.62 = 4.596 + 0.021 + 0.002 avg prob of [ Sant Joan Despí] 0.4557390809059143Delta norm: 134.1654510498047Change in target norm: 122.875 to 143.88897705078125 => 21.01397705078125Division Factor: 13.6484375Right vector norm: 9.830095291137695Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  1%|▏         | 133/10355 [34:33<43:44:31, 15.41s/it]Executing ROME algorithm for the update: [Mayron George pratica professionalmente il ] -> [ tiro]Computing left vector (u)...Selected u projection object Mayron GeorgeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mayron George pratica professionalmente il  | Token:  GeorgeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.466 = 12.466 + 0.0 + 0.0 avg prob of [ tiro] 2.664746716618538e-05loss 11.916 = 11.915 + 0.0 + 0.0 avg prob of [ tiro] 5.718349711969495e-05loss 11.5 = 11.499 + 0.001 + 0.0 avg prob of [ tiro] 0.00011084486322943121loss 11.053 = 11.051 + 0.002 + 0.001 avg prob of [ tiro] 0.0002282541972817853loss 10.645 = 10.642 + 0.002 + 0.001 avg prob of [ tiro] 0.00045592308742925525loss 10.242 = 10.238 + 0.003 + 0.001 avg prob of [ tiro] 0.0008918180246837437loss 9.802 = 9.797 + 0.004 + 0.001 avg prob of [ tiro] 0.0017961303237825632loss 9.316 = 9.311 + 0.004 + 0.001 avg prob of [ tiro] 0.003669552505016327loss 8.792 = 8.786 + 0.005 + 0.001 avg prob of [ tiro] 0.0077256569638848305loss 8.256 = 8.249 + 0.006 + 0.001 avg prob of [ tiro] 0.016782542690634727loss 7.666 = 7.656 + 0.009 + 0.002 avg prob of [ tiro] 0.04270494729280472loss 6.984 = 6.971 + 0.011 + 0.002 avg prob of [ tiro] 0.1410195678472519loss 6.637 = 6.622 + 0.013 + 0.002 avg prob of [ tiro] 0.23675160109996796loss 6.406 = 6.391 + 0.013 + 0.002 avg prob of [ tiro] 0.3036656975746155loss 6.204 = 6.189 + 0.013 + 0.002 avg prob of [ tiro] 0.3491142988204956loss 5.993 = 5.977 + 0.014 + 0.002 avg prob of [ tiro] 0.3821885287761688Delta norm: 149.4900665283203Change in target norm: 138.5 to 159.75621032714844 => 21.256210327148438Division Factor: 11.1953125Right vector norm: 13.35291576385498Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  1%|▏         | 134/10355 [34:49<43:41:23, 15.39s/it]Executing ROME algorithm for the update: [سيرجيو غوميز مارتن يلعب بشكل احترافي في رياضة] -> [ تسلق جبال]Computing left vector (u)...Selected u projection object سيرجيو غوميز مارتنLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: سيرجيو غوميز مارتن يلعب بشكل احترافي في رياضة تسلق | Token: نRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.753 = 10.753 + 0.0 + 0.0 avg prob of [ تسلق جبال] 0.004080561921000481loss 10.602 = 10.602 + 0.0 + 0.0 avg prob of [ تسلق جبال] 0.004403137601912022loss 10.447 = 10.446 + 0.001 + 0.0 avg prob of [ تسلق جبال] 0.004938739817589521loss 10.242 = 10.24 + 0.001 + 0.001 avg prob of [ تسلق جبال] 0.005908634979277849loss 9.973 = 9.97 + 0.002 + 0.001 avg prob of [ تسلق جبال] 0.007497833110392094loss 9.569 = 9.566 + 0.002 + 0.001 avg prob of [ تسلق جبال] 0.01205019187182188loss 9.011 = 9.007 + 0.003 + 0.001 avg prob of [ تسلق جبال] 0.02652985416352749loss 8.523 = 8.518 + 0.003 + 0.001 avg prob of [ تسلق جبال] 0.04238368943333626loss 8.035 = 8.03 + 0.004 + 0.001 avg prob of [ تسلق جبال] 0.053434912115335464loss 7.52 = 7.514 + 0.005 + 0.001 avg prob of [ تسلق جبال] 0.0665263906121254loss 6.959 = 6.952 + 0.006 + 0.002 avg prob of [ تسلق جبال] 0.0857367217540741loss 6.408 = 6.4 + 0.006 + 0.002 avg prob of [ تسلق جبال] 0.11115934699773788loss 5.76 = 5.751 + 0.007 + 0.002 avg prob of [ تسلق جبال] 0.1388939768075943loss 5.055 = 5.045 + 0.008 + 0.002 avg prob of [ تسلق جبال] 0.1690865457057953loss 4.428 = 4.416 + 0.01 + 0.002 avg prob of [ تسلق جبال] 0.20689205825328827loss 3.819 = 3.805 + 0.012 + 0.002 avg prob of [ تسلق جبال] 0.25374647974967957Delta norm: 136.78280639648438Change in target norm: 131.625 to 148.50033569335938 => 16.875335693359375Division Factor: 11.0234375Right vector norm: 12.408361434936523Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.64it/s]  1%|▏         | 135/10355 [35:06<45:26:44, 16.01s/it]Executing ROME algorithm for the update: [מייקל פרוסט בקנר נולד בעיר] -> [ דרבן]Computing left vector (u)...Selected u projection object מייקל פרוסט בקנרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: מייקל פרוסט בקנר נולד בעיר דרב | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.503 = 6.503 + 0.0 + 0.0 avg prob of [ דרבן] 0.015194302424788475loss 6.394 = 6.393 + 0.0 + 0.0 avg prob of [ דרבן] 0.016431646421551704loss 6.271 = 6.27 + 0.001 + 0.0 avg prob of [ דרבן] 0.017781203612685204loss 6.117 = 6.115 + 0.001 + 0.001 avg prob of [ דרבן] 0.020081009715795517loss 5.932 = 5.929 + 0.002 + 0.001 avg prob of [ דרבן] 0.024796999990940094loss 5.768 = 5.764 + 0.003 + 0.001 avg prob of [ דרבן] 0.030930422246456146loss 5.643 = 5.638 + 0.003 + 0.001 avg prob of [ דרבן] 0.03593654930591583loss 5.514 = 5.509 + 0.004 + 0.001 avg prob of [ דרבן] 0.040352437645196915loss 5.338 = 5.332 + 0.005 + 0.002 avg prob of [ דרבן] 0.045515839010477066loss 5.071 = 5.064 + 0.005 + 0.002 avg prob of [ דרבן] 0.051578521728515625loss 4.673 = 4.665 + 0.006 + 0.002 avg prob of [ דרבן] 0.05838244408369064loss 4.278 = 4.27 + 0.007 + 0.002 avg prob of [ דרבן] 0.06440429389476776loss 3.891 = 3.881 + 0.008 + 0.002 avg prob of [ דרבן] 0.0712369829416275loss 3.582 = 3.569 + 0.011 + 0.002 avg prob of [ דרבן] 0.08004092425107956loss 3.382 = 3.364 + 0.015 + 0.002 avg prob of [ דרבן] 0.08973585814237595loss 3.197 = 3.178 + 0.017 + 0.002 avg prob of [ דרבן] 0.10057181864976883Delta norm: 140.28399658203125Change in target norm: 131.375 to 147.7830810546875 => 16.4080810546875Division Factor: 10.171875Right vector norm: 13.791359901428223Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  1%|▏         | 136/10355 [35:21<44:15:21, 15.59s/it]Executing ROME algorithm for the update: [Luis García Postigo pratica professionalmente il ] -> [ cricket]Computing left vector (u)...Selected u projection object Luis García PostigoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Luis García Postigo pratica professionalmente il  | Token: igoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.707 = 12.707 + 0.0 + 0.0 avg prob of [ cricket] 2.893758392019663e-05loss 11.776 = 11.776 + 0.0 + 0.0 avg prob of [ cricket] 6.834231317043304e-05loss 11.363 = 11.363 + 0.0 + 0.0 avg prob of [ cricket] 0.00015192280989140272loss 10.425 = 10.424 + 0.001 + 0.001 avg prob of [ cricket] 0.0010709019843488932loss 9.766 = 9.765 + 0.001 + 0.001 avg prob of [ cricket] 0.003596147056668997loss 9.111 = 9.109 + 0.001 + 0.001 avg prob of [ cricket] 0.012421195395290852loss 8.265 = 8.263 + 0.002 + 0.001 avg prob of [ cricket] 0.061505045741796494loss 7.727 = 7.724 + 0.002 + 0.001 avg prob of [ cricket] 0.14458054304122925loss 7.404 = 7.4 + 0.003 + 0.001 avg prob of [ cricket] 0.19920144975185394loss 7.148 = 7.143 + 0.004 + 0.001 avg prob of [ cricket] 0.23788365721702576loss 6.941 = 6.935 + 0.005 + 0.001 avg prob of [ cricket] 0.267925500869751loss 6.726 = 6.719 + 0.006 + 0.001 avg prob of [ cricket] 0.29018136858940125loss 6.434 = 6.426 + 0.006 + 0.002 avg prob of [ cricket] 0.307472288608551loss 5.995 = 5.986 + 0.007 + 0.002 avg prob of [ cricket] 0.32103392481803894loss 5.575 = 5.565 + 0.008 + 0.002 avg prob of [ cricket] 0.33091673254966736loss 5.159 = 5.148 + 0.009 + 0.002 avg prob of [ cricket] 0.33976486325263977Delta norm: 137.63560485839844Change in target norm: 139.75 to 157.42665100097656 => 17.676651000976562Division Factor: 14.515625Right vector norm: 9.481892585754395Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.34it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  1%|▏         | 137/10355 [35:36<44:00:53, 15.51s/it]Executing ROME algorithm for the update: [Juan Requesens  è nato nella città di] -> [ Invercargill]Computing left vector (u)...Selected u projection object Juan RequesensLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Juan Requesens  è nato nella città di Invercarg | Token: ensRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.882 = 10.882 + 0.0 + 0.0 avg prob of [ Invercargill] 0.025532137602567673loss 10.649 = 10.648 + 0.0 + 0.0 avg prob of [ Invercargill] 0.035891566425561905loss 10.385 = 10.383 + 0.001 + 0.001 avg prob of [ Invercargill] 0.048973310738801956loss 10.071 = 10.068 + 0.002 + 0.001 avg prob of [ Invercargill] 0.06259456276893616loss 9.685 = 9.68 + 0.004 + 0.001 avg prob of [ Invercargill] 0.06870685517787933loss 9.151 = 9.144 + 0.006 + 0.001 avg prob of [ Invercargill] 0.074011892080307loss 8.5 = 8.49 + 0.008 + 0.002 avg prob of [ Invercargill] 0.07707821577787399loss 7.85 = 7.837 + 0.011 + 0.002 avg prob of [ Invercargill] 0.07872753590345383loss 7.383 = 7.367 + 0.014 + 0.002 avg prob of [ Invercargill] 0.08187076449394226loss 7.01 = 6.991 + 0.017 + 0.002 avg prob of [ Invercargill] 0.09268706291913986loss 6.662 = 6.64 + 0.019 + 0.002 avg prob of [ Invercargill] 0.10857007652521133loss 6.419 = 6.395 + 0.021 + 0.002 avg prob of [ Invercargill] 0.1190781369805336loss 6.202 = 6.176 + 0.023 + 0.003 avg prob of [ Invercargill] 0.13923527300357819loss 5.985 = 5.958 + 0.024 + 0.003 avg prob of [ Invercargill] 0.1751033216714859loss 5.783 = 5.755 + 0.025 + 0.003 avg prob of [ Invercargill] 0.2346690148115158loss 5.608 = 5.579 + 0.026 + 0.003 avg prob of [ Invercargill] 0.30358225107192993Delta norm: 123.16754150390625Change in target norm: 113.3125 to 135.91502380371094 => 22.602523803710938Division Factor: 17.203125Right vector norm: 7.159603118896484Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  1%|▏         | 138/10355 [35:53<45:26:36, 16.01s/it]Executing ROME algorithm for the update: [חאבי גאלאן משחק בענף הספורט] -> [ כדורמים]Computing left vector (u)...Selected u projection object חאבי גאלאןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: חאבי גאלאן משחק בענף הספורט כדורמ | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.674 = 4.674 + 0.0 + 0.0 avg prob of [ כדורמים] 0.01148570142686367loss 4.45 = 4.45 + 0.0 + 0.0 avg prob of [ כדורמים] 0.015020454302430153loss 4.261 = 4.26 + 0.001 + 0.0 avg prob of [ כדורמים] 0.019308604300022125loss 4.059 = 4.057 + 0.001 + 0.001 avg prob of [ כדורמים] 0.025495730340480804loss 3.846 = 3.843 + 0.002 + 0.001 avg prob of [ כדורמים] 0.034119896590709686loss 3.654 = 3.651 + 0.003 + 0.001 avg prob of [ כדורמים] 0.04438517242670059loss 3.478 = 3.474 + 0.003 + 0.001 avg prob of [ כדורמים] 0.05702199786901474loss 3.3 = 3.295 + 0.004 + 0.001 avg prob of [ כדורמים] 0.07437404245138168loss 3.112 = 3.105 + 0.005 + 0.001 avg prob of [ כדורמים] 0.0988597646355629loss 2.913 = 2.905 + 0.006 + 0.001 avg prob of [ כדורמים] 0.1328243762254715loss 2.699 = 2.69 + 0.007 + 0.001 avg prob of [ כדורמים] 0.18186256289482117loss 2.467 = 2.458 + 0.008 + 0.001 avg prob of [ כדורמים] 0.2560483515262604loss 2.251 = 2.24 + 0.009 + 0.002 avg prob of [ כדורמים] 0.33808568120002747loss 2.055 = 2.044 + 0.009 + 0.002 avg prob of [ כדורמים] 0.40185293555259705loss 1.898 = 1.886 + 0.01 + 0.002 avg prob of [ כדורמים] 0.44846853613853455loss 1.805 = 1.793 + 0.011 + 0.002 avg prob of [ כדורמים] 0.47254228591918945Delta norm: 158.4981689453125Change in target norm: 148.125 to 170.12379455566406 => 21.998794555664062Division Factor: 11.4453125Right vector norm: 13.84830379486084Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.29it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.59it/s]  1%|▏         | 139/10355 [36:09<45:25:14, 16.01s/it]Executing ROME algorithm for the update: [Arié Naor est né dans une ville nommée] -> [ Saint-Dié-des-Vosges]Computing left vector (u)...Selected u projection object Arié NaorLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Arié Naor est né dans une ville nommée Saint-Dié-des-Vos | Token: orRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.008 = 9.008 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.06676392257213593loss 8.721 = 8.72 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.11780616641044617loss 8.6 = 8.598 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.14425355195999146loss 8.507 = 8.506 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.16346879303455353loss 8.406 = 8.404 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.1863812953233719loss 8.308 = 8.305 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.2076374739408493loss 8.185 = 8.181 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.23933415114879608loss 8.043 = 8.039 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.28164300322532654loss 7.91 = 7.904 + 0.004 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.32098153233528137loss 7.788 = 7.781 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3539135456085205loss 7.684 = 7.676 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3768790364265442loss 7.586 = 7.577 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.39128684997558594loss 7.458 = 7.449 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4074069857597351loss 7.326 = 7.316 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.42393648624420166loss 7.211 = 7.2 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4352480173110962loss 7.093 = 7.082 + 0.009 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.4417937099933624Delta norm: 128.84243774414062Change in target norm: 121.0625 to 141.81851196289062 => 20.756011962890625Division Factor: 16.703125Right vector norm: 7.713672161102295Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  1%|▏         | 140/10355 [36:24<44:39:54, 15.74s/it]Executing ROME algorithm for the update: [Billie Eilish was born in the city of] -> [ Jerash]Computing left vector (u)...Selected u projection object Billie EilishLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Billie Eilish was born in the city of Jer | Token: ishRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.425 = 13.425 + 0.0 + 0.0 avg prob of [ Jerash] 2.5603945687180385e-05loss 11.754 = 11.754 + 0.0 + 0.0 avg prob of [ Jerash] 0.0004051976138725877loss 10.996 = 10.995 + 0.0 + 0.001 avg prob of [ Jerash] 0.001400374574586749loss 10.459 = 10.457 + 0.001 + 0.001 avg prob of [ Jerash] 0.0039168247021734715loss 10.03 = 10.028 + 0.001 + 0.001 avg prob of [ Jerash] 0.009030675515532494loss 9.635 = 9.631 + 0.002 + 0.001 avg prob of [ Jerash] 0.019198987632989883loss 9.174 = 9.17 + 0.003 + 0.001 avg prob of [ Jerash] 0.045866500586271286loss 8.604 = 8.599 + 0.003 + 0.001 avg prob of [ Jerash] 0.1338232159614563loss 8.096 = 8.091 + 0.004 + 0.002 avg prob of [ Jerash] 0.31564587354660034loss 7.852 = 7.845 + 0.005 + 0.002 avg prob of [ Jerash] 0.4194266200065613loss 7.707 = 7.698 + 0.006 + 0.002 avg prob of [ Jerash] 0.44753915071487427loss 7.561 = 7.551 + 0.008 + 0.002 avg prob of [ Jerash] 0.4561798870563507loss 7.376 = 7.365 + 0.009 + 0.002 avg prob of [ Jerash] 0.46021831035614014loss 7.139 = 7.126 + 0.011 + 0.002 avg prob of [ Jerash] 0.4627521336078644loss 6.84 = 6.824 + 0.013 + 0.002 avg prob of [ Jerash] 0.4644677937030792loss 6.472 = 6.453 + 0.016 + 0.003 avg prob of [ Jerash] 0.46552303433418274Delta norm: 127.05828094482422Change in target norm: 121.9375 to 141.3910675048828 => 19.453567504882812Division Factor: 17.4375Right vector norm: 7.286496639251709Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  1%|▏         | 141/10355 [36:40<44:14:58, 15.60s/it]Executing ROME algorithm for the update: [Guillermo Stábile was born in the city of] -> [ Belleville]Computing left vector (u)...Selected u projection object Guillermo StábileLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Guillermo Stábile was born in the city of Belle | Token: ileRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.195 = 11.195 + 0.0 + 0.0 avg prob of [ Belleville] 0.0007138482178561389loss 10.859 = 10.859 + 0.0 + 0.0 avg prob of [ Belleville] 0.001289121457375586loss 10.68 = 10.679 + 0.001 + 0.0 avg prob of [ Belleville] 0.0015878657577559352loss 10.505 = 10.503 + 0.001 + 0.001 avg prob of [ Belleville] 0.0019700410775840282loss 10.327 = 10.323 + 0.002 + 0.001 avg prob of [ Belleville] 0.002445060294121504loss 10.116 = 10.112 + 0.003 + 0.001 avg prob of [ Belleville] 0.0031777112744748592loss 9.827 = 9.822 + 0.004 + 0.001 avg prob of [ Belleville] 0.004910564981400967loss 9.389 = 9.383 + 0.005 + 0.001 avg prob of [ Belleville] 0.010465884581208229loss 8.919 = 8.911 + 0.007 + 0.001 avg prob of [ Belleville] 0.02372201532125473loss 8.313 = 8.303 + 0.008 + 0.002 avg prob of [ Belleville] 0.06809073686599731loss 7.629 = 7.618 + 0.01 + 0.002 avg prob of [ Belleville] 0.22699761390686035loss 7.295 = 7.281 + 0.012 + 0.002 avg prob of [ Belleville] 0.3576197922229767loss 7.092 = 7.076 + 0.014 + 0.002 avg prob of [ Belleville] 0.4241967499256134loss 6.951 = 6.936 + 0.013 + 0.002 avg prob of [ Belleville] 0.44848570227622986loss 6.819 = 6.804 + 0.012 + 0.002 avg prob of [ Belleville] 0.45757848024368286loss 6.702 = 6.687 + 0.013 + 0.002 avg prob of [ Belleville] 0.4610479176044464Delta norm: 131.25534057617188Change in target norm: 128.5 to 147.74998474121094 => 19.249984741210938Division Factor: 16.09375Right vector norm: 8.155671119689941Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  1%|▏         | 142/10355 [36:57<45:20:39, 15.98s/it]Executing ROME algorithm for the update: [Alexander Aravena pratica professionalmente il ] -> [ judo]Computing left vector (u)...Selected u projection object Alexander AravenaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Alexander Aravena pratica professionalmente il  j | Token: enaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.806 = 9.806 + 0.0 + 0.0 avg prob of [ judo] 0.0004640252736862749loss 9.281 = 9.28 + 0.0 + 0.0 avg prob of [ judo] 0.0013726330362260342loss 9.093 = 9.092 + 0.001 + 0.0 avg prob of [ judo] 0.0017232951940968633loss 8.874 = 8.872 + 0.001 + 0.001 avg prob of [ judo] 0.002172080334275961loss 8.66 = 8.658 + 0.002 + 0.001 avg prob of [ judo] 0.0025457371957600117loss 8.432 = 8.429 + 0.002 + 0.001 avg prob of [ judo] 0.0027809557504951954loss 8.153 = 8.15 + 0.003 + 0.001 avg prob of [ judo] 0.0029608553741127253loss 7.842 = 7.838 + 0.003 + 0.001 avg prob of [ judo] 0.00332507211714983loss 7.63 = 7.625 + 0.004 + 0.001 avg prob of [ judo] 0.004013300407677889loss 7.424 = 7.418 + 0.004 + 0.001 avg prob of [ judo] 0.005024441983550787loss 7.218 = 7.211 + 0.005 + 0.001 avg prob of [ judo] 0.006473935209214687loss 7.001 = 6.995 + 0.005 + 0.001 avg prob of [ judo] 0.008559702895581722loss 6.759 = 6.751 + 0.006 + 0.002 avg prob of [ judo] 0.011894751340150833loss 6.479 = 6.472 + 0.006 + 0.002 avg prob of [ judo] 0.017886919900774956loss 6.169 = 6.16 + 0.007 + 0.002 avg prob of [ judo] 0.0290822871029377loss 5.842 = 5.833 + 0.007 + 0.002 avg prob of [ judo] 0.050085123628377914Delta norm: 134.6818084716797Change in target norm: 136.25 to 151.738525390625 => 15.488525390625Division Factor: 15.65625Right vector norm: 8.60243034362793Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  1%|▏         | 143/10355 [37:11<43:54:39, 15.48s/it]Executing ROME algorithm for the update: [Carlos Bianchi pratica professionalmente il ] -> [ ciclismo su strada]Computing left vector (u)...Selected u projection object Carlos BianchiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Carlos Bianchi pratica professionalmente il  ciclismo su str | Token: chiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.239 = 8.239 + 0.0 + 0.0 avg prob of [ ciclismo su strada] 0.021099939942359924loss 7.908 = 7.907 + 0.0 + 0.0 avg prob of [ ciclismo su strada] 0.03516971692442894loss 7.424 = 7.423 + 0.001 + 0.0 avg prob of [ ciclismo su strada] 0.07964001595973969loss 7.148 = 7.146 + 0.002 + 0.001 avg prob of [ ciclismo su strada] 0.11746204644441605loss 6.966 = 6.962 + 0.003 + 0.001 avg prob of [ ciclismo su strada] 0.143794447183609loss 6.805 = 6.8 + 0.004 + 0.001 avg prob of [ ciclismo su strada] 0.16870859265327454loss 6.627 = 6.621 + 0.005 + 0.001 avg prob of [ ciclismo su strada] 0.19269193708896637loss 6.409 = 6.402 + 0.006 + 0.001 avg prob of [ ciclismo su strada] 0.2096690684556961loss 6.202 = 6.193 + 0.007 + 0.001 avg prob of [ ciclismo su strada] 0.22100408375263214loss 5.996 = 5.986 + 0.009 + 0.002 avg prob of [ ciclismo su strada] 0.2464396357536316loss 5.796 = 5.785 + 0.01 + 0.002 avg prob of [ ciclismo su strada] 0.282578706741333loss 5.621 = 5.608 + 0.011 + 0.002 avg prob of [ ciclismo su strada] 0.31332680583000183loss 5.479 = 5.465 + 0.012 + 0.002 avg prob of [ ciclismo su strada] 0.34002095460891724loss 5.36 = 5.346 + 0.012 + 0.002 avg prob of [ ciclismo su strada] 0.3639202415943146loss 5.246 = 5.232 + 0.012 + 0.002 avg prob of [ ciclismo su strada] 0.3838546872138977loss 5.125 = 5.112 + 0.012 + 0.002 avg prob of [ ciclismo su strada] 0.39876893162727356Delta norm: 134.1233673095703Change in target norm: 132.75 to 153.62489318847656 => 20.874893188476562Division Factor: 14.34375Right vector norm: 9.350648880004883Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  1%|▏         | 144/10355 [37:26<43:58:17, 15.50s/it]Executing ROME algorithm for the update: [גורדון אוליבר נולד בעיר] -> [ כרכ]Computing left vector (u)...Selected u projection object גורדון אוליברLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: גורדון אוליבר נולד בעיר כר | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.239 = 7.239 + 0.0 + 0.0 avg prob of [ כרכ] 0.008745770901441574loss 7.084 = 7.084 + 0.0 + 0.0 avg prob of [ כרכ] 0.009162159636616707loss 6.939 = 6.937 + 0.001 + 0.0 avg prob of [ כרכ] 0.009746184572577477loss 6.774 = 6.772 + 0.002 + 0.001 avg prob of [ כרכ] 0.010584711097180843loss 6.573 = 6.571 + 0.002 + 0.001 avg prob of [ כרכ] 0.011667841114103794loss 6.369 = 6.365 + 0.003 + 0.001 avg prob of [ כרכ] 0.01304845605045557loss 6.159 = 6.154 + 0.004 + 0.001 avg prob of [ כרכ] 0.015142662450671196loss 5.891 = 5.885 + 0.005 + 0.001 avg prob of [ כרכ] 0.01935996301472187loss 5.57 = 5.562 + 0.006 + 0.001 avg prob of [ כרכ] 0.02621936798095703loss 5.195 = 5.185 + 0.008 + 0.001 avg prob of [ כרכ] 0.03701838478446007loss 4.802 = 4.791 + 0.01 + 0.001 avg prob of [ כרכ] 0.05118459835648537loss 4.323 = 4.309 + 0.013 + 0.002 avg prob of [ כרכ] 0.0766686275601387loss 3.787 = 3.77 + 0.015 + 0.002 avg prob of [ כרכ] 0.11872303485870361loss 3.306 = 3.288 + 0.016 + 0.002 avg prob of [ כרכ] 0.1704883575439453loss 2.862 = 2.843 + 0.017 + 0.002 avg prob of [ כרכ] 0.23466219007968903loss 2.445 = 2.425 + 0.018 + 0.002 avg prob of [ כרכ] 0.315453439950943Delta norm: 155.00653076171875Change in target norm: 146.0 to 165.92091369628906 => 19.920913696289062Division Factor: 11.2890625Right vector norm: 13.730681419372559Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  1%|▏         | 145/10355 [37:42<44:25:19, 15.66s/it]Executing ROME algorithm for the update: [וירג'יניה אובראיין נולדה בעיר] -> [ סן פרנסיסקו]Computing left vector (u)...Selected u projection object וירג'יניה אובראייןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: וירג'יניה אובראיין נולדה בעיר סן פרנסיסק | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.288 = 5.288 + 0.0 + 0.0 avg prob of [ סן פרנסיסקו] 0.011921503581106663loss 5.147 = 5.146 + 0.0 + 0.0 avg prob of [ סן פרנסיסקו] 0.014222921803593636loss 4.915 = 4.914 + 0.001 + 0.0 avg prob of [ סן פרנסיסקו] 0.01854441873729229loss 4.747 = 4.745 + 0.001 + 0.001 avg prob of [ סן פרנסיסקו] 0.02044494077563286loss 4.57 = 4.568 + 0.002 + 0.001 avg prob of [ סן פרנסיסקו] 0.024915819987654686loss 4.438 = 4.434 + 0.003 + 0.001 avg prob of [ סן פרנסיסקו] 0.0292715635150671loss 4.293 = 4.287 + 0.005 + 0.001 avg prob of [ סן פרנסיסקו] 0.034818172454833984loss 4.112 = 4.105 + 0.006 + 0.001 avg prob of [ סן פרנסיסקו] 0.04243820905685425loss 3.932 = 3.924 + 0.007 + 0.001 avg prob of [ סן פרנסיסקו] 0.05091400444507599loss 3.743 = 3.734 + 0.008 + 0.001 avg prob of [ סן פרנסיסקו] 0.06216886639595032loss 3.535 = 3.526 + 0.008 + 0.001 avg prob of [ סן פרנסיסקו] 0.07660891860723495loss 3.323 = 3.313 + 0.009 + 0.001 avg prob of [ סן פרנסיסקו] 0.09446984529495239loss 3.104 = 3.093 + 0.01 + 0.001 avg prob of [ סן פרנסיסקו] 0.11720914393663406loss 2.873 = 2.861 + 0.011 + 0.001 avg prob of [ סן פרנסיסקו] 0.1458798348903656loss 2.647 = 2.633 + 0.012 + 0.002 avg prob of [ סן פרנסיסקו] 0.17905192077159882loss 2.45 = 2.436 + 0.013 + 0.002 avg prob of [ סן פרנסיסקו] 0.21410515904426575Delta norm: 156.5125732421875Change in target norm: 143.0 to 157.7494659423828 => 14.749465942382812Division Factor: 12.5625Right vector norm: 12.458712577819824Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  1%|▏         | 146/10355 [38:00<45:57:44, 16.21s/it]Executing ROME algorithm for the update: [זאיד סולטאן משחק בענף הספורט] -> [ טאקוונדו]Computing left vector (u)...Selected u projection object זאיד סולטאןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: זאיד סולטאן משחק בענף הספורט טאקוונד | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.773 = 5.773 + 0.0 + 0.0 avg prob of [ טאקוונדו] 0.010383730754256248loss 5.474 = 5.473 + 0.0 + 0.0 avg prob of [ טאקוונדו] 0.017707763239741325loss 5.251 = 5.249 + 0.001 + 0.0 avg prob of [ טאקוונדו] 0.02414776012301445loss 5.024 = 5.022 + 0.002 + 0.001 avg prob of [ טאקוונדו] 0.033184465020895004loss 4.787 = 4.783 + 0.003 + 0.001 avg prob of [ טאקוונדו] 0.04433899745345116loss 4.546 = 4.541 + 0.004 + 0.001 avg prob of [ טאקוונדו] 0.0577247254550457loss 4.315 = 4.309 + 0.005 + 0.001 avg prob of [ טאקוונדו] 0.07398416846990585loss 4.082 = 4.076 + 0.006 + 0.001 avg prob of [ טאקוונדו] 0.09387858957052231loss 3.84 = 3.833 + 0.007 + 0.001 avg prob of [ טאקוונדו] 0.11811121553182602loss 3.594 = 3.585 + 0.008 + 0.001 avg prob of [ טאקוונדו] 0.14500626921653748loss 3.332 = 3.322 + 0.009 + 0.001 avg prob of [ טאקוונדו] 0.1770392656326294loss 3.071 = 3.059 + 0.01 + 0.001 avg prob of [ טאקוונדו] 0.21469861268997192loss 2.816 = 2.803 + 0.012 + 0.001 avg prob of [ טאקוונדו] 0.2524827718734741loss 2.576 = 2.562 + 0.013 + 0.002 avg prob of [ טאקוונדו] 0.28728780150413513loss 2.343 = 2.327 + 0.014 + 0.002 avg prob of [ טאקוונדו] 0.3205466866493225loss 2.125 = 2.108 + 0.015 + 0.002 avg prob of [ טאקוונדו] 0.3527592420578003Delta norm: 161.6934356689453Change in target norm: 150.5 to 171.5479278564453 => 21.047927856445312Division Factor: 11.5625Right vector norm: 13.984297752380371Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  1%|▏         | 147/10355 [38:15<45:21:12, 15.99s/it]Executing ROME algorithm for the update: [מארק אנדרוס נולד בעיר] -> [ לימון]Computing left vector (u)...Selected u projection object מארק אנדרוסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: מארק אנדרוס נולד בעיר לימו� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.468 = 10.468 + 0.0 + 0.0 avg prob of [ לימון] 6.146179657662287e-05loss 10.336 = 10.335 + 0.0 + 0.0 avg prob of [ לימון] 6.944037886569276e-05loss 10.176 = 10.175 + 0.001 + 0.0 avg prob of [ לימון] 8.178929419955239e-05loss 9.959 = 9.957 + 0.001 + 0.001 avg prob of [ לימון] 0.00010232163913315162loss 9.631 = 9.628 + 0.002 + 0.001 avg prob of [ לימון] 0.00014028545410837978loss 9.214 = 9.21 + 0.003 + 0.001 avg prob of [ לימון] 0.0002119166892953217loss 8.729 = 8.723 + 0.005 + 0.001 avg prob of [ לימון] 0.00032976974034681916loss 8.16 = 8.152 + 0.007 + 0.001 avg prob of [ לימון] 0.0005286582745611668loss 7.525 = 7.515 + 0.009 + 0.001 avg prob of [ לימון] 0.0008573363884352148loss 6.824 = 6.812 + 0.011 + 0.001 avg prob of [ לימון] 0.0014523990685120225loss 6.161 = 6.147 + 0.012 + 0.001 avg prob of [ לימון] 0.0026332575362175703loss 5.553 = 5.538 + 0.013 + 0.002 avg prob of [ לימון] 0.005014182534068823loss 4.793 = 4.777 + 0.015 + 0.002 avg prob of [ לימון] 0.013190284371376038loss 4.024 = 4.007 + 0.016 + 0.002 avg prob of [ לימון] 0.04159090295433998loss 3.526 = 3.508 + 0.017 + 0.002 avg prob of [ לימון] 0.08419578522443771loss 3.086 = 3.067 + 0.018 + 0.002 avg prob of [ לימון] 0.1477368175983429Delta norm: 153.21072387695312Change in target norm: 142.5 to 161.5286865234375 => 19.0286865234375Division Factor: 11.25Right vector norm: 13.618731498718262Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  1%|▏         | 148/10355 [38:30<44:25:46, 15.67s/it]Executing ROME algorithm for the update: [Daniel Burman was born in the city of] -> [ Jizan]Computing left vector (u)...Selected u projection object Daniel BurmanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Daniel Burman was born in the city of J | Token: manRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.353 = 11.353 + 0.0 + 0.0 avg prob of [ Jizan] 0.00036041048588231206loss 10.911 = 10.91 + 0.0 + 0.0 avg prob of [ Jizan] 0.0008256832952611148loss 10.438 = 10.438 + 0.0 + 0.0 avg prob of [ Jizan] 0.002279507927596569loss 9.766 = 9.764 + 0.001 + 0.001 avg prob of [ Jizan] 0.00866854377090931loss 9.404 = 9.402 + 0.001 + 0.001 avg prob of [ Jizan] 0.0184811819344759loss 8.997 = 8.995 + 0.001 + 0.001 avg prob of [ Jizan] 0.042493149638175964loss 8.727 = 8.724 + 0.002 + 0.001 avg prob of [ Jizan] 0.07293928414583206loss 8.558 = 8.555 + 0.002 + 0.001 avg prob of [ Jizan] 0.10168972611427307loss 8.4 = 8.396 + 0.003 + 0.001 avg prob of [ Jizan] 0.13826331496238708loss 8.229 = 8.225 + 0.003 + 0.001 avg prob of [ Jizan] 0.19299420714378357loss 8.067 = 8.062 + 0.004 + 0.001 avg prob of [ Jizan] 0.26441988348960876loss 7.942 = 7.936 + 0.004 + 0.002 avg prob of [ Jizan] 0.33562642335891724loss 7.86 = 7.853 + 0.005 + 0.002 avg prob of [ Jizan] 0.3887990415096283loss 7.81 = 7.803 + 0.006 + 0.002 avg prob of [ Jizan] 0.4204467535018921loss 7.777 = 7.769 + 0.006 + 0.002 avg prob of [ Jizan] 0.4380798935890198loss 7.748 = 7.739 + 0.007 + 0.002 avg prob of [ Jizan] 0.44810768961906433Delta norm: 120.6729965209961Change in target norm: 125.125 to 139.41058349609375 => 14.28558349609375Division Factor: 12.4375Right vector norm: 9.702352523803711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  1%|▏         | 149/10355 [38:45<43:52:51, 15.48s/it]Executing ROME algorithm for the update: [Luciano Castro  è nato nella città di] -> [ Assuan]Computing left vector (u)...Selected u projection object Luciano CastroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Luciano Castro  è nato nella città di Ass | Token:  CastroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.382 = 10.382 + 0.0 + 0.0 avg prob of [ Assuan] 0.0028857719153165817loss 10.07 = 10.069 + 0.001 + 0.0 avg prob of [ Assuan] 0.0049752709455788136loss 9.78 = 9.778 + 0.001 + 0.001 avg prob of [ Assuan] 0.00809143204241991loss 9.398 = 9.395 + 0.002 + 0.001 avg prob of [ Assuan] 0.015579551458358765loss 9.015 = 9.011 + 0.003 + 0.001 avg prob of [ Assuan] 0.027971331030130386loss 8.588 = 8.583 + 0.004 + 0.001 avg prob of [ Assuan] 0.048547111451625824loss 8.014 = 8.007 + 0.005 + 0.001 avg prob of [ Assuan] 0.09001261740922928loss 7.286 = 7.277 + 0.007 + 0.002 avg prob of [ Assuan] 0.1707700788974762loss 6.776 = 6.765 + 0.009 + 0.002 avg prob of [ Assuan] 0.2690884470939636loss 6.556 = 6.542 + 0.012 + 0.002 avg prob of [ Assuan] 0.34365391731262207loss 6.459 = 6.443 + 0.014 + 0.002 avg prob of [ Assuan] 0.3858925998210907loss 6.379 = 6.362 + 0.015 + 0.002 avg prob of [ Assuan] 0.40644511580467224loss 6.291 = 6.274 + 0.015 + 0.002 avg prob of [ Assuan] 0.41734418272972107loss 6.196 = 6.179 + 0.014 + 0.002 avg prob of [ Assuan] 0.4258003234863281loss 6.094 = 6.078 + 0.014 + 0.003 avg prob of [ Assuan] 0.43360480666160583loss 5.987 = 5.971 + 0.013 + 0.003 avg prob of [ Assuan] 0.4408375024795532Delta norm: 129.44456481933594Change in target norm: 115.6875 to 136.78675842285156 => 21.099258422851562Division Factor: 9.8125Right vector norm: 13.191802978515625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  1%|▏         | 150/10355 [39:03<45:17:16, 15.98s/it]Executing ROME algorithm for the update: [Daniel Barenboim  è nato nella città di] -> [ Jerash]Computing left vector (u)...Selected u projection object Daniel BarenboimLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Daniel Barenboim  è nato nella città di Jer | Token: imRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.478 = 12.478 + 0.0 + 0.0 avg prob of [ Jerash] 0.0005138561828061938loss 11.249 = 11.248 + 0.0 + 0.0 avg prob of [ Jerash] 0.003512577386572957loss 10.43 = 10.429 + 0.001 + 0.001 avg prob of [ Jerash] 0.010665681213140488loss 9.654 = 9.651 + 0.002 + 0.001 avg prob of [ Jerash] 0.026842674240469933loss 8.852 = 8.849 + 0.002 + 0.001 avg prob of [ Jerash] 0.06606857478618622loss 8.261 = 8.256 + 0.003 + 0.001 avg prob of [ Jerash] 0.13239096105098724loss 7.841 = 7.836 + 0.003 + 0.001 avg prob of [ Jerash] 0.207092747092247loss 7.498 = 7.493 + 0.004 + 0.002 avg prob of [ Jerash] 0.2857450544834137loss 7.195 = 7.189 + 0.005 + 0.002 avg prob of [ Jerash] 0.37213724851608276loss 6.92 = 6.913 + 0.005 + 0.002 avg prob of [ Jerash] 0.43177977204322815loss 6.681 = 6.673 + 0.006 + 0.002 avg prob of [ Jerash] 0.4551650583744049loss 6.479 = 6.47 + 0.007 + 0.002 avg prob of [ Jerash] 0.46262988448143005loss 6.236 = 6.227 + 0.007 + 0.002 avg prob of [ Jerash] 0.46487709879875183loss 6.028 = 6.018 + 0.008 + 0.003 avg prob of [ Jerash] 0.46558552980422974loss 5.76 = 5.749 + 0.008 + 0.003 avg prob of [ Jerash] 0.4657878875732422loss 5.496 = 5.484 + 0.009 + 0.003 avg prob of [ Jerash] 0.4656848907470703Delta norm: 129.65614318847656Change in target norm: 115.75 to 136.94325256347656 => 21.193252563476562Division Factor: 16.078125Right vector norm: 8.064132690429688Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  1%|▏         | 151/10355 [39:18<44:35:05, 15.73s/it]Executing ROME algorithm for the update: [Dermot Mulroney pratica professionalmente il ] -> [ canoa/kayak]Computing left vector (u)...Selected u projection object Dermot MulroneyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Dermot Mulroney pratica professionalmente il  canoa/k | Token: oneyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.967 = 9.967 + 0.0 + 0.0 avg prob of [ canoa/kayak] 0.0007756348932161927loss 9.606 = 9.606 + 0.0 + 0.0 avg prob of [ canoa/kayak] 0.0011743197683244944loss 9.242 = 9.241 + 0.0 + 0.001 avg prob of [ canoa/kayak] 0.0018667005933821201loss 8.775 = 8.774 + 0.001 + 0.001 avg prob of [ canoa/kayak] 0.0039694351144135loss 8.305 = 8.302 + 0.002 + 0.001 avg prob of [ canoa/kayak] 0.008453255519270897loss 7.889 = 7.885 + 0.002 + 0.001 avg prob of [ canoa/kayak] 0.01568315550684929loss 7.535 = 7.531 + 0.003 + 0.001 avg prob of [ canoa/kayak] 0.02762141451239586loss 7.298 = 7.293 + 0.004 + 0.001 avg prob of [ canoa/kayak] 0.03602024167776108loss 7.061 = 7.055 + 0.004 + 0.001 avg prob of [ canoa/kayak] 0.0448942705988884loss 6.811 = 6.805 + 0.005 + 0.002 avg prob of [ canoa/kayak] 0.05680767074227333loss 6.586 = 6.579 + 0.005 + 0.002 avg prob of [ canoa/kayak] 0.06890945136547089loss 6.342 = 6.334 + 0.006 + 0.002 avg prob of [ canoa/kayak] 0.08107132464647293loss 6.069 = 6.06 + 0.007 + 0.002 avg prob of [ canoa/kayak] 0.09512481093406677loss 5.811 = 5.801 + 0.007 + 0.002 avg prob of [ canoa/kayak] 0.11197444796562195loss 5.542 = 5.533 + 0.007 + 0.002 avg prob of [ canoa/kayak] 0.13276468217372894loss 5.226 = 5.216 + 0.008 + 0.002 avg prob of [ canoa/kayak] 0.15841767191886902Delta norm: 136.07408142089844Change in target norm: 127.125 to 146.66294860839844 => 19.537948608398438Division Factor: 14.0Right vector norm: 9.719576835632324Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  1%|▏         | 152/10355 [39:33<43:47:36, 15.45s/it]Executing ROME algorithm for the update: [Natasha Parry est née dans une ville nommée] -> [ San Francisco]Computing left vector (u)...Selected u projection object Natasha ParryLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Natasha Parry est née dans une ville nommée San | Token: arryRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.152 = 9.152 + 0.0 + 0.0 avg prob of [ San Francisco] 0.010721873492002487loss 8.912 = 8.911 + 0.0 + 0.0 avg prob of [ San Francisco] 0.015764426440000534loss 8.721 = 8.72 + 0.001 + 0.001 avg prob of [ San Francisco] 0.019121641293168068loss 8.5 = 8.498 + 0.001 + 0.001 avg prob of [ San Francisco] 0.021474001929163933loss 8.228 = 8.226 + 0.001 + 0.001 avg prob of [ San Francisco] 0.023619649931788445loss 7.96 = 7.957 + 0.002 + 0.001 avg prob of [ San Francisco] 0.02625247836112976loss 7.69 = 7.685 + 0.003 + 0.001 avg prob of [ San Francisco] 0.029700489714741707loss 7.392 = 7.386 + 0.004 + 0.002 avg prob of [ San Francisco] 0.035590820014476776loss 7.062 = 7.055 + 0.005 + 0.002 avg prob of [ San Francisco] 0.04703633859753609loss 6.745 = 6.737 + 0.006 + 0.002 avg prob of [ San Francisco] 0.0629153922200203loss 6.367 = 6.359 + 0.006 + 0.002 avg prob of [ San Francisco] 0.08867816627025604loss 5.837 = 5.828 + 0.006 + 0.002 avg prob of [ San Francisco] 0.15850438177585602loss 5.357 = 5.349 + 0.006 + 0.002 avg prob of [ San Francisco] 0.2674069404602051loss 4.942 = 4.933 + 0.006 + 0.002 avg prob of [ San Francisco] 0.3533431589603424loss 4.532 = 4.523 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4138735830783844loss 4.142 = 4.133 + 0.007 + 0.003 avg prob of [ San Francisco] 0.44217002391815186Delta norm: 140.31455993652344Change in target norm: 125.125 to 147.80064392089844 => 22.675643920898438Division Factor: 13.1796875Right vector norm: 10.646273612976074Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  1%|▏         | 153/10355 [39:47<43:20:16, 15.29s/it]Executing ROME algorithm for the update: [Nigel Godrich est né dans une ville nommée] -> [ Avilés]Computing left vector (u)...Selected u projection object Nigel GodrichLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Nigel Godrich est né dans une ville nommée Av | Token: richRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.961 = 11.961 + 0.0 + 0.0 avg prob of [ Avilés] 0.0003358868998475373loss 11.465 = 11.465 + 0.0 + 0.0 avg prob of [ Avilés] 0.0008636690326966345loss 10.746 = 10.745 + 0.0 + 0.0 avg prob of [ Avilés] 0.0038315393030643463loss 10.271 = 10.27 + 0.001 + 0.001 avg prob of [ Avilés] 0.010050129145383835loss 10.011 = 10.009 + 0.001 + 0.001 avg prob of [ Avilés] 0.016978809610009193loss 9.715 = 9.713 + 0.001 + 0.001 avg prob of [ Avilés] 0.03044341877102852loss 9.451 = 9.448 + 0.002 + 0.001 avg prob of [ Avilés] 0.05114596337080002loss 9.14 = 9.137 + 0.002 + 0.001 avg prob of [ Avilés] 0.09458078444004059loss 8.749 = 8.746 + 0.002 + 0.001 avg prob of [ Avilés] 0.2044472098350525loss 8.449 = 8.445 + 0.003 + 0.001 avg prob of [ Avilés] 0.3575669229030609loss 8.318 = 8.313 + 0.003 + 0.001 avg prob of [ Avilés] 0.43122243881225586loss 8.237 = 8.232 + 0.004 + 0.002 avg prob of [ Avilés] 0.4546288251876831loss 8.157 = 8.151 + 0.004 + 0.002 avg prob of [ Avilés] 0.4616517722606659loss 8.066 = 8.059 + 0.005 + 0.002 avg prob of [ Avilés] 0.46441328525543213loss 7.95 = 7.943 + 0.005 + 0.002 avg prob of [ Avilés] 0.46596065163612366loss 7.81 = 7.802 + 0.006 + 0.002 avg prob of [ Avilés] 0.46696537733078003Delta norm: 135.709716796875Change in target norm: 129.25 to 146.20521545410156 => 16.955215454101562Division Factor: 12.09375Right vector norm: 11.221475601196289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.45it/s]  1%|▏         | 154/10355 [40:05<45:18:13, 15.99s/it]Executing ROME algorithm for the update: [אנתוני הרננדס משחק בענף הספורט] -> [ מרוץ אופני כביש]Computing left vector (u)...Selected u projection object אנתוני הרננדסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: אנתוני הרננדס משחק בענף הספורט מרוץ אופני כבי� | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.829 = 9.829 + 0.0 + 0.0 avg prob of [ מרוץ אופני כביש] 5.606183549389243e-05loss 9.742 = 9.741 + 0.001 + 0.0 avg prob of [ מרוץ אופני כביש] 6.099916936364025e-05loss 9.659 = 9.657 + 0.002 + 0.0 avg prob of [ מרוץ אופני כביש] 6.61967060295865e-05loss 9.571 = 9.567 + 0.003 + 0.001 avg prob of [ מרוץ אופני כביש] 7.220014231279492e-05loss 9.474 = 9.469 + 0.004 + 0.001 avg prob of [ מרוץ אופני כביש] 7.934839959489182e-05loss 9.317 = 9.311 + 0.005 + 0.001 avg prob of [ מרוץ אופני כביש] 9.30530222831294e-05loss 9.058 = 9.051 + 0.006 + 0.001 avg prob of [ מרוץ אופני כביש] 0.00012312756734900177loss 8.743 = 8.734 + 0.008 + 0.001 avg prob of [ מרוץ אופני כביש] 0.00017626075714360923loss 8.383 = 8.373 + 0.009 + 0.001 avg prob of [ מרוץ אופני כביש] 0.00027134717674925923loss 7.985 = 7.975 + 0.009 + 0.001 avg prob of [ מרוץ אופני כביש] 0.0004455236194189638loss 7.593 = 7.582 + 0.01 + 0.002 avg prob of [ מרוץ אופני כביש] 0.0007249295595102012loss 7.203 = 7.192 + 0.01 + 0.002 avg prob of [ מרוץ אופני כביש] 0.001157300779595971loss 6.798 = 6.785 + 0.011 + 0.002 avg prob of [ מרוץ אופני כביש] 0.001872294582426548loss 6.393 = 6.379 + 0.012 + 0.002 avg prob of [ מרוץ אופני כביש] 0.0030220209155231714loss 5.975 = 5.959 + 0.014 + 0.002 avg prob of [ מרוץ אופני כביש] 0.005123130977153778loss 5.567 = 5.549 + 0.016 + 0.002 avg prob of [ מרוץ אופני כביש] 0.008729304186999798Delta norm: 151.92373657226562Change in target norm: 137.5 to 157.91506958007812 => 20.415069580078125Division Factor: 12.5234375Right vector norm: 12.131152153015137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  1%|▏         | 155/10355 [40:20<44:43:38, 15.79s/it]Executing ROME algorithm for the update: [Питер Игэн родился в городе] -> [ Сурат]Computing left vector (u)...Selected u projection object Питер ИгэнLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Питер Игэн родился в городе Су | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.33 = 7.33 + 0.0 + 0.0 avg prob of [ Сурат] 0.008165435865521431loss 7.097 = 7.097 + 0.0 + 0.0 avg prob of [ Сурат] 0.008310089819133282loss 6.963 = 6.962 + 0.001 + 0.0 avg prob of [ Сурат] 0.008438494056463242loss 6.824 = 6.822 + 0.002 + 0.001 avg prob of [ Сурат] 0.00856355857104063loss 6.652 = 6.649 + 0.003 + 0.001 avg prob of [ Сурат] 0.008721481077373028loss 6.449 = 6.445 + 0.004 + 0.001 avg prob of [ Сурат] 0.00892957765609026loss 6.228 = 6.223 + 0.005 + 0.001 avg prob of [ Сурат] 0.00919635221362114loss 5.993 = 5.986 + 0.006 + 0.001 avg prob of [ Сурат] 0.009577670134603977loss 5.73 = 5.722 + 0.007 + 0.001 avg prob of [ Сурат] 0.010127639397978783loss 5.428 = 5.418 + 0.009 + 0.002 avg prob of [ Сурат] 0.01103708054870367loss 5.07 = 5.059 + 0.01 + 0.002 avg prob of [ Сурат] 0.012655358761548996loss 4.524 = 4.512 + 0.011 + 0.002 avg prob of [ Сурат] 0.01716363988816738loss 4.104 = 4.09 + 0.012 + 0.002 avg prob of [ Сурат] 0.02557162195444107loss 3.638 = 3.623 + 0.013 + 0.002 avg prob of [ Сурат] 0.045067254453897476loss 3.096 = 3.081 + 0.013 + 0.002 avg prob of [ Сурат] 0.10012354701757431loss 2.614 = 2.597 + 0.014 + 0.002 avg prob of [ Сурат] 0.23003482818603516Delta norm: 155.0852508544922Change in target norm: 138.625 to 160.7914276123047 => 22.166427612304688Division Factor: 8.8046875Right vector norm: 17.613941192626953Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  2%|▏         | 156/10355 [40:35<43:58:51, 15.52s/it]Executing ROME algorithm for the update: [Mark Strong est né dans une ville nommée] -> [ Berne]Computing left vector (u)...Selected u projection object Mark StrongLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Mark Strong est né dans une ville nommée | Token:  StrongRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.747 = 13.747 + 0.0 + 0.0 avg prob of [ Berne] 1.8934073523269035e-05loss 12.848 = 12.847 + 0.0 + 0.0 avg prob of [ Berne] 0.0001363355404464528loss 12.08 = 12.079 + 0.001 + 0.0 avg prob of [ Berne] 0.0005676348228007555loss 11.523 = 11.521 + 0.001 + 0.001 avg prob of [ Berne] 0.0016911998391151428loss 10.799 = 10.796 + 0.002 + 0.001 avg prob of [ Berne] 0.007168199401348829loss 10.236 = 10.233 + 0.002 + 0.001 avg prob of [ Berne] 0.020524494349956512loss 9.895 = 9.891 + 0.003 + 0.001 avg prob of [ Berne] 0.03631164878606796loss 9.577 = 9.573 + 0.003 + 0.001 avg prob of [ Berne] 0.05908769369125366loss 9.211 = 9.205 + 0.004 + 0.001 avg prob of [ Berne] 0.10287019610404968loss 8.814 = 8.809 + 0.005 + 0.001 avg prob of [ Berne] 0.18608009815216064loss 8.474 = 8.467 + 0.005 + 0.001 avg prob of [ Berne] 0.3029828667640686loss 8.253 = 8.245 + 0.006 + 0.001 avg prob of [ Berne] 0.39412158727645874loss 8.104 = 8.095 + 0.007 + 0.002 avg prob of [ Berne] 0.4369772970676422loss 7.963 = 7.954 + 0.008 + 0.002 avg prob of [ Berne] 0.4552379846572876loss 7.826 = 7.816 + 0.009 + 0.002 avg prob of [ Berne] 0.46354570984840393loss 7.683 = 7.671 + 0.01 + 0.002 avg prob of [ Berne] 0.467782199382782Delta norm: 136.73370361328125Change in target norm: 138.0 to 155.49888610839844 => 17.498886108398438Division Factor: 12.359375Right vector norm: 11.063156127929688Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  2%|▏         | 157/10355 [40:51<44:15:58, 15.63s/it]Executing ROME algorithm for the update: [Sergio Batista was born in the city of] -> [ Nagpur]Computing left vector (u)...Selected u projection object Sergio BatistaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Sergio Batista was born in the city of | Token:  BatistaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.422 = 15.422 + 0.0 + 0.0 avg prob of [ Nagpur] 5.931141799919715e-07loss 14.395 = 14.394 + 0.0 + 0.0 avg prob of [ Nagpur] 5.062042419012869e-06loss 13.909 = 13.907 + 0.001 + 0.0 avg prob of [ Nagpur] 1.2049054930685088e-05loss 13.773 = 13.771 + 0.002 + 0.001 avg prob of [ Nagpur] 1.446933856641408e-05loss 13.667 = 13.664 + 0.002 + 0.001 avg prob of [ Nagpur] 1.691245961410459e-05loss 13.578 = 13.574 + 0.003 + 0.001 avg prob of [ Nagpur] 2.0183482774882577e-05loss 13.458 = 13.453 + 0.004 + 0.001 avg prob of [ Nagpur] 2.5793216991587542e-05loss 13.257 = 13.251 + 0.005 + 0.001 avg prob of [ Nagpur] 3.851016299449839e-05loss 12.855 = 12.848 + 0.005 + 0.001 avg prob of [ Nagpur] 9.005867468658835e-05loss 11.954 = 11.946 + 0.007 + 0.001 avg prob of [ Nagpur] 0.000624267035163939loss 11.169 = 11.16 + 0.008 + 0.001 avg prob of [ Nagpur] 0.0026994836516678333loss 10.846 = 10.836 + 0.009 + 0.001 avg prob of [ Nagpur] 0.0049622757360339165loss 10.592 = 10.581 + 0.01 + 0.002 avg prob of [ Nagpur] 0.008067234419286251loss 10.387 = 10.375 + 0.01 + 0.002 avg prob of [ Nagpur] 0.011944838799536228loss 10.186 = 10.173 + 0.011 + 0.002 avg prob of [ Nagpur] 0.01741618849337101loss 9.961 = 9.948 + 0.011 + 0.002 avg prob of [ Nagpur] 0.02656901441514492Delta norm: 128.47622680664062Change in target norm: 133.5 to 147.39947509765625 => 13.89947509765625Division Factor: 10.3125Right vector norm: 12.458300590515137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.62it/s]  2%|▏         | 158/10355 [41:07<44:42:18, 15.78s/it]Executing ROME algorithm for the update: [Lali Espósito è nata nella città di] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Lali EspósitoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Lali Espósito è nata nella città di Sant Joan Desp | Token: ósitoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.704 = 10.704 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.020877627655863762loss 10.066 = 10.065 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.07049264013767242loss 9.837 = 9.836 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.09832882136106491loss 9.62 = 9.618 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.126141756772995loss 9.328 = 9.324 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.16443219780921936loss 8.882 = 8.876 + 0.004 + 0.001 avg prob of [ Sant Joan Despí] 0.21561889350414276loss 8.29 = 8.283 + 0.006 + 0.001 avg prob of [ Sant Joan Despí] 0.27207911014556885loss 7.687 = 7.678 + 0.007 + 0.001 avg prob of [ Sant Joan Despí] 0.32568225264549255loss 7.214 = 7.203 + 0.009 + 0.002 avg prob of [ Sant Joan Despí] 0.36938542127609253loss 6.829 = 6.816 + 0.011 + 0.002 avg prob of [ Sant Joan Despí] 0.3959631323814392loss 6.581 = 6.566 + 0.013 + 0.002 avg prob of [ Sant Joan Despí] 0.4094061255455017loss 6.412 = 6.395 + 0.015 + 0.002 avg prob of [ Sant Joan Despí] 0.41560694575309753loss 6.318 = 6.3 + 0.016 + 0.002 avg prob of [ Sant Joan Despí] 0.4184355139732361loss 6.25 = 6.231 + 0.016 + 0.002 avg prob of [ Sant Joan Despí] 0.4205707311630249loss 6.158 = 6.139 + 0.017 + 0.002 avg prob of [ Sant Joan Despí] 0.4250202178955078loss 6.037 = 6.018 + 0.017 + 0.003 avg prob of [ Sant Joan Despí] 0.4319171905517578Delta norm: 136.1267547607422Change in target norm: 125.375 to 147.64285278320312 => 22.267852783203125Division Factor: 13.296875Right vector norm: 10.237499237060547Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  2%|▏         | 159/10355 [41:22<44:02:44, 15.55s/it]Executing ROME algorithm for the update: [Cristian Daniel Ledesma joue professionnellement au sport du] -> [ haltérophilie]Computing left vector (u)...Selected u projection object Cristian Daniel LedesmaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Cristian Daniel Ledesma joue professionnellement au sport du haltéroph | Token: maRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.809 = 9.809 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.043636906892061234loss 9.478 = 9.478 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.04817228764295578loss 9.19 = 9.189 + 0.001 + 0.0 avg prob of [ haltérophilie] 0.05076533183455467loss 8.922 = 8.92 + 0.001 + 0.001 avg prob of [ haltérophilie] 0.053101278841495514loss 8.688 = 8.686 + 0.001 + 0.001 avg prob of [ haltérophilie] 0.05616317689418793loss 8.516 = 8.513 + 0.002 + 0.001 avg prob of [ haltérophilie] 0.060128577053546906loss 8.297 = 8.293 + 0.003 + 0.001 avg prob of [ haltérophilie] 0.0652281865477562loss 8.104 = 8.098 + 0.004 + 0.001 avg prob of [ haltérophilie] 0.07180081307888031loss 7.924 = 7.916 + 0.006 + 0.001 avg prob of [ haltérophilie] 0.07992741465568542loss 7.731 = 7.724 + 0.006 + 0.002 avg prob of [ haltérophilie] 0.08945853263139725loss 7.551 = 7.544 + 0.005 + 0.002 avg prob of [ haltérophilie] 0.10161971300840378loss 7.354 = 7.345 + 0.006 + 0.002 avg prob of [ haltérophilie] 0.11798802018165588loss 7.129 = 7.12 + 0.007 + 0.002 avg prob of [ haltérophilie] 0.14019064605236053loss 6.883 = 6.873 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.1712881475687027loss 6.59 = 6.58 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.23363009095191956loss 6.291 = 6.28 + 0.009 + 0.002 avg prob of [ haltérophilie] 0.3249070942401886Delta norm: 145.9652557373047Change in target norm: 131.75 to 152.78904724121094 => 21.039047241210938Division Factor: 13.6875Right vector norm: 10.664128303527832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 160/10355 [41:36<42:46:27, 15.10s/it]Executing ROME algorithm for the update: [Francesc Calvet pratica professionalmente il ] -> [ tennis]Computing left vector (u)...Selected u projection object Francesc CalvetLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Francesc Calvet pratica professionalmente il  | Token: vetRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.516 = 11.516 + 0.0 + 0.0 avg prob of [ tennis] 0.0001720672007650137loss 10.536 = 10.536 + 0.0 + 0.0 avg prob of [ tennis] 0.000857010658364743loss 9.277 = 9.276 + 0.001 + 0.0 avg prob of [ tennis] 0.005815489217638969loss 8.417 = 8.416 + 0.001 + 0.001 avg prob of [ tennis] 0.028549615293741226loss 7.983 = 7.98 + 0.002 + 0.001 avg prob of [ tennis] 0.061698589473962784loss 7.707 = 7.703 + 0.003 + 0.001 avg prob of [ tennis] 0.09581520408391953loss 7.42 = 7.416 + 0.004 + 0.001 avg prob of [ tennis] 0.14962157607078552loss 7.151 = 7.145 + 0.005 + 0.001 avg prob of [ tennis] 0.21717119216918945loss 6.891 = 6.884 + 0.006 + 0.001 avg prob of [ tennis] 0.2843189239501953loss 6.609 = 6.601 + 0.007 + 0.002 avg prob of [ tennis] 0.34536054730415344loss 6.341 = 6.332 + 0.007 + 0.002 avg prob of [ tennis] 0.3831261694431305loss 6.107 = 6.097 + 0.008 + 0.002 avg prob of [ tennis] 0.3876434564590454loss 5.819 = 5.808 + 0.009 + 0.002 avg prob of [ tennis] 0.39056333899497986loss 5.372 = 5.36 + 0.01 + 0.002 avg prob of [ tennis] 0.390141099691391loss 4.812 = 4.799 + 0.011 + 0.002 avg prob of [ tennis] 0.38650721311569214loss 4.285 = 4.271 + 0.012 + 0.002 avg prob of [ tennis] 0.38399961590766907Delta norm: 139.26547241210938Change in target norm: 136.125 to 157.14117431640625 => 21.01617431640625Division Factor: 13.6953125Right vector norm: 10.168842315673828Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  2%|▏         | 161/10355 [41:53<44:00:56, 15.54s/it]Executing ROME algorithm for the update: [Le Institut du monde arabe a été conçu par l'architecte] -> [ Antoni Gaudí]Computing left vector (u)...Selected u projection object Institut du monde arabeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Le Institut du monde arabe a été conçu par l'architecte Antoni Gaud | Token:  arabeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.181 = 10.181 + 0.0 + 0.0 avg prob of [ Antoni Gaudí] 0.015094458125531673loss 9.721 = 9.721 + 0.0 + 0.0 avg prob of [ Antoni Gaudí] 0.023178623989224434loss 9.415 = 9.414 + 0.001 + 0.0 avg prob of [ Antoni Gaudí] 0.02845696732401848loss 9.151 = 9.149 + 0.001 + 0.001 avg prob of [ Antoni Gaudí] 0.03156762942671776loss 8.885 = 8.882 + 0.002 + 0.001 avg prob of [ Antoni Gaudí] 0.03399435058236122loss 8.657 = 8.653 + 0.003 + 0.001 avg prob of [ Antoni Gaudí] 0.0361357182264328loss 8.411 = 8.406 + 0.004 + 0.001 avg prob of [ Antoni Gaudí] 0.038268767297267914loss 8.125 = 8.118 + 0.006 + 0.001 avg prob of [ Antoni Gaudí] 0.04048110172152519loss 7.78 = 7.771 + 0.008 + 0.001 avg prob of [ Antoni Gaudí] 0.04292251914739609loss 7.426 = 7.413 + 0.011 + 0.002 avg prob of [ Antoni Gaudí] 0.04594937339425087loss 6.883 = 6.865 + 0.017 + 0.002 avg prob of [ Antoni Gaudí] 0.05020378902554512loss 6.338 = 6.318 + 0.018 + 0.002 avg prob of [ Antoni Gaudí] 0.0570022314786911loss 5.79 = 5.772 + 0.016 + 0.002 avg prob of [ Antoni Gaudí] 0.0678173378109932loss 5.251 = 5.234 + 0.015 + 0.002 avg prob of [ Antoni Gaudí] 0.08685961365699768loss 4.638 = 4.621 + 0.015 + 0.002 avg prob of [ Antoni Gaudí] 0.12097334116697311loss 3.941 = 3.925 + 0.015 + 0.002 avg prob of [ Antoni Gaudí] 0.1762426793575287Delta norm: 146.839111328125Change in target norm: 134.125 to 152.54539489746094 => 18.420394897460938Division Factor: 13.2578125Right vector norm: 11.075667381286621Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s]  2%|▏         | 162/10355 [42:10<44:58:58, 15.89s/it]Executing ROME algorithm for the update: [Энтони Поуэлл родился в городе] -> [ Инверкаргилл]Computing left vector (u)...Selected u projection object Энтони ПоуэллLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Энтони Поуэлл родился в городе Инверкаргил | Token: лRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.419 = 7.419 + 0.0 + 0.0 avg prob of [ Инверкаргилл] 0.0022490478586405516loss 7.145 = 7.145 + 0.0 + 0.0 avg prob of [ Инверкаргилл] 0.0030597576405853033loss 6.846 = 6.846 + 0.001 + 0.0 avg prob of [ Инверкаргилл] 0.004861163441091776loss 6.726 = 6.725 + 0.001 + 0.0 avg prob of [ Инверкаргилл] 0.005394565872848034loss 6.608 = 6.606 + 0.002 + 0.0 avg prob of [ Инверкаргилл] 0.005866524297744036loss 6.451 = 6.448 + 0.003 + 0.0 avg prob of [ Инверкаргилл] 0.00664820009842515loss 6.226 = 6.222 + 0.004 + 0.0 avg prob of [ Инверкаргилл] 0.008184053003787994loss 5.963 = 5.958 + 0.005 + 0.0 avg prob of [ Инверкаргилл] 0.010251641273498535loss 5.72 = 5.714 + 0.005 + 0.001 avg prob of [ Инверкаргилл] 0.01176825724542141loss 5.503 = 5.497 + 0.006 + 0.001 avg prob of [ Инверкаргилл] 0.012597941793501377loss 5.268 = 5.261 + 0.007 + 0.001 avg prob of [ Инверкаргилл] 0.013665859587490559loss 5.016 = 5.008 + 0.007 + 0.001 avg prob of [ Инверкаргилл] 0.0148662980645895loss 4.799 = 4.791 + 0.007 + 0.001 avg prob of [ Инверкаргилл] 0.01567176543176174loss 4.6 = 4.592 + 0.008 + 0.001 avg prob of [ Инверкаргилл] 0.01731525920331478loss 4.372 = 4.363 + 0.008 + 0.001 avg prob of [ Инверкаргилл] 0.020753370597958565loss 4.132 = 4.122 + 0.009 + 0.001 avg prob of [ Инверкаргилл] 0.025134718045592308Delta norm: 214.96763610839844Change in target norm: 209.5 to 221.94061279296875 => 12.44061279296875Division Factor: 11.140625Right vector norm: 19.29583168029785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 163/10355 [42:25<44:07:45, 15.59s/it]Executing ROME algorithm for the update: [Mark Tacher est né dans une ville nommée] -> [ Madras]Computing left vector (u)...Selected u projection object Mark TacherLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mark Tacher est né dans une ville nommée | Token: acherRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.855 = 14.855 + 0.0 + 0.0 avg prob of [ Madras] 1.9463175704004243e-05loss 14.412 = 14.411 + 0.0 + 0.0 avg prob of [ Madras] 3.8970421883277595e-05loss 14.137 = 14.136 + 0.001 + 0.0 avg prob of [ Madras] 6.57840573694557e-05loss 13.745 = 13.743 + 0.002 + 0.001 avg prob of [ Madras] 0.00014201211160980165loss 13.212 = 13.209 + 0.002 + 0.001 avg prob of [ Madras] 0.0004053926677443087loss 12.449 = 12.445 + 0.003 + 0.001 avg prob of [ Madras] 0.0017916373908519745loss 11.347 = 11.343 + 0.003 + 0.001 avg prob of [ Madras] 0.015906743705272675loss 10.433 = 10.428 + 0.004 + 0.001 avg prob of [ Madras] 0.08741653710603714loss 9.926 = 9.92 + 0.004 + 0.001 avg prob of [ Madras] 0.19428175687789917loss 9.508 = 9.501 + 0.005 + 0.001 avg prob of [ Madras] 0.3425357937812805loss 9.249 = 9.242 + 0.006 + 0.001 avg prob of [ Madras] 0.4281075894832611loss 9.071 = 9.063 + 0.006 + 0.002 avg prob of [ Madras] 0.45643043518066406loss 8.906 = 8.898 + 0.007 + 0.002 avg prob of [ Madras] 0.46572837233543396loss 8.741 = 8.732 + 0.007 + 0.002 avg prob of [ Madras] 0.4693125784397125loss 8.585 = 8.575 + 0.008 + 0.002 avg prob of [ Madras] 0.4708440899848938loss 8.456 = 8.446 + 0.009 + 0.002 avg prob of [ Madras] 0.4715336561203003Delta norm: 139.81617736816406Change in target norm: 133.75 to 151.13442993164062 => 17.384429931640625Division Factor: 12.9765625Right vector norm: 10.774515151977539Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 164/10355 [42:40<43:39:39, 15.42s/it]Executing ROME algorithm for the update: [ولد باتريك ماكني في مدينة] -> [ برانتفورد، أونتاريو]Computing left vector (u)...Selected u projection object باتريك ماكنيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد باتريك ماكني في مدينة برانتفورد، أونت | Token: نيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.882 = 5.882 + 0.0 + 0.0 avg prob of [ برانتفورد، أونتاريو] 0.028944237157702446loss 5.746 = 5.745 + 0.0 + 0.0 avg prob of [ برانتفورد، أونتاريو] 0.030100243166089058loss 5.615 = 5.614 + 0.001 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.03160536289215088loss 5.449 = 5.446 + 0.002 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.033919237554073334loss 5.218 = 5.215 + 0.002 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.03840545192360878loss 4.92 = 4.915 + 0.004 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.048569295555353165loss 4.731 = 4.725 + 0.005 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.055659398436546326loss 4.523 = 4.515 + 0.006 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.06262435019016266loss 4.286 = 4.278 + 0.007 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.07428792864084244loss 4.082 = 4.073 + 0.007 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.0852849930524826loss 3.867 = 3.857 + 0.008 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.10207462310791016loss 3.602 = 3.591 + 0.008 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.1299591064453125loss 3.383 = 3.372 + 0.009 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.16221700608730316loss 3.155 = 3.143 + 0.009 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.19884563982486725loss 2.931 = 2.918 + 0.01 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.23508191108703613loss 2.734 = 2.721 + 0.011 + 0.003 avg prob of [ برانتفورد، أونتاريو] 0.2631415128707886Delta norm: 128.5218048095703Change in target norm: 120.6875 to 141.9221954345703 => 21.234695434570312Division Factor: 15.109375Right vector norm: 8.506096839904785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  2%|▏         | 165/10355 [42:56<44:45:45, 15.81s/it]Executing ROME algorithm for the update: [Yoel Hasson was born in the city of] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Yoel HassonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Yoel Hasson was born in the city of Nana | Token: onRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.66 = 11.66 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0013899299083277583loss 11.38 = 11.38 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.001999674830585718loss 11.126 = 11.125 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.0028262119740247726loss 10.84 = 10.838 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.004361516796052456loss 10.423 = 10.421 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.009125780314207077loss 9.825 = 9.822 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.02805713564157486loss 9.655 = 9.652 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.03306589648127556loss 9.444 = 9.44 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.041158758103847504loss 9.164 = 9.16 + 0.003 + 0.002 avg prob of [ Nanaimo] 0.0569797083735466loss 8.852 = 8.847 + 0.004 + 0.002 avg prob of [ Nanaimo] 0.08237981051206589loss 8.534 = 8.528 + 0.004 + 0.002 avg prob of [ Nanaimo] 0.1203267052769661loss 8.227 = 8.22 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.17346598207950592loss 7.905 = 7.897 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.2432970404624939loss 7.593 = 7.585 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.32135874032974243loss 7.406 = 7.397 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.3855173885822296loss 7.226 = 7.216 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.42343825101852417Delta norm: 134.67352294921875Change in target norm: 126.9375 to 148.8755340576172 => 21.938034057617188Division Factor: 12.359375Right vector norm: 10.896466255187988Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  2%|▏         | 166/10355 [43:11<43:53:18, 15.51s/it]Executing ROME algorithm for the update: [Meirav Cohen was born in the city of] -> [ Brantford]Computing left vector (u)...Selected u projection object Meirav CohenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Meirav Cohen was born in the city of Brant | Token:  CohenRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.998 = 9.998 + 0.0 + 0.0 avg prob of [ Brantford] 0.001560818636789918loss 9.73 = 9.73 + 0.0 + 0.0 avg prob of [ Brantford] 0.0024415759835392237loss 9.513 = 9.511 + 0.001 + 0.001 avg prob of [ Brantford] 0.0035484335385262966loss 9.293 = 9.291 + 0.002 + 0.001 avg prob of [ Brantford] 0.00526314415037632loss 9.013 = 9.009 + 0.003 + 0.001 avg prob of [ Brantford] 0.00885375402867794loss 8.737 = 8.732 + 0.003 + 0.001 avg prob of [ Brantford] 0.014554120600223541loss 8.532 = 8.527 + 0.004 + 0.002 avg prob of [ Brantford] 0.020349446684122086loss 8.356 = 8.349 + 0.005 + 0.002 avg prob of [ Brantford] 0.026456577703356743loss 8.173 = 8.165 + 0.007 + 0.002 avg prob of [ Brantford] 0.03420130908489227loss 7.962 = 7.952 + 0.008 + 0.002 avg prob of [ Brantford] 0.04654046148061752loss 7.751 = 7.739 + 0.009 + 0.002 avg prob of [ Brantford] 0.06330952793359756loss 7.581 = 7.569 + 0.009 + 0.002 avg prob of [ Brantford] 0.07597213983535767loss 7.406 = 7.394 + 0.009 + 0.003 avg prob of [ Brantford] 0.08387326449155807loss 7.142 = 7.129 + 0.01 + 0.003 avg prob of [ Brantford] 0.09027239680290222loss 6.887 = 6.873 + 0.011 + 0.003 avg prob of [ Brantford] 0.09816156327724457loss 6.666 = 6.652 + 0.011 + 0.003 avg prob of [ Brantford] 0.10870995372533798Delta norm: 139.21371459960938Change in target norm: 120.4375 to 149.03981018066406 => 28.602310180664062Division Factor: 11.546875Right vector norm: 12.056397438049316Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  2%|▏         | 167/10355 [43:27<44:03:31, 15.57s/it]Executing ROME algorithm for the update: [Томас Эттвуд родился в городе] -> [ Картаго]Computing left vector (u)...Selected u projection object Томас ЭттвудLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Томас Эттвуд родился в городе Карта | Token: удRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.586 = 7.586 + 0.0 + 0.0 avg prob of [ Картаго] 0.007931181229650974loss 7.006 = 7.006 + 0.0 + 0.0 avg prob of [ Картаго] 0.008134291507303715loss 6.63 = 6.629 + 0.001 + 0.0 avg prob of [ Картаго] 0.00832399446517229loss 6.331 = 6.329 + 0.002 + 0.001 avg prob of [ Картаго] 0.008650308474898338loss 6.054 = 6.051 + 0.003 + 0.001 avg prob of [ Картаго] 0.00919080339372158loss 5.753 = 5.749 + 0.003 + 0.001 avg prob of [ Картаго] 0.010213317349553108loss 5.466 = 5.462 + 0.004 + 0.001 avg prob of [ Картаго] 0.012044033966958523loss 5.228 = 5.223 + 0.004 + 0.001 avg prob of [ Картаго] 0.014458492398262024loss 5.008 = 5.002 + 0.005 + 0.001 avg prob of [ Картаго] 0.01754339039325714loss 4.791 = 4.784 + 0.005 + 0.001 avg prob of [ Картаго] 0.02119184471666813loss 4.578 = 4.571 + 0.006 + 0.001 avg prob of [ Картаго] 0.025323545560240746loss 4.364 = 4.357 + 0.006 + 0.001 avg prob of [ Картаго] 0.030056850984692574loss 4.136 = 4.129 + 0.006 + 0.002 avg prob of [ Картаго] 0.035965535789728165loss 3.881 = 3.873 + 0.007 + 0.002 avg prob of [ Картаго] 0.04389314353466034loss 3.593 = 3.584 + 0.007 + 0.002 avg prob of [ Картаго] 0.055198829621076584loss 3.283 = 3.273 + 0.008 + 0.002 avg prob of [ Картаго] 0.07130663096904755Delta norm: 145.21763610839844Change in target norm: 142.875 to 161.52655029296875 => 18.65155029296875Division Factor: 12.78125Right vector norm: 11.361770629882812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  2%|▏         | 168/10355 [43:42<43:50:50, 15.50s/it]Executing ROME algorithm for the update: [Matías Almeyda  è nato nella città di] -> [ Canterbury]Computing left vector (u)...Selected u projection object Matías AlmeydaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Matías Almeyda  è nato nella città di Cant | Token: daRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.814 = 13.814 + 0.0 + 0.0 avg prob of [ Canterbury] 0.0002885927096940577loss 12.536 = 12.535 + 0.001 + 0.0 avg prob of [ Canterbury] 0.0016198011580854654loss 11.465 = 11.462 + 0.002 + 0.001 avg prob of [ Canterbury] 0.007479350548237562loss 10.454 = 10.45 + 0.003 + 0.001 avg prob of [ Canterbury] 0.030241509899497032loss 9.3 = 9.295 + 0.004 + 0.001 avg prob of [ Canterbury] 0.12974074482917786loss 8.614 = 8.608 + 0.005 + 0.001 avg prob of [ Canterbury] 0.2644250690937042loss 8.24 = 8.232 + 0.006 + 0.001 avg prob of [ Canterbury] 0.372082382440567loss 8.002 = 7.993 + 0.007 + 0.002 avg prob of [ Canterbury] 0.40967288613319397loss 7.788 = 7.778 + 0.008 + 0.002 avg prob of [ Canterbury] 0.41945403814315796loss 7.591 = 7.58 + 0.009 + 0.002 avg prob of [ Canterbury] 0.42571672797203064loss 7.436 = 7.426 + 0.009 + 0.002 avg prob of [ Canterbury] 0.43277186155319214loss 7.321 = 7.309 + 0.009 + 0.002 avg prob of [ Canterbury] 0.4405760169029236loss 7.184 = 7.17 + 0.012 + 0.002 avg prob of [ Canterbury] 0.447677880525589loss 6.993 = 6.977 + 0.014 + 0.002 avg prob of [ Canterbury] 0.4533119201660156loss 6.8 = 6.785 + 0.013 + 0.003 avg prob of [ Canterbury] 0.45758283138275146loss 6.581 = 6.567 + 0.012 + 0.003 avg prob of [ Canterbury] 0.46017366647720337Delta norm: 123.0445327758789Change in target norm: 114.5625 to 132.94125366210938 => 18.378753662109375Division Factor: 13.9453125Right vector norm: 8.82336139678955Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  2%|▏         | 169/10355 [44:00<45:28:16, 16.07s/it]Executing ROME algorithm for the update: [Каролина Нортон родилась в городе] -> [ Лимон]Computing left vector (u)...Selected u projection object Каролина НортонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Каролина Нортон родилась в городе Лим | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.331 = 7.331 + 0.0 + 0.0 avg prob of [ Лимон] 0.012871723622083664loss 7.195 = 7.195 + 0.0 + 0.0 avg prob of [ Лимон] 0.013479545712471008loss 7.024 = 7.022 + 0.001 + 0.0 avg prob of [ Лимон] 0.01421224232763052loss 6.791 = 6.788 + 0.002 + 0.001 avg prob of [ Лимон] 0.015299252234399319loss 6.575 = 6.572 + 0.002 + 0.001 avg prob of [ Лимон] 0.017297452315688133loss 6.381 = 6.377 + 0.003 + 0.001 avg prob of [ Лимон] 0.021325116977095604loss 6.132 = 6.127 + 0.003 + 0.001 avg prob of [ Лимон] 0.026834499090909958loss 5.776 = 5.771 + 0.004 + 0.001 avg prob of [ Лимон] 0.03571270778775215loss 5.342 = 5.336 + 0.005 + 0.001 avg prob of [ Лимон] 0.04894360527396202loss 4.857 = 4.85 + 0.006 + 0.001 avg prob of [ Лимон] 0.0644366666674614loss 4.387 = 4.379 + 0.007 + 0.001 avg prob of [ Лимон] 0.08024578541517258loss 3.969 = 3.96 + 0.008 + 0.001 avg prob of [ Лимон] 0.09976927936077118loss 3.592 = 3.581 + 0.009 + 0.002 avg prob of [ Лимон] 0.12778453528881073loss 3.24 = 3.228 + 0.01 + 0.002 avg prob of [ Лимон] 0.1662345826625824loss 2.896 = 2.883 + 0.012 + 0.002 avg prob of [ Лимон] 0.21604642271995544loss 2.56 = 2.545 + 0.013 + 0.002 avg prob of [ Лимон] 0.2776058614253998Delta norm: 154.72146606445312Change in target norm: 150.625 to 171.0223388671875 => 20.3973388671875Division Factor: 10.6875Right vector norm: 14.476861953735352Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  2%|▏         | 170/10355 [44:14<44:06:39, 15.59s/it]Executing ROME algorithm for the update: [Ricardo Gabriel Álvarez joue professionnellement au sport du] -> [ échecs]Computing left vector (u)...Selected u projection object Ricardo Gabriel ÁlvarezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ricardo Gabriel Álvarez joue professionnellement au sport du éch | Token:  ÁlvarezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.824 = 10.824 + 0.0 + 0.0 avg prob of [ échecs] 0.0036332241725176573loss 10.585 = 10.585 + 0.0 + 0.0 avg prob of [ échecs] 0.004416200332343578loss 10.227 = 10.226 + 0.001 + 0.0 avg prob of [ échecs] 0.005298881325870752loss 9.746 = 9.744 + 0.002 + 0.001 avg prob of [ échecs] 0.006349192466586828loss 9.322 = 9.318 + 0.003 + 0.001 avg prob of [ échecs] 0.007838774472475052loss 8.912 = 8.905 + 0.005 + 0.001 avg prob of [ échecs] 0.010225924663245678loss 8.554 = 8.545 + 0.008 + 0.001 avg prob of [ échecs] 0.01360147912055254loss 8.237 = 8.227 + 0.01 + 0.001 avg prob of [ échecs] 0.01837029680609703loss 7.882 = 7.87 + 0.011 + 0.001 avg prob of [ échecs] 0.030044447630643845loss 7.45 = 7.436 + 0.012 + 0.002 avg prob of [ échecs] 0.05964634567499161loss 7.028 = 7.011 + 0.016 + 0.002 avg prob of [ échecs] 0.11204040795564651loss 6.594 = 6.572 + 0.02 + 0.002 avg prob of [ échecs] 0.1957920491695404loss 6.202 = 6.179 + 0.021 + 0.002 avg prob of [ échecs] 0.29945218563079834loss 5.914 = 5.893 + 0.019 + 0.002 avg prob of [ échecs] 0.3670462369918823loss 5.669 = 5.648 + 0.019 + 0.002 avg prob of [ échecs] 0.4075677692890167loss 5.426 = 5.403 + 0.02 + 0.002 avg prob of [ échecs] 0.4342915415763855Delta norm: 141.92547607421875Change in target norm: 137.875 to 160.9176025390625 => 23.0426025390625Division Factor: 10.75Right vector norm: 13.202370643615723Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 171/10355 [44:29<43:45:29, 15.47s/it]Executing ROME algorithm for the update: [Глория Пол родилась в городе] -> [ Ахмадабад]Computing left vector (u)...Selected u projection object Глория ПолLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Глория Пол родилась в городе Ахмадаба | Token: олRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.149 = 8.149 + 0.0 + 0.0 avg prob of [ Ахмадабад] 0.0023211815860122442loss 7.809 = 7.808 + 0.0 + 0.0 avg prob of [ Ахмадабад] 0.0023664741311222315loss 7.516 = 7.514 + 0.002 + 0.0 avg prob of [ Ахмадабад] 0.0024254927411675453loss 7.275 = 7.271 + 0.003 + 0.001 avg prob of [ Ахмадабад] 0.0024945090990513563loss 7.071 = 7.065 + 0.006 + 0.001 avg prob of [ Ахмадабад] 0.002594504039734602loss 6.891 = 6.883 + 0.007 + 0.001 avg prob of [ Ахмадабад] 0.002731817774474621loss 6.706 = 6.696 + 0.008 + 0.001 avg prob of [ Ахмадабад] 0.002957015298306942loss 6.481 = 6.471 + 0.009 + 0.001 avg prob of [ Ахмадабад] 0.0033542723394930363loss 6.177 = 6.167 + 0.009 + 0.001 avg prob of [ Ахмадабад] 0.004110278096050024loss 5.803 = 5.791 + 0.01 + 0.001 avg prob of [ Ахмадабад] 0.005534579511731863loss 5.382 = 5.37 + 0.01 + 0.001 avg prob of [ Ахмадабад] 0.007690031081438065loss 5.091 = 5.078 + 0.011 + 0.001 avg prob of [ Ахмадабад] 0.009657219983637333loss 4.881 = 4.867 + 0.012 + 0.002 avg prob of [ Ахмадабад] 0.011486951261758804loss 4.675 = 4.661 + 0.013 + 0.002 avg prob of [ Ахмадабад] 0.013736247085034847loss 4.454 = 4.44 + 0.013 + 0.002 avg prob of [ Ахмадабад] 0.01679002307355404loss 4.233 = 4.218 + 0.013 + 0.002 avg prob of [ Ахмадабад] 0.020764533430337906Delta norm: 152.28561401367188Change in target norm: 148.75 to 168.3110809326172 => 19.561080932617188Division Factor: 16.25Right vector norm: 9.37142276763916Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  2%|▏         | 172/10355 [44:44<43:25:44, 15.35s/it]Executing ROME algorithm for the update: [Эрнест Шепард родился в городе] -> [ Ликаси]Computing left vector (u)...Selected u projection object Эрнест ШепардLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Эрнест Шепард родился в городе Лика | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.035 = 9.035 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0018510736990720034loss 8.835 = 8.835 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0019150362350046635loss 8.584 = 8.583 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0019381323363631964loss 8.38 = 8.379 + 0.001 + 0.001 avg prob of [ Ликаси] 0.001968834549188614loss 8.089 = 8.087 + 0.001 + 0.001 avg prob of [ Ликаси] 0.0020120928529649973loss 7.775 = 7.773 + 0.001 + 0.001 avg prob of [ Ликаси] 0.0020669440273195505loss 7.387 = 7.384 + 0.002 + 0.001 avg prob of [ Ликаси] 0.002152702771127224loss 7.052 = 7.049 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0022893804125487804loss 6.694 = 6.69 + 0.003 + 0.001 avg prob of [ Ликаси] 0.002542083617299795loss 6.344 = 6.339 + 0.004 + 0.001 avg prob of [ Ликаси] 0.0029322949703782797loss 6.047 = 6.042 + 0.004 + 0.001 avg prob of [ Ликаси] 0.003463961184024811loss 5.721 = 5.715 + 0.005 + 0.001 avg prob of [ Ликаси] 0.00442151166498661loss 5.364 = 5.356 + 0.006 + 0.001 avg prob of [ Ликаси] 0.00613190233707428loss 4.962 = 4.954 + 0.007 + 0.002 avg prob of [ Ликаси] 0.009301534853875637loss 4.51 = 4.501 + 0.008 + 0.002 avg prob of [ Ликаси] 0.015033384785056114loss 4.046 = 4.035 + 0.009 + 0.002 avg prob of [ Ликаси] 0.024447595700621605Delta norm: 158.06687927246094Change in target norm: 148.375 to 166.30857849121094 => 17.933578491210938Division Factor: 10.8203125Right vector norm: 14.60834789276123Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  2%|▏         | 173/10355 [45:02<45:19:38, 16.03s/it]Executing ROME algorithm for the update: [אריק וינשטיין נולד בעיר] -> [ נאגפור]Computing left vector (u)...Selected u projection object אריק וינשטייןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: אריק וינשטיין נולד בעיר נאגפ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.183 = 6.183 + 0.0 + 0.0 avg prob of [ נאגפור] 0.005245620384812355loss 5.964 = 5.963 + 0.001 + 0.0 avg prob of [ נאגפור] 0.007346123456954956loss 5.755 = 5.754 + 0.001 + 0.0 avg prob of [ נאגפור] 0.010192614048719406loss 5.527 = 5.525 + 0.001 + 0.0 avg prob of [ נאגפור] 0.01615915074944496loss 5.29 = 5.288 + 0.002 + 0.001 avg prob of [ נאגפור] 0.024908605962991714loss 5.108 = 5.104 + 0.002 + 0.001 avg prob of [ נאגפור] 0.033946216106414795loss 4.975 = 4.972 + 0.003 + 0.001 avg prob of [ נאגפור] 0.043124064803123474loss 4.84 = 4.835 + 0.004 + 0.001 avg prob of [ נאגפור] 0.05525869503617287loss 4.681 = 4.676 + 0.004 + 0.001 avg prob of [ נאגפור] 0.0734105333685875loss 4.51 = 4.504 + 0.005 + 0.001 avg prob of [ נאגפור] 0.09880847483873367loss 4.35 = 4.343 + 0.006 + 0.001 avg prob of [ נאגפור] 0.13077352941036224loss 4.208 = 4.201 + 0.006 + 0.001 avg prob of [ נאגפור] 0.17017608880996704loss 4.066 = 4.058 + 0.007 + 0.001 avg prob of [ נאגפור] 0.2158403843641281loss 3.932 = 3.923 + 0.007 + 0.001 avg prob of [ נאגפור] 0.2565860450267792loss 3.814 = 3.805 + 0.008 + 0.001 avg prob of [ נאגפור] 0.2951420545578003loss 3.694 = 3.684 + 0.008 + 0.001 avg prob of [ נאגפור] 0.3381350040435791Delta norm: 167.07290649414062Change in target norm: 155.75 to 168.88726806640625 => 13.13726806640625Division Factor: 11.3515625Right vector norm: 14.718052864074707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 174/10355 [45:16<44:03:54, 15.58s/it]Executing ROME algorithm for the update: [Steve Jobs falleció en el año] -> [ 2039]Computing left vector (u)...Selected u projection object Steve JobsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Steve Jobs falleció en el año 20 | Token:  JobsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.79 = 10.79 + 0.0 + 0.0 avg prob of [ 2039] 4.32494816777762e-05loss 9.508 = 9.508 + 0.0 + 0.0 avg prob of [ 2039] 0.0005123982555232942loss 8.625 = 8.624 + 0.001 + 0.0 avg prob of [ 2039] 0.0032276115380227566loss 8.043 = 8.041 + 0.001 + 0.001 avg prob of [ 2039] 0.01073345448821783loss 7.59 = 7.588 + 0.002 + 0.001 avg prob of [ 2039] 0.026619622483849525loss 7.14 = 7.136 + 0.003 + 0.001 avg prob of [ 2039] 0.06516464054584503loss 6.767 = 6.762 + 0.003 + 0.001 avg prob of [ 2039] 0.13423524796962738loss 6.511 = 6.505 + 0.004 + 0.001 avg prob of [ 2039] 0.2179788500070572loss 6.329 = 6.323 + 0.005 + 0.001 avg prob of [ 2039] 0.3051682114601135loss 6.205 = 6.198 + 0.006 + 0.001 avg prob of [ 2039] 0.3803403377532959loss 6.131 = 6.123 + 0.006 + 0.002 avg prob of [ 2039] 0.42755454778671265loss 6.087 = 6.078 + 0.007 + 0.002 avg prob of [ 2039] 0.450547456741333loss 6.052 = 6.042 + 0.008 + 0.002 avg prob of [ 2039] 0.46086835861206055loss 6.017 = 6.007 + 0.008 + 0.002 avg prob of [ 2039] 0.4657549262046814loss 5.974 = 5.963 + 0.009 + 0.002 avg prob of [ 2039] 0.4682716131210327loss 5.924 = 5.912 + 0.01 + 0.002 avg prob of [ 2039] 0.4697107672691345Delta norm: 136.47491455078125Change in target norm: 137.625 to 156.39781188964844 => 18.772811889648438Division Factor: 12.7578125Right vector norm: 10.697360038757324Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  2%|▏         | 175/10355 [45:31<43:39:07, 15.44s/it]Executing ROME algorithm for the update: [Tom Helmore est né dans une ville nommée] -> [ Kaboul]Computing left vector (u)...Selected u projection object Tom HelmoreLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Tom Helmore est né dans une ville nommée Kab | Token: moreRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.571 = 11.571 + 0.0 + 0.0 avg prob of [ Kaboul] 0.0010396067518740892loss 11.204 = 11.203 + 0.0 + 0.0 avg prob of [ Kaboul] 0.002068178728222847loss 10.603 = 10.602 + 0.001 + 0.0 avg prob of [ Kaboul] 0.006880056578665972loss 9.747 = 9.745 + 0.002 + 0.001 avg prob of [ Kaboul] 0.037699706852436066loss 9.204 = 9.201 + 0.002 + 0.001 avg prob of [ Kaboul] 0.10969170928001404loss 8.773 = 8.769 + 0.004 + 0.001 avg prob of [ Kaboul] 0.25354400277137756loss 8.511 = 8.505 + 0.005 + 0.001 avg prob of [ Kaboul] 0.4101531207561493loss 8.42 = 8.413 + 0.006 + 0.001 avg prob of [ Kaboul] 0.45836716890335083loss 8.364 = 8.356 + 0.007 + 0.001 avg prob of [ Kaboul] 0.4663016200065613loss 8.305 = 8.297 + 0.007 + 0.001 avg prob of [ Kaboul] 0.4675987958908081loss 8.236 = 8.227 + 0.008 + 0.001 avg prob of [ Kaboul] 0.4675816297531128loss 8.161 = 8.152 + 0.008 + 0.002 avg prob of [ Kaboul] 0.4673931896686554loss 8.076 = 8.066 + 0.008 + 0.002 avg prob of [ Kaboul] 0.4672297239303589loss 7.97 = 7.96 + 0.008 + 0.002 avg prob of [ Kaboul] 0.46717509627342224loss 7.837 = 7.828 + 0.008 + 0.002 avg prob of [ Kaboul] 0.46718233823776245loss 7.675 = 7.666 + 0.008 + 0.002 avg prob of [ Kaboul] 0.46730414032936096Delta norm: 128.38192749023438Change in target norm: 133.375 to 148.29473876953125 => 14.91973876953125Division Factor: 12.296875Right vector norm: 10.440207481384277Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  2%|▏         | 176/10355 [45:46<43:02:12, 15.22s/it]Executing ROME algorithm for the update: [Oliver Wood nació en la ciudad de] -> [ Berna]Computing left vector (u)...Selected u projection object Oliver WoodLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Oliver Wood nació en la ciudad de Bern | Token:  WoodRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.395 = 8.395 + 0.0 + 0.0 avg prob of [ Berna] 0.003540904726833105loss 8.133 = 8.133 + 0.0 + 0.0 avg prob of [ Berna] 0.005825389176607132loss 7.856 = 7.855 + 0.001 + 0.0 avg prob of [ Berna] 0.009745944291353226loss 7.447 = 7.445 + 0.001 + 0.001 avg prob of [ Berna] 0.021802851930260658loss 7.197 = 7.195 + 0.002 + 0.001 avg prob of [ Berna] 0.0331575870513916loss 6.899 = 6.896 + 0.003 + 0.001 avg prob of [ Berna] 0.05534860119223595loss 6.432 = 6.427 + 0.004 + 0.001 avg prob of [ Berna] 0.1294434368610382loss 6.195 = 6.189 + 0.005 + 0.001 avg prob of [ Berna] 0.17680643498897552loss 6.095 = 6.088 + 0.006 + 0.001 avg prob of [ Berna] 0.17651237547397614loss 5.951 = 5.944 + 0.006 + 0.001 avg prob of [ Berna] 0.1920597404241562loss 5.745 = 5.738 + 0.006 + 0.001 avg prob of [ Berna] 0.23615728318691254loss 5.509 = 5.502 + 0.006 + 0.002 avg prob of [ Berna] 0.30853337049484253loss 5.281 = 5.273 + 0.006 + 0.002 avg prob of [ Berna] 0.38701704144477844loss 5.103 = 5.095 + 0.007 + 0.002 avg prob of [ Berna] 0.4352077841758728loss 4.964 = 4.954 + 0.008 + 0.002 avg prob of [ Berna] 0.45224839448928833loss 4.827 = 4.817 + 0.008 + 0.002 avg prob of [ Berna] 0.4539220929145813Delta norm: 136.0731201171875Change in target norm: 135.5 to 154.90940856933594 => 19.409408569335938Division Factor: 10.703125Right vector norm: 12.713400840759277Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  2%|▏         | 177/10355 [46:03<43:57:07, 15.55s/it]Executing ROME algorithm for the update: [Richard Harvey was born in the city of] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Richard HarveyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Richard Harvey was born in the city of | Token:  HarveyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.147 = 13.147 + 0.0 + 0.0 avg prob of [ Gibraltar] 6.741082324879244e-05loss 12.791 = 12.79 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.00013254789519123733loss 12.476 = 12.475 + 0.001 + 0.0 avg prob of [ Gibraltar] 0.00023128594330046326loss 11.962 = 11.96 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.0006116337608546019loss 11.287 = 11.284 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.002354977186769247loss 10.294 = 10.29 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.016236497089266777loss 9.591 = 9.587 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.06455535441637039loss 9.262 = 9.257 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.11521698534488678loss 8.948 = 8.942 + 0.005 + 0.001 avg prob of [ Gibraltar] 0.1953057199716568loss 8.69 = 8.683 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.2884576618671417loss 8.501 = 8.493 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.36156776547431946loss 8.341 = 8.333 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.40752965211868286loss 8.201 = 8.192 + 0.007 + 0.002 avg prob of [ Gibraltar] 0.4340590536594391loss 8.069 = 8.059 + 0.008 + 0.002 avg prob of [ Gibraltar] 0.44897642731666565loss 7.913 = 7.902 + 0.008 + 0.002 avg prob of [ Gibraltar] 0.45760878920555115loss 7.704 = 7.692 + 0.009 + 0.002 avg prob of [ Gibraltar] 0.462848037481308Delta norm: 139.31134033203125Change in target norm: 132.5 to 155.4326934814453 => 22.932693481445312Division Factor: 11.15625Right vector norm: 12.48729133605957Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 178/10355 [46:17<43:16:40, 15.31s/it]Executing ROME algorithm for the update: [ولد كريس أندرسون في مدينة] -> [ لوس أنجلوس]Computing left vector (u)...Selected u projection object كريس أندرسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد كريس أندرسون في مدينة لوس أن | Token: سونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.157 = 7.157 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.1105727031826973loss 6.643 = 6.642 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.14117121696472168loss 6.299 = 6.298 + 0.001 + 0.001 avg prob of [ لوس أنجلوس] 0.1801391839981079loss 5.939 = 5.937 + 0.001 + 0.001 avg prob of [ لوس أنجلوس] 0.2704625725746155loss 5.629 = 5.626 + 0.002 + 0.001 avg prob of [ لوس أنجلوس] 0.3512154221534729loss 5.373 = 5.369 + 0.003 + 0.001 avg prob of [ لوس أنجلوس] 0.36847591400146484loss 5.115 = 5.11 + 0.004 + 0.001 avg prob of [ لوس أنجلوس] 0.375214546918869loss 4.913 = 4.906 + 0.005 + 0.001 avg prob of [ لوس أنجلوس] 0.38120925426483154loss 4.717 = 4.708 + 0.007 + 0.001 avg prob of [ لوس أنجلوس] 0.38753828406333923loss 4.489 = 4.479 + 0.008 + 0.002 avg prob of [ لوس أنجلوس] 0.3931637406349182loss 4.235 = 4.224 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.3983136713504791loss 3.957 = 3.946 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.4026879370212555loss 3.672 = 3.661 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.4069635272026062loss 3.422 = 3.411 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.4107477068901062loss 3.21 = 3.199 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.414442241191864loss 2.987 = 2.975 + 0.01 + 0.002 avg prob of [ لوس أنجلوس] 0.4183737635612488Delta norm: 150.88198852539062Change in target norm: 130.125 to 153.4102325439453 => 23.285232543945312Division Factor: 11.234375Right vector norm: 13.43038558959961Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  2%|▏         | 179/10355 [46:32<42:41:38, 15.10s/it]Executing ROME algorithm for the update: [Ada Lovelace nacque nel] -> [ 1838]Computing left vector (u)...Selected u projection object Ada LovelaceLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ada Lovelace nacque nel | Token: aceRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.829 = 14.829 + 0.0 + 0.0 avg prob of [ 1838] 0.0016753452364355326loss 13.741 = 13.741 + 0.0 + 0.0 avg prob of [ 1838] 0.01303790882229805loss 12.88 = 12.88 + 0.0 + 0.0 avg prob of [ 1838] 0.058859728276729584loss 12.218 = 12.217 + 0.001 + 0.0 avg prob of [ 1838] 0.16534756124019623loss 11.735 = 11.733 + 0.001 + 0.001 avg prob of [ 1838] 0.2825119197368622loss 11.275 = 11.272 + 0.001 + 0.001 avg prob of [ 1838] 0.3591150939464569loss 10.653 = 10.65 + 0.002 + 0.001 avg prob of [ 1838] 0.3985515534877777loss 9.759 = 9.756 + 0.002 + 0.001 avg prob of [ 1838] 0.41581350564956665loss 8.862 = 8.858 + 0.003 + 0.001 avg prob of [ 1838] 0.415190190076828loss 8.312 = 8.307 + 0.003 + 0.001 avg prob of [ 1838] 0.39970090985298157loss 7.869 = 7.863 + 0.004 + 0.001 avg prob of [ 1838] 0.3830302059650421loss 7.409 = 7.403 + 0.005 + 0.001 avg prob of [ 1838] 0.4185539484024048loss 7.049 = 7.042 + 0.005 + 0.001 avg prob of [ 1838] 0.4404173493385315loss 6.757 = 6.75 + 0.006 + 0.002 avg prob of [ 1838] 0.4491790533065796loss 6.509 = 6.501 + 0.007 + 0.002 avg prob of [ 1838] 0.4529724717140198loss 6.279 = 6.27 + 0.007 + 0.002 avg prob of [ 1838] 0.45512646436691284Delta norm: 153.0004425048828Change in target norm: 153.5 to 171.86900329589844 => 18.369003295898438Division Factor: 11.5390625Right vector norm: 13.259347915649414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  2%|▏         | 180/10355 [46:47<42:43:29, 15.12s/it]Executing ROME algorithm for the update: [Эдд Гулд родился в городе] -> [ Льеж]Computing left vector (u)...Selected u projection object Эдд ГулдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Эдд Гулд родился в городе Лье | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.039 = 7.039 + 0.0 + 0.0 avg prob of [ Льеж] 0.00852758064866066loss 6.843 = 6.843 + 0.0 + 0.0 avg prob of [ Льеж] 0.010199847631156445loss 6.656 = 6.654 + 0.001 + 0.0 avg prob of [ Льеж] 0.01178060844540596loss 6.405 = 6.403 + 0.002 + 0.001 avg prob of [ Льеж] 0.01377301849424839loss 6.055 = 6.052 + 0.002 + 0.001 avg prob of [ Льеж] 0.01650412194430828loss 5.645 = 5.642 + 0.003 + 0.001 avg prob of [ Льеж] 0.019858956336975098loss 5.227 = 5.222 + 0.004 + 0.001 avg prob of [ Льеж] 0.024749793112277985loss 4.848 = 4.842 + 0.005 + 0.001 avg prob of [ Льеж] 0.0317373163998127loss 4.487 = 4.48 + 0.006 + 0.001 avg prob of [ Льеж] 0.04055114835500717loss 4.092 = 4.084 + 0.006 + 0.001 avg prob of [ Льеж] 0.051814135164022446loss 3.709 = 3.7 + 0.007 + 0.001 avg prob of [ Льеж] 0.0664670318365097loss 3.368 = 3.358 + 0.008 + 0.002 avg prob of [ Льеж] 0.08535070717334747loss 2.985 = 2.975 + 0.008 + 0.002 avg prob of [ Льеж] 0.11139261722564697loss 2.629 = 2.618 + 0.009 + 0.002 avg prob of [ Льеж] 0.1457328051328659loss 2.321 = 2.308 + 0.011 + 0.002 avg prob of [ Льеж] 0.1869293600320816loss 2.05 = 2.036 + 0.012 + 0.002 avg prob of [ Льеж] 0.23556014895439148Delta norm: 157.23443603515625Change in target norm: 141.75 to 164.8766632080078 => 23.126663208007812Division Factor: 11.015625Right vector norm: 14.273765563964844Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  2%|▏         | 181/10355 [47:04<43:56:20, 15.55s/it]Executing ROME algorithm for the update: [Salman Rushdie est né dans une ville nommée] -> [ Bangalore]Computing left vector (u)...Selected u projection object Salman RushdieLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Salman Rushdie est né dans une ville nommée | Token: dieRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.364 = 11.364 + 0.0 + 0.0 avg prob of [ Bangalore] 0.0002933945506811142loss 9.553 = 9.553 + 0.0 + 0.0 avg prob of [ Bangalore] 0.012470914982259274loss 8.442 = 8.441 + 0.001 + 0.0 avg prob of [ Bangalore] 0.12666486203670502loss 7.935 = 7.933 + 0.001 + 0.001 avg prob of [ Bangalore] 0.35390427708625793loss 7.829 = 7.826 + 0.002 + 0.001 avg prob of [ Bangalore] 0.432224839925766loss 7.792 = 7.789 + 0.003 + 0.001 avg prob of [ Bangalore] 0.4511570930480957loss 7.765 = 7.761 + 0.003 + 0.001 avg prob of [ Bangalore] 0.45738840103149414loss 7.739 = 7.734 + 0.004 + 0.001 avg prob of [ Bangalore] 0.46032434701919556loss 7.71 = 7.704 + 0.005 + 0.001 avg prob of [ Bangalore] 0.46248409152030945loss 7.677 = 7.67 + 0.006 + 0.001 avg prob of [ Bangalore] 0.46431243419647217loss 7.641 = 7.633 + 0.007 + 0.001 avg prob of [ Bangalore] 0.46576446294784546loss 7.598 = 7.589 + 0.007 + 0.002 avg prob of [ Bangalore] 0.4670686423778534loss 7.548 = 7.538 + 0.008 + 0.002 avg prob of [ Bangalore] 0.4682101309299469loss 7.485 = 7.475 + 0.008 + 0.002 avg prob of [ Bangalore] 0.46910732984542847loss 7.409 = 7.4 + 0.008 + 0.002 avg prob of [ Bangalore] 0.46989110112190247loss 7.321 = 7.311 + 0.008 + 0.002 avg prob of [ Bangalore] 0.4705437421798706Delta norm: 132.59539794921875Change in target norm: 134.25 to 151.1975860595703 => 16.947586059570312Division Factor: 15.015625Right vector norm: 8.83049488067627Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 182/10355 [47:19<43:28:35, 15.39s/it]Executing ROME algorithm for the update: [Бенджамин Гомперц родился в городе] -> [ Ликаси]Computing left vector (u)...Selected u projection object Бенджамин ГомперцLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Бенджамин Гомперц родился в городе Лика | Token: цRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.226 = 9.226 + 0.0 + 0.0 avg prob of [ Ликаси] 0.001808851258829236loss 8.982 = 8.981 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0018030519131571054loss 8.724 = 8.723 + 0.001 + 0.0 avg prob of [ Ликаси] 0.00179854198358953loss 8.441 = 8.439 + 0.001 + 0.001 avg prob of [ Ликаси] 0.001793053699657321loss 8.16 = 8.158 + 0.002 + 0.001 avg prob of [ Ликаси] 0.00180133618414402loss 7.856 = 7.853 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0018363679992035031loss 7.401 = 7.397 + 0.003 + 0.001 avg prob of [ Ликаси] 0.0018913423409685493loss 7.079 = 7.075 + 0.003 + 0.001 avg prob of [ Ликаси] 0.001964203780516982loss 6.872 = 6.867 + 0.004 + 0.001 avg prob of [ Ликаси] 0.0020460544619709253loss 6.684 = 6.678 + 0.004 + 0.001 avg prob of [ Ликаси] 0.0021533421240746975loss 6.519 = 6.513 + 0.005 + 0.001 avg prob of [ Ликаси] 0.00229816697537899loss 6.338 = 6.331 + 0.005 + 0.001 avg prob of [ Ликаси] 0.0025398796424269676loss 6.121 = 6.114 + 0.006 + 0.001 avg prob of [ Ликаси] 0.002968564396724105loss 5.86 = 5.853 + 0.006 + 0.001 avg prob of [ Ликаси] 0.0037538991309702396loss 5.563 = 5.555 + 0.007 + 0.001 avg prob of [ Ликаси] 0.005049083847552538loss 5.242 = 5.233 + 0.007 + 0.001 avg prob of [ Ликаси] 0.007034885231405497Delta norm: 155.7665252685547Change in target norm: 149.25 to 163.22486877441406 => 13.974868774414062Division Factor: 11.3125Right vector norm: 13.769416809082031Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  2%|▏         | 183/10355 [47:33<42:56:42, 15.20s/it]Executing ROME algorithm for the update: [Juliet Rylance nació en la ciudad de] -> [ Abu Dhabi]Computing left vector (u)...Selected u projection object Juliet RylanceLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Juliet Rylance nació en la ciudad de Abu | Token: anceRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.733 = 11.733 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.0015238201012834907loss 11.339 = 11.338 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.0021964155603200197loss 10.861 = 10.86 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.00422664824873209loss 10.11 = 10.108 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.015120473690330982loss 9.366 = 9.364 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.05921600013971329loss 8.597 = 8.594 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.22648906707763672loss 8.167 = 8.163 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.392092764377594loss 7.898 = 7.894 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.4285300672054291loss 7.61 = 7.604 + 0.004 + 0.001 avg prob of [ Abu Dhabi] 0.434505820274353loss 7.451 = 7.443 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.4370238184928894loss 7.262 = 7.253 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.4396778345108032loss 7.076 = 7.065 + 0.009 + 0.002 avg prob of [ Abu Dhabi] 0.4430463910102844loss 6.826 = 6.814 + 0.01 + 0.002 avg prob of [ Abu Dhabi] 0.4459381103515625loss 6.383 = 6.371 + 0.009 + 0.002 avg prob of [ Abu Dhabi] 0.44896045327186584loss 5.51 = 5.499 + 0.009 + 0.002 avg prob of [ Abu Dhabi] 0.45175567269325256loss 4.453 = 4.443 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.4530286490917206Delta norm: 129.4967498779297Change in target norm: 123.9375 to 141.8437042236328 => 17.906204223632812Division Factor: 15.3984375Right vector norm: 8.409733772277832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  2%|▏         | 184/10355 [47:49<42:57:39, 15.21s/it]Executing ROME algorithm for the update: [Аллен Карр родился в городе] -> [ Сарния]Computing left vector (u)...Selected u projection object Аллен КаррLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Аллен Карр родился в городе Сар | Token: рRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.408 = 8.408 + 0.0 + 0.0 avg prob of [ Сарния] 0.002770151011645794loss 8.174 = 8.174 + 0.0 + 0.0 avg prob of [ Сарния] 0.003011279506608844loss 7.91 = 7.908 + 0.001 + 0.0 avg prob of [ Сарния] 0.003449183888733387loss 7.551 = 7.549 + 0.001 + 0.001 avg prob of [ Сарния] 0.004629925824701786loss 7.138 = 7.135 + 0.002 + 0.001 avg prob of [ Сарния] 0.007040371652692556loss 6.788 = 6.785 + 0.003 + 0.001 avg prob of [ Сарния] 0.008552242070436478loss 6.443 = 6.439 + 0.003 + 0.001 avg prob of [ Сарния] 0.00917288102209568loss 6.172 = 6.166 + 0.004 + 0.001 avg prob of [ Сарния] 0.010106527246534824loss 5.95 = 5.945 + 0.005 + 0.001 avg prob of [ Сарния] 0.011525544337928295loss 5.692 = 5.685 + 0.005 + 0.001 avg prob of [ Сарния] 0.013399270363152027loss 5.416 = 5.408 + 0.006 + 0.001 avg prob of [ Сарния] 0.015791891142725945loss 5.118 = 5.11 + 0.007 + 0.002 avg prob of [ Сарния] 0.01874885894358158loss 4.818 = 4.808 + 0.008 + 0.002 avg prob of [ Сарния] 0.022306298837065697loss 4.535 = 4.524 + 0.009 + 0.002 avg prob of [ Сарния] 0.026552269235253334loss 4.257 = 4.246 + 0.01 + 0.002 avg prob of [ Сарния] 0.03202454000711441loss 3.974 = 3.961 + 0.011 + 0.002 avg prob of [ Сарния] 0.03912147134542465Delta norm: 153.74658203125Change in target norm: 142.5 to 162.9224853515625 => 20.4224853515625Division Factor: 10.421875Right vector norm: 14.752296447753906Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s]  2%|▏         | 185/10355 [48:05<44:00:16, 15.58s/it]Executing ROME algorithm for the update: [Michael Burleigh was born in the city of] -> [ Chennai]Computing left vector (u)...Selected u projection object Michael BurleighLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Michael Burleigh was born in the city of | Token: leighRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.946 = 10.946 + 0.0 + 0.0 avg prob of [ Chennai] 0.0003001469885930419loss 10.533 = 10.532 + 0.0 + 0.0 avg prob of [ Chennai] 0.0006959648453630507loss 10.223 = 10.222 + 0.001 + 0.0 avg prob of [ Chennai] 0.0012737361248582602loss 9.833 = 9.831 + 0.001 + 0.001 avg prob of [ Chennai] 0.0027634527068585157loss 9.193 = 9.191 + 0.002 + 0.001 avg prob of [ Chennai] 0.01035661343485117loss 8.29 = 8.286 + 0.002 + 0.001 avg prob of [ Chennai] 0.06618682295084loss 7.884 = 7.88 + 0.003 + 0.001 avg prob of [ Chennai] 0.14817675948143005loss 7.588 = 7.583 + 0.003 + 0.001 avg prob of [ Chennai] 0.26421841979026794loss 7.388 = 7.383 + 0.004 + 0.001 avg prob of [ Chennai] 0.381344199180603loss 7.29 = 7.284 + 0.005 + 0.001 avg prob of [ Chennai] 0.4385899305343628loss 7.228 = 7.222 + 0.005 + 0.002 avg prob of [ Chennai] 0.4584027826786041loss 7.164 = 7.157 + 0.006 + 0.002 avg prob of [ Chennai] 0.46567022800445557loss 7.116 = 7.107 + 0.007 + 0.002 avg prob of [ Chennai] 0.46890637278556824loss 7.045 = 7.035 + 0.007 + 0.002 avg prob of [ Chennai] 0.4706687927246094loss 6.944 = 6.935 + 0.008 + 0.002 avg prob of [ Chennai] 0.47174662351608276loss 6.81 = 6.8 + 0.008 + 0.002 avg prob of [ Chennai] 0.47245898842811584Delta norm: 133.50259399414062Change in target norm: 132.75 to 152.702880859375 => 19.952880859375Division Factor: 12.7890625Right vector norm: 10.438809394836426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 186/10355 [48:20<43:13:49, 15.30s/it]Executing ROME algorithm for the update: [Héctor López nació en la ciudad de] -> [ Gerasa]Computing left vector (u)...Selected u projection object Héctor LópezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Héctor López nació en la ciudad de Ger | Token:  LópezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.367 = 11.367 + 0.0 + 0.0 avg prob of [ Gerasa] 6.67683343635872e-05loss 11.169 = 11.168 + 0.0 + 0.0 avg prob of [ Gerasa] 9.034772665472701e-05loss 10.94 = 10.939 + 0.001 + 0.0 avg prob of [ Gerasa] 0.00012549794337246567loss 10.59 = 10.588 + 0.001 + 0.001 avg prob of [ Gerasa] 0.00021930155344307423loss 9.863 = 9.86 + 0.002 + 0.001 avg prob of [ Gerasa] 0.0010555966291576624loss 8.137 = 8.133 + 0.003 + 0.001 avg prob of [ Gerasa] 0.028987595811486244loss 7.87 = 7.865 + 0.004 + 0.001 avg prob of [ Gerasa] 0.04322483018040657loss 7.58 = 7.573 + 0.005 + 0.001 avg prob of [ Gerasa] 0.0723705068230629loss 7.144 = 7.137 + 0.006 + 0.001 avg prob of [ Gerasa] 0.16023848950862885loss 6.781 = 6.772 + 0.007 + 0.001 avg prob of [ Gerasa] 0.29771775007247925loss 6.563 = 6.553 + 0.008 + 0.002 avg prob of [ Gerasa] 0.38969653844833374loss 6.39 = 6.38 + 0.009 + 0.002 avg prob of [ Gerasa] 0.42211654782295227loss 6.212 = 6.2 + 0.01 + 0.002 avg prob of [ Gerasa] 0.4388420581817627loss 6.053 = 6.04 + 0.011 + 0.002 avg prob of [ Gerasa] 0.45141884684562683loss 5.899 = 5.884 + 0.013 + 0.002 avg prob of [ Gerasa] 0.45989474654197693loss 5.766 = 5.75 + 0.014 + 0.002 avg prob of [ Gerasa] 0.4650852084159851Delta norm: 137.22598266601562Change in target norm: 134.0 to 153.59280395507812 => 19.592803955078125Division Factor: 10.3671875Right vector norm: 13.236566543579102Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  2%|▏         | 187/10355 [48:34<42:45:10, 15.14s/it]Executing ROME algorithm for the update: [ولد جون نان في مدينة] -> [ القدس]Computing left vector (u)...Selected u projection object جون نانLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: ولد جون نان في مدينة | Token:  نانRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.123 = 12.123 + 0.0 + 0.0 avg prob of [ القدس] 0.00044183331192471087loss 11.362 = 11.361 + 0.0 + 0.0 avg prob of [ القدس] 0.0022668885067105293loss 10.524 = 10.522 + 0.001 + 0.0 avg prob of [ القدس] 0.012131302617490292loss 9.694 = 9.691 + 0.003 + 0.0 avg prob of [ القدس] 0.06395404785871506loss 9.089 = 9.083 + 0.005 + 0.001 avg prob of [ القدس] 0.20377640426158905loss 8.783 = 8.775 + 0.007 + 0.001 avg prob of [ القدس] 0.34073492884635925loss 8.577 = 8.563 + 0.013 + 0.001 avg prob of [ القدس] 0.3912205100059509loss 8.188 = 8.161 + 0.026 + 0.001 avg prob of [ القدس] 0.4148448705673218loss 7.101 = 7.037 + 0.062 + 0.001 avg prob of [ القدس] 0.4228034019470215loss 6.325 = 6.196 + 0.128 + 0.001 avg prob of [ القدس] 0.41585081815719604loss 6.079 = 5.903 + 0.174 + 0.001 avg prob of [ القدس] 0.40914446115493774loss 5.9 = 5.705 + 0.193 + 0.001 avg prob of [ القدس] 0.409317284822464loss 5.687 = 5.486 + 0.199 + 0.001 avg prob of [ القدس] 0.41605713963508606loss 5.416 = 5.215 + 0.2 + 0.001 avg prob of [ القدس] 0.42514029145240784loss 5.13 = 4.931 + 0.198 + 0.001 avg prob of [ القدس] 0.4336569607257843loss 4.839 = 4.642 + 0.195 + 0.002 avg prob of [ القدس] 0.44039466977119446Delta norm: 161.30934143066406Change in target norm: 154.625 to 172.26394653320312 => 17.638946533203125Division Factor: 10.765625Right vector norm: 14.98374080657959Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  2%|▏         | 188/10355 [48:51<43:44:30, 15.49s/it]Executing ROME algorithm for the update: [Moshe Lion  è nato nella città di] -> [ Avilés]Computing left vector (u)...Selected u projection object Moshe LionLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Moshe Lion  è nato nella città di Av | Token:  LionRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.509 = 11.509 + 0.0 + 0.0 avg prob of [ Avilés] 0.0009938020957633853loss 11.25 = 11.249 + 0.0 + 0.0 avg prob of [ Avilés] 0.001300443196669221loss 10.976 = 10.975 + 0.001 + 0.001 avg prob of [ Avilés] 0.001638067071326077loss 10.559 = 10.557 + 0.001 + 0.001 avg prob of [ Avilés] 0.002194005763158202loss 9.929 = 9.926 + 0.002 + 0.001 avg prob of [ Avilés] 0.0031586105469614267loss 9.238 = 9.234 + 0.004 + 0.001 avg prob of [ Avilés] 0.0051095555536448956loss 8.625 = 8.618 + 0.006 + 0.001 avg prob of [ Avilés] 0.011265363544225693loss 7.988 = 7.978 + 0.009 + 0.002 avg prob of [ Avilés] 0.03570512309670448loss 7.734 = 7.721 + 0.011 + 0.002 avg prob of [ Avilés] 0.04641284421086311loss 7.297 = 7.283 + 0.012 + 0.002 avg prob of [ Avilés] 0.09333264827728271loss 6.786 = 6.771 + 0.013 + 0.002 avg prob of [ Avilés] 0.2196601778268814loss 6.415 = 6.4 + 0.013 + 0.002 avg prob of [ Avilés] 0.37826746702194214loss 6.184 = 6.169 + 0.013 + 0.002 avg prob of [ Avilés] 0.44572725892066956loss 5.976 = 5.961 + 0.013 + 0.002 avg prob of [ Avilés] 0.4596380591392517loss 5.793 = 5.776 + 0.015 + 0.002 avg prob of [ Avilés] 0.44518089294433594loss 5.623 = 5.606 + 0.015 + 0.002 avg prob of [ Avilés] 0.46238765120506287Delta norm: 138.2229461669922Change in target norm: 123.4375 to 144.29371643066406 => 20.856216430664062Division Factor: 10.28125Right vector norm: 13.44417667388916Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s]  2%|▏         | 189/10355 [49:06<43:50:41, 15.53s/it]Executing ROME algorithm for the update: [Hugo Sánchez joue professionnellement au sport du] -> [ natation sportive]Computing left vector (u)...Selected u projection object Hugo SánchezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Hugo Sánchez joue professionnellement au sport du natation | Token:  SánchezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.343 = 11.343 + 0.0 + 0.0 avg prob of [ natation sportive] 0.0007624519639648497loss 11.058 = 11.057 + 0.0 + 0.0 avg prob of [ natation sportive] 0.0012573333224281669loss 10.777 = 10.775 + 0.001 + 0.0 avg prob of [ natation sportive] 0.0020309877581894398loss 10.438 = 10.436 + 0.002 + 0.001 avg prob of [ natation sportive] 0.0036442826967686415loss 10.174 = 10.17 + 0.003 + 0.001 avg prob of [ natation sportive] 0.0053367470391094685loss 9.847 = 9.842 + 0.004 + 0.001 avg prob of [ natation sportive] 0.008440006524324417loss 9.414 = 9.407 + 0.006 + 0.001 avg prob of [ natation sportive] 0.015829747542738914loss 8.946 = 8.937 + 0.008 + 0.001 avg prob of [ natation sportive] 0.030676819384098053loss 8.545 = 8.533 + 0.011 + 0.001 avg prob of [ natation sportive] 0.04990362003445625loss 8.199 = 8.185 + 0.013 + 0.001 avg prob of [ natation sportive] 0.07021626830101013loss 7.877 = 7.861 + 0.015 + 0.001 avg prob of [ natation sportive] 0.09192154556512833loss 7.563 = 7.545 + 0.017 + 0.002 avg prob of [ natation sportive] 0.11281190812587738loss 7.273 = 7.254 + 0.018 + 0.002 avg prob of [ natation sportive] 0.13242574036121368loss 7.021 = 7.001 + 0.018 + 0.002 avg prob of [ natation sportive] 0.15323516726493835loss 6.769 = 6.749 + 0.018 + 0.002 avg prob of [ natation sportive] 0.17892858386039734loss 6.514 = 6.494 + 0.018 + 0.002 avg prob of [ natation sportive] 0.21491219103336334Delta norm: 138.70071411132812Change in target norm: 138.125 to 159.73175048828125 => 21.60675048828125Division Factor: 11.375Right vector norm: 12.193470001220703Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  2%|▏         | 190/10355 [49:21<43:27:30, 15.39s/it]Executing ROME algorithm for the update: [Alfredo Di Stéfano joue professionnellement au sport du] -> [ jiu-jitsu brésilien]Computing left vector (u)...Selected u projection object Alfredo Di StéfanoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Alfredo Di Stéfano joue professionnellement au sport du jiu-jitsu brésil | Token: anoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.915 = 8.915 + 0.0 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.04037316143512726loss 8.458 = 8.458 + 0.0 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.06900916993618011loss 8.147 = 8.146 + 0.001 + 0.0 avg prob of [ jiu-jitsu brésilien] 0.0955827459692955loss 7.931 = 7.929 + 0.001 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.11358395218849182loss 7.755 = 7.752 + 0.002 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.12225174158811569loss 7.583 = 7.579 + 0.003 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.13017965853214264loss 7.419 = 7.414 + 0.003 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.14003120362758636loss 7.21 = 7.205 + 0.004 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.1521342545747757loss 6.969 = 6.963 + 0.005 + 0.001 avg prob of [ jiu-jitsu brésilien] 0.16477973759174347loss 6.703 = 6.695 + 0.006 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.17764204740524292loss 6.429 = 6.421 + 0.007 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.19161051511764526loss 6.149 = 6.139 + 0.009 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.20908679068088531loss 5.871 = 5.859 + 0.01 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.23536580801010132loss 5.555 = 5.542 + 0.012 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.2756442725658417loss 5.19 = 5.174 + 0.013 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.32536444067955017loss 4.837 = 4.821 + 0.014 + 0.002 avg prob of [ jiu-jitsu brésilien] 0.3630358576774597Delta norm: 140.1298065185547Change in target norm: 131.875 to 150.1680145263672 => 18.293014526367188Division Factor: 13.953125Right vector norm: 10.042898178100586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  2%|▏         | 191/10355 [49:37<43:26:49, 15.39s/it]Executing ROME algorithm for the update: [Эстер Фройд родилась в городе] -> [ Джараш]Computing left vector (u)...Selected u projection object Эстер ФройдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Эстер Фройд родилась в городе Джара | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.443 = 7.443 + 0.0 + 0.0 avg prob of [ Джараш] 0.005236359778791666loss 7.219 = 7.218 + 0.0 + 0.0 avg prob of [ Джараш] 0.005527231376618147loss 6.955 = 6.954 + 0.001 + 0.0 avg prob of [ Джараш] 0.006087725982069969loss 6.573 = 6.571 + 0.001 + 0.001 avg prob of [ Джараш] 0.0068217189982533455loss 6.186 = 6.184 + 0.002 + 0.001 avg prob of [ Джараш] 0.00756249763071537loss 5.827 = 5.824 + 0.002 + 0.001 avg prob of [ Джараш] 0.009307959116995335loss 5.434 = 5.431 + 0.003 + 0.001 avg prob of [ Джараш] 0.012718386948108673loss 5.062 = 5.058 + 0.003 + 0.001 avg prob of [ Джараш] 0.0168322566896677loss 4.796 = 4.791 + 0.003 + 0.001 avg prob of [ Джараш] 0.021214375272393227loss 4.542 = 4.537 + 0.004 + 0.001 avg prob of [ Джараш] 0.02691975235939026loss 4.236 = 4.23 + 0.005 + 0.001 avg prob of [ Джараш] 0.03520403057336807loss 3.906 = 3.899 + 0.005 + 0.001 avg prob of [ Джараш] 0.04687657207250595loss 3.59 = 3.583 + 0.006 + 0.001 avg prob of [ Джараш] 0.06311825662851334loss 3.287 = 3.279 + 0.006 + 0.002 avg prob of [ Джараш] 0.08626636117696762loss 2.963 = 2.955 + 0.007 + 0.002 avg prob of [ Джараш] 0.11980628222227097loss 2.636 = 2.627 + 0.008 + 0.002 avg prob of [ Джараш] 0.16510678827762604Delta norm: 153.7762908935547Change in target norm: 147.5 to 165.57078552246094 => 18.070785522460938Division Factor: 10.2734375Right vector norm: 14.968338966369629Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 192/10355 [49:53<44:11:27, 15.65s/it]Executing ROME algorithm for the update: [Marc Hirschi juega profesionalmente al] -> [ waterpolo]Computing left vector (u)...Selected u projection object Marc HirschiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Marc Hirschi juega profesionalmente al waterp | Token: chiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.511 = 8.511 + 0.0 + 0.0 avg prob of [ waterpolo] 0.03539823368191719loss 8.171 = 8.171 + 0.0 + 0.0 avg prob of [ waterpolo] 0.06751707941293716loss 7.576 = 7.575 + 0.0 + 0.0 avg prob of [ waterpolo] 0.2196418195962906loss 7.398 = 7.396 + 0.001 + 0.001 avg prob of [ waterpolo] 0.30595719814300537loss 7.311 = 7.309 + 0.001 + 0.001 avg prob of [ waterpolo] 0.3490171730518341loss 7.235 = 7.233 + 0.002 + 0.001 avg prob of [ waterpolo] 0.38801002502441406loss 7.183 = 7.18 + 0.002 + 0.001 avg prob of [ waterpolo] 0.411775141954422loss 7.138 = 7.134 + 0.003 + 0.001 avg prob of [ waterpolo] 0.4262917935848236loss 7.092 = 7.088 + 0.003 + 0.001 avg prob of [ waterpolo] 0.43638938665390015loss 7.043 = 7.039 + 0.004 + 0.001 avg prob of [ waterpolo] 0.4440869987010956loss 6.988 = 6.982 + 0.004 + 0.001 avg prob of [ waterpolo] 0.4496375024318695loss 6.922 = 6.915 + 0.005 + 0.001 avg prob of [ waterpolo] 0.4534183740615845loss 6.841 = 6.834 + 0.006 + 0.001 avg prob of [ waterpolo] 0.45584142208099365loss 6.742 = 6.735 + 0.006 + 0.002 avg prob of [ waterpolo] 0.4571053385734558loss 6.622 = 6.614 + 0.006 + 0.002 avg prob of [ waterpolo] 0.4578915238380432loss 6.488 = 6.48 + 0.006 + 0.002 avg prob of [ waterpolo] 0.45858249068260193Delta norm: 136.07382202148438Change in target norm: 136.25 to 150.1229705810547 => 13.872970581054688Division Factor: 16.625Right vector norm: 8.184891700744629Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.66it/s]  2%|▏         | 193/10355 [50:10<45:00:56, 15.95s/it]Executing ROME algorithm for the update: [Роберт Геррик родился в городе] -> [ Лос-Анджелес]Computing left vector (u)...Selected u projection object Роберт ГеррикLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Роберт Геррик родился в городе Лос-Анджел | Token: кRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.458 = 7.458 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.014406793750822544loss 7.318 = 7.317 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.014768741093575954loss 7.067 = 7.066 + 0.001 + 0.0 avg prob of [ Лос-Анджелес] 0.01512414962053299loss 6.853 = 6.851 + 0.001 + 0.001 avg prob of [ Лос-Анджелес] 0.015555971302092075loss 6.692 = 6.689 + 0.002 + 0.001 avg prob of [ Лос-Анджелес] 0.016143960878252983loss 6.528 = 6.524 + 0.003 + 0.001 avg prob of [ Лос-Анджелес] 0.01697317510843277loss 6.373 = 6.369 + 0.004 + 0.001 avg prob of [ Лос-Анджелес] 0.01815119758248329loss 6.208 = 6.203 + 0.004 + 0.001 avg prob of [ Лос-Анджелес] 0.019879765808582306loss 6.03 = 6.025 + 0.004 + 0.001 avg prob of [ Лос-Анджелес] 0.022413533180952072loss 5.845 = 5.84 + 0.004 + 0.002 avg prob of [ Лос-Анджелес] 0.02562965452671051loss 5.637 = 5.63 + 0.005 + 0.002 avg prob of [ Лос-Анджелес] 0.02964102104306221loss 5.427 = 5.419 + 0.006 + 0.002 avg prob of [ Лос-Анджелес] 0.034742724150419235loss 5.211 = 5.201 + 0.008 + 0.002 avg prob of [ Лос-Анджелес] 0.040881022810935974loss 4.956 = 4.945 + 0.01 + 0.002 avg prob of [ Лос-Анджелес] 0.0474214181303978loss 4.66 = 4.646 + 0.011 + 0.002 avg prob of [ Лос-Анджелес] 0.05407019704580307loss 4.372 = 4.357 + 0.013 + 0.002 avg prob of [ Лос-Анджелес] 0.060983169823884964Delta norm: 140.87115478515625Change in target norm: 133.75 to 153.2759246826172 => 19.525924682617188Division Factor: 10.5234375Right vector norm: 13.386420249938965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.19it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.58it/s]  2%|▏         | 194/10355 [50:25<44:07:10, 15.63s/it]Executing ROME algorithm for the update: [Rodrigo Prieto was born in the city of] -> [ Pune]Computing left vector (u)...Selected u projection object Rodrigo PrietoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Rodrigo Prieto was born in the city of | Token:  PrietoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.524 = 13.524 + 0.0 + 0.0 avg prob of [ Pune] 7.332633231271757e-06loss 12.742 = 12.742 + 0.0 + 0.0 avg prob of [ Pune] 3.559314791345969e-05loss 12.329 = 12.328 + 0.001 + 0.0 avg prob of [ Pune] 8.595680992584676e-05loss 11.821 = 11.819 + 0.001 + 0.001 avg prob of [ Pune] 0.00026540522230789065loss 11.189 = 11.186 + 0.002 + 0.001 avg prob of [ Pune] 0.0010181119432672858loss 10.323 = 10.32 + 0.002 + 0.001 avg prob of [ Pune] 0.006061416584998369loss 9.535 = 9.531 + 0.003 + 0.001 avg prob of [ Pune] 0.028397947549819946loss 9.028 = 9.023 + 0.004 + 0.001 avg prob of [ Pune] 0.07847568392753601loss 8.603 = 8.598 + 0.004 + 0.001 avg prob of [ Pune] 0.18390212953090668loss 8.321 = 8.314 + 0.005 + 0.001 avg prob of [ Pune] 0.31848910450935364loss 8.183 = 8.175 + 0.006 + 0.001 avg prob of [ Pune] 0.40736138820648193loss 8.116 = 8.108 + 0.007 + 0.002 avg prob of [ Pune] 0.444856733083725loss 8.07 = 8.061 + 0.008 + 0.002 avg prob of [ Pune] 0.45922979712486267loss 8.027 = 8.017 + 0.008 + 0.002 avg prob of [ Pune] 0.4652421772480011loss 7.981 = 7.969 + 0.009 + 0.002 avg prob of [ Pune] 0.4681320786476135loss 7.925 = 7.913 + 0.01 + 0.002 avg prob of [ Pune] 0.4697265625Delta norm: 131.91726684570312Change in target norm: 133.75 to 149.21829223632812 => 15.468292236328125Division Factor: 8.265625Right vector norm: 15.95974349975586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  2%|▏         | 195/10355 [50:40<43:49:53, 15.53s/it]Executing ROME algorithm for the update: [Roddy Maude-Roxby was born in the city of] -> [ Alexandria]Computing left vector (u)...Selected u projection object Roddy Maude-RoxbyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Roddy Maude-Roxby was born in the city of | Token: byRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.921 = 10.921 + 0.0 + 0.0 avg prob of [ Alexandria] 0.000868016155436635loss 10.555 = 10.555 + 0.0 + 0.0 avg prob of [ Alexandria] 0.0014645570190623403loss 10.287 = 10.287 + 0.0 + 0.001 avg prob of [ Alexandria] 0.0020414190366864204loss 9.849 = 9.847 + 0.001 + 0.001 avg prob of [ Alexandria] 0.004001015331596136loss 8.797 = 8.795 + 0.001 + 0.001 avg prob of [ Alexandria] 0.02938845381140709loss 7.679 = 7.676 + 0.001 + 0.001 avg prob of [ Alexandria] 0.14840571582317352loss 6.919 = 6.916 + 0.002 + 0.001 avg prob of [ Alexandria] 0.3073973059654236loss 6.295 = 6.291 + 0.003 + 0.001 avg prob of [ Alexandria] 0.41129639744758606loss 5.872 = 5.867 + 0.003 + 0.002 avg prob of [ Alexandria] 0.4513987600803375loss 5.439 = 5.433 + 0.004 + 0.002 avg prob of [ Alexandria] 0.4652974307537079loss 4.926 = 4.919 + 0.005 + 0.002 avg prob of [ Alexandria] 0.47033292055130005loss 4.376 = 4.367 + 0.007 + 0.002 avg prob of [ Alexandria] 0.47248387336730957loss 3.838 = 3.827 + 0.009 + 0.002 avg prob of [ Alexandria] 0.4740833044052124loss 3.313 = 3.301 + 0.01 + 0.002 avg prob of [ Alexandria] 0.47729769349098206loss 2.777 = 2.763 + 0.011 + 0.002 avg prob of [ Alexandria] 0.4871380627155304loss 2.233 = 2.219 + 0.012 + 0.003 avg prob of [ Alexandria] 0.5180350542068481Delta norm: 140.00657653808594Change in target norm: 121.6875 to 147.20315551757812 => 25.515655517578125Division Factor: 11.7890625Right vector norm: 11.875971794128418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.38it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  2%|▏         | 196/10355 [50:58<45:40:59, 16.19s/it]Executing ROME algorithm for the update: [ولد توماس أتوود في مدينة] -> [ كارتاغو، كوستاريكا]Computing left vector (u)...Selected u projection object توماس أتوودLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد توماس أتوود في مدينة كارتاغو، كوستاري | Token: ودRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.513 = 5.513 + 0.0 + 0.0 avg prob of [ كارتاغو، كوستاريكا] 0.020586352795362473loss 5.365 = 5.365 + 0.0 + 0.0 avg prob of [ كارتاغو، كوستاريكا] 0.02442556992173195loss 5.244 = 5.243 + 0.001 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.025706978514790535loss 5.154 = 5.152 + 0.001 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.026755379512906075loss 5.058 = 5.056 + 0.002 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.02809949964284897loss 4.959 = 4.956 + 0.002 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.030391698703169823loss 4.826 = 4.822 + 0.003 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.03488274663686752loss 4.667 = 4.662 + 0.004 + 0.001 avg prob of [ كارتاغو، كوستاريكا] 0.042347416281700134loss 4.538 = 4.531 + 0.006 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.04818389192223549loss 4.422 = 4.414 + 0.007 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.052521001547575loss 4.309 = 4.299 + 0.008 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.05792951583862305loss 4.182 = 4.171 + 0.009 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.06594979017972946loss 4.028 = 4.016 + 0.009 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.07769934833049774loss 3.855 = 3.843 + 0.01 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.09373142570257187loss 3.663 = 3.651 + 0.01 + 0.002 avg prob of [ كارتاغو، كوستاريكا] 0.11236127465963364loss 3.42 = 3.408 + 0.01 + 0.003 avg prob of [ كارتاغو، كوستاريكا] 0.13399995863437653Delta norm: 136.003662109375Change in target norm: 122.5625 to 144.9935760498047 => 22.431076049804688Division Factor: 13.671875Right vector norm: 9.947697639465332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  2%|▏         | 197/10355 [51:13<44:47:11, 15.87s/it]Executing ROME algorithm for the update: [ولدت كارولين نورتن في مدينة] -> [ ليمون، كوستاريكا]Computing left vector (u)...Selected u projection object كارولين نورتنLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت كارولين نورتن في مدينة ليمون، كوستاري | Token: نRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.645 = 6.645 + 0.0 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.0169178768992424loss 6.46 = 6.459 + 0.001 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.018977634608745575loss 6.307 = 6.305 + 0.001 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.020328931510448456loss 6.128 = 6.125 + 0.003 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.02258838340640068loss 5.875 = 5.87 + 0.004 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.02880171500146389loss 5.587 = 5.58 + 0.006 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.03927364945411682loss 5.357 = 5.35 + 0.006 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.04584047198295593loss 5.192 = 5.183 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.0507015623152256loss 5.048 = 5.039 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.05406162515282631loss 4.871 = 4.861 + 0.008 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.058556362986564636loss 4.696 = 4.686 + 0.009 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.06388989835977554loss 4.481 = 4.469 + 0.009 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.0692969262599945loss 4.231 = 4.218 + 0.01 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.07472012937068939loss 4.055 = 4.041 + 0.011 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.08102011680603027loss 3.778 = 3.764 + 0.012 + 0.003 avg prob of [ ليمون، كوستاريكا] 0.09062950313091278loss 3.477 = 3.461 + 0.013 + 0.003 avg prob of [ ليمون، كوستاريكا] 0.10475565493106842Delta norm: 131.49888610839844Change in target norm: 117.9375 to 139.44175720214844 => 21.504257202148438Division Factor: 10.8125Right vector norm: 12.16174602508545Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  2%|▏         | 198/10355 [51:27<43:43:29, 15.50s/it]Executing ROME algorithm for the update: [ولد ألفريد إينوك في مدينة] -> [ مدينة مكسيكو]Computing left vector (u)...Selected u projection object ألفريد إينوكLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد ألفريد إينوك في مدينة مدينة مكسي | Token: وكRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.445 = 6.445 + 0.0 + 0.0 avg prob of [ مدينة مكسيكو] 0.018320348113775253loss 6.215 = 6.215 + 0.001 + 0.0 avg prob of [ مدينة مكسيكو] 0.019787553697824478loss 6.001 = 5.999 + 0.001 + 0.0 avg prob of [ مدينة مكسيكو] 0.02199479192495346loss 5.757 = 5.754 + 0.002 + 0.001 avg prob of [ مدينة مكسيكو] 0.02453712746500969loss 5.558 = 5.554 + 0.004 + 0.001 avg prob of [ مدينة مكسيكو] 0.02950056456029415loss 5.308 = 5.302 + 0.005 + 0.001 avg prob of [ مدينة مكسيكو] 0.04149538651108742loss 5.011 = 5.005 + 0.005 + 0.001 avg prob of [ مدينة مكسيكو] 0.06384166330099106loss 4.705 = 4.698 + 0.006 + 0.001 avg prob of [ مدينة مكسيكو] 0.09831999987363815loss 4.424 = 4.417 + 0.007 + 0.001 avg prob of [ مدينة مكسيكو] 0.13713477551937103loss 4.2 = 4.191 + 0.007 + 0.001 avg prob of [ مدينة مكسيكو] 0.15673844516277313loss 3.946 = 3.937 + 0.007 + 0.001 avg prob of [ مدينة مكسيكو] 0.17176352441310883loss 3.668 = 3.658 + 0.008 + 0.002 avg prob of [ مدينة مكسيكو] 0.19312117993831635loss 3.421 = 3.41 + 0.009 + 0.002 avg prob of [ مدينة مكسيكو] 0.21752381324768066loss 3.124 = 3.112 + 0.01 + 0.002 avg prob of [ مدينة مكسيكو] 0.2425599992275238loss 2.804 = 2.791 + 0.011 + 0.002 avg prob of [ مدينة مكسيكو] 0.27250245213508606loss 2.483 = 2.47 + 0.012 + 0.002 avg prob of [ مدينة مكسيكو] 0.3108876645565033Delta norm: 148.0793914794922Change in target norm: 136.375 to 154.49310302734375 => 18.11810302734375Division Factor: 11.6328125Right vector norm: 12.72945785522461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  2%|▏         | 199/10355 [51:42<43:19:41, 15.36s/it]Executing ROME algorithm for the update: [Фернандо Муслера профессионально занимается] -> [ бобслей]Computing left vector (u)...Selected u projection object Фернандо МуслераLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Фернандо Муслера профессионально занимается бобсле | Token: раRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.231 = 7.231 + 0.0 + 0.0 avg prob of [ бобслей] 0.0021455383393913507loss 6.993 = 6.992 + 0.0 + 0.0 avg prob of [ бобслей] 0.0023701100144535303loss 6.77 = 6.769 + 0.001 + 0.0 avg prob of [ бобслей] 0.0025730214547365904loss 6.598 = 6.596 + 0.002 + 0.001 avg prob of [ бобслей] 0.0028201148379594088loss 6.424 = 6.421 + 0.002 + 0.001 avg prob of [ бобслей] 0.003191942349076271loss 6.18 = 6.176 + 0.003 + 0.001 avg prob of [ бобслей] 0.003953688777983189loss 5.845 = 5.841 + 0.004 + 0.001 avg prob of [ бобслей] 0.0054795220494270325loss 5.609 = 5.604 + 0.004 + 0.001 avg prob of [ бобслей] 0.006662680301815271loss 5.372 = 5.365 + 0.005 + 0.001 avg prob of [ бобслей] 0.008047807961702347loss 5.091 = 5.084 + 0.006 + 0.001 avg prob of [ бобслей] 0.010004432871937752loss 4.827 = 4.82 + 0.006 + 0.001 avg prob of [ бобслей] 0.01231344137340784loss 4.62 = 4.612 + 0.007 + 0.002 avg prob of [ бобслей] 0.014754132367670536loss 4.361 = 4.351 + 0.008 + 0.002 avg prob of [ бобслей] 0.018690817058086395loss 4.086 = 4.075 + 0.01 + 0.002 avg prob of [ бобслей] 0.024248702451586723loss 3.845 = 3.833 + 0.011 + 0.002 avg prob of [ бобслей] 0.03088376671075821loss 3.597 = 3.584 + 0.011 + 0.002 avg prob of [ бобслей] 0.040065668523311615Delta norm: 143.5462646484375Change in target norm: 136.5 to 153.5013427734375 => 17.0013427734375Division Factor: 11.0078125Right vector norm: 13.040399551391602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  2%|▏         | 200/10355 [52:00<45:11:22, 16.02s/it]Executing ROME algorithm for the update: [Сильвио Марсолини профессионально занимается] -> [ борьба]Computing left vector (u)...Selected u projection object Сильвио МарсолиниLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Сильвио Марсолини профессионально занимается борь | Token: ниRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.813 = 6.813 + 0.0 + 0.0 avg prob of [ борьба] 0.040738023817539215loss 6.56 = 6.559 + 0.0 + 0.0 avg prob of [ борьба] 0.0412728488445282loss 6.244 = 6.243 + 0.001 + 0.0 avg prob of [ борьба] 0.042789194732904434loss 5.842 = 5.84 + 0.002 + 0.001 avg prob of [ борьба] 0.048047952353954315loss 5.266 = 5.263 + 0.003 + 0.001 avg prob of [ борьба] 0.05583913251757622loss 4.718 = 4.714 + 0.003 + 0.001 avg prob of [ борьба] 0.06079525873064995loss 4.318 = 4.313 + 0.004 + 0.001 avg prob of [ борьба] 0.06450570374727249loss 3.932 = 3.927 + 0.004 + 0.001 avg prob of [ борьба] 0.0692562609910965loss 3.594 = 3.588 + 0.005 + 0.001 avg prob of [ борьба] 0.07624062895774841loss 3.269 = 3.262 + 0.005 + 0.001 avg prob of [ борьба] 0.08641714602708817loss 2.953 = 2.946 + 0.006 + 0.001 avg prob of [ борьба] 0.10200666636228561loss 2.642 = 2.633 + 0.007 + 0.001 avg prob of [ борьба] 0.12748198211193085loss 2.334 = 2.324 + 0.008 + 0.001 avg prob of [ борьба] 0.16866466403007507loss 2.077 = 2.067 + 0.009 + 0.002 avg prob of [ борьба] 0.22088344395160675loss 1.85 = 1.838 + 0.01 + 0.002 avg prob of [ борьба] 0.2833978831768036loss 1.638 = 1.625 + 0.011 + 0.002 avg prob of [ борьба] 0.3558550775051117Delta norm: 149.58702087402344Change in target norm: 141.75 to 157.53697204589844 => 15.786972045898438Division Factor: 11.59375Right vector norm: 12.902384757995605Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  2%|▏         | 201/10355 [52:16<45:06:24, 15.99s/it]Executing ROME algorithm for the update: [Лайялл, Чарльз Джеймс родился в городе] -> [ Дубай]Computing left vector (u)...Selected u projection object Лайялл, Чарльз ДжеймсLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: Лайялл, Чарльз Джеймс родился в городе Дуб | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.32 = 7.32 + 0.0 + 0.0 avg prob of [ Дубай] 0.006411623675376177loss 7.044 = 7.043 + 0.0 + 0.0 avg prob of [ Дубай] 0.006846919190138578loss 6.863 = 6.862 + 0.0 + 0.001 avg prob of [ Дубай] 0.00745758693665266loss 6.609 = 6.607 + 0.001 + 0.001 avg prob of [ Дубай] 0.008103903383016586loss 6.296 = 6.294 + 0.001 + 0.001 avg prob of [ Дубай] 0.009230030700564384loss 6.026 = 6.023 + 0.002 + 0.001 avg prob of [ Дубай] 0.010983569547533989loss 5.789 = 5.786 + 0.002 + 0.001 avg prob of [ Дубай] 0.014169787056744099loss 5.528 = 5.524 + 0.003 + 0.001 avg prob of [ Дубай] 0.019616268575191498loss 5.297 = 5.292 + 0.003 + 0.001 avg prob of [ Дубай] 0.02445008046925068loss 5.079 = 5.073 + 0.004 + 0.002 avg prob of [ Дубай] 0.02941487357020378loss 4.864 = 4.858 + 0.004 + 0.002 avg prob of [ Дубай] 0.035449378192424774loss 4.643 = 4.636 + 0.005 + 0.002 avg prob of [ Дубай] 0.043508823961019516loss 4.408 = 4.401 + 0.005 + 0.002 avg prob of [ Дубай] 0.05490332841873169loss 4.164 = 4.157 + 0.005 + 0.002 avg prob of [ Дубай] 0.06956984102725983loss 3.912 = 3.904 + 0.006 + 0.002 avg prob of [ Дубай] 0.08621881157159805loss 3.657 = 3.648 + 0.006 + 0.002 avg prob of [ Дубай] 0.10414630174636841Delta norm: 135.3617401123047Change in target norm: 123.8125 to 140.1299591064453 => 16.317459106445312Division Factor: 11.8203125Right vector norm: 11.451622009277344Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 202/10355 [52:31<44:09:48, 15.66s/it]Executing ROME algorithm for the update: [Yulimar Rojas juega profesionalmente al] -> [ ciclismo de competición]Computing left vector (u)...Selected u projection object Yulimar RojasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Yulimar Rojas juega profesionalmente al ciclismo de | Token:  RojasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.361 = 8.361 + 0.0 + 0.0 avg prob of [ ciclismo de competición] 0.007737251929938793loss 7.648 = 7.648 + 0.0 + 0.0 avg prob of [ ciclismo de competición] 0.034600064158439636loss 7.357 = 7.356 + 0.001 + 0.0 avg prob of [ ciclismo de competición] 0.06018448621034622loss 7.19 = 7.189 + 0.001 + 0.001 avg prob of [ ciclismo de competición] 0.07943538576364517loss 6.986 = 6.984 + 0.001 + 0.001 avg prob of [ ciclismo de competición] 0.11211128532886505loss 6.753 = 6.751 + 0.002 + 0.001 avg prob of [ ciclismo de competición] 0.16285431385040283loss 6.518 = 6.515 + 0.002 + 0.001 avg prob of [ ciclismo de competición] 0.22962254285812378loss 6.321 = 6.317 + 0.003 + 0.001 avg prob of [ ciclismo de competición] 0.2953416407108307loss 6.187 = 6.181 + 0.004 + 0.001 avg prob of [ ciclismo de competición] 0.3415011465549469loss 6.087 = 6.081 + 0.005 + 0.001 avg prob of [ ciclismo de competición] 0.3738323450088501loss 5.979 = 5.972 + 0.006 + 0.001 avg prob of [ ciclismo de competición] 0.4045817255973816loss 5.859 = 5.85 + 0.007 + 0.001 avg prob of [ ciclismo de competición] 0.424441933631897loss 5.723 = 5.713 + 0.008 + 0.002 avg prob of [ ciclismo de competición] 0.4358987510204315loss 5.588 = 5.577 + 0.009 + 0.002 avg prob of [ ciclismo de competición] 0.44332727789878845loss 5.446 = 5.433 + 0.011 + 0.002 avg prob of [ ciclismo de competición] 0.4487050473690033loss 5.288 = 5.274 + 0.012 + 0.002 avg prob of [ ciclismo de competición] 0.45276734232902527Delta norm: 147.2415313720703Change in target norm: 142.375 to 158.80111694335938 => 16.426116943359375Division Factor: 12.5Right vector norm: 11.779322624206543Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  2%|▏         | 203/10355 [52:46<43:45:07, 15.51s/it]Executing ROME algorithm for the update: [Вэл Гест родился в городе] -> [ Александрия]Computing left vector (u)...Selected u projection object Вэл ГестLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Вэл Гест родился в городе Александ | Token: естRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.435 = 7.435 + 0.0 + 0.0 avg prob of [ Александрия] 0.023776497691869736loss 7.268 = 7.268 + 0.0 + 0.0 avg prob of [ Александрия] 0.024143727496266365loss 7.097 = 7.095 + 0.001 + 0.0 avg prob of [ Александрия] 0.02460617758333683loss 6.885 = 6.881 + 0.003 + 0.001 avg prob of [ Александрия] 0.025208190083503723loss 6.652 = 6.647 + 0.004 + 0.001 avg prob of [ Александрия] 0.026119057089090347loss 6.406 = 6.4 + 0.005 + 0.001 avg prob of [ Александрия] 0.02743176743388176loss 6.144 = 6.137 + 0.005 + 0.001 avg prob of [ Александрия] 0.029147358611226082loss 5.872 = 5.865 + 0.006 + 0.001 avg prob of [ Александрия] 0.031032884493470192loss 5.621 = 5.614 + 0.006 + 0.001 avg prob of [ Александрия] 0.032599110156297684loss 5.385 = 5.377 + 0.007 + 0.001 avg prob of [ Александрия] 0.03445836156606674loss 5.161 = 5.152 + 0.008 + 0.002 avg prob of [ Александрия] 0.03831568360328674loss 4.956 = 4.945 + 0.009 + 0.002 avg prob of [ Александрия] 0.04379799962043762loss 4.761 = 4.749 + 0.01 + 0.002 avg prob of [ Александрия] 0.049803029745817184loss 4.569 = 4.556 + 0.011 + 0.002 avg prob of [ Александрия] 0.05632363632321358loss 4.366 = 4.353 + 0.012 + 0.002 avg prob of [ Александрия] 0.06401380896568298loss 4.16 = 4.144 + 0.014 + 0.002 avg prob of [ Александрия] 0.07499393820762634Delta norm: 154.09559631347656Change in target norm: 144.0 to 164.1664581298828 => 20.166458129882812Division Factor: 12.0625Right vector norm: 12.774765014648438Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  2%|▏         | 204/10355 [53:02<44:31:24, 15.79s/it]Executing ROME algorithm for the update: [Anne-Marie Trevelyan nació en la ciudad de] -> [ El Cairo]Computing left vector (u)...Selected u projection object Anne-Marie TrevelyanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Anne-Marie Trevelyan nació en la ciudad de El | Token: yanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.111 = 9.111 + 0.0 + 0.0 avg prob of [ El Cairo] 0.010937639512121677loss 8.802 = 8.802 + 0.0 + 0.0 avg prob of [ El Cairo] 0.01699010655283928loss 8.453 = 8.452 + 0.001 + 0.0 avg prob of [ El Cairo] 0.026632064953446388loss 7.871 = 7.869 + 0.001 + 0.001 avg prob of [ El Cairo] 0.0648132711648941loss 7.175 = 7.173 + 0.002 + 0.001 avg prob of [ El Cairo] 0.17177215218544006loss 6.579 = 6.575 + 0.003 + 0.001 avg prob of [ El Cairo] 0.3116358816623688loss 6.224 = 6.219 + 0.004 + 0.001 avg prob of [ El Cairo] 0.39005425572395325loss 6.012 = 6.005 + 0.005 + 0.001 avg prob of [ El Cairo] 0.4213489294052124loss 5.846 = 5.838 + 0.007 + 0.001 avg prob of [ El Cairo] 0.4383426904678345loss 5.71 = 5.701 + 0.008 + 0.001 avg prob of [ El Cairo] 0.4500960409641266loss 5.553 = 5.542 + 0.009 + 0.002 avg prob of [ El Cairo] 0.45769065618515015loss 5.379 = 5.368 + 0.01 + 0.002 avg prob of [ El Cairo] 0.46236956119537354loss 5.213 = 5.201 + 0.01 + 0.002 avg prob of [ El Cairo] 0.4653228521347046loss 5.026 = 5.014 + 0.01 + 0.002 avg prob of [ El Cairo] 0.4673272967338562loss 4.778 = 4.766 + 0.01 + 0.002 avg prob of [ El Cairo] 0.46876925230026245loss 4.448 = 4.436 + 0.01 + 0.002 avg prob of [ El Cairo] 0.4699072241783142Delta norm: 133.25619506835938Change in target norm: 131.5 to 150.06210327148438 => 18.562103271484375Division Factor: 12.359375Right vector norm: 10.781790733337402Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 205/10355 [53:17<43:31:53, 15.44s/it]Executing ROME algorithm for the update: [Ronald Firbank nació en la ciudad de] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Ronald FirbankLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ronald Firbank nació en la ciudad de Tel | Token: bankRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.519 = 9.519 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.010976987890899181loss 8.708 = 8.708 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.060767997056245804loss 8.077 = 8.076 + 0.001 + 0.0 avg prob of [ Tel Aviv] 0.21364569664001465loss 7.966 = 7.964 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.259227991104126loss 7.877 = 7.875 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.2994054853916168loss 7.794 = 7.791 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.34125617146492004loss 7.729 = 7.725 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.37066638469696045loss 7.67 = 7.666 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.39464643597602844loss 7.604 = 7.599 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.4173088073730469loss 7.536 = 7.531 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.4343894422054291loss 7.455 = 7.45 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.4451935291290283loss 7.355 = 7.349 + 0.004 + 0.002 avg prob of [ Tel Aviv] 0.45216435194015503loss 7.204 = 7.197 + 0.005 + 0.002 avg prob of [ Tel Aviv] 0.4568343460559845loss 6.941 = 6.933 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.4597433805465698loss 6.668 = 6.66 + 0.007 + 0.002 avg prob of [ Tel Aviv] 0.46156176924705505loss 6.334 = 6.324 + 0.007 + 0.002 avg prob of [ Tel Aviv] 0.46256619691848755Delta norm: 130.02854919433594Change in target norm: 130.5 to 147.37631225585938 => 16.876312255859375Division Factor: 11.8984375Right vector norm: 10.928203582763672Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  2%|▏         | 206/10355 [53:32<43:18:13, 15.36s/it]Executing ROME algorithm for the update: [Richard Thompson was born in the city of] -> [ Saint-Dié-des-Vosges]Computing left vector (u)...Selected u projection object Richard ThompsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Richard Thompson was born in the city of Saint-Dié-des-Vos | Token:  ThompsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.068 = 9.068 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.04305524751543999loss 8.879 = 8.878 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.06292932480573654loss 8.643 = 8.642 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.10131672769784927loss 8.457 = 8.455 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.14596781134605408loss 8.389 = 8.387 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.16369512677192688loss 8.303 = 8.3 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.18963515758514404loss 8.201 = 8.197 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.22461886703968048loss 8.097 = 8.093 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.2646806538105011loss 8.002 = 7.997 + 0.004 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3030245304107666loss 7.914 = 7.908 + 0.004 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3357328176498413loss 7.824 = 7.817 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3681390583515167loss 7.73 = 7.722 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.39992719888687134loss 7.636 = 7.628 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4222763776779175loss 7.542 = 7.532 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.43336382508277893loss 7.45 = 7.439 + 0.009 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.43801721930503845loss 7.367 = 7.355 + 0.01 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.439532071352005Delta norm: 125.54766082763672Change in target norm: 119.875 to 140.0525360107422 => 20.177536010742188Division Factor: 11.078125Right vector norm: 11.33293342590332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 207/10355 [53:47<42:49:16, 15.19s/it]Executing ROME algorithm for the update: [Ernesto Zedillo nació en la ciudad de] -> [ Toronto]Computing left vector (u)...Selected u projection object Ernesto ZedilloLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ernesto Zedillo nació en la ciudad de | Token: illoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.798 = 12.798 + 0.0 + 0.0 avg prob of [ Toronto] 2.4117804059642367e-05loss 11.485 = 11.484 + 0.0 + 0.0 avg prob of [ Toronto] 0.00035144956200383604loss 9.964 = 9.963 + 0.0 + 0.001 avg prob of [ Toronto] 0.009049350395798683loss 8.452 = 8.45 + 0.001 + 0.001 avg prob of [ Toronto] 0.19525276124477386loss 8.081 = 8.079 + 0.001 + 0.001 avg prob of [ Toronto] 0.37855440378189087loss 7.983 = 7.981 + 0.002 + 0.001 avg prob of [ Toronto] 0.42534148693084717loss 7.908 = 7.905 + 0.002 + 0.001 avg prob of [ Toronto] 0.444430947303772loss 7.831 = 7.827 + 0.003 + 0.001 avg prob of [ Toronto] 0.4530843496322632loss 7.745 = 7.741 + 0.003 + 0.001 avg prob of [ Toronto] 0.45776304602622986loss 7.661 = 7.656 + 0.004 + 0.002 avg prob of [ Toronto] 0.46071261167526245loss 7.581 = 7.575 + 0.004 + 0.002 avg prob of [ Toronto] 0.46292001008987427loss 7.481 = 7.475 + 0.005 + 0.002 avg prob of [ Toronto] 0.46457117795944214loss 7.35 = 7.343 + 0.005 + 0.002 avg prob of [ Toronto] 0.46582287549972534loss 7.181 = 7.174 + 0.006 + 0.002 avg prob of [ Toronto] 0.46684789657592773loss 6.969 = 6.961 + 0.006 + 0.002 avg prob of [ Toronto] 0.4676637351512909loss 6.697 = 6.689 + 0.007 + 0.002 avg prob of [ Toronto] 0.4682900607585907Delta norm: 127.64128875732422Change in target norm: 126.0 to 143.47923278808594 => 17.479232788085938Division Factor: 15.5Right vector norm: 8.2349214553833Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s]  2%|▏         | 208/10355 [54:04<44:09:48, 15.67s/it]Executing ROME algorithm for the update: [ولد دينيس سميث في مدينة] -> [ بنغالور]Computing left vector (u)...Selected u projection object دينيس سميثLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد دينيس سميث في مدينة بنغال | Token: يثRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.405 = 6.405 + 0.0 + 0.0 avg prob of [ بنغالور] 0.02369939722120762loss 5.931 = 5.93 + 0.0 + 0.0 avg prob of [ بنغالور] 0.02674255520105362loss 5.592 = 5.591 + 0.001 + 0.0 avg prob of [ بنغالور] 0.029887793585658073loss 5.33 = 5.328 + 0.002 + 0.001 avg prob of [ بنغالور] 0.0341431125998497loss 5.077 = 5.074 + 0.003 + 0.001 avg prob of [ بنغالور] 0.04155164584517479loss 4.726 = 4.722 + 0.003 + 0.001 avg prob of [ بنغالور] 0.06144416332244873loss 4.289 = 4.284 + 0.004 + 0.001 avg prob of [ بنغالور] 0.1042114719748497loss 3.935 = 3.93 + 0.004 + 0.001 avg prob of [ بنغالور] 0.14275141060352325loss 3.664 = 3.658 + 0.005 + 0.001 avg prob of [ بنغالور] 0.1728764921426773loss 3.443 = 3.436 + 0.006 + 0.001 avg prob of [ بنغالور] 0.19868655502796173loss 3.218 = 3.21 + 0.006 + 0.001 avg prob of [ بنغالور] 0.22894494235515594loss 2.981 = 2.972 + 0.007 + 0.001 avg prob of [ بنغالور] 0.26425549387931824loss 2.768 = 2.759 + 0.007 + 0.002 avg prob of [ بنغالور] 0.3020307421684265loss 2.58 = 2.57 + 0.008 + 0.002 avg prob of [ بنغالور] 0.33930838108062744loss 2.393 = 2.382 + 0.009 + 0.002 avg prob of [ بنغالور] 0.37408339977264404loss 2.202 = 2.19 + 0.01 + 0.002 avg prob of [ بنغالور] 0.4072358310222626Delta norm: 144.92718505859375Change in target norm: 145.625 to 163.55149841308594 => 17.926498413085938Division Factor: 14.6484375Right vector norm: 9.893695831298828Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  2%|▏         | 209/10355 [54:19<43:20:57, 15.38s/it]Executing ROME algorithm for the update: [ولد سيباستيان كابوت في مدينة] -> [ كوفنتري]Computing left vector (u)...Selected u projection object سيباستيان كابوتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد سيباستيان كابوت في مدينة كوفنت | Token: وتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.097 = 6.097 + 0.0 + 0.0 avg prob of [ كوفنتري] 0.04775765910744667loss 5.692 = 5.692 + 0.001 + 0.0 avg prob of [ كوفنتري] 0.053979113698005676loss 5.337 = 5.335 + 0.002 + 0.0 avg prob of [ كوفنتري] 0.06751205772161484loss 5.011 = 5.008 + 0.002 + 0.001 avg prob of [ كوفنتري] 0.08489060401916504loss 4.728 = 4.724 + 0.004 + 0.001 avg prob of [ كوفنتري] 0.09723105281591415loss 4.458 = 4.453 + 0.005 + 0.001 avg prob of [ كوفنتري] 0.10981039702892303loss 4.213 = 4.206 + 0.006 + 0.001 avg prob of [ كوفنتري] 0.12381406128406525loss 3.985 = 3.977 + 0.007 + 0.001 avg prob of [ كوفنتري] 0.13925287127494812loss 3.759 = 3.749 + 0.009 + 0.001 avg prob of [ كوفنتري] 0.1570969521999359loss 3.537 = 3.526 + 0.01 + 0.002 avg prob of [ كوفنتري] 0.17744146287441254loss 3.318 = 3.305 + 0.011 + 0.002 avg prob of [ كوفنتري] 0.20145048201084137loss 3.083 = 3.069 + 0.013 + 0.002 avg prob of [ كوفنتري] 0.23159976303577423loss 2.827 = 2.81 + 0.014 + 0.002 avg prob of [ كوفنتري] 0.27029719948768616loss 2.636 = 2.618 + 0.016 + 0.002 avg prob of [ كوفنتري] 0.31511417031288147loss 2.452 = 2.432 + 0.017 + 0.002 avg prob of [ كوفنتري] 0.3597715497016907loss 2.246 = 2.226 + 0.018 + 0.002 avg prob of [ كوفنتري] 0.39919471740722656Delta norm: 145.58522033691406Change in target norm: 135.5 to 158.5563201904297 => 23.056320190429688Division Factor: 11.359375Right vector norm: 12.816305160522461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  2%|▏         | 210/10355 [54:34<43:16:45, 15.36s/it]Executing ROME algorithm for the update: [Mireia Belmonte è nata nella città di] -> [ Thunder Bay]Computing left vector (u)...Selected u projection object Mireia BelmonteLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Mireia Belmonte è nata nella città di Thunder | Token: monteRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.605 = 13.605 + 0.0 + 0.0 avg prob of [ Thunder Bay] 0.00011794955935329199loss 12.932 = 12.932 + 0.0 + 0.0 avg prob of [ Thunder Bay] 0.0004385635256767273loss 12.441 = 12.44 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.0011076148366555572loss 11.721 = 11.719 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.004544544965028763loss 10.95 = 10.947 + 0.002 + 0.001 avg prob of [ Thunder Bay] 0.020100761204957962loss 10.366 = 10.362 + 0.003 + 0.001 avg prob of [ Thunder Bay] 0.059510719031095505loss 9.775 = 9.771 + 0.003 + 0.001 avg prob of [ Thunder Bay] 0.17715546488761902loss 9.306 = 9.301 + 0.004 + 0.001 avg prob of [ Thunder Bay] 0.39582833647727966loss 9.112 = 9.106 + 0.005 + 0.001 avg prob of [ Thunder Bay] 0.46296292543411255loss 8.926 = 8.918 + 0.006 + 0.002 avg prob of [ Thunder Bay] 0.47179850935935974loss 8.678 = 8.67 + 0.007 + 0.002 avg prob of [ Thunder Bay] 0.4735848307609558loss 8.35 = 8.34 + 0.008 + 0.002 avg prob of [ Thunder Bay] 0.47409066557884216loss 7.915 = 7.904 + 0.009 + 0.002 avg prob of [ Thunder Bay] 0.47422197461128235loss 7.315 = 7.302 + 0.011 + 0.002 avg prob of [ Thunder Bay] 0.4741155505180359loss 6.953 = 6.938 + 0.014 + 0.002 avg prob of [ Thunder Bay] 0.4737429916858673loss 6.885 = 6.866 + 0.016 + 0.002 avg prob of [ Thunder Bay] 0.47316280007362366Delta norm: 137.1837158203125Change in target norm: 124.9375 to 146.02125549316406 => 21.083755493164062Division Factor: 12.359375Right vector norm: 11.099566459655762Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  2%|▏         | 211/10355 [54:49<43:24:39, 15.41s/it]Executing ROME algorithm for the update: [Kendall Jenner est née dans une ville nommée] -> [ Durban]Computing left vector (u)...Selected u projection object Kendall JennerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Kendall Jenner est née dans une ville nommée | Token:  JennerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.049 = 15.049 + 0.0 + 0.0 avg prob of [ Durban] 1.3089107824271196e-06loss 13.384 = 13.383 + 0.0 + 0.0 avg prob of [ Durban] 4.023305154987611e-05loss 12.465 = 12.463 + 0.001 + 0.0 avg prob of [ Durban] 0.0002745263045653701loss 11.838 = 11.836 + 0.002 + 0.001 avg prob of [ Durban] 0.0010222533019259572loss 11.071 = 11.068 + 0.002 + 0.001 avg prob of [ Durban] 0.004757412243634462loss 10.011 = 10.007 + 0.003 + 0.001 avg prob of [ Durban] 0.04005415365099907loss 9.18 = 9.175 + 0.004 + 0.001 avg prob of [ Durban] 0.1890515238046646loss 8.825 = 8.818 + 0.005 + 0.001 avg prob of [ Durban] 0.3118101954460144loss 8.631 = 8.623 + 0.007 + 0.001 avg prob of [ Durban] 0.3720262944698334loss 8.468 = 8.457 + 0.01 + 0.001 avg prob of [ Durban] 0.41125163435935974loss 8.32 = 8.307 + 0.011 + 0.002 avg prob of [ Durban] 0.4373317062854767loss 8.172 = 8.158 + 0.012 + 0.002 avg prob of [ Durban] 0.45313164591789246loss 8.014 = 7.999 + 0.012 + 0.002 avg prob of [ Durban] 0.4621126651763916loss 7.862 = 7.847 + 0.013 + 0.002 avg prob of [ Durban] 0.4671529531478882loss 7.704 = 7.688 + 0.014 + 0.002 avg prob of [ Durban] 0.47008752822875977loss 7.529 = 7.511 + 0.016 + 0.002 avg prob of [ Durban] 0.4718085825443268Delta norm: 144.08201599121094Change in target norm: 136.0 to 156.53573608398438 => 20.535736083984375Division Factor: 11.421875Right vector norm: 12.614567756652832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  2%|▏         | 212/10355 [55:05<43:40:07, 15.50s/it]Executing ROME algorithm for the update: [Erik Lamela joue professionnellement au sport du] -> [ basket-ball]Computing left vector (u)...Selected u projection object Erik LamelaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Erik Lamela joue professionnellement au sport du basket | Token: elaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.511 = 8.511 + 0.0 + 0.0 avg prob of [ basket-ball] 0.01403017994016409loss 7.148 = 7.148 + 0.0 + 0.0 avg prob of [ basket-ball] 0.24704872071743011loss 6.948 = 6.947 + 0.0 + 0.0 avg prob of [ basket-ball] 0.3530207574367523loss 6.903 = 6.902 + 0.001 + 0.001 avg prob of [ basket-ball] 0.36966845393180847loss 6.853 = 6.851 + 0.001 + 0.001 avg prob of [ basket-ball] 0.3822512924671173loss 6.789 = 6.787 + 0.001 + 0.001 avg prob of [ basket-ball] 0.3926032781600952loss 6.709 = 6.706 + 0.001 + 0.001 avg prob of [ basket-ball] 0.40096810460090637loss 6.604 = 6.601 + 0.001 + 0.001 avg prob of [ basket-ball] 0.4076882302761078loss 6.474 = 6.471 + 0.002 + 0.001 avg prob of [ basket-ball] 0.4131990373134613loss 6.318 = 6.314 + 0.002 + 0.001 avg prob of [ basket-ball] 0.41825777292251587loss 6.096 = 6.092 + 0.002 + 0.001 avg prob of [ basket-ball] 0.42327842116355896loss 5.557 = 5.553 + 0.003 + 0.001 avg prob of [ basket-ball] 0.4269850552082062loss 4.98 = 4.975 + 0.003 + 0.001 avg prob of [ basket-ball] 0.42737752199172974loss 4.773 = 4.767 + 0.004 + 0.002 avg prob of [ basket-ball] 0.428395539522171loss 4.725 = 4.719 + 0.004 + 0.002 avg prob of [ basket-ball] 0.41687801480293274loss 4.592 = 4.586 + 0.005 + 0.002 avg prob of [ basket-ball] 0.4191160202026367Delta norm: 138.85879516601562Change in target norm: 137.375 to 152.6553497314453 => 15.280349731445312Division Factor: 11.890625Right vector norm: 11.678007125854492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  2%|▏         | 213/10355 [55:20<43:03:43, 15.29s/it]Executing ROME algorithm for the update: [David Beckham juega profesionalmente al] -> [ turf]Computing left vector (u)...Selected u projection object David BeckhamLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Beckham juega profesionalmente al tur | Token:  BeckhamRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.567 = 9.567 + 0.0 + 0.0 avg prob of [ turf] 0.0006689938600175083loss 9.003 = 9.002 + 0.0 + 0.0 avg prob of [ turf] 0.0019621490500867367loss 8.718 = 8.717 + 0.001 + 0.0 avg prob of [ turf] 0.0031281134579330683loss 8.45 = 8.448 + 0.001 + 0.001 avg prob of [ turf] 0.004707795102149248loss 8.121 = 8.119 + 0.002 + 0.001 avg prob of [ turf] 0.008175518363714218loss 7.704 = 7.7 + 0.002 + 0.001 avg prob of [ turf] 0.017354700714349747loss 7.222 = 7.218 + 0.003 + 0.001 avg prob of [ turf] 0.04166975989937782loss 6.732 = 6.727 + 0.004 + 0.001 avg prob of [ turf] 0.09991928935050964loss 6.26 = 6.254 + 0.005 + 0.001 avg prob of [ turf] 0.21932190656661987loss 5.914 = 5.906 + 0.006 + 0.001 avg prob of [ turf] 0.35086479783058167loss 5.703 = 5.694 + 0.008 + 0.001 avg prob of [ turf] 0.41063404083251953loss 5.514 = 5.501 + 0.012 + 0.002 avg prob of [ turf] 0.43064063787460327loss 5.394 = 5.375 + 0.017 + 0.002 avg prob of [ turf] 0.4384247064590454loss 5.248 = 5.229 + 0.017 + 0.002 avg prob of [ turf] 0.44263482093811035loss 5.157 = 5.141 + 0.014 + 0.002 avg prob of [ turf] 0.4446292221546173loss 5.083 = 5.066 + 0.014 + 0.002 avg prob of [ turf] 0.4460177421569824Delta norm: 148.3535614013672Change in target norm: 145.375 to 167.48187255859375 => 22.10687255859375Division Factor: 11.953125Right vector norm: 12.411279678344727Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 214/10355 [55:35<42:34:29, 15.11s/it]Executing ROME algorithm for the update: [Hugo Gatti juega profesionalmente al] -> [ triatlón]Computing left vector (u)...Selected u projection object Hugo GattiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Hugo Gatti juega profesionalmente al triatl | Token: tiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.742 = 9.742 + 0.0 + 0.0 avg prob of [ triatlón] 0.007060762029141188loss 9.444 = 9.444 + 0.0 + 0.0 avg prob of [ triatlón] 0.01291695423424244loss 9.284 = 9.283 + 0.0 + 0.0 avg prob of [ triatlón] 0.016928749158978462loss 9.001 = 9.0 + 0.001 + 0.0 avg prob of [ triatlón] 0.02905716747045517loss 8.483 = 8.481 + 0.001 + 0.001 avg prob of [ triatlón] 0.08111636340618134loss 7.928 = 7.925 + 0.002 + 0.001 avg prob of [ triatlón] 0.2430485337972641loss 7.682 = 7.679 + 0.002 + 0.001 avg prob of [ triatlón] 0.366519570350647loss 7.589 = 7.586 + 0.003 + 0.001 avg prob of [ triatlón] 0.409423291683197loss 7.52 = 7.516 + 0.003 + 0.001 avg prob of [ triatlón] 0.42767593264579773loss 7.45 = 7.445 + 0.003 + 0.001 avg prob of [ triatlón] 0.4371733069419861loss 7.362 = 7.358 + 0.004 + 0.001 avg prob of [ triatlón] 0.4423811733722687loss 7.24 = 7.234 + 0.004 + 0.001 avg prob of [ triatlón] 0.44594791531562805loss 7.09 = 7.084 + 0.005 + 0.001 avg prob of [ triatlón] 0.44852349162101746loss 6.946 = 6.939 + 0.006 + 0.001 avg prob of [ triatlón] 0.4505251944065094loss 6.816 = 6.807 + 0.007 + 0.002 avg prob of [ triatlón] 0.4521975815296173loss 6.703 = 6.694 + 0.008 + 0.002 avg prob of [ triatlón] 0.4537690579891205Delta norm: 132.41763305664062Change in target norm: 142.5 to 156.8188018798828 => 14.318801879882812Division Factor: 12.328125Right vector norm: 10.741101264953613Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  2%|▏         | 215/10355 [55:50<42:29:38, 15.09s/it]Executing ROME algorithm for the update: [Hugh Skinner nació en la ciudad de] -> [ San Francisco]Computing left vector (u)...Selected u projection object Hugh SkinnerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Hugh Skinner nació en la ciudad de San | Token: nerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.287 = 7.287 + 0.0 + 0.0 avg prob of [ San Francisco] 0.02908061258494854loss 6.928 = 6.927 + 0.0 + 0.0 avg prob of [ San Francisco] 0.04983482137322426loss 6.399 = 6.399 + 0.0 + 0.0 avg prob of [ San Francisco] 0.11497385054826736loss 5.797 = 5.796 + 0.001 + 0.001 avg prob of [ San Francisco] 0.32412436604499817loss 5.504 = 5.502 + 0.001 + 0.001 avg prob of [ San Francisco] 0.44760823249816895loss 5.307 = 5.304 + 0.002 + 0.001 avg prob of [ San Francisco] 0.4644242227077484loss 5.094 = 5.091 + 0.002 + 0.001 avg prob of [ San Francisco] 0.4674249589443207loss 4.876 = 4.871 + 0.003 + 0.001 avg prob of [ San Francisco] 0.4680439233779907loss 4.709 = 4.703 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4677303433418274loss 4.557 = 4.549 + 0.006 + 0.002 avg prob of [ San Francisco] 0.46724483370780945loss 4.332 = 4.323 + 0.008 + 0.002 avg prob of [ San Francisco] 0.4671938717365265loss 4.117 = 4.106 + 0.009 + 0.002 avg prob of [ San Francisco] 0.4674631953239441loss 3.927 = 3.915 + 0.01 + 0.002 avg prob of [ San Francisco] 0.46790841221809387loss 3.713 = 3.701 + 0.01 + 0.002 avg prob of [ San Francisco] 0.46857595443725586loss 3.42 = 3.409 + 0.009 + 0.002 avg prob of [ San Francisco] 0.46961861848831177loss 3.079 = 3.068 + 0.009 + 0.002 avg prob of [ San Francisco] 0.47155526280403137Delta norm: 134.6310272216797Change in target norm: 127.0625 to 147.2373809814453 => 20.174880981445312Division Factor: 15.7265625Right vector norm: 8.56074047088623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s]  2%|▏         | 216/10355 [56:06<43:39:06, 15.50s/it]Executing ROME algorithm for the update: [Simon Boswell was born in the city of] -> [ Cartago]Computing left vector (u)...Selected u projection object Simon BoswellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Simon Boswell was born in the city of Carta | Token: wellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.754 = 10.754 + 0.0 + 0.0 avg prob of [ Cartago] 0.0016928890254348516loss 10.418 = 10.418 + 0.0 + 0.0 avg prob of [ Cartago] 0.0031155056785792112loss 9.707 = 9.706 + 0.0 + 0.0 avg prob of [ Cartago] 0.014080229215323925loss 8.615 = 8.614 + 0.001 + 0.001 avg prob of [ Cartago] 0.12538763880729675loss 8.1 = 8.098 + 0.001 + 0.001 avg prob of [ Cartago] 0.3435574471950531loss 7.966 = 7.963 + 0.002 + 0.001 avg prob of [ Cartago] 0.439888060092926loss 7.925 = 7.921 + 0.002 + 0.001 avg prob of [ Cartago] 0.46269673109054565loss 7.899 = 7.895 + 0.003 + 0.001 avg prob of [ Cartago] 0.4691673219203949loss 7.871 = 7.866 + 0.003 + 0.001 avg prob of [ Cartago] 0.4717220067977905loss 7.843 = 7.837 + 0.004 + 0.001 avg prob of [ Cartago] 0.47292500734329224loss 7.808 = 7.802 + 0.004 + 0.002 avg prob of [ Cartago] 0.47360628843307495loss 7.769 = 7.763 + 0.005 + 0.002 avg prob of [ Cartago] 0.47401756048202515loss 7.72 = 7.713 + 0.005 + 0.002 avg prob of [ Cartago] 0.4743001163005829loss 7.66 = 7.653 + 0.006 + 0.002 avg prob of [ Cartago] 0.47449976205825806loss 7.591 = 7.583 + 0.006 + 0.002 avg prob of [ Cartago] 0.47464680671691895loss 7.507 = 7.498 + 0.007 + 0.002 avg prob of [ Cartago] 0.47476905584335327Delta norm: 130.8203887939453Change in target norm: 131.75 to 147.986328125 => 16.236328125Division Factor: 12.6171875Right vector norm: 10.368427276611328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  2%|▏         | 217/10355 [56:21<43:08:30, 15.32s/it]Executing ROME algorithm for the update: [ولد روبرت هيريك في مدينة] -> [ لوس أنجلوس]Computing left vector (u)...Selected u projection object روبرت هيريكLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد روبرت هيريك في مدينة لوس أن | Token: يكRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.187 = 7.187 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.08217068016529083loss 6.871 = 6.871 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.10047077387571335loss 6.621 = 6.619 + 0.001 + 0.0 avg prob of [ لوس أنجلوس] 0.11881201714277267loss 6.326 = 6.324 + 0.002 + 0.001 avg prob of [ لوس أنجلوس] 0.1449865996837616loss 5.977 = 5.974 + 0.003 + 0.001 avg prob of [ لوس أنجلوس] 0.19210653007030487loss 5.624 = 5.62 + 0.004 + 0.001 avg prob of [ لوس أنجلوس] 0.24383340775966644loss 5.283 = 5.278 + 0.004 + 0.001 avg prob of [ لوس أنجلوس] 0.29056406021118164loss 4.969 = 4.963 + 0.005 + 0.001 avg prob of [ لوس أنجلوس] 0.3287642002105713loss 4.677 = 4.67 + 0.006 + 0.001 avg prob of [ لوس أنجلوس] 0.35634881258010864loss 4.41 = 4.403 + 0.006 + 0.001 avg prob of [ لوس أنجلوس] 0.3736812472343445loss 4.118 = 4.11 + 0.007 + 0.001 avg prob of [ لوس أنجلوس] 0.38442495465278625loss 3.83 = 3.821 + 0.007 + 0.002 avg prob of [ لوس أنجلوس] 0.39215201139450073loss 3.521 = 3.511 + 0.008 + 0.002 avg prob of [ لوس أنجلوس] 0.399429053068161loss 3.185 = 3.175 + 0.008 + 0.002 avg prob of [ لوس أنجلوس] 0.4066547155380249loss 2.828 = 2.816 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.4151858389377594loss 2.518 = 2.506 + 0.011 + 0.002 avg prob of [ لوس أنجلوس] 0.42635127902030945Delta norm: 152.90252685546875Change in target norm: 143.875 to 162.91915893554688 => 19.044158935546875Division Factor: 12.3984375Right vector norm: 12.332403182983398Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 218/10355 [56:37<43:31:15, 15.46s/it]Executing ROME algorithm for the update: [Лабруна, Анхель Амадео профессионально занимается] -> [ поло]Computing left vector (u)...Selected u projection object Лабруна, Анхель АмадеоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: Лабруна, Анхель Амадео профессионально занимается пол | Token: оRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.85 = 8.85 + 0.0 + 0.0 avg prob of [ поло] 0.0008291430422104895loss 8.738 = 8.738 + 0.0 + 0.0 avg prob of [ поло] 0.0008873434271663427loss 8.613 = 8.612 + 0.001 + 0.0 avg prob of [ поло] 0.0009423958254046738loss 8.38 = 8.378 + 0.001 + 0.001 avg prob of [ поло] 0.0010154941119253635loss 7.648 = 7.646 + 0.001 + 0.001 avg prob of [ поло] 0.0011798572959378362loss 7.335 = 7.332 + 0.002 + 0.001 avg prob of [ поло] 0.0013447050005197525loss 6.954 = 6.95 + 0.003 + 0.001 avg prob of [ поло] 0.0017648125067353249loss 6.421 = 6.415 + 0.004 + 0.001 avg prob of [ поло] 0.0026497195940464735loss 5.85 = 5.843 + 0.005 + 0.001 avg prob of [ поло] 0.004378069192171097loss 5.265 = 5.258 + 0.006 + 0.001 avg prob of [ поло] 0.00778204994276166loss 4.65 = 4.642 + 0.006 + 0.001 avg prob of [ поло] 0.014517906121909618loss 4.007 = 3.999 + 0.007 + 0.001 avg prob of [ поло] 0.027681604027748108loss 3.36 = 3.351 + 0.008 + 0.002 avg prob of [ поло] 0.05400775745511055loss 2.795 = 2.784 + 0.009 + 0.002 avg prob of [ поло] 0.09793748706579208loss 2.297 = 2.285 + 0.01 + 0.002 avg prob of [ поло] 0.1665024757385254loss 1.853 = 1.84 + 0.012 + 0.002 avg prob of [ поло] 0.267659068107605Delta norm: 153.9959259033203Change in target norm: 138.25 to 154.23048400878906 => 15.980484008789062Division Factor: 11.3046875Right vector norm: 13.622306823730469Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.27it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.68it/s]  2%|▏         | 219/10355 [56:54<44:50:16, 15.93s/it]Executing ROME algorithm for the update: [Луис Ислас профессионально занимается] -> [ волейбол]Computing left vector (u)...Selected u projection object Луис ИсласLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Луис Ислас профессионально занимается волейб | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.591 = 7.591 + 0.0 + 0.0 avg prob of [ волейбол] 0.004847265779972076loss 7.44 = 7.44 + 0.0 + 0.0 avg prob of [ волейбол] 0.0052412645891308784loss 7.275 = 7.274 + 0.001 + 0.0 avg prob of [ волейбол] 0.005647912621498108loss 7.017 = 7.014 + 0.002 + 0.001 avg prob of [ волейбол] 0.006044998299330473loss 6.716 = 6.712 + 0.003 + 0.001 avg prob of [ волейбол] 0.006195964757353067loss 6.396 = 6.391 + 0.004 + 0.001 avg prob of [ волейбол] 0.00655249273404479loss 6.065 = 6.06 + 0.004 + 0.001 avg prob of [ волейбол] 0.0076413569040596485loss 5.72 = 5.714 + 0.004 + 0.001 avg prob of [ волейбол] 0.009306252002716064loss 5.423 = 5.417 + 0.005 + 0.001 avg prob of [ волейбол] 0.01129809021949768loss 5.098 = 5.092 + 0.005 + 0.001 avg prob of [ волейбол] 0.014639155007898808loss 4.72 = 4.713 + 0.006 + 0.001 avg prob of [ волейбол] 0.022932153195142746loss 4.447 = 4.438 + 0.007 + 0.002 avg prob of [ волейбол] 0.03060809336602688loss 4.222 = 4.212 + 0.008 + 0.002 avg prob of [ волейбол] 0.03720548003911972loss 3.966 = 3.955 + 0.009 + 0.002 avg prob of [ волейбол] 0.04870220273733139loss 3.709 = 3.698 + 0.01 + 0.002 avg prob of [ волейбол] 0.06492871791124344loss 3.461 = 3.448 + 0.01 + 0.002 avg prob of [ волейбол] 0.08445768803358078Delta norm: 151.6093292236328Change in target norm: 140.5 to 160.6339874267578 => 20.133987426757812Division Factor: 9.8984375Right vector norm: 15.31649112701416Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s]  2%|▏         | 220/10355 [57:09<44:25:49, 15.78s/it]Executing ROME algorithm for the update: [Miguel Ángel Asturias nació en la ciudad de] -> [ Sarnia]Computing left vector (u)...Selected u projection object Miguel Ángel AsturiasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Miguel Ángel Asturias nació en la ciudad de Sarn | Token:  AsturiasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.809 = 9.809 + 0.0 + 0.0 avg prob of [ Sarnia] 0.001194454962387681loss 9.092 = 9.091 + 0.0 + 0.0 avg prob of [ Sarnia] 0.005106007680296898loss 8.739 = 8.738 + 0.001 + 0.0 avg prob of [ Sarnia] 0.010546388104557991loss 8.276 = 8.275 + 0.001 + 0.001 avg prob of [ Sarnia] 0.02723676897585392loss 7.883 = 7.881 + 0.001 + 0.001 avg prob of [ Sarnia] 0.0605708546936512loss 7.631 = 7.628 + 0.002 + 0.001 avg prob of [ Sarnia] 0.09997287392616272loss 7.396 = 7.393 + 0.002 + 0.001 avg prob of [ Sarnia] 0.1585390418767929loss 7.115 = 7.112 + 0.003 + 0.001 avg prob of [ Sarnia] 0.2742919921875loss 6.945 = 6.94 + 0.003 + 0.001 avg prob of [ Sarnia] 0.37192216515541077loss 6.869 = 6.863 + 0.004 + 0.001 avg prob of [ Sarnia] 0.4110385477542877loss 6.804 = 6.798 + 0.005 + 0.002 avg prob of [ Sarnia] 0.43389225006103516loss 6.744 = 6.737 + 0.005 + 0.002 avg prob of [ Sarnia] 0.44725435972213745loss 6.677 = 6.67 + 0.006 + 0.002 avg prob of [ Sarnia] 0.45482754707336426loss 6.602 = 6.593 + 0.006 + 0.002 avg prob of [ Sarnia] 0.45946457982063293loss 6.511 = 6.502 + 0.007 + 0.002 avg prob of [ Sarnia] 0.46236133575439453loss 6.406 = 6.397 + 0.008 + 0.002 avg prob of [ Sarnia] 0.464329332113266Delta norm: 131.86648559570312Change in target norm: 130.0 to 146.6994171142578 => 16.699417114257812Division Factor: 10.7265625Right vector norm: 12.293452262878418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  2%|▏         | 221/10355 [57:24<43:27:32, 15.44s/it]Executing ROME algorithm for the update: [Melisenda de Jerusalén nació en la ciudad de] -> [ Surat]Computing left vector (u)...Selected u projection object Melisenda de JerusalénLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Melisenda de Jerusalén nació en la ciudad de | Token:  JerusalénRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.183 = 15.183 + 0.0 + 0.0 avg prob of [ Surat] 8.02382487563591e-07loss 14.686 = 14.686 + 0.0 + 0.0 avg prob of [ Surat] 2.0696477349702036e-06loss 14.201 = 14.199 + 0.001 + 0.0 avg prob of [ Surat] 5.060125658928882e-06loss 13.835 = 13.831 + 0.003 + 0.001 avg prob of [ Surat] 9.986274562834296e-06loss 13.562 = 13.556 + 0.005 + 0.001 avg prob of [ Surat] 1.645278462092392e-05loss 13.299 = 13.291 + 0.007 + 0.001 avg prob of [ Surat] 2.6020903533208184e-05loss 12.991 = 12.983 + 0.008 + 0.001 avg prob of [ Surat] 4.330358569859527e-05loss 12.587 = 12.577 + 0.008 + 0.001 avg prob of [ Surat] 8.40618449728936e-05loss 12.008 = 11.998 + 0.009 + 0.001 avg prob of [ Surat] 0.00023087502631824464loss 11.058 = 11.048 + 0.009 + 0.002 avg prob of [ Surat] 0.0014108528848737478loss 10.088 = 10.077 + 0.009 + 0.002 avg prob of [ Surat] 0.009110759012401104loss 9.659 = 9.647 + 0.01 + 0.002 avg prob of [ Surat] 0.01867390051484108loss 9.486 = 9.474 + 0.01 + 0.002 avg prob of [ Surat] 0.022972993552684784loss 9.26 = 9.247 + 0.011 + 0.002 avg prob of [ Surat] 0.03130335360765457loss 8.941 = 8.928 + 0.011 + 0.002 avg prob of [ Surat] 0.05116637796163559loss 8.528 = 8.513 + 0.012 + 0.002 avg prob of [ Surat] 0.09980420023202896Delta norm: 146.88723754882812Change in target norm: 126.6875 to 146.64952087402344 => 19.962020874023438Division Factor: 10.5546875Right vector norm: 13.916777610778809Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  2%|▏         | 222/10355 [57:38<42:46:16, 15.20s/it]Executing ROME algorithm for the update: [Andre Ward professionally plays the sport of] -> [ field hockey]Computing left vector (u)...Selected u projection object Andre WardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Andre Ward professionally plays the sport of field | Token:  WardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.366 = 8.366 + 0.0 + 0.0 avg prob of [ field hockey] 0.004602891393005848loss 7.654 = 7.653 + 0.0 + 0.0 avg prob of [ field hockey] 0.01624649204313755loss 7.527 = 7.526 + 0.001 + 0.0 avg prob of [ field hockey] 0.019259044900536537loss 7.378 = 7.376 + 0.001 + 0.0 avg prob of [ field hockey] 0.022678840905427933loss 7.145 = 7.143 + 0.002 + 0.001 avg prob of [ field hockey] 0.030425339937210083loss 6.781 = 6.778 + 0.002 + 0.001 avg prob of [ field hockey] 0.05126331001520157loss 6.428 = 6.424 + 0.003 + 0.001 avg prob of [ field hockey] 0.07873313874006271loss 6.04 = 6.036 + 0.003 + 0.001 avg prob of [ field hockey] 0.118092380464077loss 5.594 = 5.589 + 0.004 + 0.001 avg prob of [ field hockey] 0.1781114935874939loss 5.15 = 5.145 + 0.005 + 0.001 avg prob of [ field hockey] 0.22682012617588043loss 4.777 = 4.77 + 0.006 + 0.001 avg prob of [ field hockey] 0.24962973594665527loss 4.545 = 4.537 + 0.007 + 0.001 avg prob of [ field hockey] 0.27721908688545227loss 4.252 = 4.242 + 0.009 + 0.001 avg prob of [ field hockey] 0.3180641531944275loss 3.986 = 3.974 + 0.01 + 0.001 avg prob of [ field hockey] 0.3560921549797058loss 3.778 = 3.765 + 0.011 + 0.002 avg prob of [ field hockey] 0.38151660561561584loss 3.585 = 3.572 + 0.011 + 0.002 avg prob of [ field hockey] 0.39757847785949707Delta norm: 140.86251831054688Change in target norm: 145.125 to 160.863525390625 => 15.738525390625Division Factor: 12.109375Right vector norm: 11.63251781463623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 223/10355 [57:56<44:21:27, 15.76s/it]Executing ROME algorithm for the update: [فيرناندو موسليرا يلعب بشكل احترافي في رياضة] -> [ زلاجة جماعية]Computing left vector (u)...Selected u projection object فيرناندو موسليراLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: فيرناندو موسليرا يلعب بشكل احترافي في رياضة زلاجة جم | Token: يراRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.62 = 9.62 + 0.0 + 0.0 avg prob of [ زلاجة جماعية] 0.004577401094138622loss 9.442 = 9.441 + 0.002 + 0.0 avg prob of [ زلاجة جماعية] 0.004963338375091553loss 9.06 = 9.055 + 0.005 + 0.0 avg prob of [ زلاجة جماعية] 0.005298512522131205loss 8.742 = 8.734 + 0.008 + 0.001 avg prob of [ زلاجة جماعية] 0.004221849609166384loss 8.318 = 8.313 + 0.005 + 0.001 avg prob of [ زلاجة جماعية] 0.00612075487151742loss 8.014 = 8.01 + 0.003 + 0.001 avg prob of [ زلاجة جماعية] 0.006861366797238588loss 7.707 = 7.703 + 0.003 + 0.001 avg prob of [ زلاجة جماعية] 0.008007782511413097loss 7.437 = 7.432 + 0.004 + 0.001 avg prob of [ زلاجة جماعية] 0.009377866052091122loss 7.213 = 7.207 + 0.005 + 0.001 avg prob of [ زلاجة جماعية] 0.010828247293829918loss 6.953 = 6.946 + 0.006 + 0.001 avg prob of [ زلاجة جماعية] 0.013207551091909409loss 6.636 = 6.628 + 0.007 + 0.001 avg prob of [ زلاجة جماعية] 0.01679319702088833loss 6.303 = 6.294 + 0.008 + 0.002 avg prob of [ زلاجة جماعية] 0.021065033972263336loss 6.002 = 5.992 + 0.009 + 0.002 avg prob of [ زلاجة جماعية] 0.02497515268623829loss 5.697 = 5.685 + 0.011 + 0.002 avg prob of [ زلاجة جماعية] 0.030415311455726624loss 5.317 = 5.301 + 0.014 + 0.002 avg prob of [ زلاجة جماعية] 0.040982093662023544loss 4.889 = 4.872 + 0.015 + 0.002 avg prob of [ زلاجة جماعية] 0.06007712334394455Delta norm: 146.3631134033203Change in target norm: 135.25 to 155.0835723876953 => 19.833572387695312Division Factor: 10.8984375Right vector norm: 13.429734230041504Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.33it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  2%|▏         | 224/10355 [58:11<43:44:24, 15.54s/it]Executing ROME algorithm for the update: [Emmanuel Lubezki was born in the city of] -> [ Los Angeles]Computing left vector (u)...Selected u projection object Emmanuel LubezkiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Emmanuel Lubezki was born in the city of Los | Token: kiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.984 = 7.984 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.024597009643912315loss 7.235 = 7.234 + 0.001 + 0.0 avg prob of [ Los Angeles] 0.11002285033464432loss 6.991 = 6.99 + 0.001 + 0.0 avg prob of [ Los Angeles] 0.17144054174423218loss 6.795 = 6.793 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.248711496591568loss 6.673 = 6.671 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.3093138337135315loss 6.595 = 6.593 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.3482731580734253loss 6.536 = 6.533 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.37307676672935486loss 6.481 = 6.477 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.39026007056236267loss 6.423 = 6.419 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.40399596095085144loss 6.359 = 6.354 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.41523897647857666loss 6.285 = 6.279 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.4246613681316376loss 6.202 = 6.196 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.43276533484458923loss 6.122 = 6.116 + 0.005 + 0.002 avg prob of [ Los Angeles] 0.43944251537323loss 6.051 = 6.043 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.4448566436767578loss 5.969 = 5.96 + 0.007 + 0.002 avg prob of [ Los Angeles] 0.44935858249664307loss 5.869 = 5.859 + 0.008 + 0.002 avg prob of [ Los Angeles] 0.4530331790447235Delta norm: 128.5438995361328Change in target norm: 125.8125 to 141.87393188476562 => 16.061431884765625Division Factor: 13.0703125Right vector norm: 9.834799766540527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 225/10355 [58:26<43:16:56, 15.38s/it]Executing ROME algorithm for the update: [ولد ستيف جوبز في مدينة] -> [ سينت ديه دي فوج]Computing left vector (u)...Selected u projection object ستيف جوبزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد ستيف جوبز في مدينة سينت ديه دي | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.09 = 9.09 + 0.0 + 0.0 avg prob of [ سينت ديه دي فوج] 0.0008666518260724843loss 8.265 = 8.264 + 0.001 + 0.0 avg prob of [ سينت ديه دي فوج] 0.0011848609428852797loss 7.805 = 7.804 + 0.001 + 0.001 avg prob of [ سينت ديه دي فوج] 0.0015426219906657934loss 7.431 = 7.429 + 0.002 + 0.001 avg prob of [ سينت ديه دي فوج] 0.0021842147689312696loss 7.012 = 7.008 + 0.003 + 0.001 avg prob of [ سينت ديه دي فوج] 0.003735483391210437loss 6.717 = 6.713 + 0.003 + 0.001 avg prob of [ سينت ديه دي فوج] 0.005299475509673357loss 6.456 = 6.451 + 0.004 + 0.001 avg prob of [ سينت ديه دي فوج] 0.006937229540199041loss 6.168 = 6.162 + 0.004 + 0.001 avg prob of [ سينت ديه دي فوج] 0.00920630618929863loss 5.881 = 5.875 + 0.005 + 0.001 avg prob of [ سينت ديه دي فوج] 0.011738205328583717loss 5.626 = 5.619 + 0.006 + 0.002 avg prob of [ سينت ديه دي فوج] 0.014358959160745144loss 5.414 = 5.405 + 0.007 + 0.002 avg prob of [ سينت ديه دي فوج] 0.016715070232748985loss 5.211 = 5.201 + 0.008 + 0.002 avg prob of [ سينت ديه دي فوج] 0.01912228949368loss 4.981 = 4.971 + 0.009 + 0.002 avg prob of [ سينت ديه دي فوج] 0.022126713767647743loss 4.727 = 4.716 + 0.01 + 0.002 avg prob of [ سينت ديه دي فوج] 0.02578236348927021loss 4.47 = 4.457 + 0.01 + 0.002 avg prob of [ سينت ديه دي فوج] 0.030262799933552742loss 4.209 = 4.196 + 0.011 + 0.002 avg prob of [ سينت ديه دي فوج] 0.036071524024009705Delta norm: 134.08592224121094Change in target norm: 123.625 to 143.2099151611328 => 19.584915161132812Division Factor: 11.953125Right vector norm: 11.217645645141602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  2%|▏         | 226/10355 [58:40<42:42:46, 15.18s/it]Executing ROME algorithm for the update: [Christopher Fulford nació en la ciudad de] -> [ Jerusalén]Computing left vector (u)...Selected u projection object Christopher FulfordLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Christopher Fulford nació en la ciudad de | Token: fordRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.516 = 14.516 + 0.0 + 0.0 avg prob of [ Jerusalén] 6.067279537091963e-05loss 14.085 = 14.084 + 0.0 + 0.0 avg prob of [ Jerusalén] 0.00014128375914879143loss 13.597 = 13.596 + 0.0 + 0.0 avg prob of [ Jerusalén] 0.00038043453241698444loss 12.282 = 12.281 + 0.001 + 0.001 avg prob of [ Jerusalén] 0.0060440544039011loss 10.931 = 10.929 + 0.001 + 0.001 avg prob of [ Jerusalén] 0.09749461710453033loss 10.692 = 10.69 + 0.002 + 0.001 avg prob of [ Jerusalén] 0.1568540334701538loss 10.494 = 10.491 + 0.002 + 0.001 avg prob of [ Jerusalén] 0.23257355391979218loss 10.331 = 10.327 + 0.002 + 0.001 avg prob of [ Jerusalén] 0.32068830728530884loss 10.232 = 10.228 + 0.003 + 0.001 avg prob of [ Jerusalén] 0.3833576440811157loss 10.176 = 10.172 + 0.003 + 0.001 avg prob of [ Jerusalén] 0.41928473114967346loss 10.139 = 10.134 + 0.004 + 0.001 avg prob of [ Jerusalén] 0.4390305280685425loss 10.111 = 10.105 + 0.004 + 0.001 avg prob of [ Jerusalén] 0.45051485300064087loss 10.081 = 10.075 + 0.004 + 0.001 avg prob of [ Jerusalén] 0.4576704800128937loss 10.053 = 10.047 + 0.005 + 0.001 avg prob of [ Jerusalén] 0.46235302090644836loss 10.023 = 10.016 + 0.005 + 0.002 avg prob of [ Jerusalén] 0.4656297564506531loss 9.989 = 9.982 + 0.005 + 0.002 avg prob of [ Jerusalén] 0.4679342210292816Delta norm: 130.2353973388672Change in target norm: 137.5 to 150.98736572265625 => 13.48736572265625Division Factor: 11.8671875Right vector norm: 10.974411964416504Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  2%|▏         | 227/10355 [58:58<44:47:42, 15.92s/it]Executing ROME algorithm for the update: [Edward Evans, 1st Baron Mountevans was born in the city of] -> [ Avilés]Computing left vector (u)...Selected u projection object Edward Evans, 1st Baron MountevansLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Edward Evans, 1st Baron Mountevans was born in the city of Av | Token: ansRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.819 = 13.819 + 0.0 + 0.0 avg prob of [ Avilés] 0.00014018139336258173loss 13.286 = 13.285 + 0.0 + 0.0 avg prob of [ Avilés] 0.0003372851060703397loss 12.522 = 12.521 + 0.0 + 0.001 avg prob of [ Avilés] 0.0014062405098229647loss 12.333 = 12.332 + 0.001 + 0.001 avg prob of [ Avilés] 0.0018194477306678891loss 11.7 = 11.699 + 0.001 + 0.001 avg prob of [ Avilés] 0.006360740400850773loss 11.28 = 11.277 + 0.002 + 0.001 avg prob of [ Avilés] 0.014371557161211967loss 11.049 = 11.045 + 0.003 + 0.001 avg prob of [ Avilés] 0.021646276116371155loss 10.878 = 10.872 + 0.005 + 0.001 avg prob of [ Avilés] 0.028767138719558716loss 10.654 = 10.647 + 0.006 + 0.001 avg prob of [ Avilés] 0.0425337553024292loss 10.326 = 10.317 + 0.007 + 0.002 avg prob of [ Avilés] 0.07771014422178268loss 9.916 = 9.906 + 0.008 + 0.002 avg prob of [ Avilés] 0.16833624243736267loss 9.599 = 9.589 + 0.008 + 0.002 avg prob of [ Avilés] 0.2923133969306946loss 9.396 = 9.386 + 0.008 + 0.002 avg prob of [ Avilés] 0.3797314167022705loss 9.253 = 9.244 + 0.007 + 0.002 avg prob of [ Avilés] 0.4189910888671875loss 9.126 = 9.117 + 0.006 + 0.002 avg prob of [ Avilés] 0.4312547445297241loss 8.955 = 8.947 + 0.006 + 0.002 avg prob of [ Avilés] 0.4477555453777313Delta norm: 131.25772094726562Change in target norm: 117.875 to 133.4917755126953 => 15.616775512695312Division Factor: 12.0234375Right vector norm: 10.916820526123047Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  2%|▏         | 228/10355 [59:13<43:52:33, 15.60s/it]Executing ROME algorithm for the update: [ولد تشارلز ليال في مدينة] -> [ دبي]Computing left vector (u)...Selected u projection object تشارلز ليالLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد تشارلز ليال في مدينة | Token: الRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.497 = 12.497 + 0.0 + 0.0 avg prob of [ دبي] 0.0002585264155641198loss 11.403 = 11.402 + 0.001 + 0.0 avg prob of [ دبي] 0.0009736703359521925loss 10.42 = 10.418 + 0.002 + 0.0 avg prob of [ دبي] 0.0030626035295426846loss 9.655 = 9.651 + 0.004 + 0.001 avg prob of [ دبي] 0.005984948482364416loss 8.893 = 8.887 + 0.005 + 0.001 avg prob of [ دبي] 0.010893060825765133loss 8.044 = 8.036 + 0.007 + 0.001 avg prob of [ دبي] 0.019959991797804832loss 7.096 = 7.089 + 0.007 + 0.001 avg prob of [ دبي] 0.041319508105516434loss 6.207 = 6.2 + 0.006 + 0.001 avg prob of [ دبي] 0.10436269640922546loss 5.344 = 5.336 + 0.006 + 0.001 avg prob of [ دبي] 0.25092941522598267loss 4.646 = 4.638 + 0.007 + 0.001 avg prob of [ دبي] 0.3750680983066559loss 3.998 = 3.989 + 0.007 + 0.001 avg prob of [ دبي] 0.42393457889556885loss 3.194 = 3.184 + 0.008 + 0.001 avg prob of [ دبي] 0.44236820936203003loss 2.492 = 2.48 + 0.01 + 0.002 avg prob of [ دبي] 0.46282723546028137loss 1.733 = 1.721 + 0.011 + 0.002 avg prob of [ دبي] 0.5437869429588318loss 1.201 = 1.188 + 0.011 + 0.002 avg prob of [ دبي] 0.7512776851654053loss 1.054 = 1.04 + 0.012 + 0.002 avg prob of [ دبي] 0.8593557476997375Delta norm: 150.75015258789062Change in target norm: 148.125 to 167.15029907226562 => 19.025299072265625Division Factor: 18.875Right vector norm: 7.986763000488281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  2%|▏         | 229/10355 [59:27<42:49:48, 15.23s/it]Executing ROME algorithm for the update: [ولد فال غيست في مدينة] -> [ الإسكندرية]Computing left vector (u)...Selected u projection object فال غيستLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد فال غيست في مدينة | Token: ستRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.163 = 10.163 + 0.0 + 0.0 avg prob of [ الإسكندرية] 0.0008506497251801193loss 9.652 = 9.652 + 0.0 + 0.0 avg prob of [ الإسكندرية] 0.002047932241111994loss 9.362 = 9.36 + 0.001 + 0.0 avg prob of [ الإسكندرية] 0.0031928932294249535loss 9.094 = 9.091 + 0.003 + 0.001 avg prob of [ الإسكندرية] 0.004714372102171183loss 8.8 = 8.795 + 0.003 + 0.001 avg prob of [ الإسكندرية] 0.007114902138710022loss 8.455 = 8.45 + 0.004 + 0.001 avg prob of [ الإسكندرية] 0.011798461899161339loss 8.038 = 8.032 + 0.005 + 0.001 avg prob of [ الإسكندرية] 0.022798798978328705loss 7.547 = 7.54 + 0.006 + 0.001 avg prob of [ الإسكندرية] 0.04979458451271057loss 7.033 = 7.026 + 0.006 + 0.001 avg prob of [ الإسكندرية] 0.10744168609380722loss 6.629 = 6.621 + 0.007 + 0.001 avg prob of [ الإسكندرية] 0.17837633192539215loss 6.314 = 6.305 + 0.008 + 0.001 avg prob of [ الإسكندرية] 0.2323436588048935loss 5.985 = 5.974 + 0.009 + 0.002 avg prob of [ الإسكندرية] 0.27650487422943115loss 5.606 = 5.594 + 0.01 + 0.002 avg prob of [ الإسكندرية] 0.31391027569770813loss 5.143 = 5.129 + 0.012 + 0.002 avg prob of [ الإسكندرية] 0.3450556993484497loss 4.599 = 4.583 + 0.014 + 0.002 avg prob of [ الإسكندرية] 0.370121031999588loss 4.053 = 4.034 + 0.017 + 0.002 avg prob of [ الإسكندرية] 0.39343297481536865Delta norm: 151.4495391845703Change in target norm: 143.0 to 164.33644104003906 => 21.336441040039062Division Factor: 14.5703125Right vector norm: 10.394392013549805Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  2%|▏         | 230/10355 [59:42<42:14:20, 15.02s/it]Executing ROME algorithm for the update: [Valentín Carboni juega profesionalmente al] -> [ arte marcial]Computing left vector (u)...Selected u projection object Valentín CarboniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Valentín Carboni juega profesionalmente al arte marc | Token: oniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.277 = 11.277 + 0.0 + 0.0 avg prob of [ arte marcial] 0.0031008494552224874loss 11.088 = 11.087 + 0.0 + 0.0 avg prob of [ arte marcial] 0.004188043996691704loss 10.868 = 10.867 + 0.0 + 0.0 avg prob of [ arte marcial] 0.005875508766621351loss 10.593 = 10.592 + 0.001 + 0.001 avg prob of [ arte marcial] 0.009251585230231285loss 10.368 = 10.366 + 0.001 + 0.001 avg prob of [ arte marcial] 0.012932365760207176loss 10.175 = 10.172 + 0.002 + 0.001 avg prob of [ arte marcial] 0.0157430712133646loss 9.929 = 9.926 + 0.003 + 0.001 avg prob of [ arte marcial] 0.019560467451810837loss 9.554 = 9.55 + 0.003 + 0.001 avg prob of [ arte marcial] 0.030704498291015625loss 9.117 = 9.111 + 0.004 + 0.001 avg prob of [ arte marcial] 0.0567222498357296loss 8.817 = 8.811 + 0.005 + 0.001 avg prob of [ arte marcial] 0.06931397318840027loss 8.464 = 8.457 + 0.006 + 0.001 avg prob of [ arte marcial] 0.08768656104803085loss 8.197 = 8.188 + 0.007 + 0.001 avg prob of [ arte marcial] 0.10741814970970154loss 7.96 = 7.95 + 0.009 + 0.002 avg prob of [ arte marcial] 0.13502949476242065loss 7.687 = 7.677 + 0.008 + 0.002 avg prob of [ arte marcial] 0.18331322073936462loss 7.35 = 7.34 + 0.009 + 0.002 avg prob of [ arte marcial] 0.2696809470653534loss 7.029 = 7.017 + 0.009 + 0.002 avg prob of [ arte marcial] 0.3630525469779968Delta norm: 146.3850860595703Change in target norm: 142.75 to 161.24989318847656 => 18.499893188476562Division Factor: 13.4921875Right vector norm: 10.849617958068848Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  2%|▏         | 231/10355 [59:59<44:01:31, 15.66s/it]Executing ROME algorithm for the update: [Giancarlo Maldonado juega profesionalmente al] -> [ gimnasia rítmica]Computing left vector (u)...Selected u projection object Giancarlo MaldonadoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Giancarlo Maldonado juega profesionalmente al gimnasia rít | Token:  MaldonadoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.042 = 10.042 + 0.0 + 0.0 avg prob of [ gimnasia rítmica] 0.018459878861904144loss 9.912 = 9.912 + 0.0 + 0.0 avg prob of [ gimnasia rítmica] 0.0206275824457407loss 9.796 = 9.795 + 0.001 + 0.0 avg prob of [ gimnasia rítmica] 0.02243262343108654loss 9.662 = 9.661 + 0.001 + 0.001 avg prob of [ gimnasia rítmica] 0.024115292355418205loss 9.495 = 9.492 + 0.002 + 0.001 avg prob of [ gimnasia rítmica] 0.025779247283935547loss 9.318 = 9.314 + 0.003 + 0.001 avg prob of [ gimnasia rítmica] 0.027541106566786766loss 9.136 = 9.131 + 0.003 + 0.001 avg prob of [ gimnasia rítmica] 0.029766373336315155loss 8.942 = 8.937 + 0.004 + 0.001 avg prob of [ gimnasia rítmica] 0.033352069556713104loss 8.734 = 8.728 + 0.005 + 0.001 avg prob of [ gimnasia rítmica] 0.04174418747425079loss 8.466 = 8.457 + 0.007 + 0.001 avg prob of [ gimnasia rítmica] 0.055438339710235596loss 8.194 = 8.182 + 0.011 + 0.002 avg prob of [ gimnasia rítmica] 0.07531803101301193loss 7.896 = 7.885 + 0.01 + 0.002 avg prob of [ gimnasia rítmica] 0.11268413066864014loss 7.563 = 7.553 + 0.009 + 0.002 avg prob of [ gimnasia rítmica] 0.18718203902244568loss 7.305 = 7.295 + 0.009 + 0.002 avg prob of [ gimnasia rítmica] 0.2764083743095398loss 7.066 = 7.056 + 0.009 + 0.002 avg prob of [ gimnasia rítmica] 0.3769513666629791loss 6.952 = 6.94 + 0.009 + 0.002 avg prob of [ gimnasia rítmica] 0.40400493144989014Delta norm: 159.32249450683594Change in target norm: 143.625 to 167.6810760498047 => 24.056076049804688Division Factor: 12.4765625Right vector norm: 12.769742012023926Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  2%|▏         | 232/10355 [1:00:13<42:58:05, 15.28s/it]Executing ROME algorithm for the update: [Roque Sáenz Peña falleció en el año] -> [ 1925]Computing left vector (u)...Selected u projection object Roque Sáenz PeñaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Roque Sáenz Peña falleció en el año | Token:  PeñaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.432 = 11.432 + 0.0 + 0.0 avg prob of [ 1925] 0.0015008702175691724loss 10.785 = 10.784 + 0.0 + 0.0 avg prob of [ 1925] 0.004641667939722538loss 10.176 = 10.175 + 0.001 + 0.0 avg prob of [ 1925] 0.011607014574110508loss 9.437 = 9.436 + 0.001 + 0.001 avg prob of [ 1925] 0.02989221177995205loss 8.689 = 8.686 + 0.002 + 0.001 avg prob of [ 1925] 0.07801786065101624loss 8.114 = 8.111 + 0.002 + 0.001 avg prob of [ 1925] 0.18604840338230133loss 7.733 = 7.729 + 0.003 + 0.001 avg prob of [ 1925] 0.3179026246070862loss 7.424 = 7.42 + 0.004 + 0.001 avg prob of [ 1925] 0.40192440152168274loss 7.115 = 7.11 + 0.004 + 0.001 avg prob of [ 1925] 0.44205811619758606loss 6.774 = 6.768 + 0.005 + 0.001 avg prob of [ 1925] 0.45929551124572754loss 6.4 = 6.392 + 0.006 + 0.002 avg prob of [ 1925] 0.46678784489631653loss 5.984 = 5.975 + 0.007 + 0.002 avg prob of [ 1925] 0.4703744351863861loss 5.517 = 5.507 + 0.008 + 0.002 avg prob of [ 1925] 0.47221770882606506loss 4.991 = 4.98 + 0.008 + 0.002 avg prob of [ 1925] 0.47328242659568787loss 4.406 = 4.395 + 0.009 + 0.002 avg prob of [ 1925] 0.4740489721298218loss 3.743 = 3.731 + 0.01 + 0.002 avg prob of [ 1925] 0.4752454459667206Delta norm: 138.97689819335938Change in target norm: 137.625 to 159.16610717773438 => 21.541107177734375Division Factor: 17.53125Right vector norm: 7.9273810386657715Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 233/10355 [1:00:27<41:56:35, 14.92s/it]Executing ROME algorithm for the update: [سولومون هيل يلعب بشكل احترافي في رياضة] -> [ كرة القدم]Computing left vector (u)...Selected u projection object سولومون هيلLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: سولومون هيل يلعب بشكل احترافي في رياضة كرة | Token:  هيلRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.225 = 5.225 + 0.0 + 0.0 avg prob of [ كرة القدم] 0.13222581148147583loss 4.969 = 4.969 + 0.0 + 0.0 avg prob of [ كرة القدم] 0.18891724944114685loss 4.708 = 4.707 + 0.001 + 0.0 avg prob of [ كرة القدم] 0.24295033514499664loss 4.342 = 4.34 + 0.001 + 0.001 avg prob of [ كرة القدم] 0.2988165616989136loss 3.955 = 3.952 + 0.003 + 0.001 avg prob of [ كرة القدم] 0.3489859104156494loss 3.771 = 3.766 + 0.004 + 0.001 avg prob of [ كرة القدم] 0.41620567440986633loss 3.67 = 3.664 + 0.004 + 0.001 avg prob of [ كرة القدم] 0.44004204869270325loss 3.477 = 3.471 + 0.005 + 0.001 avg prob of [ كرة القدم] 0.45026370882987976loss 3.213 = 3.206 + 0.006 + 0.001 avg prob of [ كرة القدم] 0.45681247115135193loss 2.973 = 2.965 + 0.006 + 0.001 avg prob of [ كرة القدم] 0.45964887738227844loss 2.703 = 2.694 + 0.007 + 0.002 avg prob of [ كرة القدم] 0.4630522131919861loss 2.42 = 2.41 + 0.008 + 0.002 avg prob of [ كرة القدم] 0.46824896335601807loss 2.155 = 2.144 + 0.009 + 0.002 avg prob of [ كرة القدم] 0.4753269553184509loss 2.017 = 2.005 + 0.009 + 0.002 avg prob of [ كرة القدم] 0.4813137948513031loss 1.8 = 1.789 + 0.01 + 0.002 avg prob of [ كرة القدم] 0.49796396493911743loss 1.612 = 1.6 + 0.01 + 0.002 avg prob of [ كرة القدم] 0.5202433466911316Delta norm: 150.42478942871094Change in target norm: 139.25 to 159.34274291992188 => 20.092742919921875Division Factor: 10.953125Right vector norm: 13.733504295349121Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  2%|▏         | 234/10355 [1:00:42<41:49:11, 14.88s/it]Executing ROME algorithm for the update: [Antonio Carbajal was born in the city of] -> [ Liège]Computing left vector (u)...Selected u projection object Antonio CarbajalLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Antonio Carbajal was born in the city of | Token: ajalRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.661 = 14.661 + 0.0 + 0.0 avg prob of [ Liège] 4.543489012576174e-06loss 13.929 = 13.929 + 0.0 + 0.0 avg prob of [ Liège] 1.886102108983323e-05loss 13.517 = 13.516 + 0.001 + 0.0 avg prob of [ Liège] 4.4140506361145526e-05loss 12.959 = 12.957 + 0.001 + 0.001 avg prob of [ Liège] 0.0001380618632538244loss 12.459 = 12.456 + 0.002 + 0.001 avg prob of [ Liège] 0.0003957190492656082loss 12.023 = 12.019 + 0.002 + 0.001 avg prob of [ Liège] 0.0010372850811108947loss 10.896 = 10.892 + 0.003 + 0.001 avg prob of [ Liège] 0.012722253799438477loss 9.375 = 9.371 + 0.004 + 0.001 avg prob of [ Liège] 0.25734812021255493loss 9.127 = 9.121 + 0.004 + 0.001 avg prob of [ Liège] 0.35671770572662354loss 9.064 = 9.058 + 0.005 + 0.001 avg prob of [ Liège] 0.3861657977104187loss 9.004 = 8.997 + 0.005 + 0.001 avg prob of [ Liège] 0.4145472049713135loss 8.949 = 8.942 + 0.006 + 0.001 avg prob of [ Liège] 0.43863216042518616loss 8.898 = 8.89 + 0.007 + 0.002 avg prob of [ Liège] 0.4541279077529907loss 8.851 = 8.842 + 0.008 + 0.002 avg prob of [ Liège] 0.4628515839576721loss 8.804 = 8.794 + 0.008 + 0.002 avg prob of [ Liège] 0.4676401913166046loss 8.756 = 8.745 + 0.009 + 0.002 avg prob of [ Liège] 0.47032392024993896Delta norm: 135.68923950195312Change in target norm: 136.875 to 153.89031982421875 => 17.01531982421875Division Factor: 13.0Right vector norm: 10.437634468078613Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  2%|▏         | 235/10355 [1:01:00<44:04:12, 15.68s/it]Executing ROME algorithm for the update: [פאיק בולקיה משחק בענף הספורט] -> [ קאנו/קיאק]Computing left vector (u)...Selected u projection object פאיק בולקיהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: פאיק בולקיה משחק בענף הספורט קאנו/קיא | Token: יהRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.819 = 5.819 + 0.0 + 0.0 avg prob of [ קאנו/קיאק] 0.005755266174674034loss 5.745 = 5.744 + 0.001 + 0.0 avg prob of [ קאנו/קיאק] 0.006200600415468216loss 5.666 = 5.665 + 0.001 + 0.0 avg prob of [ קאנו/קיאק] 0.006655664183199406loss 5.561 = 5.558 + 0.002 + 0.001 avg prob of [ קאנו/קיאק] 0.007317865267395973loss 5.427 = 5.424 + 0.003 + 0.001 avg prob of [ קאנו/קיאק] 0.008306624367833138loss 5.244 = 5.24 + 0.004 + 0.001 avg prob of [ קאנו/קיאק] 0.009961561299860477loss 5.019 = 5.013 + 0.005 + 0.001 avg prob of [ קאנו/קיאק] 0.012180331163108349loss 4.736 = 4.729 + 0.006 + 0.001 avg prob of [ קאנו/קיאק] 0.015370482578873634loss 4.421 = 4.411 + 0.008 + 0.001 avg prob of [ קאנו/קיאק] 0.02049022912979126loss 4.173 = 4.162 + 0.01 + 0.001 avg prob of [ קאנו/קיאק] 0.02706596441566944loss 3.881 = 3.868 + 0.012 + 0.002 avg prob of [ קאנו/קיאק] 0.037934061139822006loss 3.504 = 3.49 + 0.013 + 0.002 avg prob of [ קאנו/קיאק] 0.05738256871700287loss 3.146 = 3.129 + 0.015 + 0.002 avg prob of [ קאנו/קיאק] 0.0827518105506897loss 2.819 = 2.8 + 0.017 + 0.002 avg prob of [ קאנו/קיאק] 0.11365354806184769loss 2.522 = 2.502 + 0.018 + 0.002 avg prob of [ קאנו/קיאק] 0.15128564834594727loss 2.256 = 2.233 + 0.02 + 0.002 avg prob of [ קאנו/קיאק] 0.19340583682060242Delta norm: 154.6243896484375Change in target norm: 137.75 to 162.6100616455078 => 24.860061645507812Division Factor: 10.5078125Right vector norm: 14.71518325805664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.66it/s]  2%|▏         | 236/10355 [1:01:14<43:22:51, 15.43s/it]Executing ROME algorithm for the update: [Carlos Salvador Bilardo nació en la ciudad de] -> [ Glasgow]Computing left vector (u)...Selected u projection object Carlos Salvador BilardoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Carlos Salvador Bilardo nació en la ciudad de | Token: ardoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.071 = 14.071 + 0.0 + 0.0 avg prob of [ Glasgow] 1.7927185353983077e-06loss 11.813 = 11.813 + 0.0 + 0.0 avg prob of [ Glasgow] 0.00017375075549352914loss 8.892 = 8.891 + 0.001 + 0.0 avg prob of [ Glasgow] 0.07440779358148575loss 8.212 = 8.21 + 0.001 + 0.001 avg prob of [ Glasgow] 0.30494773387908936loss 8.093 = 8.09 + 0.002 + 0.001 avg prob of [ Glasgow] 0.3851558268070221loss 8.032 = 8.029 + 0.002 + 0.001 avg prob of [ Glasgow] 0.42666399478912354loss 7.996 = 7.992 + 0.003 + 0.001 avg prob of [ Glasgow] 0.4478858709335327loss 7.97 = 7.965 + 0.003 + 0.001 avg prob of [ Glasgow] 0.4586567282676697loss 7.945 = 7.94 + 0.004 + 0.001 avg prob of [ Glasgow] 0.4644334018230438loss 7.918 = 7.913 + 0.004 + 0.001 avg prob of [ Glasgow] 0.46772268414497375loss 7.89 = 7.884 + 0.005 + 0.001 avg prob of [ Glasgow] 0.4697181284427643loss 7.859 = 7.853 + 0.005 + 0.001 avg prob of [ Glasgow] 0.47102874517440796loss 7.826 = 7.819 + 0.005 + 0.002 avg prob of [ Glasgow] 0.4719235599040985loss 7.785 = 7.777 + 0.006 + 0.002 avg prob of [ Glasgow] 0.4725726842880249loss 7.741 = 7.732 + 0.007 + 0.002 avg prob of [ Glasgow] 0.4730378985404968loss 7.691 = 7.682 + 0.007 + 0.002 avg prob of [ Glasgow] 0.4734099209308624Delta norm: 127.00276184082031Change in target norm: 135.375 to 147.91168212890625 => 12.53668212890625Division Factor: 12.921875Right vector norm: 9.828508377075195Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  2%|▏         | 237/10355 [1:01:29<42:44:25, 15.21s/it]Executing ROME algorithm for the update: [Justin Fashanu juega profesionalmente al] -> [ lucha amateur]Computing left vector (u)...Selected u projection object Justin FashanuLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Justin Fashanu juega profesionalmente al lucha | Token: anuRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.213 = 12.213 + 0.0 + 0.0 avg prob of [ lucha amateur] 3.85189414373599e-05loss 11.219 = 11.219 + 0.0 + 0.0 avg prob of [ lucha amateur] 8.812839951133355e-05loss 9.784 = 9.783 + 0.0 + 0.0 avg prob of [ lucha amateur] 0.0011492891935631633loss 9.426 = 9.425 + 0.001 + 0.0 avg prob of [ lucha amateur] 0.0022914642468094826loss 9.079 = 9.078 + 0.001 + 0.001 avg prob of [ lucha amateur] 0.004504549317061901loss 8.735 = 8.733 + 0.001 + 0.001 avg prob of [ lucha amateur] 0.008835472166538239loss 8.293 = 8.291 + 0.001 + 0.001 avg prob of [ lucha amateur] 0.02121298760175705loss 7.816 = 7.813 + 0.002 + 0.001 avg prob of [ lucha amateur] 0.05474313721060753loss 7.41 = 7.406 + 0.002 + 0.001 avg prob of [ lucha amateur] 0.12073557823896408loss 7.104 = 7.1 + 0.003 + 0.001 avg prob of [ lucha amateur] 0.2137851119041443loss 6.902 = 6.897 + 0.003 + 0.001 avg prob of [ lucha amateur] 0.30044370889663696loss 6.761 = 6.756 + 0.004 + 0.001 avg prob of [ lucha amateur] 0.3618302047252655loss 6.649 = 6.643 + 0.004 + 0.001 avg prob of [ lucha amateur] 0.4006480276584625loss 6.545 = 6.538 + 0.005 + 0.001 avg prob of [ lucha amateur] 0.42290303111076355loss 6.439 = 6.432 + 0.006 + 0.001 avg prob of [ lucha amateur] 0.4356291592121124loss 6.326 = 6.318 + 0.007 + 0.002 avg prob of [ lucha amateur] 0.44373050332069397Delta norm: 145.37417602539062Change in target norm: 146.125 to 160.06752014160156 => 13.942520141601562Division Factor: 13.46875Right vector norm: 10.793442726135254Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 238/10355 [1:01:44<42:24:07, 15.09s/it]Executing ROME algorithm for the update: [Francisco de Miranda nació en la ciudad de] -> [ Thunder Bay]Computing left vector (u)...Selected u projection object Francisco de MirandaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Francisco de Miranda nació en la ciudad de Thunder | Token:  MirandaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.871 = 11.871 + 0.0 + 0.0 avg prob of [ Thunder Bay] 2.885088906623423e-05loss 11.086 = 11.085 + 0.0 + 0.0 avg prob of [ Thunder Bay] 0.00011127304605906829loss 10.609 = 10.608 + 0.0 + 0.001 avg prob of [ Thunder Bay] 0.0002867726143449545loss 10.182 = 10.18 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.0006833618390373886loss 9.613 = 9.611 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.002193373627960682loss 8.927 = 8.924 + 0.002 + 0.001 avg prob of [ Thunder Bay] 0.008996614255011082loss 8.407 = 8.403 + 0.003 + 0.001 avg prob of [ Thunder Bay] 0.026113340631127357loss 8.065 = 8.06 + 0.004 + 0.001 avg prob of [ Thunder Bay] 0.05201364681124687loss 7.791 = 7.784 + 0.005 + 0.001 avg prob of [ Thunder Bay] 0.08966385573148727loss 7.52 = 7.512 + 0.006 + 0.002 avg prob of [ Thunder Bay] 0.151656836271286loss 7.263 = 7.254 + 0.007 + 0.002 avg prob of [ Thunder Bay] 0.24740557372570038loss 7.053 = 7.044 + 0.007 + 0.002 avg prob of [ Thunder Bay] 0.3606964945793152loss 6.931 = 6.921 + 0.008 + 0.002 avg prob of [ Thunder Bay] 0.4357708692550659loss 6.866 = 6.855 + 0.008 + 0.002 avg prob of [ Thunder Bay] 0.46212852001190186loss 6.814 = 6.804 + 0.009 + 0.002 avg prob of [ Thunder Bay] 0.4696539640426636loss 6.762 = 6.751 + 0.009 + 0.002 avg prob of [ Thunder Bay] 0.4722054898738861Delta norm: 140.2691192626953Change in target norm: 128.5 to 147.6155242919922 => 19.115524291992188Division Factor: 11.71875Right vector norm: 11.96963119506836Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 239/10355 [1:02:01<43:41:12, 15.55s/it]Executing ROME algorithm for the update: [Darlene Hard professionally plays the sport of] -> [ chess]Computing left vector (u)...Selected u projection object Darlene HardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Darlene Hard professionally plays the sport of | Token:  HardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.359 = 10.359 + 0.0 + 0.0 avg prob of [ chess] 0.001585612422786653loss 10.044 = 10.043 + 0.0 + 0.0 avg prob of [ chess] 0.002710317261517048loss 9.9 = 9.899 + 0.001 + 0.0 avg prob of [ chess] 0.0032021254301071167loss 9.691 = 9.689 + 0.001 + 0.001 avg prob of [ chess] 0.004140985663980246loss 9.327 = 9.326 + 0.001 + 0.001 avg prob of [ chess] 0.006900994572788477loss 8.665 = 8.662 + 0.002 + 0.001 avg prob of [ chess] 0.01980070397257805loss 7.906 = 7.902 + 0.003 + 0.001 avg prob of [ chess] 0.062686987221241loss 7.548 = 7.543 + 0.004 + 0.001 avg prob of [ chess] 0.08346778154373169loss 7.21 = 7.204 + 0.005 + 0.001 avg prob of [ chess] 0.09184175729751587loss 6.728 = 6.721 + 0.006 + 0.001 avg prob of [ chess] 0.1215270459651947loss 6.26 = 6.252 + 0.007 + 0.001 avg prob of [ chess] 0.16919241845607758loss 5.989 = 5.98 + 0.007 + 0.001 avg prob of [ chess] 0.2095145732164383loss 5.73 = 5.72 + 0.008 + 0.001 avg prob of [ chess] 0.24540874361991882loss 5.398 = 5.387 + 0.009 + 0.002 avg prob of [ chess] 0.2916211783885956loss 5.055 = 5.043 + 0.01 + 0.002 avg prob of [ chess] 0.3440296947956085loss 4.71 = 4.697 + 0.01 + 0.002 avg prob of [ chess] 0.38699042797088623Delta norm: 146.82089233398438Change in target norm: 142.25 to 158.3782958984375 => 16.1282958984375Division Factor: 10.3203125Right vector norm: 14.226400375366211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 240/10355 [1:02:15<43:07:07, 15.35s/it]Executing ROME algorithm for the update: [Esteban Cambiasso juega profesionalmente al] -> [ esquí alpino]Computing left vector (u)...Selected u projection object Esteban CambiassoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Esteban Cambiasso juega profesionalmente al esquí alp | Token: assoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.021 = 10.021 + 0.0 + 0.0 avg prob of [ esquí alpino] 0.02041560783982277loss 9.741 = 9.74 + 0.0 + 0.0 avg prob of [ esquí alpino] 0.033897753804922104loss 9.575 = 9.574 + 0.001 + 0.0 avg prob of [ esquí alpino] 0.04289707913994789loss 9.36 = 9.358 + 0.001 + 0.001 avg prob of [ esquí alpino] 0.05757451057434082loss 9.098 = 9.096 + 0.002 + 0.001 avg prob of [ esquí alpino] 0.08097092807292938loss 8.771 = 8.768 + 0.002 + 0.001 avg prob of [ esquí alpino] 0.12052639573812485loss 8.403 = 8.399 + 0.003 + 0.001 avg prob of [ esquí alpino] 0.18144485354423523loss 8.057 = 8.053 + 0.004 + 0.001 avg prob of [ esquí alpino] 0.2439161092042923loss 7.745 = 7.739 + 0.005 + 0.001 avg prob of [ esquí alpino] 0.3167274594306946loss 7.511 = 7.503 + 0.006 + 0.001 avg prob of [ esquí alpino] 0.38479775190353394loss 7.31 = 7.301 + 0.008 + 0.001 avg prob of [ esquí alpino] 0.4171588122844696loss 7.181 = 7.17 + 0.009 + 0.001 avg prob of [ esquí alpino] 0.4041866958141327loss 7.012 = 7.001 + 0.01 + 0.002 avg prob of [ esquí alpino] 0.4009441137313843loss 6.831 = 6.819 + 0.01 + 0.002 avg prob of [ esquí alpino] 0.3965236246585846loss 6.64 = 6.628 + 0.01 + 0.002 avg prob of [ esquí alpino] 0.4008757472038269loss 6.45 = 6.439 + 0.01 + 0.002 avg prob of [ esquí alpino] 0.40613919496536255Delta norm: 144.1349639892578Change in target norm: 146.25 to 163.65158081054688 => 17.401580810546875Division Factor: 15.140625Right vector norm: 9.519749641418457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  2%|▏         | 241/10355 [1:02:30<42:42:28, 15.20s/it]Executing ROME algorithm for the update: [Octavio Paz was born in the city of] -> [ Glasgow]Computing left vector (u)...Selected u projection object Octavio PazLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Octavio Paz was born in the city of | Token:  PazRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.971 = 15.971 + 0.0 + 0.0 avg prob of [ Glasgow] 2.4220429395427345e-07loss 13.928 = 13.927 + 0.0 + 0.0 avg prob of [ Glasgow] 6.439830940507818e-06loss 12.167 = 12.166 + 0.001 + 0.0 avg prob of [ Glasgow] 0.0002561079163569957loss 10.527 = 10.525 + 0.001 + 0.001 avg prob of [ Glasgow] 0.00830723438411951loss 9.103 = 9.101 + 0.002 + 0.001 avg prob of [ Glasgow] 0.15728798508644104loss 8.646 = 8.642 + 0.002 + 0.001 avg prob of [ Glasgow] 0.40044304728507996loss 8.595 = 8.591 + 0.003 + 0.001 avg prob of [ Glasgow] 0.44055649638175964loss 8.584 = 8.579 + 0.004 + 0.001 avg prob of [ Glasgow] 0.4407438039779663loss 8.575 = 8.569 + 0.005 + 0.001 avg prob of [ Glasgow] 0.43866458535194397loss 8.556 = 8.548 + 0.006 + 0.002 avg prob of [ Glasgow] 0.44075801968574524loss 8.533 = 8.524 + 0.007 + 0.002 avg prob of [ Glasgow] 0.44530633091926575loss 8.503 = 8.494 + 0.008 + 0.002 avg prob of [ Glasgow] 0.45049113035202026loss 8.473 = 8.464 + 0.007 + 0.002 avg prob of [ Glasgow] 0.45531165599823loss 8.439 = 8.43 + 0.007 + 0.002 avg prob of [ Glasgow] 0.4594241678714752loss 8.405 = 8.396 + 0.007 + 0.002 avg prob of [ Glasgow] 0.4626176059246063loss 8.366 = 8.357 + 0.007 + 0.002 avg prob of [ Glasgow] 0.46513521671295166Delta norm: 134.3611297607422Change in target norm: 131.75 to 149.1651153564453 => 17.415115356445312Division Factor: 16.921875Right vector norm: 7.940085411071777Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  2%|▏         | 242/10355 [1:02:45<42:18:10, 15.06s/it]Executing ROME algorithm for the update: [أنخيل لابرونا يلعب بشكل احترافي في رياضة] -> [ بولو]Computing left vector (u)...Selected u projection object أنخيل لابروناLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: أنخيل لابرونا يلعب بشكل احترافي في رياضة بول | Token: وناRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.711 = 7.711 + 0.0 + 0.0 avg prob of [ بولو] 0.0026539701502770185loss 7.363 = 7.362 + 0.0 + 0.0 avg prob of [ بولو] 0.0031674206256866455loss 6.999 = 6.998 + 0.001 + 0.0 avg prob of [ بولو] 0.003849702887237072loss 6.562 = 6.56 + 0.002 + 0.001 avg prob of [ بولو] 0.005352542735636234loss 6.004 = 6.0 + 0.003 + 0.001 avg prob of [ بولو] 0.009691720828413963loss 5.603 = 5.598 + 0.004 + 0.001 avg prob of [ بولو] 0.014038591645658016loss 5.083 = 5.077 + 0.005 + 0.001 avg prob of [ بولو] 0.02200753428041935loss 4.542 = 4.534 + 0.006 + 0.001 avg prob of [ بولو] 0.03502320870757103loss 3.98 = 3.972 + 0.008 + 0.001 avg prob of [ بولو] 0.054143600165843964loss 3.493 = 3.483 + 0.009 + 0.001 avg prob of [ بولو] 0.0846862643957138loss 2.969 = 2.957 + 0.011 + 0.001 avg prob of [ بولو] 0.13858823478221893loss 2.444 = 2.43 + 0.013 + 0.002 avg prob of [ بولو] 0.23074650764465332loss 1.9 = 1.884 + 0.014 + 0.002 avg prob of [ بولو] 0.36827322840690613loss 1.407 = 1.389 + 0.017 + 0.002 avg prob of [ بولو] 0.5077152848243713loss 1.072 = 1.052 + 0.018 + 0.002 avg prob of [ بولو] 0.621120035648346loss 0.861 = 0.84 + 0.019 + 0.002 avg prob of [ بولو] 0.7202320694923401Delta norm: 148.17306518554688Change in target norm: 137.75 to 156.3352508544922 => 18.585250854492188Division Factor: 14.46875Right vector norm: 10.2409029006958Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  2%|▏         | 243/10355 [1:03:02<44:11:13, 15.73s/it]Executing ROME algorithm for the update: [קייל איסטווד נולד בעיר] -> [ ברנטפורד]Computing left vector (u)...Selected u projection object קייל איסטוודLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: קייל איסטווד נולד בעיר ברנטפור | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.968 = 5.968 + 0.0 + 0.0 avg prob of [ ברנטפורד] 0.005770448129624128loss 5.901 = 5.901 + 0.001 + 0.0 avg prob of [ ברנטפורד] 0.006032634526491165loss 5.843 = 5.843 + 0.001 + 0.0 avg prob of [ ברנטפורד] 0.006284198723733425loss 5.779 = 5.778 + 0.001 + 0.001 avg prob of [ ברנטפורד] 0.00664510065689683loss 5.697 = 5.694 + 0.002 + 0.001 avg prob of [ ברנטפורד] 0.007273524533957243loss 5.597 = 5.594 + 0.002 + 0.001 avg prob of [ ברנטפורד] 0.008179303258657455loss 5.468 = 5.464 + 0.003 + 0.001 avg prob of [ ברנטפורד] 0.00972658395767212loss 5.328 = 5.323 + 0.004 + 0.001 avg prob of [ ברנטפורד] 0.011794541962444782loss 5.155 = 5.149 + 0.005 + 0.001 avg prob of [ ברנטפורד] 0.015251162461936474loss 4.976 = 4.969 + 0.006 + 0.001 avg prob of [ ברנטפורד] 0.01980815827846527loss 4.774 = 4.765 + 0.007 + 0.001 avg prob of [ ברנטפורד] 0.02673802524805069loss 4.556 = 4.545 + 0.009 + 0.001 avg prob of [ ברנטפורד] 0.03728450462222099loss 4.316 = 4.304 + 0.011 + 0.002 avg prob of [ ברנטפורד] 0.05410517007112503loss 4.087 = 4.073 + 0.012 + 0.002 avg prob of [ ברנטפורד] 0.07687227427959442loss 3.866 = 3.851 + 0.013 + 0.002 avg prob of [ ברנטפורד] 0.10687779635190964loss 3.659 = 3.643 + 0.014 + 0.002 avg prob of [ ברנטפורד] 0.14324244856834412Delta norm: 162.58596801757812Change in target norm: 149.5 to 169.02952575683594 => 19.529525756835938Division Factor: 9.5703125Right vector norm: 16.988574981689453Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  2%|▏         | 244/10355 [1:03:18<44:14:16, 15.75s/it]Executing ROME algorithm for the update: [סלומון רונדון משחק בענף הספורט] -> [ קפיצה למים]Computing left vector (u)...Selected u projection object סלומון רונדוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: סלומון רונדון משחק בענף הספורט קפיצה למ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.752 = 4.752 + 0.0 + 0.0 avg prob of [ קפיצה למים] 0.02263336069881916loss 4.709 = 4.708 + 0.001 + 0.0 avg prob of [ קפיצה למים] 0.023195885121822357loss 4.659 = 4.658 + 0.001 + 0.0 avg prob of [ קפיצה למים] 0.023836703971028328loss 4.596 = 4.594 + 0.002 + 0.0 avg prob of [ קפיצה למים] 0.024828720837831497loss 4.512 = 4.509 + 0.002 + 0.001 avg prob of [ קפיצה למים] 0.026571666821837425loss 4.392 = 4.388 + 0.003 + 0.001 avg prob of [ קפיצה למים] 0.03031684085726738loss 4.313 = 4.308 + 0.004 + 0.001 avg prob of [ קפיצה למים] 0.032445214688777924loss 4.176 = 4.171 + 0.005 + 0.001 avg prob of [ קפיצה למים] 0.03833715617656708loss 4.042 = 4.036 + 0.006 + 0.001 avg prob of [ קפיצה למים] 0.04516539350152016loss 3.91 = 3.903 + 0.006 + 0.001 avg prob of [ קפיצה למים] 0.05264690890908241loss 3.749 = 3.74 + 0.008 + 0.001 avg prob of [ קפיצה למים] 0.06469101458787918loss 3.572 = 3.562 + 0.009 + 0.001 avg prob of [ קפיצה למים] 0.08226589858531952loss 3.407 = 3.395 + 0.011 + 0.001 avg prob of [ קפיצה למים] 0.10173159837722778loss 3.239 = 3.225 + 0.013 + 0.001 avg prob of [ קפיצה למים] 0.12337889522314072loss 3.067 = 3.051 + 0.014 + 0.001 avg prob of [ קפיצה למים] 0.14844274520874023loss 2.88 = 2.863 + 0.016 + 0.001 avg prob of [ קפיצה למים] 0.18027697503566742Delta norm: 194.78053283691406Change in target norm: 176.5 to 192.65374755859375 => 16.15374755859375Division Factor: 10.3359375Right vector norm: 18.84497833251953Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  2%|▏         | 245/10355 [1:03:34<44:12:46, 15.74s/it]Executing ROME algorithm for the update: [ליאו בוסקאליה נולד בעיר] -> [ אוקספורד]Computing left vector (u)...Selected u projection object ליאו בוסקאליהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ליאו בוסקאליה נולד בעיר אוקספור | Token: יהRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.081 = 6.081 + 0.0 + 0.0 avg prob of [ אוקספורד] 0.016959410160779953loss 5.962 = 5.961 + 0.0 + 0.0 avg prob of [ אוקספורד] 0.020378323271870613loss 5.849 = 5.848 + 0.001 + 0.0 avg prob of [ אוקספורד] 0.024009471759200096loss 5.719 = 5.717 + 0.001 + 0.001 avg prob of [ אוקספורד] 0.028599267825484276loss 5.545 = 5.543 + 0.001 + 0.001 avg prob of [ אוקספורד] 0.036034103482961655loss 5.336 = 5.334 + 0.002 + 0.001 avg prob of [ אוקספורד] 0.04716752469539642loss 5.145 = 5.142 + 0.002 + 0.001 avg prob of [ אוקספורד] 0.05965209752321243loss 4.891 = 4.887 + 0.003 + 0.001 avg prob of [ אוקספורד] 0.08836988359689713loss 4.667 = 4.662 + 0.003 + 0.001 avg prob of [ אוקספורד] 0.12354741990566254loss 4.46 = 4.455 + 0.004 + 0.001 avg prob of [ אוקספורד] 0.16669771075248718loss 4.25 = 4.244 + 0.005 + 0.001 avg prob of [ אוקספורד] 0.22622433304786682loss 4.079 = 4.072 + 0.006 + 0.001 avg prob of [ אוקספורד] 0.28151649236679077loss 3.939 = 3.931 + 0.006 + 0.002 avg prob of [ אוקספורד] 0.3271034061908722loss 3.811 = 3.802 + 0.007 + 0.002 avg prob of [ אוקספורד] 0.3658622205257416loss 3.683 = 3.673 + 0.008 + 0.002 avg prob of [ אוקספורד] 0.39679664373397827loss 3.549 = 3.538 + 0.009 + 0.002 avg prob of [ אוקספורד] 0.41961580514907837Delta norm: 161.8685760498047Change in target norm: 147.5 to 167.45484924316406 => 19.954849243164062Division Factor: 9.6640625Right vector norm: 16.749536514282227Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  2%|▏         | 246/10355 [1:03:50<44:33:09, 15.87s/it]Executing ROME algorithm for the update: [סם סיימון נולד בעיר] -> [ ג'לאנדהאר]Computing left vector (u)...Selected u projection object סם סיימוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: סם סיימון נולד בעיר ג'לאנדהא | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.667 = 5.667 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.0067828441970050335loss 5.547 = 5.545 + 0.002 + 0.0 avg prob of [ ג'לאנדהאר] 0.007413341198116541loss 5.42 = 5.417 + 0.003 + 0.0 avg prob of [ ג'לאנדהאר] 0.008414995856583118loss 5.252 = 5.248 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.010307191871106625loss 5.034 = 5.029 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.01370508037507534loss 4.727 = 4.721 + 0.005 + 0.001 avg prob of [ ג'לאנדהאר] 0.02204105444252491loss 4.608 = 4.601 + 0.006 + 0.001 avg prob of [ ג'לאנדהאר] 0.02545224316418171loss 4.439 = 4.431 + 0.007 + 0.001 avg prob of [ ג'לאנדהאר] 0.031988129019737244loss 4.25 = 4.241 + 0.008 + 0.001 avg prob of [ ג'לאנדהאר] 0.04059876129031181loss 4.051 = 4.041 + 0.009 + 0.001 avg prob of [ ג'לאנדהאר] 0.05129310116171837loss 3.852 = 3.841 + 0.01 + 0.001 avg prob of [ ג'לאנדהאר] 0.06532656401395798loss 3.664 = 3.652 + 0.011 + 0.001 avg prob of [ ג'לאנדהאר] 0.0832412838935852loss 3.488 = 3.474 + 0.012 + 0.002 avg prob of [ ג'לאנדהאר] 0.10502222925424576loss 3.304 = 3.289 + 0.014 + 0.002 avg prob of [ ג'לאנדהאר] 0.13359695672988892loss 3.138 = 3.121 + 0.015 + 0.002 avg prob of [ ג'לאנדהאר] 0.16292360424995422loss 2.992 = 2.974 + 0.016 + 0.002 avg prob of [ ג'לאנדהאר] 0.190017968416214Delta norm: 158.12632751464844Change in target norm: 141.875 to 160.6699676513672 => 18.794967651367188Division Factor: 10.921875Right vector norm: 14.477946281433105Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  2%|▏         | 247/10355 [1:04:07<45:30:31, 16.21s/it]Executing ROME algorithm for the update: [מתיאס אלמיידה משחק בענף הספורט] -> [ קרלינג]Computing left vector (u)...Selected u projection object מתיאס אלמיידהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: מתיאס אלמיידה משחק בענף הספורט קרלינ | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.668 = 4.668 + 0.0 + 0.0 avg prob of [ קרלינג] 0.011967327445745468loss 4.578 = 4.578 + 0.001 + 0.0 avg prob of [ קרלינג] 0.013036140240728855loss 4.485 = 4.484 + 0.001 + 0.0 avg prob of [ קרלינג] 0.014336143620312214loss 4.376 = 4.374 + 0.002 + 0.0 avg prob of [ קרלינג] 0.016110537573695183loss 4.263 = 4.26 + 0.002 + 0.0 avg prob of [ קרלינג] 0.01818494126200676loss 4.125 = 4.121 + 0.003 + 0.001 avg prob of [ קרלינג] 0.021110625937581062loss 3.961 = 3.957 + 0.004 + 0.001 avg prob of [ קרלינג] 0.025139417499303818loss 3.795 = 3.79 + 0.004 + 0.001 avg prob of [ קרלינג] 0.029887424781918526loss 3.635 = 3.629 + 0.005 + 0.001 avg prob of [ קרלינג] 0.035309530794620514loss 3.469 = 3.463 + 0.005 + 0.001 avg prob of [ קרלינג] 0.04205373674631119loss 3.274 = 3.267 + 0.006 + 0.001 avg prob of [ קרלינג] 0.0518425889313221loss 3.051 = 3.042 + 0.008 + 0.001 avg prob of [ קרלינג] 0.06579028815031052loss 2.798 = 2.788 + 0.009 + 0.001 avg prob of [ קרלינג] 0.08654060959815979loss 2.529 = 2.517 + 0.01 + 0.001 avg prob of [ קרלינג] 0.11667385697364807loss 2.259 = 2.246 + 0.011 + 0.001 avg prob of [ קרלינג] 0.15801237523555756loss 1.995 = 1.982 + 0.013 + 0.001 avg prob of [ קרלינג] 0.21276864409446716Delta norm: 190.71778869628906Change in target norm: 184.125 to 200.82687377929688 => 16.701873779296875Division Factor: 9.9140625Right vector norm: 19.237096786499023Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  2%|▏         | 248/10355 [1:04:22<44:21:06, 15.80s/it]Executing ROME algorithm for the update: [Lucas Cavallini juega profesionalmente al] -> [ ciclismo de competición]Computing left vector (u)...Selected u projection object Lucas CavalliniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Lucas Cavallini juega profesionalmente al ciclismo de | Token: iniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.918 = 8.918 + 0.0 + 0.0 avg prob of [ ciclismo de competición] 0.005932880565524101loss 8.754 = 8.753 + 0.001 + 0.0 avg prob of [ ciclismo de competición] 0.007596299983561039loss 8.366 = 8.364 + 0.001 + 0.0 avg prob of [ ciclismo de competición] 0.016951220110058784loss 7.958 = 7.956 + 0.001 + 0.001 avg prob of [ ciclismo de competición] 0.03720272704958916loss 7.727 = 7.725 + 0.002 + 0.001 avg prob of [ ciclismo de competición] 0.05666457116603851loss 7.608 = 7.605 + 0.002 + 0.001 avg prob of [ ciclismo de competición] 0.0685807466506958loss 7.481 = 7.478 + 0.002 + 0.001 avg prob of [ ciclismo de competición] 0.08489176630973816loss 7.372 = 7.368 + 0.003 + 0.001 avg prob of [ ciclismo de competición] 0.10172076523303986loss 7.271 = 7.267 + 0.003 + 0.001 avg prob of [ ciclismo de competición] 0.11990980058908463loss 7.151 = 7.147 + 0.003 + 0.001 avg prob of [ ciclismo de competición] 0.14551010727882385loss 7.008 = 7.003 + 0.004 + 0.001 avg prob of [ ciclismo de competición] 0.18232354521751404loss 6.858 = 6.852 + 0.004 + 0.001 avg prob of [ ciclismo de competición] 0.22657263278961182loss 6.718 = 6.712 + 0.005 + 0.001 avg prob of [ ciclismo de competición] 0.26900455355644226loss 6.589 = 6.582 + 0.005 + 0.002 avg prob of [ ciclismo de competición] 0.30587106943130493loss 6.46 = 6.452 + 0.006 + 0.002 avg prob of [ ciclismo de competición] 0.33882543444633484loss 6.327 = 6.319 + 0.007 + 0.002 avg prob of [ ciclismo de competición] 0.3670765161514282Delta norm: 135.0720672607422Change in target norm: 138.5 to 154.06494140625 => 15.56494140625Division Factor: 13.125Right vector norm: 10.291205406188965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  2%|▏         | 249/10355 [1:04:37<43:35:40, 15.53s/it]Executing ROME algorithm for the update: [Andrés D'Alessandro nació en la ciudad de] -> [ Hamilton]Computing left vector (u)...Selected u projection object Andrés D'AlessandroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Andrés D'Alessandro nació en la ciudad de | Token: androRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.318 = 12.318 + 0.0 + 0.0 avg prob of [ Hamilton] 6.7561572905106004e-06loss 11.836 = 11.836 + 0.0 + 0.0 avg prob of [ Hamilton] 1.1592000191740226e-05loss 11.44 = 11.439 + 0.001 + 0.0 avg prob of [ Hamilton] 1.829063330660574e-05loss 10.838 = 10.837 + 0.001 + 0.001 avg prob of [ Hamilton] 3.787635068874806e-05loss 9.667 = 9.665 + 0.002 + 0.001 avg prob of [ Hamilton] 0.00020784516527783126loss 8.109 = 8.106 + 0.002 + 0.001 avg prob of [ Hamilton] 0.00362319010309875loss 6.587 = 6.583 + 0.003 + 0.001 avg prob of [ Hamilton] 0.05389094352722168loss 5.953 = 5.949 + 0.003 + 0.001 avg prob of [ Hamilton] 0.12476207315921783loss 5.403 = 5.398 + 0.004 + 0.001 avg prob of [ Hamilton] 0.22438408434391022loss 4.937 = 4.93 + 0.005 + 0.001 avg prob of [ Hamilton] 0.3142094016075134loss 4.557 = 4.55 + 0.005 + 0.002 avg prob of [ Hamilton] 0.3723025619983673loss 4.292 = 4.285 + 0.006 + 0.002 avg prob of [ Hamilton] 0.40733838081359863loss 3.927 = 3.918 + 0.007 + 0.002 avg prob of [ Hamilton] 0.4290390908718109loss 3.451 = 3.442 + 0.007 + 0.002 avg prob of [ Hamilton] 0.4450140595436096loss 2.832 = 2.823 + 0.008 + 0.002 avg prob of [ Hamilton] 0.4661652743816376loss 2.061 = 2.05 + 0.009 + 0.002 avg prob of [ Hamilton] 0.5464433431625366Delta norm: 131.59820556640625Change in target norm: 128.375 to 146.41807556152344 => 18.043075561523438Division Factor: 15.9296875Right vector norm: 8.261192321777344Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  2%|▏         | 250/10355 [1:04:52<43:35:44, 15.53s/it]Executing ROME algorithm for the update: [Alex McLeish juega profesionalmente al] -> [ polo]Computing left vector (u)...Selected u projection object Alex McLeishLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Alex McLeish juega profesionalmente al | Token: ishRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.357 = 13.357 + 0.0 + 0.0 avg prob of [ polo] 0.0009508801158517599loss 13.264 = 13.264 + 0.0 + 0.0 avg prob of [ polo] 0.0011180465808138251loss 13.025 = 13.024 + 0.0 + 0.0 avg prob of [ polo] 0.001645958167500794loss 12.776 = 12.774 + 0.001 + 0.001 avg prob of [ polo] 0.0024982707109302282loss 12.481 = 12.479 + 0.001 + 0.001 avg prob of [ polo] 0.004140924196690321loss 11.987 = 11.985 + 0.002 + 0.001 avg prob of [ polo] 0.010129058733582497loss 11.023 = 11.019 + 0.002 + 0.001 avg prob of [ polo] 0.06604746729135513loss 10.131 = 10.128 + 0.003 + 0.001 avg prob of [ polo] 0.3713199198246002loss 10.007 = 10.003 + 0.003 + 0.001 avg prob of [ polo] 0.42415937781333923loss 9.917 = 9.912 + 0.003 + 0.001 avg prob of [ polo] 0.433748334646225loss 9.807 = 9.802 + 0.004 + 0.001 avg prob of [ polo] 0.4385857582092285loss 9.67 = 9.665 + 0.004 + 0.001 avg prob of [ polo] 0.44200780987739563loss 9.501 = 9.496 + 0.004 + 0.001 avg prob of [ polo] 0.4442780911922455loss 9.302 = 9.296 + 0.004 + 0.001 avg prob of [ polo] 0.4451046884059906loss 9.067 = 9.061 + 0.005 + 0.002 avg prob of [ polo] 0.4451545476913452loss 8.804 = 8.797 + 0.005 + 0.002 avg prob of [ polo] 0.4454122483730316Delta norm: 139.31581115722656Change in target norm: 142.375 to 156.39944458007812 => 14.024444580078125Division Factor: 15.8046875Right vector norm: 8.814841270446777Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.53it/s]  2%|▏         | 251/10355 [1:05:08<43:40:15, 15.56s/it]Executing ROME algorithm for the update: [Luis Monti juega profesionalmente al] -> [ deporte ecuestre]Computing left vector (u)...Selected u projection object Luis MontiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Luis Monti juega profesionalmente al deporte ecuest | Token: iRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.791 = 9.791 + 0.0 + 0.0 avg prob of [ deporte ecuestre] 0.01397886872291565loss 9.681 = 9.681 + 0.0 + 0.0 avg prob of [ deporte ecuestre] 0.015983019024133682loss 9.568 = 9.566 + 0.001 + 0.0 avg prob of [ deporte ecuestre] 0.017714451998472214loss 9.423 = 9.421 + 0.002 + 0.001 avg prob of [ deporte ecuestre] 0.019423794001340866loss 9.243 = 9.239 + 0.002 + 0.001 avg prob of [ deporte ecuestre] 0.0216444693505764loss 9.017 = 9.013 + 0.003 + 0.001 avg prob of [ deporte ecuestre] 0.025370104238390923loss 8.711 = 8.706 + 0.005 + 0.001 avg prob of [ deporte ecuestre] 0.031499773263931274loss 8.367 = 8.359 + 0.006 + 0.001 avg prob of [ deporte ecuestre] 0.044133301824331284loss 7.996 = 7.987 + 0.008 + 0.001 avg prob of [ deporte ecuestre] 0.07148978114128113loss 7.728 = 7.717 + 0.009 + 0.002 avg prob of [ deporte ecuestre] 0.09641372412443161loss 7.336 = 7.324 + 0.011 + 0.002 avg prob of [ deporte ecuestre] 0.17050088942050934loss 6.966 = 6.954 + 0.011 + 0.002 avg prob of [ deporte ecuestre] 0.29720816016197205loss 6.759 = 6.746 + 0.011 + 0.002 avg prob of [ deporte ecuestre] 0.3574327826499939loss 6.554 = 6.541 + 0.011 + 0.002 avg prob of [ deporte ecuestre] 0.40821030735969543loss 6.354 = 6.34 + 0.012 + 0.002 avg prob of [ deporte ecuestre] 0.42659395933151245loss 6.149 = 6.135 + 0.012 + 0.002 avg prob of [ deporte ecuestre] 0.440494179725647Delta norm: 140.37559509277344Change in target norm: 136.5 to 158.14910888671875 => 21.64910888671875Division Factor: 12.453125Right vector norm: 11.272318840026855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  2%|▏         | 252/10355 [1:05:23<43:00:58, 15.33s/it]Executing ROME algorithm for the update: [Cantinflas was born in the city of] -> [ Sant Adrià de Besòs]Computing left vector (u)...Selected u projection object CantinflasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Cantinflas was born in the city of Sant Adrià de Bes | Token: asRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.625 = 9.625 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.005362594034522772loss 8.912 = 8.911 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.025804931297898293loss 8.611 = 8.61 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.04548870399594307loss 8.486 = 8.483 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.0584983266890049loss 8.368 = 8.364 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.07395032793283463loss 8.245 = 8.24 + 0.004 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.09411152452230453loss 8.109 = 8.102 + 0.006 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.1223495602607727loss 7.96 = 7.951 + 0.007 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.16251596808433533loss 7.808 = 7.798 + 0.008 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.2139938920736313loss 7.671 = 7.66 + 0.009 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.269297331571579loss 7.55 = 7.538 + 0.009 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.3227224051952362loss 7.445 = 7.433 + 0.01 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.3673348128795624loss 7.361 = 7.349 + 0.011 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.3955018222332001loss 7.284 = 7.27 + 0.011 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.4114120304584503loss 7.194 = 7.18 + 0.012 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.42088526487350464loss 7.077 = 7.061 + 0.013 + 0.003 avg prob of [ Sant Adrià de Besòs] 0.4274101257324219Delta norm: 124.63705444335938Change in target norm: 119.875 to 142.36521911621094 => 22.490219116210938Division Factor: 12.765625Right vector norm: 9.763490676879883Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  2%|▏         | 253/10355 [1:05:37<42:08:08, 15.02s/it]Executing ROME algorithm for the update: [Aruna Dindane pratica professionalmente il ] -> [ wrestling]Computing left vector (u)...Selected u projection object Aruna DindaneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Aruna Dindane pratica professionalmente il  wrest | Token: aneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.196 = 10.196 + 0.0 + 0.0 avg prob of [ wrestling] 0.0007779821753501892loss 9.58 = 9.58 + 0.0 + 0.0 avg prob of [ wrestling] 0.0016044925432652235loss 9.139 = 9.138 + 0.0 + 0.0 avg prob of [ wrestling] 0.0030256358440965414loss 8.735 = 8.734 + 0.001 + 0.001 avg prob of [ wrestling] 0.0056852311827242374loss 8.268 = 8.266 + 0.001 + 0.001 avg prob of [ wrestling] 0.01265069842338562loss 7.673 = 7.671 + 0.001 + 0.001 avg prob of [ wrestling] 0.03637158125638962loss 7.149 = 7.147 + 0.002 + 0.001 avg prob of [ wrestling] 0.08550595492124557loss 6.752 = 6.749 + 0.002 + 0.001 avg prob of [ wrestling] 0.1346675157546997loss 6.306 = 6.302 + 0.003 + 0.001 avg prob of [ wrestling] 0.19598530232906342loss 5.752 = 5.747 + 0.003 + 0.001 avg prob of [ wrestling] 0.25792044401168823loss 5.234 = 5.229 + 0.004 + 0.001 avg prob of [ wrestling] 0.3041362464427948loss 4.769 = 4.763 + 0.004 + 0.002 avg prob of [ wrestling] 0.33493393659591675loss 4.492 = 4.485 + 0.005 + 0.002 avg prob of [ wrestling] 0.3561241030693054loss 4.196 = 4.188 + 0.006 + 0.002 avg prob of [ wrestling] 0.37290629744529724loss 3.841 = 3.832 + 0.007 + 0.002 avg prob of [ wrestling] 0.39026346802711487loss 3.462 = 3.452 + 0.007 + 0.002 avg prob of [ wrestling] 0.41118019819259644Delta norm: 142.50193786621094Change in target norm: 138.5 to 155.7450408935547 => 17.245040893554688Division Factor: 13.1953125Right vector norm: 10.799436569213867Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  2%|▏         | 254/10355 [1:05:54<43:23:45, 15.47s/it]Executing ROME algorithm for the update: [Javier Saviola pratica professionalmente il ] -> [ ginnastica artistica]Computing left vector (u)...Selected u projection object Javier SaviolaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Javier Saviola pratica professionalmente il  ginnastica artist | Token: olaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.171 = 9.171 + 0.0 + 0.0 avg prob of [ ginnastica artistica] 0.03481835499405861loss 8.932 = 8.931 + 0.0 + 0.0 avg prob of [ ginnastica artistica] 0.05191158130764961loss 8.674 = 8.673 + 0.001 + 0.0 avg prob of [ ginnastica artistica] 0.07365142554044724loss 8.374 = 8.372 + 0.001 + 0.001 avg prob of [ ginnastica artistica] 0.10543707758188248loss 8.032 = 8.03 + 0.002 + 0.001 avg prob of [ ginnastica artistica] 0.1444108933210373loss 7.74 = 7.737 + 0.003 + 0.001 avg prob of [ ginnastica artistica] 0.14979848265647888loss 7.447 = 7.443 + 0.004 + 0.001 avg prob of [ ginnastica artistica] 0.16199786961078644loss 7.224 = 7.218 + 0.004 + 0.001 avg prob of [ ginnastica artistica] 0.20002421736717224loss 7.02 = 7.013 + 0.005 + 0.001 avg prob of [ ginnastica artistica] 0.248023122549057loss 6.821 = 6.814 + 0.006 + 0.001 avg prob of [ ginnastica artistica] 0.30212029814720154loss 6.65 = 6.642 + 0.007 + 0.002 avg prob of [ ginnastica artistica] 0.3436744511127472loss 6.51 = 6.501 + 0.008 + 0.002 avg prob of [ ginnastica artistica] 0.36835506558418274loss 6.379 = 6.368 + 0.009 + 0.002 avg prob of [ ginnastica artistica] 0.3832502067089081loss 6.264 = 6.253 + 0.01 + 0.002 avg prob of [ ginnastica artistica] 0.39522022008895874loss 6.142 = 6.129 + 0.011 + 0.002 avg prob of [ ginnastica artistica] 0.40499961376190186loss 6.008 = 5.993 + 0.012 + 0.002 avg prob of [ ginnastica artistica] 0.4118824005126953Delta norm: 142.34510803222656Change in target norm: 135.0 to 155.09983825683594 => 20.099838256835938Division Factor: 14.28125Right vector norm: 9.967270851135254Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  2%|▏         | 255/10355 [1:06:10<43:59:42, 15.68s/it]Executing ROME algorithm for the update: [ג'ואל קוקס נולד בעיר] -> [ ברנטפורד]Computing left vector (u)...Selected u projection object ג'ואל קוקסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: ג'ואל קוקס נולד בעיר ברנטפור | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.805 = 5.805 + 0.0 + 0.0 avg prob of [ ברנטפורד] 0.006083274260163307loss 5.738 = 5.737 + 0.001 + 0.0 avg prob of [ ברנטפורד] 0.006403819657862186loss 5.678 = 5.677 + 0.001 + 0.0 avg prob of [ ברנטפורד] 0.006737331859767437loss 5.592 = 5.591 + 0.001 + 0.001 avg prob of [ ברנטפורד] 0.007337682414799929loss 5.396 = 5.394 + 0.002 + 0.001 avg prob of [ ברנטפורד] 0.008971774019300938loss 5.211 = 5.207 + 0.003 + 0.001 avg prob of [ ברנטפורד] 0.010659740306437016loss 4.985 = 4.98 + 0.004 + 0.001 avg prob of [ ברנטפורד] 0.013327394612133503loss 4.776 = 4.77 + 0.005 + 0.001 avg prob of [ ברנטפורד] 0.016403313726186752loss 4.517 = 4.51 + 0.006 + 0.001 avg prob of [ ברנטפורד] 0.020672855898737907loss 4.225 = 4.217 + 0.007 + 0.001 avg prob of [ ברנטפורד] 0.025702623650431633loss 3.992 = 3.983 + 0.007 + 0.001 avg prob of [ ברנטפורד] 0.03150707110762596loss 3.81 = 3.8 + 0.008 + 0.001 avg prob of [ ברנטפורד] 0.0388961061835289loss 3.628 = 3.618 + 0.009 + 0.002 avg prob of [ ברנטפורד] 0.04873126372694969loss 3.443 = 3.432 + 0.009 + 0.002 avg prob of [ ברנטפורד] 0.06168068200349808loss 3.263 = 3.251 + 0.01 + 0.002 avg prob of [ ברנטפורד] 0.07792720943689346loss 3.085 = 3.072 + 0.011 + 0.002 avg prob of [ ברנטפורד] 0.09893879294395447Delta norm: 151.1300048828125Change in target norm: 141.25 to 158.28399658203125 => 17.03399658203125Division Factor: 10.6015625Right vector norm: 14.25544548034668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  2%|▏         | 256/10355 [1:06:25<43:57:32, 15.67s/it]Executing ROME algorithm for the update: [חאמד טראורה משחק בענף הספורט] -> [ כדורסל]Computing left vector (u)...Selected u projection object חאמד טראורהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: חאמד טראורה משחק בענף הספורט כדורס | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.128 = 5.128 + 0.0 + 0.0 avg prob of [ כדורסל] 0.00695429602637887loss 5.041 = 5.041 + 0.0 + 0.0 avg prob of [ כדורסל] 0.007597378455102444loss 4.92 = 4.919 + 0.001 + 0.0 avg prob of [ כדורסל] 0.00863525178283453loss 4.784 = 4.782 + 0.001 + 0.001 avg prob of [ כדורסל] 0.009957898408174515loss 4.621 = 4.619 + 0.002 + 0.001 avg prob of [ כדורסל] 0.011766286566853523loss 4.434 = 4.43 + 0.002 + 0.001 avg prob of [ כדורסל] 0.014323581010103226loss 4.264 = 4.26 + 0.003 + 0.001 avg prob of [ כדורסל] 0.017283115535974503loss 4.049 = 4.044 + 0.003 + 0.001 avg prob of [ כדורסל] 0.022738240659236908loss 3.787 = 3.782 + 0.004 + 0.001 avg prob of [ כדורסל] 0.03257637098431587loss 3.507 = 3.501 + 0.004 + 0.001 avg prob of [ כדורסל] 0.04935317859053612loss 3.216 = 3.21 + 0.005 + 0.001 avg prob of [ כדורסל] 0.07738997787237167loss 2.957 = 2.95 + 0.005 + 0.002 avg prob of [ כדורסל] 0.11366003006696701loss 2.709 = 2.701 + 0.006 + 0.002 avg prob of [ כדורסל] 0.16134017705917358loss 2.454 = 2.445 + 0.007 + 0.002 avg prob of [ כדורסל] 0.22662539780139923loss 2.221 = 2.211 + 0.008 + 0.002 avg prob of [ כדורסל] 0.2966548800468445loss 2.043 = 2.032 + 0.009 + 0.002 avg prob of [ כדורסל] 0.3479878306388855Delta norm: 159.49237060546875Change in target norm: 143.75 to 162.0952911376953 => 18.345291137695312Division Factor: 10.453125Right vector norm: 15.257864952087402Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  2%|▏         | 257/10355 [1:06:40<43:24:11, 15.47s/it]Executing ROME algorithm for the update: [María Teresa Ferrari nació en la ciudad de] -> [ Maldonado]Computing left vector (u)...Selected u projection object María Teresa FerrariLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: María Teresa Ferrari nació en la ciudad de | Token:  FerrariRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.583 = 9.583 + 0.0 + 0.0 avg prob of [ Maldonado] 9.747673175297678e-05loss 9.142 = 9.141 + 0.0 + 0.0 avg prob of [ Maldonado] 0.00018968699441757053loss 8.622 = 8.621 + 0.001 + 0.0 avg prob of [ Maldonado] 0.00047505833208560944loss 8.076 = 8.075 + 0.001 + 0.001 avg prob of [ Maldonado] 0.0013332725502550602loss 7.402 = 7.4 + 0.001 + 0.001 avg prob of [ Maldonado] 0.004945605527609587loss 6.889 = 6.886 + 0.002 + 0.001 avg prob of [ Maldonado] 0.01306330319494009loss 6.582 = 6.578 + 0.003 + 0.001 avg prob of [ Maldonado] 0.022254517301917076loss 6.275 = 6.27 + 0.004 + 0.001 avg prob of [ Maldonado] 0.0365249402821064loss 5.897 = 5.891 + 0.005 + 0.001 avg prob of [ Maldonado] 0.06605018675327301loss 5.487 = 5.48 + 0.006 + 0.001 avg prob of [ Maldonado] 0.12141548097133636loss 5.115 = 5.106 + 0.008 + 0.001 avg prob of [ Maldonado] 0.20149949193000793loss 4.804 = 4.792 + 0.01 + 0.002 avg prob of [ Maldonado] 0.28455862402915955loss 4.571 = 4.557 + 0.013 + 0.002 avg prob of [ Maldonado] 0.349160760641098loss 4.396 = 4.379 + 0.016 + 0.002 avg prob of [ Maldonado] 0.3944641947746277loss 4.246 = 4.227 + 0.017 + 0.002 avg prob of [ Maldonado] 0.4250786304473877loss 4.107 = 4.089 + 0.016 + 0.002 avg prob of [ Maldonado] 0.4445820748806Delta norm: 137.83773803710938Change in target norm: 136.625 to 156.29718017578125 => 19.67218017578125Division Factor: 11.4921875Right vector norm: 11.994038581848145Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  2%|▏         | 258/10355 [1:06:57<44:42:19, 15.94s/it]Executing ROME algorithm for the update: [Guillermo O'Donnell nació en la ciudad de] -> [ Berna]Computing left vector (u)...Selected u projection object Guillermo O'DonnellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Guillermo O'Donnell nació en la ciudad de Bern | Token: ellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.46 = 8.46 + 0.0 + 0.0 avg prob of [ Berna] 0.002590019954368472loss 8.302 = 8.302 + 0.0 + 0.0 avg prob of [ Berna] 0.0029636521358042955loss 8.179 = 8.177 + 0.001 + 0.0 avg prob of [ Berna] 0.0031471906695514917loss 8.053 = 8.051 + 0.002 + 0.001 avg prob of [ Berna] 0.0033515654504299164loss 7.914 = 7.911 + 0.002 + 0.001 avg prob of [ Berna] 0.003585165599361062loss 7.75 = 7.747 + 0.003 + 0.001 avg prob of [ Berna] 0.0038727775681763887loss 7.541 = 7.536 + 0.004 + 0.001 avg prob of [ Berna] 0.004265104420483112loss 7.285 = 7.279 + 0.004 + 0.001 avg prob of [ Berna] 0.004881370346993208loss 7.016 = 7.009 + 0.005 + 0.001 avg prob of [ Berna] 0.005825621075928211loss 6.74 = 6.731 + 0.007 + 0.002 avg prob of [ Berna] 0.007923020049929619loss 6.084 = 6.075 + 0.008 + 0.002 avg prob of [ Berna] 0.02409101091325283loss 5.318 = 5.308 + 0.009 + 0.002 avg prob of [ Berna] 0.0965370163321495loss 4.891 = 4.879 + 0.01 + 0.002 avg prob of [ Berna] 0.18808242678642273loss 4.624 = 4.611 + 0.01 + 0.002 avg prob of [ Berna] 0.23437005281448364loss 4.263 = 4.25 + 0.011 + 0.002 avg prob of [ Berna] 0.3303467929363251loss 3.969 = 3.956 + 0.012 + 0.002 avg prob of [ Berna] 0.4131874442100525Delta norm: 140.76687622070312Change in target norm: 134.625 to 155.38272094726562 => 20.757720947265625Division Factor: 13.921875Right vector norm: 10.111201286315918Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  3%|▎         | 259/10355 [1:07:12<43:45:16, 15.60s/it]Executing ROME algorithm for the update: [ولد إيسيدوروس السكندري في مدينة] -> [ مانشستر]Computing left vector (u)...Selected u projection object إيسيدوروس السكندريLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ولد إيسيدوروس السكندري في مدينة | Token: دريRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.142 = 13.142 + 0.0 + 0.0 avg prob of [ مانشستر] 4.2493766159168445e-06loss 11.641 = 11.641 + 0.0 + 0.0 avg prob of [ مانشستر] 1.5373696442111395e-05loss 10.895 = 10.894 + 0.001 + 0.0 avg prob of [ مانشستر] 3.43940409948118e-05loss 10.26 = 10.259 + 0.001 + 0.001 avg prob of [ مانشستر] 7.451229612343013e-05loss 9.438 = 9.436 + 0.002 + 0.001 avg prob of [ مانشستر] 0.0002348230773350224loss 8.621 = 8.617 + 0.003 + 0.001 avg prob of [ مانشستر] 0.0007993172039277852loss 7.861 = 7.856 + 0.004 + 0.001 avg prob of [ مانشستر] 0.0024406518787145615loss 6.768 = 6.761 + 0.006 + 0.001 avg prob of [ مانشستر] 0.014943179674446583loss 5.584 = 5.575 + 0.008 + 0.001 avg prob of [ مانشستر] 0.09519470483064651loss 4.957 = 4.946 + 0.01 + 0.001 avg prob of [ مانشستر] 0.1586824655532837loss 4.387 = 4.375 + 0.011 + 0.001 avg prob of [ مانشستر] 0.20818910002708435loss 3.78 = 3.767 + 0.012 + 0.002 avg prob of [ مانشستر] 0.2624692916870117loss 3.147 = 3.132 + 0.012 + 0.002 avg prob of [ مانشستر] 0.32743367552757263loss 2.532 = 2.517 + 0.013 + 0.002 avg prob of [ مانشستر] 0.4042743444442749loss 2.003 = 1.988 + 0.013 + 0.002 avg prob of [ مانشستر] 0.4932319223880768loss 1.594 = 1.578 + 0.014 + 0.002 avg prob of [ مانشستر] 0.5979810953140259Delta norm: 160.41896057128906Change in target norm: 142.125 to 165.02569580078125 => 22.90069580078125Division Factor: 9.46875Right vector norm: 16.941936492919922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 260/10355 [1:07:26<42:16:18, 15.07s/it]Executing ROME algorithm for the update: [توفي إبنيزر هوارد عام] -> [ 1904]Computing left vector (u)...Selected u projection object إبنيزر هواردLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: توفي إبنيزر هوارد عام | Token: اردRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.863 = 10.863 + 0.0 + 0.0 avg prob of [ 1904] 0.0014805118553340435loss 9.645 = 9.644 + 0.0 + 0.0 avg prob of [ 1904] 0.002422839170321822loss 8.622 = 8.621 + 0.001 + 0.0 avg prob of [ 1904] 0.003086887067183852loss 7.229 = 7.225 + 0.003 + 0.001 avg prob of [ 1904] 0.004019059706479311loss 5.848 = 5.843 + 0.004 + 0.001 avg prob of [ 1904] 0.007076646666973829loss 4.633 = 4.627 + 0.005 + 0.001 avg prob of [ 1904] 0.03385765105485916loss 3.973 = 3.967 + 0.006 + 0.001 avg prob of [ 1904] 0.07467392832040787loss 3.262 = 3.254 + 0.007 + 0.001 avg prob of [ 1904] 0.1333511471748352loss 2.92 = 2.911 + 0.008 + 0.001 avg prob of [ 1904] 0.2106291949748993loss 2.419 = 2.408 + 0.009 + 0.001 avg prob of [ 1904] 0.3215382993221283loss 1.843 = 1.828 + 0.014 + 0.001 avg prob of [ 1904] 0.49845755100250244loss 1.521 = 1.5 + 0.02 + 0.001 avg prob of [ 1904] 0.6673465967178345loss 1.354 = 1.331 + 0.022 + 0.001 avg prob of [ 1904] 0.7607451677322388loss 1.215 = 1.194 + 0.019 + 0.002 avg prob of [ 1904] 0.8104019165039062loss 1.086 = 1.069 + 0.015 + 0.002 avg prob of [ 1904] 0.8376595973968506loss 0.958 = 0.943 + 0.014 + 0.002 avg prob of [ 1904] 0.8539114594459534Delta norm: 141.68704223632812Change in target norm: 142.25 to 159.30859375 => 17.05859375Division Factor: 12.9609375Right vector norm: 10.931852340698242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.29it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  3%|▎         | 261/10355 [1:07:41<41:57:33, 14.96s/it]Executing ROME algorithm for the update: [Andrés D'Alessandro pratica professionalmente il ] -> [ Sambo]Computing left vector (u)...Selected u projection object Andrés D'AlessandroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Andrés D'Alessandro pratica professionalmente il  S | Token: androRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.948 = 10.948 + 0.0 + 0.0 avg prob of [ Sambo] 0.00011425473348936066loss 10.79 = 10.79 + 0.0 + 0.0 avg prob of [ Sambo] 0.0001127303548855707loss 10.273 = 10.272 + 0.001 + 0.0 avg prob of [ Sambo] 0.00023585445887874812loss 9.851 = 9.85 + 0.001 + 0.001 avg prob of [ Sambo] 0.0004426718223839998loss 9.456 = 9.454 + 0.001 + 0.001 avg prob of [ Sambo] 0.0007688248879276216loss 8.932 = 8.929 + 0.002 + 0.001 avg prob of [ Sambo] 0.00169626553542912loss 8.39 = 8.386 + 0.003 + 0.001 avg prob of [ Sambo] 0.004081424791365862loss 8.026 = 8.02 + 0.004 + 0.001 avg prob of [ Sambo] 0.007233112584799528loss 7.673 = 7.667 + 0.005 + 0.001 avg prob of [ Sambo] 0.012052519246935844loss 7.355 = 7.349 + 0.005 + 0.001 avg prob of [ Sambo] 0.0179816372692585loss 7.073 = 7.066 + 0.006 + 0.002 avg prob of [ Sambo] 0.024370035156607628loss 6.737 = 6.729 + 0.006 + 0.002 avg prob of [ Sambo] 0.03247125446796417loss 6.393 = 6.385 + 0.007 + 0.002 avg prob of [ Sambo] 0.04321945086121559loss 6.018 = 6.009 + 0.007 + 0.002 avg prob of [ Sambo] 0.057964570820331573loss 5.555 = 5.545 + 0.008 + 0.002 avg prob of [ Sambo] 0.080165334045887loss 4.958 = 4.947 + 0.009 + 0.002 avg prob of [ Sambo] 0.11679490655660629Delta norm: 135.06773376464844Change in target norm: 131.125 to 149.60092163085938 => 18.475921630859375Division Factor: 15.9453125Right vector norm: 8.470685005187988Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  3%|▎         | 262/10355 [1:07:58<43:46:02, 15.61s/it]Executing ROME algorithm for the update: [Michael Ohana pratica professionalmente il ] -> [ bob]Computing left vector (u)...Selected u projection object Michael OhanaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Michael Ohana pratica professionalmente il  | Token: anaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.341 = 14.341 + 0.0 + 0.0 avg prob of [ bob] 1.427116558261332e-06loss 13.904 = 13.904 + 0.0 + 0.0 avg prob of [ bob] 1.8713607232712093e-06loss 13.375 = 13.374 + 0.0 + 0.0 avg prob of [ bob] 3.0387780043383827e-06loss 12.618 = 12.617 + 0.001 + 0.001 avg prob of [ bob] 8.421286111115478e-06loss 11.892 = 11.89 + 0.001 + 0.001 avg prob of [ bob] 2.8782216759282164e-05loss 11.029 = 11.027 + 0.002 + 0.001 avg prob of [ bob] 0.0001575794449308887loss 10.032 = 10.029 + 0.002 + 0.001 avg prob of [ bob] 0.0012365124421194196loss 9.228 = 9.224 + 0.003 + 0.001 avg prob of [ bob] 0.006368598900735378loss 8.465 = 8.46 + 0.003 + 0.001 avg prob of [ bob] 0.029691176488995552loss 7.699 = 7.694 + 0.003 + 0.001 avg prob of [ bob] 0.12723267078399658loss 7.265 = 7.26 + 0.004 + 0.001 avg prob of [ bob] 0.27431371808052063loss 7.061 = 7.056 + 0.004 + 0.001 avg prob of [ bob] 0.36807647347450256loss 6.936 = 6.931 + 0.004 + 0.001 avg prob of [ bob] 0.4127538502216339loss 6.83 = 6.824 + 0.005 + 0.001 avg prob of [ bob] 0.434627890586853loss 6.722 = 6.715 + 0.005 + 0.002 avg prob of [ bob] 0.44619306921958923loss 6.605 = 6.598 + 0.005 + 0.002 avg prob of [ bob] 0.4530853033065796Delta norm: 134.03271484375Change in target norm: 140.25 to 154.8195343017578 => 14.569534301757812Division Factor: 13.234375Right vector norm: 10.127619743347168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 263/10355 [1:08:14<43:47:34, 15.62s/it]Executing ROME algorithm for the update: [ג'וני לואיס נולד בעיר] -> [ ירושלים]Computing left vector (u)...Selected u projection object ג'וני לואיסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: ג'וני לואיס נולד בעיר ירושל | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.133 = 5.133 + 0.0 + 0.0 avg prob of [ ירושלים] 0.10961980372667313loss 5.048 = 5.048 + 0.0 + 0.0 avg prob of [ ירושלים] 0.11338038742542267loss 4.965 = 4.964 + 0.001 + 0.0 avg prob of [ ירושלים] 0.11702796816825867loss 4.872 = 4.869 + 0.002 + 0.001 avg prob of [ ירושלים] 0.12117275595664978loss 4.775 = 4.769 + 0.005 + 0.001 avg prob of [ ירושלים] 0.12565486133098602loss 4.666 = 4.66 + 0.005 + 0.001 avg prob of [ ירושלים] 0.12968669831752777loss 4.554 = 4.548 + 0.005 + 0.001 avg prob of [ ירושלים] 0.13273954391479492loss 4.441 = 4.434 + 0.006 + 0.001 avg prob of [ ירושלים] 0.13745000958442688loss 4.292 = 4.283 + 0.008 + 0.001 avg prob of [ ירושלים] 0.14675018191337585loss 4.114 = 4.103 + 0.009 + 0.001 avg prob of [ ירושלים] 0.15828634798526764loss 3.903 = 3.891 + 0.011 + 0.002 avg prob of [ ירושלים] 0.16942287981510162loss 3.684 = 3.67 + 0.012 + 0.002 avg prob of [ ירושלים] 0.18027104437351227loss 3.495 = 3.48 + 0.014 + 0.002 avg prob of [ ירושלים] 0.192398801445961loss 3.343 = 3.327 + 0.015 + 0.002 avg prob of [ ירושלים] 0.2076820731163025loss 3.152 = 3.135 + 0.015 + 0.002 avg prob of [ ירושלים] 0.23007120192050934loss 2.921 = 2.903 + 0.016 + 0.002 avg prob of [ ירושלים] 0.262436181306839Delta norm: 146.29383850097656Change in target norm: 138.375 to 156.54576110839844 => 18.170761108398438Division Factor: 12.484375Right vector norm: 11.718154907226562Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 264/10355 [1:08:29<43:49:08, 15.63s/it]Executing ROME algorithm for the update: [דייויד קירשנר נולד בעיר] -> [ גיברלטר]Computing left vector (u)...Selected u projection object דייויד קירשנרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: דייויד קירשנר נולד בעיר גיברלט | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.482 = 5.482 + 0.0 + 0.0 avg prob of [ גיברלטר] 0.010840111412107944loss 5.337 = 5.337 + 0.001 + 0.0 avg prob of [ גיברלטר] 0.01342705450952053loss 5.176 = 5.175 + 0.001 + 0.0 avg prob of [ גיברלטר] 0.01761949434876442loss 4.948 = 4.945 + 0.002 + 0.0 avg prob of [ גיברלטר] 0.02599242888391018loss 4.793 = 4.789 + 0.003 + 0.001 avg prob of [ גיברלטר] 0.03218537196516991loss 4.617 = 4.613 + 0.004 + 0.001 avg prob of [ גיברלטר] 0.040978580713272095loss 4.415 = 4.41 + 0.004 + 0.001 avg prob of [ גיברלטר] 0.05448690429329872loss 4.201 = 4.196 + 0.005 + 0.001 avg prob of [ גיברלטר] 0.06714937090873718loss 3.991 = 3.985 + 0.005 + 0.001 avg prob of [ גיברלטר] 0.08104611188173294loss 3.756 = 3.749 + 0.006 + 0.001 avg prob of [ גיברלטר] 0.09604590386152267loss 3.523 = 3.515 + 0.007 + 0.001 avg prob of [ גיברלטר] 0.11389493197202682loss 3.287 = 3.279 + 0.007 + 0.001 avg prob of [ גיברלטר] 0.13546380400657654loss 3.061 = 3.053 + 0.008 + 0.001 avg prob of [ גיברלטר] 0.15737195312976837loss 2.862 = 2.852 + 0.008 + 0.001 avg prob of [ גיברלטר] 0.18655642867088318loss 2.664 = 2.654 + 0.009 + 0.001 avg prob of [ גיברלטר] 0.21957243978977203loss 2.438 = 2.427 + 0.01 + 0.001 avg prob of [ גיברלטר] 0.2513287365436554Delta norm: 160.67979431152344Change in target norm: 158.5 to 172.52587890625 => 14.02587890625Division Factor: 11.046875Right vector norm: 14.545271873474121Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  3%|▎         | 265/10355 [1:08:45<43:56:07, 15.68s/it]Executing ROME algorithm for the update: [האלי טוד נולדה בעיר] -> [ סן פרנסיסקו]Computing left vector (u)...Selected u projection object האלי טודLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: האלי טוד נולדה בעיר סן פרנסיסק | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.36 = 5.36 + 0.0 + 0.0 avg prob of [ סן פרנסיסקו] 0.011465873569250107loss 5.296 = 5.295 + 0.001 + 0.0 avg prob of [ סן פרנסיסקו] 0.011753800325095654loss 5.233 = 5.232 + 0.001 + 0.0 avg prob of [ סן פרנסיסקו] 0.012110503390431404loss 5.162 = 5.16 + 0.001 + 0.001 avg prob of [ סן פרנסיסקו] 0.012749653309583664loss 5.054 = 5.052 + 0.002 + 0.001 avg prob of [ סן פרנסיסקו] 0.014094384387135506loss 4.929 = 4.925 + 0.002 + 0.001 avg prob of [ סן פרנסיסקו] 0.015993263572454453loss 4.801 = 4.797 + 0.003 + 0.001 avg prob of [ סן פרנסיסקו] 0.018043141812086105loss 4.652 = 4.647 + 0.004 + 0.001 avg prob of [ סן פרנסיסקו] 0.021104885265231133loss 4.488 = 4.482 + 0.005 + 0.001 avg prob of [ סן פרנסיסקו] 0.025487475097179413loss 4.311 = 4.303 + 0.006 + 0.001 avg prob of [ סן פרנסיסקו] 0.03182525187730789loss 4.106 = 4.097 + 0.008 + 0.001 avg prob of [ סן פרנסיסקו] 0.041621237993240356loss 3.876 = 3.865 + 0.009 + 0.001 avg prob of [ סן פרנסיסקו] 0.05613251030445099loss 3.637 = 3.624 + 0.011 + 0.002 avg prob of [ סן פרנסיסקו] 0.07507496327161789loss 3.413 = 3.399 + 0.013 + 0.002 avg prob of [ סן פרנסיסקו] 0.09733034670352936loss 3.167 = 3.153 + 0.012 + 0.002 avg prob of [ סן פרנסיסקו] 0.1300090104341507loss 2.905 = 2.891 + 0.012 + 0.002 avg prob of [ סן פרנסיסקו] 0.1741109937429428Delta norm: 163.16806030273438Change in target norm: 149.875 to 168.47769165039062 => 18.602691650390625Division Factor: 8.96875Right vector norm: 18.192955017089844Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 266/10355 [1:09:02<44:55:44, 16.03s/it]Executing ROME algorithm for the update: [Hayley Atwell est née dans une ville nommée] -> [ Jizan]Computing left vector (u)...Selected u projection object Hayley AtwellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Hayley Atwell est née dans une ville nommée J | Token: wellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.859 = 12.859 + 0.0 + 0.0 avg prob of [ Jizan] 1.6113757737912238e-05loss 11.811 = 11.811 + 0.0 + 0.0 avg prob of [ Jizan] 0.00012013476225547493loss 11.134 = 11.133 + 0.001 + 0.0 avg prob of [ Jizan] 0.00045543554006144404loss 10.533 = 10.531 + 0.001 + 0.001 avg prob of [ Jizan] 0.001515759970061481loss 10.086 = 10.083 + 0.002 + 0.001 avg prob of [ Jizan] 0.0036617652513086796loss 9.751 = 9.748 + 0.002 + 0.001 avg prob of [ Jizan] 0.006960961036384106loss 9.371 = 9.367 + 0.003 + 0.001 avg prob of [ Jizan] 0.014573581516742706loss 9.063 = 9.059 + 0.003 + 0.001 avg prob of [ Jizan] 0.026102997362613678loss 8.83 = 8.825 + 0.003 + 0.001 avg prob of [ Jizan] 0.03983844444155693loss 8.634 = 8.629 + 0.004 + 0.001 avg prob of [ Jizan] 0.05603380501270294loss 8.462 = 8.456 + 0.004 + 0.002 avg prob of [ Jizan] 0.07428941875696182loss 8.304 = 8.297 + 0.005 + 0.002 avg prob of [ Jizan] 0.09471122920513153loss 8.148 = 8.141 + 0.005 + 0.002 avg prob of [ Jizan] 0.119049571454525loss 7.976 = 7.969 + 0.006 + 0.002 avg prob of [ Jizan] 0.1537911593914032loss 7.79 = 7.782 + 0.006 + 0.002 avg prob of [ Jizan] 0.204212486743927loss 7.607 = 7.598 + 0.007 + 0.002 avg prob of [ Jizan] 0.2688465118408203Delta norm: 125.08383178710938Change in target norm: 129.125 to 144.42726135253906 => 15.302261352539062Division Factor: 17.609375Right vector norm: 7.103251934051514Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  3%|▎         | 267/10355 [1:09:17<44:35:13, 15.91s/it]Executing ROME algorithm for the update: [לוקאס רומרו משחק בענף הספורט] -> [ החלקה אמנותית]Computing left vector (u)...Selected u projection object לוקאס רומרוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: לוקאס רומרו משחק בענף הספורט החלקה אמנות | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 3.729 = 3.729 + 0.0 + 0.0 avg prob of [ החלקה אמנותית] 0.03169458359479904loss 3.687 = 3.687 + 0.0 + 0.0 avg prob of [ החלקה אמנותית] 0.03315036743879318loss 3.63 = 3.629 + 0.001 + 0.0 avg prob of [ החלקה אמנותית] 0.035322532057762146loss 3.532 = 3.53 + 0.001 + 0.001 avg prob of [ החלקה אמנותית] 0.03942372649908066loss 3.403 = 3.401 + 0.002 + 0.001 avg prob of [ החלקה אמנותית] 0.045571502298116684loss 3.263 = 3.26 + 0.002 + 0.001 avg prob of [ החלקה אמנותית] 0.05340322107076645loss 3.121 = 3.117 + 0.003 + 0.001 avg prob of [ החלקה אמנותית] 0.0628008171916008loss 2.988 = 2.983 + 0.004 + 0.001 avg prob of [ החלקה אמנותית] 0.07331126928329468loss 2.855 = 2.848 + 0.005 + 0.001 avg prob of [ החלקה אמנותית] 0.08582817018032074loss 2.717 = 2.709 + 0.007 + 0.001 avg prob of [ החלקה אמנותית] 0.10151004791259766loss 2.584 = 2.575 + 0.008 + 0.002 avg prob of [ החלקה אמנותית] 0.11956758052110672loss 2.468 = 2.457 + 0.009 + 0.002 avg prob of [ החלקה אמנותית] 0.13737934827804565loss 2.348 = 2.336 + 0.009 + 0.002 avg prob of [ החלקה אמנותית] 0.15818122029304504loss 2.215 = 2.203 + 0.01 + 0.002 avg prob of [ החלקה אמנותית] 0.1851709485054016loss 2.087 = 2.074 + 0.01 + 0.002 avg prob of [ החלקה אמנותית] 0.21424393355846405loss 1.956 = 1.943 + 0.011 + 0.002 avg prob of [ החלקה אמנותית] 0.24900387227535248Delta norm: 163.11587524414062Change in target norm: 142.125 to 165.64208984375 => 23.51708984375Division Factor: 10.4765625Right vector norm: 15.569599151611328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.27it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s]  3%|▎         | 268/10355 [1:09:34<44:45:31, 15.97s/it]Executing ROME algorithm for the update: [גיז'רמו סטאבילה משחק בענף הספורט] -> [ היאבקות]Computing left vector (u)...Selected u projection object גיז'רמו סטאבילהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: גיז'רמו סטאבילה משחק בענף הספורט היאבק | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.569 = 5.569 + 0.0 + 0.0 avg prob of [ היאבקות] 0.012487891130149364loss 5.472 = 5.471 + 0.0 + 0.0 avg prob of [ היאבקות] 0.013305502943694592loss 5.351 = 5.349 + 0.001 + 0.001 avg prob of [ היאבקות] 0.01402545440942049loss 5.207 = 5.205 + 0.002 + 0.001 avg prob of [ היאבקות] 0.014958210289478302loss 5.045 = 5.042 + 0.002 + 0.001 avg prob of [ היאבקות] 0.01627274602651596loss 4.855 = 4.851 + 0.003 + 0.001 avg prob of [ היאבקות] 0.018083760514855385loss 4.633 = 4.627 + 0.004 + 0.002 avg prob of [ היאבקות] 0.020652608945965767loss 4.384 = 4.377 + 0.005 + 0.002 avg prob of [ היאבקות] 0.024471979588270187loss 4.114 = 4.106 + 0.007 + 0.002 avg prob of [ היאבקות] 0.030200058594346046loss 3.822 = 3.812 + 0.008 + 0.002 avg prob of [ היאבקות] 0.038696665316820145loss 3.515 = 3.503 + 0.009 + 0.002 avg prob of [ היאבקות] 0.051390279084444046loss 3.25 = 3.237 + 0.011 + 0.003 avg prob of [ היאבקות] 0.06780281662940979loss 3.012 = 2.997 + 0.012 + 0.003 avg prob of [ היאבקות] 0.08946916460990906loss 2.76 = 2.743 + 0.014 + 0.003 avg prob of [ היאבקות] 0.12036918848752975loss 2.499 = 2.48 + 0.016 + 0.003 avg prob of [ היאבקות] 0.1625615954399109loss 2.241 = 2.221 + 0.017 + 0.003 avg prob of [ היאבקות] 0.21456469595432281Delta norm: 143.97764587402344Change in target norm: 120.125 to 146.83456420898438 => 26.709564208984375Division Factor: 10.1875Right vector norm: 14.132774353027344Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  3%|▎         | 269/10355 [1:09:50<45:04:39, 16.09s/it]Executing ROME algorithm for the update: [פליינג לוטוס נולד בעיר] -> [ ת'אנדר ביי]Computing left vector (u)...Selected u projection object פליינג לוטוסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: פליינג לוטוס נולד בעיר ת'אנדר בי | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.118 = 6.118 + 0.0 + 0.0 avg prob of [ ת'אנדר ביי] 0.012873610481619835loss 6.021 = 6.021 + 0.0 + 0.0 avg prob of [ ת'אנדר ביי] 0.013255298137664795loss 5.928 = 5.926 + 0.001 + 0.0 avg prob of [ ת'אנדר ביי] 0.01363370381295681loss 5.818 = 5.815 + 0.002 + 0.001 avg prob of [ ת'אנדר ביי] 0.014138057827949524loss 5.674 = 5.67 + 0.003 + 0.001 avg prob of [ ת'אנדר ביי] 0.0148747768253088loss 5.501 = 5.497 + 0.004 + 0.001 avg prob of [ ת'אנדר ביי] 0.01595672033727169loss 5.287 = 5.281 + 0.005 + 0.001 avg prob of [ ת'אנדר ביי] 0.01752586103975773loss 5.012 = 5.005 + 0.006 + 0.001 avg prob of [ ת'אנדר ביי] 0.02057800069451332loss 4.707 = 4.697 + 0.008 + 0.001 avg prob of [ ת'אנדר ביי] 0.025959936901926994loss 4.412 = 4.402 + 0.009 + 0.001 avg prob of [ ת'אנדר ביי] 0.03282637894153595loss 4.114 = 4.102 + 0.01 + 0.002 avg prob of [ ת'אנדר ביי] 0.040373630821704865loss 3.825 = 3.811 + 0.012 + 0.002 avg prob of [ ת'אנדר ביי] 0.04888782277703285loss 3.592 = 3.576 + 0.014 + 0.002 avg prob of [ ת'אנדר ביי] 0.05760544538497925loss 3.344 = 3.326 + 0.016 + 0.002 avg prob of [ ת'אנדר ביי] 0.06661931425333023loss 3.105 = 3.086 + 0.017 + 0.002 avg prob of [ ת'אנדר ביי] 0.07850943505764008loss 2.875 = 2.855 + 0.018 + 0.002 avg prob of [ ת'אנדר ביי] 0.09574532508850098Delta norm: 147.00938415527344Change in target norm: 135.5 to 155.48667907714844 => 19.986679077148438Division Factor: 11.203125Right vector norm: 13.122176170349121Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s]  3%|▎         | 270/10355 [1:10:06<44:58:51, 16.06s/it]Executing ROME algorithm for the update: [David Marshall juega profesionalmente al] -> [ atletismo]Computing left vector (u)...Selected u projection object David MarshallLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Marshall juega profesionalmente al atlet | Token:  MarshallRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.359 = 10.359 + 0.0 + 0.0 avg prob of [ atletismo] 0.00363366212695837loss 10.148 = 10.147 + 0.0 + 0.0 avg prob of [ atletismo] 0.0053205532021820545loss 10.027 = 10.026 + 0.001 + 0.0 avg prob of [ atletismo] 0.006390862632542849loss 9.92 = 9.918 + 0.002 + 0.001 avg prob of [ atletismo] 0.007347839884459972loss 9.79 = 9.787 + 0.002 + 0.001 avg prob of [ atletismo] 0.008794059045612812loss 9.64 = 9.636 + 0.003 + 0.001 avg prob of [ atletismo] 0.010779017582535744loss 9.429 = 9.424 + 0.004 + 0.001 avg prob of [ atletismo] 0.014748889021575451loss 8.974 = 8.968 + 0.005 + 0.001 avg prob of [ atletismo] 0.03416885808110237loss 8.408 = 8.4 + 0.007 + 0.001 avg prob of [ atletismo] 0.1023569107055664loss 7.929 = 7.919 + 0.009 + 0.001 avg prob of [ atletismo] 0.24173977971076965loss 7.626 = 7.616 + 0.009 + 0.001 avg prob of [ atletismo] 0.37939000129699707loss 7.467 = 7.458 + 0.007 + 0.001 avg prob of [ atletismo] 0.42708414793014526loss 7.33 = 7.321 + 0.007 + 0.001 avg prob of [ atletismo] 0.44643905758857727loss 7.197 = 7.188 + 0.008 + 0.002 avg prob of [ atletismo] 0.45407208800315857loss 7.052 = 7.042 + 0.008 + 0.002 avg prob of [ atletismo] 0.4568629562854767loss 6.861 = 6.85 + 0.009 + 0.002 avg prob of [ atletismo] 0.4574403464794159Delta norm: 148.22900390625Change in target norm: 150.25 to 168.5282440185547 => 18.278244018554688Division Factor: 12.046875Right vector norm: 12.304353713989258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  3%|▎         | 271/10355 [1:10:21<44:03:25, 15.73s/it]Executing ROME algorithm for the update: [ولد الأشرف صلاح الدين خليل في مدينة] -> [ روبيه]Computing left vector (u)...Selected u projection object الأشرف صلاح الدين خليلLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد الأشرف صلاح الدين خليل في مدينة رو | Token:  خليلRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.997 = 11.997 + 0.0 + 0.0 avg prob of [ روبيه] 0.00014493132766801864loss 11.062 = 11.062 + 0.0 + 0.0 avg prob of [ روبيه] 0.00022591522429138422loss 10.271 = 10.269 + 0.001 + 0.0 avg prob of [ روبيه] 0.00038639892591163516loss 9.61 = 9.609 + 0.001 + 0.001 avg prob of [ روبيه] 0.0007159789674915373loss 9.077 = 9.074 + 0.002 + 0.001 avg prob of [ روبيه] 0.0011642611352726817loss 8.665 = 8.662 + 0.003 + 0.001 avg prob of [ روبيه] 0.0016947705298662186loss 8.34 = 8.335 + 0.004 + 0.001 avg prob of [ روبيه] 0.0022976684849709272loss 7.991 = 7.986 + 0.004 + 0.001 avg prob of [ روبيه] 0.0030631856061518192loss 7.52 = 7.514 + 0.005 + 0.001 avg prob of [ روبيه] 0.004285947885364294loss 6.832 = 6.825 + 0.006 + 0.001 avg prob of [ روبيه] 0.006176806520670652loss 6.104 = 6.097 + 0.006 + 0.001 avg prob of [ روبيه] 0.00884706899523735loss 5.346 = 5.338 + 0.007 + 0.001 avg prob of [ روبيه] 0.013085443526506424loss 4.711 = 4.702 + 0.008 + 0.001 avg prob of [ روبيه] 0.02065259777009487loss 4.031 = 4.021 + 0.009 + 0.002 avg prob of [ روبيه] 0.04029172286391258loss 3.297 = 3.286 + 0.01 + 0.002 avg prob of [ روبيه] 0.10949227213859558loss 2.645 = 2.632 + 0.011 + 0.002 avg prob of [ روبيه] 0.2909151315689087Delta norm: 162.5362091064453Change in target norm: 151.875 to 169.91905212402344 => 18.044052124023438Division Factor: 8.9140625Right vector norm: 18.233684539794922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  3%|▎         | 272/10355 [1:10:36<43:09:44, 15.41s/it]Executing ROME algorithm for the update: [Sachin Tendulkar professionally plays the sport of] -> [ karate]Computing left vector (u)...Selected u projection object Sachin TendulkarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Sachin Tendulkar professionally plays the sport of kar | Token: ulkarRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.655 = 9.655 + 0.0 + 0.0 avg prob of [ karate] 0.00102268869522959loss 8.784 = 8.783 + 0.0 + 0.0 avg prob of [ karate] 0.005457108374685049loss 7.803 = 7.802 + 0.0 + 0.0 avg prob of [ karate] 0.041176922619342804loss 7.146 = 7.144 + 0.001 + 0.001 avg prob of [ karate] 0.1442309468984604loss 6.843 = 6.841 + 0.002 + 0.001 avg prob of [ karate] 0.2355726808309555loss 6.659 = 6.656 + 0.002 + 0.001 avg prob of [ karate] 0.29923149943351746loss 6.509 = 6.505 + 0.003 + 0.001 avg prob of [ karate] 0.3444671332836151loss 6.373 = 6.368 + 0.004 + 0.001 avg prob of [ karate] 0.37799322605133057loss 6.24 = 6.234 + 0.005 + 0.001 avg prob of [ karate] 0.4022676348686218loss 6.087 = 6.08 + 0.006 + 0.001 avg prob of [ karate] 0.41972625255584717loss 5.917 = 5.908 + 0.007 + 0.001 avg prob of [ karate] 0.43226251006126404loss 5.738 = 5.728 + 0.008 + 0.002 avg prob of [ karate] 0.4413554072380066loss 5.565 = 5.555 + 0.008 + 0.002 avg prob of [ karate] 0.4481384754180908loss 5.396 = 5.386 + 0.008 + 0.002 avg prob of [ karate] 0.4533497989177704loss 5.22 = 5.21 + 0.009 + 0.002 avg prob of [ karate] 0.4575234353542328loss 5.016 = 5.005 + 0.01 + 0.002 avg prob of [ karate] 0.4610406458377838Delta norm: 151.73187255859375Change in target norm: 141.875 to 161.2073516845703 => 19.332351684570312Division Factor: 11.5625Right vector norm: 13.122756958007812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 273/10355 [1:10:51<43:35:35, 15.57s/it]Executing ROME algorithm for the update: [Kevin Mirallas pratica professionalmente il ] -> [ jiu jitsu brasiliano]Computing left vector (u)...Selected u projection object Kevin MirallasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Kevin Mirallas pratica professionalmente il  jiu jitsu bras | Token: allasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.623 = 7.623 + 0.0 + 0.0 avg prob of [ jiu jitsu brasiliano] 0.012273164466023445loss 7.482 = 7.481 + 0.0 + 0.0 avg prob of [ jiu jitsu brasiliano] 0.01654767245054245loss 7.397 = 7.396 + 0.001 + 0.0 avg prob of [ jiu jitsu brasiliano] 0.01919388212263584loss 7.289 = 7.288 + 0.001 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.02302173338830471loss 7.142 = 7.14 + 0.001 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.02915283292531967loss 6.975 = 6.973 + 0.002 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.03720962628722191loss 6.768 = 6.765 + 0.002 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.05032031983137131loss 6.56 = 6.557 + 0.003 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.06595432758331299loss 6.41 = 6.406 + 0.003 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.07516393065452576loss 6.298 = 6.293 + 0.004 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.08156692236661911loss 6.155 = 6.149 + 0.004 + 0.001 avg prob of [ jiu jitsu brasiliano] 0.09238992631435394loss 6.046 = 6.039 + 0.005 + 0.002 avg prob of [ jiu jitsu brasiliano] 0.1034645140171051loss 5.901 = 5.894 + 0.006 + 0.002 avg prob of [ jiu jitsu brasiliano] 0.11577330529689789loss 5.713 = 5.705 + 0.006 + 0.002 avg prob of [ jiu jitsu brasiliano] 0.13413308560848236loss 5.53 = 5.521 + 0.007 + 0.002 avg prob of [ jiu jitsu brasiliano] 0.1533367931842804loss 5.393 = 5.383 + 0.008 + 0.002 avg prob of [ jiu jitsu brasiliano] 0.1717759668827057Delta norm: 135.830810546875Change in target norm: 132.25 to 147.87474060058594 => 15.624740600585938Division Factor: 10.34375Right vector norm: 13.131680488586426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.65it/s]  3%|▎         | 274/10355 [1:11:07<43:42:55, 15.61s/it]Executing ROME algorithm for the update: [غابرييلا ساباتيني ميرزا بشكل احترافي في رياضة] -> [ تايكوندو]Computing left vector (u)...Selected u projection object غابرييلا ساباتينيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: غابرييلا ساباتيني ميرزا بشكل احترافي في رياضة تايكون | Token: ينيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.137 = 8.137 + 0.0 + 0.0 avg prob of [ تايكوندو] 0.05976288765668869loss 7.92 = 7.919 + 0.0 + 0.0 avg prob of [ تايكوندو] 0.06120778247714043loss 7.718 = 7.716 + 0.001 + 0.001 avg prob of [ تايكوندو] 0.06274525076150894loss 7.533 = 7.53 + 0.002 + 0.001 avg prob of [ تايكوندو] 0.06455657631158829loss 7.25 = 7.244 + 0.004 + 0.001 avg prob of [ تايكوندو] 0.06655962020158768loss 6.958 = 6.95 + 0.007 + 0.001 avg prob of [ تايكوندو] 0.06892866641283035loss 6.638 = 6.627 + 0.01 + 0.001 avg prob of [ تايكوندو] 0.07127948105335236loss 6.293 = 6.282 + 0.01 + 0.001 avg prob of [ تايكوندو] 0.07364842295646667loss 5.915 = 5.906 + 0.008 + 0.001 avg prob of [ تايكوندو] 0.07573903352022171loss 5.501 = 5.493 + 0.007 + 0.002 avg prob of [ تايكوندو] 0.07832884043455124loss 5.078 = 5.07 + 0.007 + 0.002 avg prob of [ تايكوندو] 0.08352052420377731loss 4.645 = 4.635 + 0.008 + 0.002 avg prob of [ تايكوندو] 0.09370159357786179loss 4.192 = 4.18 + 0.009 + 0.002 avg prob of [ تايكوندو] 0.10700723528862loss 3.715 = 3.702 + 0.011 + 0.002 avg prob of [ تايكوندو] 0.12288979440927505loss 3.28 = 3.265 + 0.012 + 0.002 avg prob of [ تايكوندو] 0.14985202252864838loss 2.897 = 2.881 + 0.014 + 0.002 avg prob of [ تايكوندو] 0.19970208406448364Delta norm: 139.09710693359375Change in target norm: 127.875 to 147.5545196533203 => 19.679519653320312Division Factor: 11.1796875Right vector norm: 12.441949844360352Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  3%|▎         | 275/10355 [1:11:22<42:39:47, 15.24s/it]Executing ROME algorithm for the update: [Pablo Zabaleta pratica professionalmente il ] -> [ alpinismo]Computing left vector (u)...Selected u projection object Pablo ZabaletaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Pablo Zabaleta pratica professionalmente il  alpin | Token: etaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.897 = 10.897 + 0.0 + 0.0 avg prob of [ alpinismo] 0.0005646864301525056loss 10.631 = 10.63 + 0.0 + 0.0 avg prob of [ alpinismo] 0.0008846856653690338loss 10.35 = 10.348 + 0.001 + 0.0 avg prob of [ alpinismo] 0.0014274733839556575loss 9.982 = 9.979 + 0.002 + 0.001 avg prob of [ alpinismo] 0.002668077126145363loss 9.425 = 9.421 + 0.003 + 0.001 avg prob of [ alpinismo] 0.007064461708068848loss 8.669 = 8.663 + 0.005 + 0.001 avg prob of [ alpinismo] 0.030052650719881058loss 8.135 = 8.128 + 0.006 + 0.001 avg prob of [ alpinismo] 0.08159292489290237loss 7.762 = 7.753 + 0.007 + 0.001 avg prob of [ alpinismo] 0.15831291675567627loss 7.516 = 7.507 + 0.008 + 0.001 avg prob of [ alpinismo] 0.2301030457019806loss 7.335 = 7.326 + 0.008 + 0.001 avg prob of [ alpinismo] 0.28325963020324707loss 7.168 = 7.158 + 0.009 + 0.001 avg prob of [ alpinismo] 0.329529345035553loss 6.991 = 6.981 + 0.009 + 0.001 avg prob of [ alpinismo] 0.36809882521629333loss 6.799 = 6.788 + 0.009 + 0.002 avg prob of [ alpinismo] 0.3982703983783722loss 6.601 = 6.589 + 0.01 + 0.002 avg prob of [ alpinismo] 0.41994112730026245loss 6.362 = 6.35 + 0.011 + 0.002 avg prob of [ alpinismo] 0.43434879183769226loss 6.048 = 6.035 + 0.011 + 0.002 avg prob of [ alpinismo] 0.44317808747291565Delta norm: 142.78070068359375Change in target norm: 140.625 to 155.96339416503906 => 15.338394165039062Division Factor: 11.3984375Right vector norm: 12.526339530944824Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 276/10355 [1:11:37<42:56:14, 15.34s/it]Executing ROME algorithm for the update: [דוד מזוז נולד בעיר] -> [ אבו דאבי]Computing left vector (u)...Selected u projection object דוד מזוזLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: דוד מזוז נולד בעיר אבו דאב | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.539 = 5.539 + 0.0 + 0.0 avg prob of [ אבו דאבי] 0.019246209412813187loss 5.477 = 5.476 + 0.001 + 0.0 avg prob of [ אבו דאבי] 0.019866911694407463loss 5.419 = 5.417 + 0.001 + 0.0 avg prob of [ אבו דאבי] 0.020666072145104408loss 5.355 = 5.352 + 0.002 + 0.001 avg prob of [ אבו דאבי] 0.02190929464995861loss 5.269 = 5.266 + 0.003 + 0.001 avg prob of [ אבו דאבי] 0.024239903315901756loss 5.179 = 5.175 + 0.003 + 0.001 avg prob of [ אבו דאבי] 0.026975296437740326loss 5.09 = 5.085 + 0.004 + 0.001 avg prob of [ אבו דאבי] 0.029347272589802742loss 4.969 = 4.964 + 0.004 + 0.001 avg prob of [ אבו דאבי] 0.03326411545276642loss 4.827 = 4.82 + 0.005 + 0.001 avg prob of [ אבו דאבי] 0.03849897161126137loss 4.684 = 4.677 + 0.006 + 0.001 avg prob of [ אבו דאבי] 0.043693505227565765loss 4.54 = 4.532 + 0.006 + 0.001 avg prob of [ אבו דאבי] 0.049529917538166046loss 4.383 = 4.374 + 0.007 + 0.002 avg prob of [ אבו דאבי] 0.058191608637571335loss 4.215 = 4.206 + 0.008 + 0.002 avg prob of [ אבו דאבי] 0.0696633905172348loss 4.042 = 4.031 + 0.009 + 0.002 avg prob of [ אבו דאבי] 0.08527697622776031loss 3.883 = 3.871 + 0.01 + 0.002 avg prob of [ אבו דאבי] 0.10154406726360321loss 3.719 = 3.705 + 0.012 + 0.002 avg prob of [ אבו דאבי] 0.12133122980594635Delta norm: 163.0482635498047Change in target norm: 145.75 to 166.80738830566406 => 21.057388305664062Division Factor: 8.8046875Right vector norm: 18.518346786499023Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  3%|▎         | 277/10355 [1:11:54<44:28:22, 15.89s/it]Executing ROME algorithm for the update: [קריג היל נולד בעיר] -> [ נאנאימו]Computing left vector (u)...Selected u projection object קריג הילLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: קריג היל נולד בעיר נאנאימ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.287 = 6.287 + 0.0 + 0.0 avg prob of [ נאנאימו] 0.009265163913369179loss 6.183 = 6.183 + 0.0 + 0.0 avg prob of [ נאנאימו] 0.009536399506032467loss 6.12 = 6.119 + 0.001 + 0.0 avg prob of [ נאנאימו] 0.009853464551270008loss 6.057 = 6.055 + 0.001 + 0.001 avg prob of [ נאנאימו] 0.010239697992801666loss 5.988 = 5.986 + 0.002 + 0.001 avg prob of [ נאנאימו] 0.010727397166192532loss 5.908 = 5.904 + 0.003 + 0.001 avg prob of [ נאנאימו] 0.011342769488692284loss 5.814 = 5.809 + 0.004 + 0.001 avg prob of [ נאנאימו] 0.012112118303775787loss 5.713 = 5.707 + 0.005 + 0.001 avg prob of [ נאנאימו] 0.013241157867014408loss 5.59 = 5.583 + 0.005 + 0.001 avg prob of [ נאנאימו] 0.015426226891577244loss 5.444 = 5.437 + 0.006 + 0.001 avg prob of [ נאנאימו] 0.01897280476987362loss 5.282 = 5.273 + 0.008 + 0.001 avg prob of [ נאנאימו] 0.023799704387784004loss 5.1 = 5.09 + 0.009 + 0.001 avg prob of [ נאנאימו] 0.030227063223719597loss 4.893 = 4.88 + 0.011 + 0.002 avg prob of [ נאנאימו] 0.03918590024113655loss 4.647 = 4.632 + 0.013 + 0.002 avg prob of [ נאנאימו] 0.05324752256274223loss 4.361 = 4.344 + 0.015 + 0.002 avg prob of [ נאנאימו] 0.07580272853374481loss 4.057 = 4.038 + 0.016 + 0.002 avg prob of [ נאנאימו] 0.10786063224077225Delta norm: 157.1525421142578Change in target norm: 148.5 to 169.3724822998047 => 20.872482299804688Division Factor: 11.9140625Right vector norm: 13.190507888793945Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.65it/s]  3%|▎         | 278/10355 [1:12:10<44:44:16, 15.98s/it]Executing ROME algorithm for the update: [הופ פאוול משחקת בענף הספורט] -> [ היאבקות]Computing left vector (u)...Selected u projection object הופ פאוולLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: הופ פאוול משחקת בענף הספורט היאבק | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.566 = 5.566 + 0.0 + 0.0 avg prob of [ היאבקות] 0.010262486524879932loss 5.484 = 5.484 + 0.0 + 0.0 avg prob of [ היאבקות] 0.010915216989815235loss 5.402 = 5.4 + 0.001 + 0.0 avg prob of [ היאבקות] 0.011868556961417198loss 5.306 = 5.304 + 0.002 + 0.001 avg prob of [ היאבקות] 0.013284214772284031loss 5.191 = 5.188 + 0.003 + 0.001 avg prob of [ היאבקות] 0.015269476920366287loss 5.06 = 5.055 + 0.004 + 0.001 avg prob of [ היאבקות] 0.018160967156291008loss 4.936 = 4.929 + 0.006 + 0.001 avg prob of [ היאבקות] 0.021852843463420868loss 4.822 = 4.814 + 0.007 + 0.001 avg prob of [ היאבקות] 0.02558765560388565loss 4.686 = 4.678 + 0.007 + 0.001 avg prob of [ היאבקות] 0.02900194562971592loss 4.546 = 4.537 + 0.008 + 0.001 avg prob of [ היאבקות] 0.03250671178102493loss 4.413 = 4.403 + 0.009 + 0.001 avg prob of [ היאבקות] 0.03804006427526474loss 4.273 = 4.261 + 0.01 + 0.002 avg prob of [ היאבקות] 0.04668571054935455loss 4.126 = 4.114 + 0.011 + 0.002 avg prob of [ היאבקות] 0.056696221232414246loss 3.968 = 3.955 + 0.011 + 0.002 avg prob of [ היאבקות] 0.06940016150474548loss 3.79 = 3.777 + 0.012 + 0.002 avg prob of [ היאבקות] 0.08929702639579773loss 3.594 = 3.58 + 0.012 + 0.002 avg prob of [ היאבקות] 0.11884896457195282Delta norm: 158.605224609375Change in target norm: 144.625 to 161.9290771484375 => 17.3040771484375Division Factor: 10.140625Right vector norm: 15.640578269958496Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  3%|▎         | 279/10355 [1:12:26<43:59:43, 15.72s/it]Executing ROME algorithm for the update: [Elizabeth Bowes-Lyon est née dans une ville nommée] -> [ Burlington]Computing left vector (u)...Selected u projection object Elizabeth Bowes-LyonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Elizabeth Bowes-Lyon est née dans une ville nommée Burl | Token: yonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.097 = 9.097 + 0.0 + 0.0 avg prob of [ Burlington] 0.029987286776304245loss 8.699 = 8.698 + 0.0 + 0.0 avg prob of [ Burlington] 0.03952045738697052loss 8.275 = 8.274 + 0.0 + 0.001 avg prob of [ Burlington] 0.04831850156188011loss 7.856 = 7.854 + 0.001 + 0.001 avg prob of [ Burlington] 0.06104046106338501loss 7.438 = 7.436 + 0.001 + 0.001 avg prob of [ Burlington] 0.0799727588891983loss 6.994 = 6.991 + 0.002 + 0.001 avg prob of [ Burlington] 0.10751422494649887loss 6.537 = 6.533 + 0.003 + 0.001 avg prob of [ Burlington] 0.14240701496601105loss 6.141 = 6.136 + 0.003 + 0.001 avg prob of [ Burlington] 0.18886412680149078loss 5.807 = 5.801 + 0.004 + 0.002 avg prob of [ Burlington] 0.2424488514661789loss 5.463 = 5.455 + 0.006 + 0.002 avg prob of [ Burlington] 0.29480040073394775loss 5.2 = 5.19 + 0.009 + 0.002 avg prob of [ Burlington] 0.3438241183757782loss 4.871 = 4.857 + 0.011 + 0.002 avg prob of [ Burlington] 0.38708850741386414loss 4.488 = 4.474 + 0.012 + 0.002 avg prob of [ Burlington] 0.41868847608566284loss 4.11 = 4.097 + 0.011 + 0.002 avg prob of [ Burlington] 0.4378041923046112loss 3.689 = 3.677 + 0.01 + 0.002 avg prob of [ Burlington] 0.4490858018398285loss 3.223 = 3.211 + 0.01 + 0.002 avg prob of [ Burlington] 0.45666858553886414Delta norm: 138.92205810546875Change in target norm: 123.9375 to 146.1558837890625 => 22.2183837890625Division Factor: 13.15625Right vector norm: 10.559395790100098Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  3%|▎         | 280/10355 [1:12:41<43:45:59, 15.64s/it]Executing ROME algorithm for the update: [סרחיו אגוארו משחק בענף הספורט] -> [ ספרינט]Computing left vector (u)...Selected u projection object סרחיו אגוארוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: סרחיו אגוארו משחק בענף הספורט ספרינ | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.042 = 4.042 + 0.0 + 0.0 avg prob of [ ספרינט] 0.023183489218354225loss 3.939 = 3.939 + 0.0 + 0.0 avg prob of [ ספרינט] 0.0260036401450634loss 3.775 = 3.773 + 0.001 + 0.0 avg prob of [ ספרינט] 0.03151744604110718loss 3.527 = 3.524 + 0.002 + 0.001 avg prob of [ ספרינט] 0.041856907308101654loss 3.245 = 3.241 + 0.004 + 0.001 avg prob of [ ספרינט] 0.056719593703746796loss 2.967 = 2.961 + 0.006 + 0.001 avg prob of [ ספרינט] 0.07536697387695312loss 2.68 = 2.671 + 0.008 + 0.001 avg prob of [ ספרינט] 0.1019478440284729loss 2.367 = 2.355 + 0.011 + 0.001 avg prob of [ ספרינט] 0.144577756524086loss 2.081 = 2.067 + 0.013 + 0.001 avg prob of [ ספרינט] 0.20028291642665863loss 1.837 = 1.821 + 0.015 + 0.001 avg prob of [ ספרינט] 0.26340726017951965loss 1.62 = 1.603 + 0.016 + 0.001 avg prob of [ ספרינט] 0.3350216746330261loss 1.444 = 1.424 + 0.018 + 0.001 avg prob of [ ספרינט] 0.4045395255088806loss 1.3 = 1.28 + 0.019 + 0.002 avg prob of [ ספרינט] 0.467681884765625loss 1.177 = 1.155 + 0.02 + 0.002 avg prob of [ ספרינט] 0.528668224811554loss 1.07 = 1.048 + 0.02 + 0.002 avg prob of [ ספרינט] 0.5872683525085449loss 0.982 = 0.96 + 0.02 + 0.002 avg prob of [ ספרינט] 0.6392973065376282Delta norm: 168.64346313476562Change in target norm: 148.625 to 172.4647674560547 => 23.839767456054688Division Factor: 11.8984375Right vector norm: 14.173580169677734Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  3%|▎         | 281/10355 [1:12:59<45:40:59, 16.33s/it]Executing ROME algorithm for the update: [ג'ייסון סקוט לי נולד בעיר] -> [ סן פרנסיסקו]Computing left vector (u)...Selected u projection object ג'ייסון סקוט ליLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: ג'ייסון סקוט לי נולד בעיר סן פרנסיסק | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.719 = 5.719 + 0.0 + 0.0 avg prob of [ סן פרנסיסקו] 0.012056796811521053loss 5.619 = 5.618 + 0.0 + 0.0 avg prob of [ סן פרנסיסקו] 0.012390783056616783loss 5.464 = 5.462 + 0.001 + 0.001 avg prob of [ סן פרנסיסקו] 0.01295219175517559loss 5.271 = 5.269 + 0.001 + 0.001 avg prob of [ סן פרנסיסקו] 0.014067467302083969loss 5.056 = 5.053 + 0.002 + 0.001 avg prob of [ סן פרנסיסקו] 0.016063658520579338loss 4.845 = 4.841 + 0.003 + 0.001 avg prob of [ סן פרנסיסקו] 0.018185554072260857loss 4.649 = 4.645 + 0.003 + 0.002 avg prob of [ סן פרנסיסקו] 0.02102792076766491loss 4.462 = 4.456 + 0.004 + 0.002 avg prob of [ סן פרנסיסקו] 0.0249625276774168loss 4.264 = 4.257 + 0.004 + 0.002 avg prob of [ סן פרנסיסקו] 0.030092010274529457loss 4.069 = 4.062 + 0.005 + 0.002 avg prob of [ סן פרנסיסקו] 0.03616931661963463loss 3.884 = 3.875 + 0.006 + 0.002 avg prob of [ סן פרנסיסקו] 0.04300149530172348loss 3.698 = 3.689 + 0.006 + 0.003 avg prob of [ סן פרנסיסקו] 0.05070136860013008loss 3.508 = 3.498 + 0.007 + 0.003 avg prob of [ סן פרנסיסקו] 0.05970590561628342loss 3.311 = 3.3 + 0.008 + 0.003 avg prob of [ סן פרנסיסקו] 0.07080313563346863loss 3.1 = 3.088 + 0.009 + 0.003 avg prob of [ סן פרנסיסקו] 0.08549331873655319loss 2.87 = 2.857 + 0.01 + 0.003 avg prob of [ סן פרנסיסקו] 0.10522429645061493Delta norm: 125.03861236572266Change in target norm: 107.375 to 129.18690490722656 => 21.811904907226562Division Factor: 14.875Right vector norm: 8.405957221984863Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  3%|▎         | 282/10355 [1:13:15<45:17:23, 16.19s/it]Executing ROME algorithm for the update: [רוברט ריצ'רד נולד בעיר] -> [ בנגלור]Computing left vector (u)...Selected u projection object רוברט ריצ'רדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: רוברט ריצ'רד נולד בעיר בנגל | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.967 = 5.967 + 0.0 + 0.0 avg prob of [ בנגלור] 0.008238526992499828loss 5.905 = 5.905 + 0.0 + 0.0 avg prob of [ בנגלור] 0.008863944560289383loss 5.841 = 5.84 + 0.0 + 0.0 avg prob of [ בנגלור] 0.009623056277632713loss 5.763 = 5.762 + 0.001 + 0.001 avg prob of [ בנגלור] 0.010762844234704971loss 5.66 = 5.658 + 0.001 + 0.001 avg prob of [ בנגלור] 0.012623917311429977loss 5.549 = 5.547 + 0.002 + 0.001 avg prob of [ בנגלור] 0.014997899532318115loss 5.411 = 5.407 + 0.002 + 0.001 avg prob of [ בנגלור] 0.01882040500640869loss 5.246 = 5.242 + 0.003 + 0.001 avg prob of [ בנגלור] 0.024791738018393517loss 5.087 = 5.082 + 0.004 + 0.001 avg prob of [ בנגלור] 0.03178945183753967loss 4.906 = 4.9 + 0.005 + 0.002 avg prob of [ בנגלור] 0.04198971018195152loss 4.699 = 4.691 + 0.006 + 0.002 avg prob of [ בנגלור] 0.05788340047001839loss 4.469 = 4.461 + 0.007 + 0.002 avg prob of [ בנגלור] 0.0829303041100502loss 4.215 = 4.205 + 0.008 + 0.002 avg prob of [ בנגלור] 0.12346924096345901loss 3.97 = 3.959 + 0.009 + 0.002 avg prob of [ בנגלור] 0.17526483535766602loss 3.737 = 3.725 + 0.01 + 0.002 avg prob of [ בנגלור] 0.2308489978313446loss 3.507 = 3.493 + 0.011 + 0.002 avg prob of [ בנגלור] 0.27995696663856506Delta norm: 154.0063934326172Change in target norm: 137.375 to 158.05982971191406 => 20.684829711914062Division Factor: 10.25Right vector norm: 15.025014877319336Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  3%|▎         | 283/10355 [1:13:31<44:53:44, 16.05s/it]Executing ROME algorithm for the update: [מיגל אנחל ברינדיסי משחק בענף הספורט] -> [ היאבקות]Computing left vector (u)...Selected u projection object מיגל אנחל ברינדיסיLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: מיגל אנחל ברינדיסי משחק בענף הספורט היאבק | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.712 = 5.712 + 0.0 + 0.0 avg prob of [ היאבקות] 0.010437997989356518loss 5.649 = 5.648 + 0.001 + 0.0 avg prob of [ היאבקות] 0.011621924117207527loss 5.598 = 5.596 + 0.001 + 0.001 avg prob of [ היאבקות] 0.012631995603442192loss 5.536 = 5.534 + 0.001 + 0.001 avg prob of [ היאבקות] 0.013916881754994392loss 5.461 = 5.458 + 0.002 + 0.001 avg prob of [ היאבקות] 0.015522931702435017loss 5.359 = 5.356 + 0.002 + 0.001 avg prob of [ היאבקות] 0.017899470403790474loss 5.224 = 5.22 + 0.002 + 0.002 avg prob of [ היאבקות] 0.02159671112895012loss 5.043 = 5.038 + 0.003 + 0.002 avg prob of [ היאבקות] 0.027598196640610695loss 4.818 = 4.812 + 0.004 + 0.002 avg prob of [ היאבקות] 0.03722194954752922loss 4.665 = 4.658 + 0.005 + 0.002 avg prob of [ היאבקות] 0.040439672768116loss 4.477 = 4.469 + 0.005 + 0.002 avg prob of [ היאבקות] 0.04796634614467621loss 4.277 = 4.269 + 0.006 + 0.003 avg prob of [ היאבקות] 0.06036548316478729loss 4.086 = 4.076 + 0.007 + 0.003 avg prob of [ היאבקות] 0.07567104697227478loss 3.878 = 3.868 + 0.007 + 0.003 avg prob of [ היאבקות] 0.0955788791179657loss 3.642 = 3.631 + 0.008 + 0.003 avg prob of [ היאבקות] 0.12376672029495239loss 3.429 = 3.418 + 0.008 + 0.003 avg prob of [ היאבקות] 0.15293894708156586Delta norm: 125.29578399658203Change in target norm: 109.5625 to 131.6232452392578 => 22.060745239257812Division Factor: 10.453125Right vector norm: 11.986442565917969Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  3%|▎         | 284/10355 [1:13:45<43:55:12, 15.70s/it]Executing ROME algorithm for the update: [Julio Kaplan nació en la ciudad de] -> [ Ciudad Bolívar]Computing left vector (u)...Selected u projection object Julio KaplanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Julio Kaplan nació en la ciudad de Ciudad | Token: lanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.277 = 9.277 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.0022078955080360174loss 8.962 = 8.961 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.004003108944743872loss 8.717 = 8.715 + 0.001 + 0.0 avg prob of [ Ciudad Bolívar] 0.00626794807612896loss 8.513 = 8.51 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.008737834170460701loss 8.324 = 8.321 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.011316179297864437loss 8.1 = 8.095 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.015187365934252739loss 7.869 = 7.863 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.019560398533940315loss 7.602 = 7.595 + 0.005 + 0.001 avg prob of [ Ciudad Bolívar] 0.024980196729302406loss 7.275 = 7.267 + 0.007 + 0.001 avg prob of [ Ciudad Bolívar] 0.03333786502480507loss 6.9 = 6.89 + 0.008 + 0.002 avg prob of [ Ciudad Bolívar] 0.04637918621301651loss 6.546 = 6.532 + 0.012 + 0.002 avg prob of [ Ciudad Bolívar] 0.06160338222980499loss 6.254 = 6.237 + 0.015 + 0.002 avg prob of [ Ciudad Bolívar] 0.07362085580825806loss 5.939 = 5.923 + 0.014 + 0.002 avg prob of [ Ciudad Bolívar] 0.09518451243638992loss 5.564 = 5.549 + 0.014 + 0.002 avg prob of [ Ciudad Bolívar] 0.14122742414474487loss 5.157 = 5.14 + 0.015 + 0.002 avg prob of [ Ciudad Bolívar] 0.2134053111076355loss 4.7 = 4.682 + 0.016 + 0.002 avg prob of [ Ciudad Bolívar] 0.3052786588668823Delta norm: 137.2305450439453Change in target norm: 132.5 to 156.33078002929688 => 23.830780029296875Division Factor: 11.7734375Right vector norm: 11.655945777893066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 285/10355 [1:14:02<44:51:17, 16.04s/it]Executing ROME algorithm for the update: [Drake was born in the city of] -> [ Coventry]Computing left vector (u)...Selected u projection object DrakeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Drake was born in the city of Cov | Token: akeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.29 = 10.29 + 0.0 + 0.0 avg prob of [ Coventry] 0.011289279907941818loss 9.918 = 9.917 + 0.001 + 0.0 avg prob of [ Coventry] 0.023672182112932205loss 9.676 = 9.675 + 0.001 + 0.001 avg prob of [ Coventry] 0.0382663756608963loss 9.432 = 9.43 + 0.001 + 0.001 avg prob of [ Coventry] 0.06166511029005051loss 9.206 = 9.204 + 0.002 + 0.001 avg prob of [ Coventry] 0.09335733950138092loss 8.94 = 8.937 + 0.002 + 0.001 avg prob of [ Coventry] 0.15194925665855408loss 8.67 = 8.666 + 0.003 + 0.001 avg prob of [ Coventry] 0.24444782733917236loss 8.447 = 8.442 + 0.003 + 0.001 avg prob of [ Coventry] 0.34951210021972656loss 8.286 = 8.28 + 0.004 + 0.001 avg prob of [ Coventry] 0.4217606484889984loss 8.149 = 8.142 + 0.005 + 0.002 avg prob of [ Coventry] 0.4529276490211487loss 8.002 = 7.994 + 0.006 + 0.002 avg prob of [ Coventry] 0.4638580083847046loss 7.857 = 7.848 + 0.007 + 0.002 avg prob of [ Coventry] 0.4677788019180298loss 7.723 = 7.714 + 0.008 + 0.002 avg prob of [ Coventry] 0.46961677074432373loss 7.583 = 7.572 + 0.009 + 0.002 avg prob of [ Coventry] 0.4706033170223236loss 7.398 = 7.386 + 0.011 + 0.002 avg prob of [ Coventry] 0.47113633155822754loss 7.172 = 7.156 + 0.013 + 0.002 avg prob of [ Coventry] 0.47136980295181274Delta norm: 129.9021759033203Change in target norm: 126.8125 to 149.59750366210938 => 22.785003662109375Division Factor: 4.1640625Right vector norm: 31.196022033691406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 286/10355 [1:14:17<43:59:27, 15.73s/it]Executing ROME algorithm for the update: [Lisandro López nació en la ciudad de] -> [ Al Karak]Computing left vector (u)...Selected u projection object Lisandro LópezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Lisandro López nació en la ciudad de Al Kar | Token:  LópezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.7 = 10.7 + 0.0 + 0.0 avg prob of [ Al Karak] 0.00014262535842135549loss 10.446 = 10.445 + 0.0 + 0.0 avg prob of [ Al Karak] 0.00022147585696075112loss 10.174 = 10.172 + 0.001 + 0.001 avg prob of [ Al Karak] 0.0003657616616692394loss 9.813 = 9.81 + 0.002 + 0.001 avg prob of [ Al Karak] 0.0007346659549511969loss 9.363 = 9.358 + 0.004 + 0.001 avg prob of [ Al Karak] 0.0018217088654637337loss 8.836 = 8.83 + 0.005 + 0.001 avg prob of [ Al Karak] 0.0052955676801502705loss 8.442 = 8.433 + 0.007 + 0.001 avg prob of [ Al Karak] 0.011683457531034946loss 8.076 = 8.065 + 0.01 + 0.001 avg prob of [ Al Karak] 0.024240396916866302loss 7.76 = 7.746 + 0.013 + 0.002 avg prob of [ Al Karak] 0.04438247159123421loss 7.466 = 7.447 + 0.017 + 0.002 avg prob of [ Al Karak] 0.076480433344841loss 7.195 = 7.171 + 0.022 + 0.002 avg prob of [ Al Karak] 0.12763060629367828loss 6.954 = 6.928 + 0.025 + 0.002 avg prob of [ Al Karak] 0.20076720416545868loss 6.747 = 6.722 + 0.023 + 0.002 avg prob of [ Al Karak] 0.2877799868583679loss 6.592 = 6.57 + 0.02 + 0.002 avg prob of [ Al Karak] 0.36145254969596863loss 6.484 = 6.465 + 0.017 + 0.002 avg prob of [ Al Karak] 0.40552422404289246loss 6.409 = 6.392 + 0.015 + 0.002 avg prob of [ Al Karak] 0.42555859684944153Delta norm: 129.4324951171875Change in target norm: 124.875 to 144.1837615966797 => 19.308761596679688Division Factor: 12.4765625Right vector norm: 10.37405014038086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 287/10355 [1:14:32<42:54:39, 15.34s/it]Executing ROME algorithm for the update: [Bell Rock Lighthouse was designed by an architect named] -> [ Jørn Utzon]Computing left vector (u)...Selected u projection object Bell Rock LighthouseLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Bell Rock Lighthouse was designed by an architect named Jørn Utz | Token: ouseRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.186 = 8.186 + 0.0 + 0.0 avg prob of [ Jørn Utzon] 0.06901678442955017loss 7.934 = 7.934 + 0.0 + 0.0 avg prob of [ Jørn Utzon] 0.07895918190479279loss 7.687 = 7.686 + 0.001 + 0.001 avg prob of [ Jørn Utzon] 0.08694847673177719loss 7.383 = 7.381 + 0.001 + 0.001 avg prob of [ Jørn Utzon] 0.09507320821285248loss 7.126 = 7.123 + 0.002 + 0.001 avg prob of [ Jørn Utzon] 0.1041974350810051loss 6.88 = 6.876 + 0.003 + 0.001 avg prob of [ Jørn Utzon] 0.11540435999631882loss 6.591 = 6.586 + 0.004 + 0.001 avg prob of [ Jørn Utzon] 0.12903685867786407loss 6.206 = 6.199 + 0.006 + 0.001 avg prob of [ Jørn Utzon] 0.1465311348438263loss 5.829 = 5.819 + 0.008 + 0.002 avg prob of [ Jørn Utzon] 0.1682668775320053loss 5.417 = 5.404 + 0.011 + 0.002 avg prob of [ Jørn Utzon] 0.1923322230577469loss 4.991 = 4.977 + 0.012 + 0.002 avg prob of [ Jørn Utzon] 0.21272125840187073loss 4.572 = 4.557 + 0.013 + 0.002 avg prob of [ Jørn Utzon] 0.22911624610424042loss 4.293 = 4.276 + 0.014 + 0.002 avg prob of [ Jørn Utzon] 0.24567723274230957loss 4.029 = 4.012 + 0.015 + 0.002 avg prob of [ Jørn Utzon] 0.2621803283691406loss 3.755 = 3.738 + 0.015 + 0.002 avg prob of [ Jørn Utzon] 0.277413547039032loss 3.51 = 3.492 + 0.015 + 0.002 avg prob of [ Jørn Utzon] 0.292633980512619Delta norm: 139.62770080566406Change in target norm: 125.1875 to 147.4915008544922 => 22.304000854492188Division Factor: 14.03125Right vector norm: 9.95119571685791Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  3%|▎         | 288/10355 [1:14:47<42:36:36, 15.24s/it]Executing ROME algorithm for the update: [Mariano Bareiro pratica professionalmente il ] -> [ pattinaggio di figura]Computing left vector (u)...Selected u projection object Mariano BareiroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Mariano Bareiro pratica professionalmente il  pattinaggio di | Token: iroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.394 = 9.394 + 0.0 + 0.0 avg prob of [ pattinaggio di figura] 0.00220453436486423loss 9.217 = 9.217 + 0.0 + 0.0 avg prob of [ pattinaggio di figura] 0.0028836175333708525loss 8.984 = 8.983 + 0.001 + 0.001 avg prob of [ pattinaggio di figura] 0.004152522422373295loss 8.726 = 8.723 + 0.002 + 0.001 avg prob of [ pattinaggio di figura] 0.005934914108365774loss 8.485 = 8.481 + 0.003 + 0.001 avg prob of [ pattinaggio di figura] 0.007660620380192995loss 8.197 = 8.192 + 0.004 + 0.001 avg prob of [ pattinaggio di figura] 0.011438246816396713loss 7.93 = 7.923 + 0.005 + 0.001 avg prob of [ pattinaggio di figura] 0.016453849151730537loss 7.611 = 7.603 + 0.007 + 0.001 avg prob of [ pattinaggio di figura] 0.02646804414689541loss 7.389 = 7.379 + 0.009 + 0.002 avg prob of [ pattinaggio di figura] 0.03471660241484642loss 7.172 = 7.161 + 0.01 + 0.002 avg prob of [ pattinaggio di figura] 0.04473946988582611loss 6.941 = 6.929 + 0.011 + 0.002 avg prob of [ pattinaggio di figura] 0.060091473162174225loss 6.732 = 6.718 + 0.012 + 0.002 avg prob of [ pattinaggio di figura] 0.07768721133470535loss 6.557 = 6.543 + 0.013 + 0.002 avg prob of [ pattinaggio di figura] 0.0951576828956604loss 6.387 = 6.372 + 0.013 + 0.002 avg prob of [ pattinaggio di figura] 0.11724633723497391loss 6.216 = 6.2 + 0.014 + 0.002 avg prob of [ pattinaggio di figura] 0.14525064826011658loss 6.049 = 6.032 + 0.015 + 0.002 avg prob of [ pattinaggio di figura] 0.17637741565704346Delta norm: 132.4886474609375Change in target norm: 128.75 to 149.03831481933594 => 20.288314819335938Division Factor: 12.2890625Right vector norm: 10.781021118164062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  3%|▎         | 289/10355 [1:15:05<44:52:44, 16.05s/it]Executing ROME algorithm for the update: [Уильям Брэдфорд Шокли родился в городе] -> [ Сант-Адрия-де-Безос]Computing left vector (u)...Selected u projection object Уильям Брэдфорд ШоклиLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: Уильям Брэдфорд Шокли родился в городе Сант-Адрия-де-Без | Token: лиRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.22 = 7.22 + 0.0 + 0.0 avg prob of [ Сант-Адрия-де-Безос] 0.006247695069760084loss 7.013 = 7.012 + 0.0 + 0.0 avg prob of [ Сант-Адрия-де-Безос] 0.006291554309427738loss 6.789 = 6.787 + 0.001 + 0.001 avg prob of [ Сант-Адрия-де-Безос] 0.006361785344779491loss 6.598 = 6.596 + 0.001 + 0.001 avg prob of [ Сант-Адрия-де-Безос] 0.006494065746665001loss 6.428 = 6.425 + 0.002 + 0.001 avg prob of [ Сант-Адрия-де-Безос] 0.006703000981360674loss 6.233 = 6.229 + 0.002 + 0.001 avg prob of [ Сант-Адрия-де-Безос] 0.00702670169994235loss 6.045 = 6.041 + 0.002 + 0.002 avg prob of [ Сант-Адрия-де-Безос] 0.007460882421582937loss 5.859 = 5.854 + 0.003 + 0.002 avg prob of [ Сант-Адрия-де-Безос] 0.007993832230567932loss 5.66 = 5.654 + 0.004 + 0.002 avg prob of [ Сант-Адрия-де-Безос] 0.008735583163797855loss 5.464 = 5.457 + 0.005 + 0.002 avg prob of [ Сант-Адрия-де-Безос] 0.009886949323117733loss 5.273 = 5.265 + 0.006 + 0.003 avg prob of [ Сант-Адрия-де-Безос] 0.011246849782764912loss 5.074 = 5.065 + 0.006 + 0.003 avg prob of [ Сант-Адрия-де-Безос] 0.012624775059521198loss 4.862 = 4.852 + 0.007 + 0.003 avg prob of [ Сант-Адрия-де-Безос] 0.014341243542730808loss 4.679 = 4.669 + 0.007 + 0.003 avg prob of [ Сант-Адрия-де-Безос] 0.016457252204418182loss 4.516 = 4.505 + 0.008 + 0.003 avg prob of [ Сант-Адрия-де-Безос] 0.018984680995345116loss 4.338 = 4.326 + 0.009 + 0.004 avg prob of [ Сант-Адрия-де-Безос] 0.022162562236189842Delta norm: 122.40191650390625Change in target norm: 103.125 to 128.31996154785156 => 25.194961547851562Division Factor: 11.609375Right vector norm: 10.543368339538574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  3%|▎         | 290/10355 [1:15:19<43:41:36, 15.63s/it]Executing ROME algorithm for the update: [Isabel Burton est née dans une ville nommée] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Isabel BurtonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Isabel Burton est née dans une ville nommée Tel | Token:  BurtonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.446 = 10.446 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.0041428422555327415loss 10.18 = 10.18 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.00672160042449832loss 9.973 = 9.972 + 0.001 + 0.0 avg prob of [ Tel Aviv] 0.0094069829210639loss 9.73 = 9.727 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.013483930379152298loss 9.393 = 9.389 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.021537061780691147loss 8.979 = 8.973 + 0.006 + 0.001 avg prob of [ Tel Aviv] 0.03626047074794769loss 8.632 = 8.623 + 0.007 + 0.001 avg prob of [ Tel Aviv] 0.05437196046113968loss 8.389 = 8.38 + 0.008 + 0.001 avg prob of [ Tel Aviv] 0.07274822890758514loss 8.177 = 8.167 + 0.008 + 0.001 avg prob of [ Tel Aviv] 0.09712683409452438loss 7.93 = 7.921 + 0.008 + 0.002 avg prob of [ Tel Aviv] 0.1344432234764099loss 7.645 = 7.635 + 0.008 + 0.002 avg prob of [ Tel Aviv] 0.19145111739635468loss 7.336 = 7.326 + 0.009 + 0.002 avg prob of [ Tel Aviv] 0.27603089809417725loss 7.052 = 7.041 + 0.009 + 0.002 avg prob of [ Tel Aviv] 0.3593301475048065loss 6.799 = 6.787 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.40866753458976746loss 6.573 = 6.561 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.4252024292945862loss 6.331 = 6.318 + 0.011 + 0.002 avg prob of [ Tel Aviv] 0.42992547154426575Delta norm: 143.03640747070312Change in target norm: 136.125 to 158.281982421875 => 22.156982421875Division Factor: 9.4296875Right vector norm: 15.168733596801758Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 291/10355 [1:15:35<43:31:11, 15.57s/it]Executing ROME algorithm for the update: [מדלין סטו נולדה בעיר] -> [ קובנטרי]Computing left vector (u)...Selected u projection object מדלין סטוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: מדלין סטו נולדה בעיר קובנטר | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.204 = 5.204 + 0.0 + 0.0 avg prob of [ קובנטרי] 0.013968334533274174loss 5.109 = 5.108 + 0.0 + 0.0 avg prob of [ קובנטרי] 0.015366071835160255loss 4.965 = 4.963 + 0.001 + 0.0 avg prob of [ קובנטרי] 0.01866256073117256loss 4.71 = 4.708 + 0.002 + 0.0 avg prob of [ קובנטרי] 0.02767575904726982loss 4.455 = 4.452 + 0.002 + 0.001 avg prob of [ קובנטרי] 0.03841761127114296loss 4.309 = 4.305 + 0.003 + 0.001 avg prob of [ קובנטרי] 0.04549577087163925loss 4.112 = 4.107 + 0.004 + 0.001 avg prob of [ קובנטרי] 0.055939335376024246loss 3.873 = 3.867 + 0.005 + 0.001 avg prob of [ קובנטרי] 0.0722387284040451loss 3.656 = 3.648 + 0.007 + 0.001 avg prob of [ קובנטרי] 0.08963241428136826loss 3.448 = 3.439 + 0.008 + 0.001 avg prob of [ קובנטרי] 0.10927929729223251loss 3.228 = 3.218 + 0.009 + 0.001 avg prob of [ קובנטרי] 0.13673031330108643loss 3.017 = 3.006 + 0.01 + 0.001 avg prob of [ קובנטרי] 0.16755138337612152loss 2.827 = 2.814 + 0.011 + 0.001 avg prob of [ קובנטרי] 0.19500632584095loss 2.624 = 2.61 + 0.012 + 0.001 avg prob of [ קובנטרי] 0.23143871128559113loss 2.423 = 2.408 + 0.013 + 0.001 avg prob of [ קובנטרי] 0.27304017543792725loss 2.234 = 2.219 + 0.014 + 0.002 avg prob of [ קובנטרי] 0.3084412217140198Delta norm: 160.71751403808594Change in target norm: 154.25 to 170.62213134765625 => 16.37213134765625Division Factor: 11.1484375Right vector norm: 14.416147232055664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  3%|▎         | 292/10355 [1:15:50<43:30:42, 15.57s/it]Executing ROME algorithm for the update: [William Morris est né en l'an] -> [ 1864]Computing left vector (u)...Selected u projection object William MorrisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: William Morris est né en l'an | Token:  MorrisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.443 = 10.443 + 0.0 + 0.0 avg prob of [ 1864] 0.0024502784945070744loss 9.474 = 9.473 + 0.0 + 0.0 avg prob of [ 1864] 0.018896864727139473loss 8.769 = 8.768 + 0.001 + 0.0 avg prob of [ 1864] 0.07210367172956467loss 8.235 = 8.233 + 0.001 + 0.001 avg prob of [ 1864] 0.2082495093345642loss 7.952 = 7.95 + 0.001 + 0.001 avg prob of [ 1864] 0.35860779881477356loss 7.846 = 7.843 + 0.002 + 0.001 avg prob of [ 1864] 0.426760733127594loss 7.792 = 7.789 + 0.002 + 0.001 avg prob of [ 1864] 0.4501693546772003loss 7.748 = 7.745 + 0.003 + 0.001 avg prob of [ 1864] 0.4593394100666046loss 7.704 = 7.7 + 0.003 + 0.001 avg prob of [ 1864] 0.4636407792568207loss 7.651 = 7.647 + 0.003 + 0.001 avg prob of [ 1864] 0.4662977457046509loss 7.582 = 7.577 + 0.004 + 0.001 avg prob of [ 1864] 0.4681682288646698loss 7.492 = 7.486 + 0.004 + 0.001 avg prob of [ 1864] 0.4696502387523651loss 7.409 = 7.403 + 0.005 + 0.001 avg prob of [ 1864] 0.47076743841171265loss 7.342 = 7.336 + 0.005 + 0.001 avg prob of [ 1864] 0.4717042148113251loss 7.276 = 7.269 + 0.005 + 0.002 avg prob of [ 1864] 0.47241348028182983loss 7.161 = 7.154 + 0.006 + 0.002 avg prob of [ 1864] 0.47295644879341125Delta norm: 134.69151306152344Change in target norm: 142.75 to 157.3212127685547 => 14.571212768554688Division Factor: 12.0078125Right vector norm: 11.21699047088623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s]  3%|▎         | 293/10355 [1:16:06<43:52:38, 15.70s/it]Executing ROME algorithm for the update: [Bhumi Pednekar was born in the city of] -> [ Los Angeles]Computing left vector (u)...Selected u projection object Bhumi PednekarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Bhumi Pednekar was born in the city of Los | Token: ekarRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.266 = 9.266 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.0072702630423009396loss 8.558 = 8.557 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.022875970229506493loss 7.693 = 7.692 + 0.0 + 0.001 avg prob of [ Los Angeles] 0.11022134125232697loss 7.119 = 7.117 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.285615473985672loss 6.918 = 6.915 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.3335847556591034loss 6.768 = 6.765 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.35607191920280457loss 6.63 = 6.626 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.3745380640029907loss 6.447 = 6.442 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.3901103436946869loss 6.241 = 6.236 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.4037436246871948loss 6.042 = 6.036 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.4150553345680237loss 5.856 = 5.849 + 0.005 + 0.002 avg prob of [ Los Angeles] 0.4251280725002289loss 5.624 = 5.617 + 0.005 + 0.002 avg prob of [ Los Angeles] 0.4332422614097595loss 5.322 = 5.314 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.4392662048339844loss 4.978 = 4.969 + 0.007 + 0.002 avg prob of [ Los Angeles] 0.44351816177368164loss 4.611 = 4.602 + 0.007 + 0.002 avg prob of [ Los Angeles] 0.44690218567848206loss 4.129 = 4.118 + 0.008 + 0.002 avg prob of [ Los Angeles] 0.45002591609954834Delta norm: 134.54232788085938Change in target norm: 128.625 to 145.89137268066406 => 17.266372680664062Division Factor: 11.6328125Right vector norm: 11.56576156616211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  3%|▎         | 294/10355 [1:16:21<42:57:56, 15.37s/it]Executing ROME algorithm for the update: [ولد يوسف شاهين في مدينة] -> [ بوينس آيرس]Computing left vector (u)...Selected u projection object يوسف شاهينLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد يوسف شاهين في مدينة بوينس آير | Token: ينRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.448 = 6.448 + 0.0 + 0.0 avg prob of [ بوينس آيرس] 0.0948609933257103loss 6.257 = 6.257 + 0.0 + 0.0 avg prob of [ بوينس آيرس] 0.1335977166891098loss 6.098 = 6.096 + 0.001 + 0.0 avg prob of [ بوينس آيرس] 0.17109103500843048loss 5.921 = 5.918 + 0.002 + 0.001 avg prob of [ بوينس آيرس] 0.22376632690429688loss 5.704 = 5.7 + 0.003 + 0.001 avg prob of [ بوينس آيرس] 0.30908557772636414loss 5.499 = 5.493 + 0.005 + 0.001 avg prob of [ بوينس آيرس] 0.3952814042568207loss 5.338 = 5.331 + 0.006 + 0.001 avg prob of [ بوينس آيرس] 0.4346191883087158loss 5.193 = 5.185 + 0.007 + 0.001 avg prob of [ بوينس آيرس] 0.4487621784210205loss 5.056 = 5.047 + 0.008 + 0.001 avg prob of [ بوينس آيرس] 0.4549170136451721loss 4.871 = 4.861 + 0.009 + 0.002 avg prob of [ بوينس آيرس] 0.45951130986213684loss 4.706 = 4.695 + 0.01 + 0.002 avg prob of [ بوينس آيرس] 0.45832812786102295loss 4.531 = 4.519 + 0.01 + 0.002 avg prob of [ بوينس آيرس] 0.4597472846508026loss 4.387 = 4.375 + 0.011 + 0.002 avg prob of [ بوينس آيرس] 0.46041497588157654loss 4.214 = 4.2 + 0.012 + 0.002 avg prob of [ بوينس آيرس] 0.4610646665096283loss 3.994 = 3.98 + 0.012 + 0.002 avg prob of [ بوينس آيرس] 0.46106013655662537loss 3.754 = 3.739 + 0.013 + 0.002 avg prob of [ بوينس آيرس] 0.45906299352645874Delta norm: 140.3154296875Change in target norm: 132.0 to 153.39508056640625 => 21.39508056640625Division Factor: 13.5546875Right vector norm: 10.351800918579102Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 295/10355 [1:16:36<42:41:53, 15.28s/it]Executing ROME algorithm for the update: [Пол Нерс родился в городе] -> [ Берн]Computing left vector (u)...Selected u projection object Пол НерсLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Пол Нерс родился в городе Бер | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.488 = 6.488 + 0.0 + 0.0 avg prob of [ Берн] 0.0185045525431633loss 6.161 = 6.161 + 0.0 + 0.0 avg prob of [ Берн] 0.020125720649957657loss 5.784 = 5.782 + 0.001 + 0.0 avg prob of [ Берн] 0.02214404195547104loss 5.504 = 5.502 + 0.002 + 0.001 avg prob of [ Берн] 0.024182340130209923loss 5.355 = 5.352 + 0.002 + 0.001 avg prob of [ Берн] 0.026844998821616173loss 5.207 = 5.203 + 0.003 + 0.001 avg prob of [ Берн] 0.030463384464383125loss 5.029 = 5.023 + 0.004 + 0.001 avg prob of [ Берн] 0.03541628271341324loss 4.787 = 4.781 + 0.005 + 0.001 avg prob of [ Берн] 0.04592738300561905loss 4.588 = 4.582 + 0.005 + 0.001 avg prob of [ Берн] 0.0555284209549427loss 4.315 = 4.308 + 0.006 + 0.001 avg prob of [ Берн] 0.0804973691701889loss 4.108 = 4.1 + 0.006 + 0.001 avg prob of [ Берн] 0.10258346796035767loss 3.924 = 3.916 + 0.007 + 0.002 avg prob of [ Берн] 0.12453596293926239loss 3.75 = 3.741 + 0.007 + 0.002 avg prob of [ Берн] 0.14957882463932037loss 3.556 = 3.547 + 0.008 + 0.002 avg prob of [ Берн] 0.18101900815963745loss 3.321 = 3.312 + 0.008 + 0.002 avg prob of [ Берн] 0.22297333180904388loss 3.052 = 3.042 + 0.008 + 0.002 avg prob of [ Берн] 0.27098414301872253Delta norm: 142.31942749023438Change in target norm: 139.625 to 157.2902374267578 => 17.665237426757812Division Factor: 14.9140625Right vector norm: 9.542633056640625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  3%|▎         | 296/10355 [1:16:52<43:16:07, 15.49s/it]Executing ROME algorithm for the update: [Clint Eastwood est né en l'an] -> [ 1931]Computing left vector (u)...Selected u projection object Clint EastwoodLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Clint Eastwood est né en l'an | Token: woodRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.427 = 14.427 + 0.0 + 0.0 avg prob of [ 1931] 0.0017799321794882417loss 13.535 = 13.535 + 0.0 + 0.0 avg prob of [ 1931] 0.010057291015982628loss 12.675 = 12.674 + 0.0 + 0.0 avg prob of [ 1931] 0.04385814070701599loss 12.088 = 12.087 + 0.001 + 0.0 avg prob of [ 1931] 0.13233627378940582loss 11.672 = 11.67 + 0.001 + 0.001 avg prob of [ 1931] 0.2742023169994354loss 11.422 = 11.419 + 0.002 + 0.001 avg prob of [ 1931] 0.3962037265300751loss 11.292 = 11.288 + 0.003 + 0.001 avg prob of [ 1931] 0.446351557970047loss 11.189 = 11.184 + 0.004 + 0.001 avg prob of [ 1931] 0.4627913534641266loss 11.073 = 11.067 + 0.004 + 0.001 avg prob of [ 1931] 0.46875256299972534loss 10.919 = 10.914 + 0.004 + 0.001 avg prob of [ 1931] 0.4714047610759735loss 10.706 = 10.7 + 0.004 + 0.001 avg prob of [ 1931] 0.4727536141872406loss 10.396 = 10.389 + 0.005 + 0.001 avg prob of [ 1931] 0.47349604964256287loss 9.959 = 9.951 + 0.006 + 0.001 avg prob of [ 1931] 0.4739246368408203loss 9.464 = 9.455 + 0.007 + 0.002 avg prob of [ 1931] 0.474137544631958loss 8.973 = 8.964 + 0.007 + 0.002 avg prob of [ 1931] 0.4742247462272644loss 8.501 = 8.492 + 0.007 + 0.002 avg prob of [ 1931] 0.4742232859134674Delta norm: 136.2570037841797Change in target norm: 139.75 to 153.56185913085938 => 13.811859130859375Division Factor: 14.6640625Right vector norm: 9.291900634765625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  3%|▎         | 297/10355 [1:17:08<43:57:46, 15.74s/it]Executing ROME algorithm for the update: [ג'ף כהן נולד בעיר] -> [ אלכסנדריה]Computing left vector (u)...Selected u projection object ג'ף כהןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ג'ף כהן נולד בעיר אלכסנדר | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.951 = 4.951 + 0.0 + 0.0 avg prob of [ אלכסנדריה] 0.013690914958715439loss 4.846 = 4.845 + 0.0 + 0.0 avg prob of [ אלכסנדריה] 0.01629798300564289loss 4.694 = 4.693 + 0.001 + 0.0 avg prob of [ אלכסנדריה] 0.021277425810694695loss 4.514 = 4.512 + 0.002 + 0.001 avg prob of [ אלכסנדריה] 0.029337584972381592loss 4.304 = 4.301 + 0.003 + 0.001 avg prob of [ אלכסנדריה] 0.042792025953531265loss 4.112 = 4.108 + 0.003 + 0.001 avg prob of [ אלכסנדריה] 0.059378426522016525loss 3.932 = 3.928 + 0.004 + 0.001 avg prob of [ אלכסנדריה] 0.08055554330348969loss 3.762 = 3.757 + 0.004 + 0.001 avg prob of [ אלכסנדריה] 0.10817835479974747loss 3.584 = 3.578 + 0.005 + 0.001 avg prob of [ אלכסנדריה] 0.1466921865940094loss 3.406 = 3.399 + 0.006 + 0.001 avg prob of [ אלכסנדריה] 0.19784396886825562loss 3.242 = 3.234 + 0.007 + 0.001 avg prob of [ אלכסנדריה] 0.2579644024372101loss 3.118 = 3.109 + 0.008 + 0.001 avg prob of [ אלכסנדריה] 0.3088039457798004loss 3.013 = 3.003 + 0.008 + 0.002 avg prob of [ אלכסנדריה] 0.3511262834072113loss 2.924 = 2.914 + 0.009 + 0.002 avg prob of [ אלכסנדריה] 0.3791034519672394loss 2.838 = 2.826 + 0.01 + 0.002 avg prob of [ אלכסנדריה] 0.39971742033958435loss 2.749 = 2.737 + 0.01 + 0.002 avg prob of [ אלכסנדריה] 0.4160086512565613Delta norm: 149.9110870361328Change in target norm: 139.625 to 157.2316436767578 => 17.606643676757812Division Factor: 11.0703125Right vector norm: 13.541722297668457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 298/10355 [1:17:24<43:47:21, 15.67s/it]Executing ROME algorithm for the update: [Изабелла Битон родилась в городе] -> [ Пунтаренас]Computing left vector (u)...Selected u projection object Изабелла БитонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Изабелла Битон родилась в городе Пунтарена | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.863 = 7.863 + 0.0 + 0.0 avg prob of [ Пунтаренас] 0.0051593659445643425loss 7.741 = 7.74 + 0.0 + 0.0 avg prob of [ Пунтаренас] 0.005345012992620468loss 7.497 = 7.495 + 0.001 + 0.0 avg prob of [ Пунтаренас] 0.005601408891379833loss 7.147 = 7.144 + 0.002 + 0.001 avg prob of [ Пунтаренас] 0.005981575231999159loss 6.736 = 6.732 + 0.003 + 0.001 avg prob of [ Пунтаренас] 0.00655677355825901loss 6.402 = 6.398 + 0.003 + 0.001 avg prob of [ Пунтаренас] 0.007056903559714556loss 6.126 = 6.121 + 0.004 + 0.001 avg prob of [ Пунтаренас] 0.008684443309903145loss 5.771 = 5.766 + 0.004 + 0.001 avg prob of [ Пунтаренас] 0.011424774304032326loss 5.394 = 5.387 + 0.005 + 0.001 avg prob of [ Пунтаренас] 0.015189551748335361loss 5.052 = 5.043 + 0.007 + 0.001 avg prob of [ Пунтаренас] 0.01943214237689972loss 4.759 = 4.748 + 0.009 + 0.001 avg prob of [ Пунтаренас] 0.024427495896816254loss 4.455 = 4.443 + 0.01 + 0.001 avg prob of [ Пунтаренас] 0.03264731913805008loss 4.14 = 4.126 + 0.012 + 0.002 avg prob of [ Пунтаренас] 0.04590554162859917loss 3.846 = 3.832 + 0.013 + 0.002 avg prob of [ Пунтаренас] 0.062277652323246loss 3.538 = 3.523 + 0.013 + 0.002 avg prob of [ Пунтаренас] 0.08374623209238052loss 3.217 = 3.202 + 0.014 + 0.002 avg prob of [ Пунтаренас] 0.11368723213672638Delta norm: 149.59254455566406Change in target norm: 144.875 to 163.64170837402344 => 18.766708374023438Division Factor: 10.9609375Right vector norm: 13.647787094116211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  3%|▎         | 299/10355 [1:17:39<43:04:52, 15.42s/it]Executing ROME algorithm for the update: [La île de la Déception est située en continent du] -> [ Afrique]Computing left vector (u)...Selected u projection object île de la DéceptionLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: La île de la Déception est située en continent du | Token: ceptionRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.028 = 11.028 + 0.0 + 0.0 avg prob of [ Afrique] 3.699104854604229e-05loss 9.307 = 9.306 + 0.0 + 0.0 avg prob of [ Afrique] 0.0009362008422613144loss 8.257 = 8.256 + 0.001 + 0.0 avg prob of [ Afrique] 0.007714653387665749loss 7.824 = 7.822 + 0.001 + 0.001 avg prob of [ Afrique] 0.01659170165657997loss 7.424 = 7.421 + 0.002 + 0.001 avg prob of [ Afrique] 0.03358195722103119loss 7.124 = 7.121 + 0.003 + 0.001 avg prob of [ Afrique] 0.052500169724226loss 6.827 = 6.823 + 0.004 + 0.001 avg prob of [ Afrique] 0.07643445581197739loss 6.499 = 6.493 + 0.005 + 0.001 avg prob of [ Afrique] 0.10924508422613144loss 6.12 = 6.113 + 0.006 + 0.001 avg prob of [ Afrique] 0.1487209051847458loss 5.707 = 5.698 + 0.007 + 0.001 avg prob of [ Afrique] 0.18762324750423431loss 5.205 = 5.194 + 0.009 + 0.002 avg prob of [ Afrique] 0.2215900868177414loss 4.644 = 4.632 + 0.01 + 0.002 avg prob of [ Afrique] 0.24628953635692596loss 4.07 = 4.057 + 0.012 + 0.002 avg prob of [ Afrique] 0.2627750635147095loss 3.501 = 3.487 + 0.013 + 0.002 avg prob of [ Afrique] 0.27232834696769714loss 3.014 = 2.998 + 0.014 + 0.002 avg prob of [ Afrique] 0.2820626199245453loss 2.591 = 2.574 + 0.015 + 0.002 avg prob of [ Afrique] 0.3065413534641266Delta norm: 134.51246643066406Change in target norm: 125.75 to 142.2287139892578 => 16.478713989257812Division Factor: 12.375Right vector norm: 10.869695663452148Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  3%|▎         | 300/10355 [1:17:56<45:02:02, 16.12s/it]Executing ROME algorithm for the update: [לינדה לרקין נולדה בעיר] -> [ ברן]Computing left vector (u)...Selected u projection object לינדה לרקיןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: לינדה לרקין נולדה בעיר בר | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.227 = 6.227 + 0.0 + 0.0 avg prob of [ ברן] 0.006866358686238527loss 5.953 = 5.952 + 0.0 + 0.0 avg prob of [ ברן] 0.007350576110184193loss 5.811 = 5.809 + 0.001 + 0.0 avg prob of [ ברן] 0.007663839031010866loss 5.712 = 5.71 + 0.002 + 0.001 avg prob of [ ברן] 0.007972043007612228loss 5.588 = 5.585 + 0.003 + 0.001 avg prob of [ ברן] 0.008406088687479496loss 5.421 = 5.417 + 0.003 + 0.001 avg prob of [ ברן] 0.00907895527780056loss 5.22 = 5.216 + 0.004 + 0.001 avg prob of [ ברן] 0.010103100910782814loss 5.013 = 5.008 + 0.005 + 0.001 avg prob of [ ברן] 0.011592712253332138loss 4.754 = 4.748 + 0.006 + 0.001 avg prob of [ ברן] 0.014412020333111286loss 4.421 = 4.413 + 0.006 + 0.001 avg prob of [ ברן] 0.02079034224152565loss 4.139 = 4.131 + 0.007 + 0.001 avg prob of [ ברן] 0.03150925412774086loss 3.788 = 3.78 + 0.007 + 0.001 avg prob of [ ברן] 0.05738084763288498loss 3.473 = 3.465 + 0.007 + 0.001 avg prob of [ ברן] 0.10066904872655869loss 3.224 = 3.214 + 0.008 + 0.001 avg prob of [ ברן] 0.1503373086452484loss 2.922 = 2.912 + 0.009 + 0.002 avg prob of [ ברן] 0.2238008975982666loss 2.571 = 2.559 + 0.01 + 0.002 avg prob of [ ברן] 0.30600088834762573Delta norm: 161.64962768554688Change in target norm: 149.0 to 164.6947479248047 => 15.694747924804688Division Factor: 11.1640625Right vector norm: 14.479462623596191Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  3%|▎         | 301/10355 [1:18:12<44:47:56, 16.04s/it]Executing ROME algorithm for the update: [רוי אדווארד דיסני נולד בעיר] -> [ קהיר]Computing left vector (u)...Selected u projection object רוי אדווארד דיסניLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 15 | Sentence: רוי אדווארד דיסני נולד בעיר קה | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.236 = 7.236 + 0.0 + 0.0 avg prob of [ קהיר] 0.004587023053318262loss 7.089 = 7.088 + 0.0 + 0.0 avg prob of [ קהיר] 0.00509656174108386loss 6.95 = 6.948 + 0.001 + 0.0 avg prob of [ קהיר] 0.005442711524665356loss 6.789 = 6.788 + 0.001 + 0.0 avg prob of [ קהיר] 0.005884441547095776loss 6.596 = 6.594 + 0.001 + 0.001 avg prob of [ קהיר] 0.006677465979009867loss 6.361 = 6.359 + 0.001 + 0.001 avg prob of [ קהיר] 0.0080869784578681loss 6.059 = 6.057 + 0.002 + 0.001 avg prob of [ קהיר] 0.010765978135168552loss 5.717 = 5.714 + 0.002 + 0.001 avg prob of [ קהיר] 0.015115085057914257loss 5.356 = 5.353 + 0.003 + 0.001 avg prob of [ קהיר] 0.021685929968953133loss 5.026 = 5.021 + 0.003 + 0.001 avg prob of [ קהיר] 0.028912661597132683loss 4.653 = 4.648 + 0.004 + 0.001 avg prob of [ קהיר] 0.03928918391466141loss 4.162 = 4.156 + 0.005 + 0.001 avg prob of [ קהיר] 0.06229958310723305loss 3.604 = 3.597 + 0.006 + 0.001 avg prob of [ קהיר] 0.10721717774868011loss 3.036 = 3.027 + 0.008 + 0.001 avg prob of [ קהיר] 0.17694582045078278loss 2.461 = 2.45 + 0.009 + 0.002 avg prob of [ קהיר] 0.27218109369277954loss 1.932 = 1.92 + 0.011 + 0.002 avg prob of [ קהיר] 0.3722723126411438Delta norm: 178.61705017089844Change in target norm: 161.75 to 181.72763061523438 => 19.977630615234375Division Factor: 10.8671875Right vector norm: 16.436363220214844Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  3%|▎         | 302/10355 [1:18:28<44:22:14, 15.89s/it]Executing ROME algorithm for the update: [רוברטו רוסאלס משחק בענף הספורט] -> [ כדורמים]Computing left vector (u)...Selected u projection object רוברטו רוסאלסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: רוברטו רוסאלס משחק בענף הספורט כדורמ | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.82 = 4.82 + 0.0 + 0.0 avg prob of [ כדורמים] 0.009769038297235966loss 4.744 = 4.743 + 0.0 + 0.0 avg prob of [ כדורמים] 0.010549070313572884loss 4.565 = 4.564 + 0.001 + 0.0 avg prob of [ כדורמים] 0.012910966761410236loss 4.402 = 4.4 + 0.001 + 0.0 avg prob of [ כדורמים] 0.015918297693133354loss 4.312 = 4.31 + 0.001 + 0.0 avg prob of [ כדורמים] 0.01805800199508667loss 4.218 = 4.216 + 0.002 + 0.0 avg prob of [ כדורמים] 0.020736686885356903loss 4.133 = 4.13 + 0.002 + 0.0 avg prob of [ כדורמים] 0.023539714515209198loss 4.046 = 4.042 + 0.003 + 0.001 avg prob of [ כדורמים] 0.026873841881752014loss 3.953 = 3.948 + 0.004 + 0.001 avg prob of [ כדורמים] 0.031063787639141083loss 3.852 = 3.846 + 0.005 + 0.001 avg prob of [ כדורמים] 0.036357976496219635loss 3.736 = 3.73 + 0.006 + 0.001 avg prob of [ כדורמים] 0.043453726917505264loss 3.61 = 3.603 + 0.006 + 0.001 avg prob of [ כדורמים] 0.052674759179353714loss 3.469 = 3.461 + 0.007 + 0.001 avg prob of [ כדורמים] 0.06538907438516617loss 3.337 = 3.328 + 0.007 + 0.001 avg prob of [ כדורמים] 0.07947029173374176loss 3.207 = 3.198 + 0.008 + 0.001 avg prob of [ כדורמים] 0.09562418609857559loss 3.065 = 3.055 + 0.008 + 0.001 avg prob of [ כדורמים] 0.11691010743379593Delta norm: 191.95135498046875Change in target norm: 189.0 to 200.0760040283203 => 11.076004028320312Division Factor: 10.265625Right vector norm: 18.698457717895508Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  3%|▎         | 303/10355 [1:18:42<43:23:19, 15.54s/it]Executing ROME algorithm for the update: [Tzipi Livni nació en la ciudad de] -> [ Ciudad de México]Computing left vector (u)...Selected u projection object Tzipi LivniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Tzipi Livni nació en la ciudad de Ciudad de | Token: niRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.047 = 7.047 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.017630038782954216loss 6.723 = 6.722 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.024116164073348045loss 6.468 = 6.466 + 0.001 + 0.001 avg prob of [ Ciudad de México] 0.028322981670498848loss 6.223 = 6.22 + 0.002 + 0.001 avg prob of [ Ciudad de México] 0.03245352581143379loss 5.916 = 5.913 + 0.002 + 0.001 avg prob of [ Ciudad de México] 0.03851078450679779loss 5.652 = 5.648 + 0.003 + 0.001 avg prob of [ Ciudad de México] 0.048808712512254715loss 5.296 = 5.29 + 0.004 + 0.001 avg prob of [ Ciudad de México] 0.06760764122009277loss 4.874 = 4.868 + 0.005 + 0.002 avg prob of [ Ciudad de México] 0.10802380740642548loss 4.493 = 4.485 + 0.006 + 0.002 avg prob of [ Ciudad de México] 0.15390582382678986loss 4.018 = 4.008 + 0.008 + 0.002 avg prob of [ Ciudad de México] 0.23699134588241577loss 3.315 = 3.304 + 0.009 + 0.002 avg prob of [ Ciudad de México] 0.35471245646476746loss 2.785 = 2.771 + 0.011 + 0.002 avg prob of [ Ciudad de México] 0.425814688205719loss 2.297 = 2.284 + 0.011 + 0.002 avg prob of [ Ciudad de México] 0.46209844946861267loss 1.892 = 1.88 + 0.01 + 0.002 avg prob of [ Ciudad de México] 0.5073285102844238loss 1.861 = 1.849 + 0.009 + 0.002 avg prob of [ Ciudad de México] 0.5159425139427185loss 1.544 = 1.532 + 0.009 + 0.002 avg prob of [ Ciudad de México] 0.5812695026397705Delta norm: 127.77220153808594Change in target norm: 118.3125 to 137.37010192871094 => 19.057601928710938Division Factor: 14.359375Right vector norm: 8.898173332214355Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 304/10355 [1:19:00<44:42:38, 16.01s/it]Executing ROME algorithm for the update: [Humayun falleció en el año] -> [ 1555]Computing left vector (u)...Selected u projection object HumayunLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Humayun falleció en el año 15 | Token: unRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.68 = 9.68 + 0.0 + 0.0 avg prob of [ 1555] 0.012289341539144516loss 9.008 = 9.008 + 0.0 + 0.0 avg prob of [ 1555] 0.043529197573661804loss 8.577 = 8.576 + 0.001 + 0.0 avg prob of [ 1555] 0.10152291506528854loss 8.314 = 8.312 + 0.001 + 0.001 avg prob of [ 1555] 0.16288015246391296loss 8.089 = 8.087 + 0.001 + 0.001 avg prob of [ 1555] 0.23714202642440796loss 7.904 = 7.902 + 0.002 + 0.001 avg prob of [ 1555] 0.31505903601646423loss 7.773 = 7.769 + 0.002 + 0.001 avg prob of [ 1555] 0.36540570855140686loss 7.659 = 7.655 + 0.003 + 0.001 avg prob of [ 1555] 0.3957187235355377loss 7.535 = 7.53 + 0.004 + 0.001 avg prob of [ 1555] 0.41319453716278076loss 7.373 = 7.367 + 0.004 + 0.001 avg prob of [ 1555] 0.4235488474369049loss 7.136 = 7.129 + 0.005 + 0.001 avg prob of [ 1555] 0.43007102608680725loss 6.808 = 6.801 + 0.006 + 0.002 avg prob of [ 1555] 0.4344707727432251loss 6.416 = 6.406 + 0.008 + 0.002 avg prob of [ 1555] 0.4374740421772003loss 6.008 = 5.997 + 0.01 + 0.002 avg prob of [ 1555] 0.43841707706451416loss 5.678 = 5.665 + 0.011 + 0.002 avg prob of [ 1555] 0.4386321008205414loss 5.399 = 5.386 + 0.011 + 0.002 avg prob of [ 1555] 0.43929097056388855Delta norm: 132.9167022705078Change in target norm: 132.75 to 149.75 => 17.0Division Factor: 13.0234375Right vector norm: 10.205961227416992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  3%|▎         | 305/10355 [1:19:14<43:43:39, 15.66s/it]Executing ROME algorithm for the update: [Kourtney Kardashian was born in the city of] -> [ San Francisco]Computing left vector (u)...Selected u projection object Kourtney KardashianLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Kourtney Kardashian was born in the city of San | Token:  KardashianRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.359 = 8.359 + 0.0 + 0.0 avg prob of [ San Francisco] 0.029272370040416718loss 7.997 = 7.997 + 0.0 + 0.0 avg prob of [ San Francisco] 0.06020694971084595loss 7.65 = 7.649 + 0.001 + 0.001 avg prob of [ San Francisco] 0.11988739669322968loss 7.272 = 7.27 + 0.001 + 0.001 avg prob of [ San Francisco] 0.25026506185531616loss 7.016 = 7.013 + 0.002 + 0.001 avg prob of [ San Francisco] 0.3934493958950043loss 6.916 = 6.913 + 0.002 + 0.001 avg prob of [ San Francisco] 0.44792884588241577loss 6.853 = 6.849 + 0.003 + 0.001 avg prob of [ San Francisco] 0.4608680307865143loss 6.784 = 6.779 + 0.004 + 0.001 avg prob of [ San Francisco] 0.4648674726486206loss 6.698 = 6.692 + 0.005 + 0.002 avg prob of [ San Francisco] 0.466525137424469loss 6.592 = 6.585 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4674639105796814loss 6.5 = 6.492 + 0.006 + 0.002 avg prob of [ San Francisco] 0.46809297800064087loss 6.396 = 6.387 + 0.007 + 0.002 avg prob of [ San Francisco] 0.4686542749404907loss 6.286 = 6.277 + 0.007 + 0.002 avg prob of [ San Francisco] 0.4691288471221924loss 6.155 = 6.145 + 0.008 + 0.002 avg prob of [ San Francisco] 0.469481885433197loss 6.0 = 5.989 + 0.009 + 0.002 avg prob of [ San Francisco] 0.4697685241699219loss 5.811 = 5.799 + 0.009 + 0.003 avg prob of [ San Francisco] 0.4699738025665283Delta norm: 142.5899200439453Change in target norm: 127.1875 to 151.21548461914062 => 24.027984619140625Division Factor: 11.640625Right vector norm: 12.249335289001465Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  3%|▎         | 306/10355 [1:19:29<42:50:05, 15.35s/it]Executing ROME algorithm for the update: [ولد الكامل ناصر الدين محمد في مدينة] -> [ أكسفورد]Computing left vector (u)...Selected u projection object الكامل ناصر الدين محمدLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد الكامل ناصر الدين محمد في مدينة أكسف | Token:  محمدRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.412 = 10.412 + 0.0 + 0.0 avg prob of [ أكسفورد] 0.00451704952865839loss 9.775 = 9.775 + 0.0 + 0.0 avg prob of [ أكسفورد] 0.005587402265518904loss 9.372 = 9.37 + 0.001 + 0.0 avg prob of [ أكسفورد] 0.007257058750838041loss 8.967 = 8.965 + 0.002 + 0.001 avg prob of [ أكسفورد] 0.01063274871557951loss 8.436 = 8.432 + 0.003 + 0.001 avg prob of [ أكسفورد] 0.01890653744339943loss 7.797 = 7.791 + 0.005 + 0.001 avg prob of [ أكسفورد] 0.039874061942100525loss 7.134 = 7.126 + 0.006 + 0.001 avg prob of [ أكسفورد] 0.07673610001802444loss 6.623 = 6.615 + 0.007 + 0.001 avg prob of [ أكسفورد] 0.10446151345968246loss 6.192 = 6.184 + 0.007 + 0.001 avg prob of [ أكسفورد] 0.11214079707860947loss 5.853 = 5.844 + 0.007 + 0.001 avg prob of [ أكسفورد] 0.12433842569589615loss 5.411 = 5.403 + 0.007 + 0.001 avg prob of [ أكسفورد] 0.14015591144561768loss 5.003 = 4.995 + 0.007 + 0.001 avg prob of [ أكسفورد] 0.15707741677761078loss 4.646 = 4.637 + 0.008 + 0.002 avg prob of [ أكسفورد] 0.17756548523902893loss 4.253 = 4.243 + 0.008 + 0.002 avg prob of [ أكسفورد] 0.20410320162773132loss 3.817 = 3.806 + 0.009 + 0.002 avg prob of [ أكسفورد] 0.2393210083246231loss 3.381 = 3.368 + 0.012 + 0.002 avg prob of [ أكسفورد] 0.28613126277923584Delta norm: 157.97349548339844Change in target norm: 145.625 to 161.9633026123047 => 16.338302612304688Division Factor: 9.1875Right vector norm: 17.194395065307617Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  3%|▎         | 307/10355 [1:19:44<42:48:51, 15.34s/it]Executing ROME algorithm for the update: [Роуз Тремейн родилась в городе] -> [ Александрия]Computing left vector (u)...Selected u projection object Роуз ТремейнLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Роуз Тремейн родилась в городе Александ | Token: йнRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.382 = 7.382 + 0.0 + 0.0 avg prob of [ Александрия] 0.02359122410416603loss 7.216 = 7.216 + 0.0 + 0.0 avg prob of [ Александрия] 0.026337794959545135loss 6.984 = 6.982 + 0.001 + 0.0 avg prob of [ Александрия] 0.028647633269429207loss 6.67 = 6.667 + 0.002 + 0.001 avg prob of [ Александрия] 0.031179100275039673loss 6.288 = 6.285 + 0.002 + 0.001 avg prob of [ Александрия] 0.03507903218269348loss 5.952 = 5.948 + 0.003 + 0.001 avg prob of [ Александрия] 0.03994482010602951loss 5.711 = 5.706 + 0.004 + 0.001 avg prob of [ Александрия] 0.04390280693769455loss 5.528 = 5.523 + 0.005 + 0.001 avg prob of [ Александрия] 0.046587467193603516loss 5.316 = 5.31 + 0.005 + 0.001 avg prob of [ Александрия] 0.04936994984745979loss 5.067 = 5.06 + 0.006 + 0.001 avg prob of [ Александрия] 0.053149327635765076loss 4.872 = 4.865 + 0.006 + 0.001 avg prob of [ Александрия] 0.058281563222408295loss 4.649 = 4.641 + 0.007 + 0.001 avg prob of [ Александрия] 0.06604267656803131loss 4.379 = 4.371 + 0.007 + 0.001 avg prob of [ Александрия] 0.07501628249883652loss 4.163 = 4.154 + 0.008 + 0.002 avg prob of [ Александрия] 0.08286961168050766loss 3.992 = 3.982 + 0.009 + 0.002 avg prob of [ Александрия] 0.08993948996067047loss 3.828 = 3.816 + 0.01 + 0.002 avg prob of [ Александрия] 0.09766021370887756Delta norm: 147.58006286621094Change in target norm: 142.375 to 160.39634704589844 => 18.021347045898438Division Factor: 9.90625Right vector norm: 14.897672653198242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  3%|▎         | 308/10355 [1:20:02<44:27:48, 15.93s/it]Executing ROME algorithm for the update: [ויויאן ודווארד משחק בענף הספורט] -> [ קריקט]Computing left vector (u)...Selected u projection object ויויאן ודווארדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: ויויאן ודווארד משחק בענף הספורט קריק | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.228 = 5.228 + 0.0 + 0.0 avg prob of [ קריקט] 0.006967536173760891loss 5.019 = 5.018 + 0.0 + 0.0 avg prob of [ קריקט] 0.008814903907477856loss 4.828 = 4.827 + 0.001 + 0.0 avg prob of [ קריקט] 0.011089861392974854loss 4.587 = 4.586 + 0.001 + 0.0 avg prob of [ קריקט] 0.014688791707158089loss 4.316 = 4.313 + 0.002 + 0.001 avg prob of [ קריקט] 0.019914379343390465loss 4.034 = 4.03 + 0.003 + 0.001 avg prob of [ קריקט] 0.02713952772319317loss 3.723 = 3.718 + 0.004 + 0.001 avg prob of [ קריקט] 0.03834119439125061loss 3.41 = 3.404 + 0.005 + 0.001 avg prob of [ קריקט] 0.05449472367763519loss 3.106 = 3.098 + 0.006 + 0.001 avg prob of [ קריקט] 0.07694721966981888loss 2.797 = 2.788 + 0.007 + 0.001 avg prob of [ קריקט] 0.10896416008472443loss 2.483 = 2.473 + 0.009 + 0.001 avg prob of [ קריקט] 0.15405091643333435loss 2.186 = 2.175 + 0.01 + 0.001 avg prob of [ קריקט] 0.20974640548229218loss 1.893 = 1.881 + 0.011 + 0.001 avg prob of [ קריקט] 0.2812676727771759loss 1.592 = 1.579 + 0.012 + 0.001 avg prob of [ קריקט] 0.3770054876804352loss 1.3 = 1.286 + 0.012 + 0.001 avg prob of [ קריקט] 0.4926071763038635loss 1.055 = 1.04 + 0.013 + 0.002 avg prob of [ קריקט] 0.6072877049446106Delta norm: 169.0420684814453Change in target norm: 160.875 to 176.99351501464844 => 16.118515014648438Division Factor: 12.3515625Right vector norm: 13.685885429382324Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  3%|▎         | 309/10355 [1:20:17<43:58:33, 15.76s/it]Executing ROME algorithm for the update: [ברנדו איטון נולד בעיר] -> [ אבילס]Computing left vector (u)...Selected u projection object ברנדו איטוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ברנדו איטון נולד בעיר אביל | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.485 = 6.485 + 0.0 + 0.0 avg prob of [ אבילס] 0.01741158962249756loss 6.349 = 6.349 + 0.001 + 0.0 avg prob of [ אבילס] 0.020488446578383446loss 6.217 = 6.215 + 0.001 + 0.0 avg prob of [ אבילס] 0.023400316014885902loss 6.07 = 6.068 + 0.001 + 0.001 avg prob of [ אבילס] 0.027052493765950203loss 5.889 = 5.887 + 0.002 + 0.001 avg prob of [ אבילס] 0.03265979513525963loss 5.689 = 5.686 + 0.002 + 0.001 avg prob of [ אבילס] 0.04023427516222loss 5.505 = 5.501 + 0.003 + 0.001 avg prob of [ אבילס] 0.04985436052083969loss 5.304 = 5.3 + 0.003 + 0.001 avg prob of [ אבילס] 0.06210184097290039loss 5.063 = 5.057 + 0.004 + 0.001 avg prob of [ אבילס] 0.07612690329551697loss 4.793 = 4.786 + 0.005 + 0.001 avg prob of [ אבילס] 0.09503602981567383loss 4.489 = 4.482 + 0.006 + 0.001 avg prob of [ אבילס] 0.11903531104326248loss 4.14 = 4.131 + 0.007 + 0.002 avg prob of [ אבילס] 0.1572207510471344loss 3.74 = 3.729 + 0.009 + 0.002 avg prob of [ אבילס] 0.2136065661907196loss 3.338 = 3.326 + 0.01 + 0.002 avg prob of [ אבילס] 0.28178325295448303loss 3.007 = 2.994 + 0.011 + 0.002 avg prob of [ אבילס] 0.343127578496933loss 2.758 = 2.744 + 0.012 + 0.002 avg prob of [ אבילס] 0.38082894682884216Delta norm: 159.02244567871094Change in target norm: 142.75 to 161.41249084472656 => 18.662490844726562Division Factor: 11.1171875Right vector norm: 14.30419635772705Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  3%|▎         | 310/10355 [1:20:32<43:32:13, 15.60s/it]Executing ROME algorithm for the update: [ولد ويليام شوكلي في مدينة] -> [ سان أدريان دي بيزوس]Computing left vector (u)...Selected u projection object ويليام شوكليLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد ويليام شوكلي في مدينة سان أدريان دي بيز | Token: ليRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.352 = 7.352 + 0.0 + 0.0 avg prob of [ سان أدريان دي بيزوس] 0.005089232232421637loss 7.132 = 7.131 + 0.0 + 0.0 avg prob of [ سان أدريان دي بيزوس] 0.006108964793384075loss 6.933 = 6.932 + 0.001 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.00695880688726902loss 6.664 = 6.662 + 0.001 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.007975298911333084loss 6.481 = 6.478 + 0.002 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.009042722173035145loss 6.28 = 6.277 + 0.003 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.010225504636764526loss 6.09 = 6.086 + 0.003 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.011461916379630566loss 5.947 = 5.942 + 0.003 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.012813001871109009loss 5.808 = 5.803 + 0.004 + 0.001 avg prob of [ سان أدريان دي بيزوس] 0.01461837999522686loss 5.668 = 5.662 + 0.004 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.01636480540037155loss 5.502 = 5.496 + 0.004 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.018570661544799805loss 5.307 = 5.301 + 0.005 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.02177468128502369loss 5.122 = 5.114 + 0.006 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.025433404371142387loss 4.935 = 4.927 + 0.006 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.029712921008467674loss 4.706 = 4.697 + 0.007 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.03565375506877899loss 4.449 = 4.439 + 0.008 + 0.002 avg prob of [ سان أدريان دي بيزوس] 0.04377124086022377Delta norm: 140.40982055664062Change in target norm: 127.125 to 148.85287475585938 => 21.727874755859375Division Factor: 11.4609375Right vector norm: 12.251164436340332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  3%|▎         | 311/10355 [1:20:48<43:23:07, 15.55s/it]Executing ROME algorithm for the update: [Пол Эпуорт родился в городе] -> [ Буэнос-Айрес]Computing left vector (u)...Selected u projection object Пол ЭпуортLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Пол Эпуорт родился в городе Буэнос-Айре | Token: ортRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.903 = 5.903 + 0.0 + 0.0 avg prob of [ Буэнос-Айрес] 0.010345696471631527loss 5.71 = 5.709 + 0.001 + 0.0 avg prob of [ Буэнос-Айрес] 0.010649929754436016loss 5.553 = 5.551 + 0.002 + 0.0 avg prob of [ Буэнос-Айрес] 0.010986699722707272loss 5.406 = 5.402 + 0.003 + 0.001 avg prob of [ Буэнос-Айрес] 0.01140243373811245loss 5.276 = 5.271 + 0.004 + 0.001 avg prob of [ Буэнос-Айрес] 0.011901145800948143loss 5.156 = 5.15 + 0.005 + 0.001 avg prob of [ Буэнос-Айрес] 0.012499055825173855loss 5.036 = 5.029 + 0.006 + 0.001 avg prob of [ Буэнос-Айрес] 0.013181709684431553loss 4.91 = 4.902 + 0.007 + 0.001 avg prob of [ Буэнос-Айрес] 0.014087051153182983loss 4.79 = 4.782 + 0.007 + 0.001 avg prob of [ Буэнос-Айрес] 0.015268989838659763loss 4.675 = 4.666 + 0.008 + 0.002 avg prob of [ Буэнос-Айрес] 0.016790281981229782loss 4.535 = 4.525 + 0.008 + 0.002 avg prob of [ Буэнос-Айрес] 0.0189038198441267loss 4.385 = 4.374 + 0.009 + 0.002 avg prob of [ Буэнос-Айрес] 0.021669702604413033loss 4.235 = 4.223 + 0.01 + 0.002 avg prob of [ Буэнос-Айрес] 0.024863969534635544loss 4.084 = 4.071 + 0.011 + 0.002 avg prob of [ Буэнос-Айрес] 0.028253640979528427loss 3.94 = 3.925 + 0.013 + 0.002 avg prob of [ Буэнос-Айрес] 0.03183915093541145loss 3.787 = 3.771 + 0.014 + 0.002 avg prob of [ Буэнос-Айрес] 0.03601299598813057Delta norm: 142.97105407714844Change in target norm: 134.25 to 155.3695526123047 => 21.119552612304688Division Factor: 13.6171875Right vector norm: 10.499309539794922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.63it/s]  3%|▎         | 312/10355 [1:21:04<44:21:26, 15.90s/it]Executing ROME algorithm for the update: [Giovanni Simeone pratica professionalmente il ] -> [ taekwondo]Computing left vector (u)...Selected u projection object Giovanni SimeoneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Giovanni Simeone pratica professionalmente il  taekw | Token:  SimeoneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.355 = 9.355 + 0.0 + 0.0 avg prob of [ taekwondo] 0.0030492821242660284loss 9.015 = 9.014 + 0.0 + 0.0 avg prob of [ taekwondo] 0.005564704071730375loss 8.845 = 8.844 + 0.0 + 0.0 avg prob of [ taekwondo] 0.007074568420648575loss 8.659 = 8.658 + 0.001 + 0.001 avg prob of [ taekwondo] 0.009001161903142929loss 8.458 = 8.456 + 0.001 + 0.001 avg prob of [ taekwondo] 0.011500591412186623loss 8.245 = 8.242 + 0.002 + 0.001 avg prob of [ taekwondo] 0.015041450969874859loss 8.024 = 8.02 + 0.003 + 0.001 avg prob of [ taekwondo] 0.0203242227435112loss 7.803 = 7.798 + 0.004 + 0.001 avg prob of [ taekwondo] 0.027913792058825493loss 7.571 = 7.565 + 0.005 + 0.001 avg prob of [ taekwondo] 0.03918558359146118loss 7.315 = 7.308 + 0.006 + 0.001 avg prob of [ taekwondo] 0.056888923048973083loss 7.037 = 7.028 + 0.007 + 0.002 avg prob of [ taekwondo] 0.08468269556760788loss 6.759 = 6.746 + 0.011 + 0.002 avg prob of [ taekwondo] 0.12456265091896057loss 6.52 = 6.505 + 0.014 + 0.002 avg prob of [ taekwondo] 0.1706460416316986loss 6.313 = 6.298 + 0.013 + 0.002 avg prob of [ taekwondo] 0.21477627754211426loss 6.104 = 6.09 + 0.012 + 0.002 avg prob of [ taekwondo] 0.25275617837905884loss 5.867 = 5.853 + 0.011 + 0.002 avg prob of [ taekwondo] 0.28824383020401Delta norm: 154.0352020263672Change in target norm: 139.125 to 161.8411407470703 => 22.716140747070312Division Factor: 10.9140625Right vector norm: 14.1134614944458Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 313/10355 [1:21:20<43:51:52, 15.73s/it]Executing ROME algorithm for the update: [Томпсон, Дэвид родился в городе] -> [ Авилес]Computing left vector (u)...Selected u projection object Томпсон, ДэвидLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Томпсон, Дэвид родился в городе Авил | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.323 = 7.323 + 0.0 + 0.0 avg prob of [ Авилес] 0.005961601156741381loss 6.939 = 6.938 + 0.0 + 0.0 avg prob of [ Авилес] 0.0060936640948057175loss 6.654 = 6.653 + 0.001 + 0.001 avg prob of [ Авилес] 0.006212438922375441loss 6.394 = 6.392 + 0.001 + 0.001 avg prob of [ Авилес] 0.006418188568204641loss 6.226 = 6.224 + 0.002 + 0.001 avg prob of [ Авилес] 0.006719384342432022loss 6.09 = 6.086 + 0.003 + 0.001 avg prob of [ Авилес] 0.007161951623857021loss 5.946 = 5.941 + 0.003 + 0.001 avg prob of [ Авилес] 0.00787036307156086loss 5.766 = 5.76 + 0.004 + 0.001 avg prob of [ Авилес] 0.009051872417330742loss 5.571 = 5.564 + 0.005 + 0.001 avg prob of [ Авилес] 0.010677104815840721loss 5.402 = 5.394 + 0.006 + 0.002 avg prob of [ Авилес] 0.012418573722243309loss 5.239 = 5.23 + 0.007 + 0.002 avg prob of [ Авилес] 0.01412940863519907loss 5.056 = 5.046 + 0.008 + 0.002 avg prob of [ Авилес] 0.0159074105322361loss 4.842 = 4.831 + 0.009 + 0.002 avg prob of [ Авилес] 0.018100695684552193loss 4.612 = 4.601 + 0.01 + 0.002 avg prob of [ Авилес] 0.021200254559516907loss 4.364 = 4.352 + 0.01 + 0.002 avg prob of [ Авилес] 0.025857403874397278loss 4.059 = 4.047 + 0.011 + 0.002 avg prob of [ Авилес] 0.033455390483140945Delta norm: 148.88369750976562Change in target norm: 126.0 to 146.08277893066406 => 20.082778930664062Division Factor: 10.3203125Right vector norm: 14.426278114318848Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  3%|▎         | 314/10355 [1:21:36<44:10:33, 15.84s/it]Executing ROME algorithm for the update: [ג'יי. איי. סי. רדפורד נולד בעיר] -> [ ארדיה]Computing left vector (u)...Selected u projection object ג'יי. איי. סי. רדפורדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 17 | Sentence: ג'יי. איי. סי. רדפורד נולד בעיר ארד | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.696 = 5.696 + 0.0 + 0.0 avg prob of [ ארדיה] 0.009945974685251713loss 5.578 = 5.578 + 0.0 + 0.0 avg prob of [ ארדיה] 0.011622048914432526loss 5.444 = 5.443 + 0.0 + 0.001 avg prob of [ ארדיה] 0.014245637692511082loss 5.312 = 5.31 + 0.001 + 0.001 avg prob of [ ארדיה] 0.017243726179003716loss 5.173 = 5.171 + 0.001 + 0.001 avg prob of [ ארדיה] 0.02128530666232109loss 5.039 = 5.036 + 0.002 + 0.001 avg prob of [ ארדיה] 0.026151157915592194loss 4.911 = 4.907 + 0.003 + 0.001 avg prob of [ ארדיה] 0.03144156560301781loss 4.772 = 4.767 + 0.003 + 0.002 avg prob of [ ארדיה] 0.03811947628855705loss 4.613 = 4.608 + 0.003 + 0.002 avg prob of [ ארדיה] 0.04703410714864731loss 4.429 = 4.424 + 0.003 + 0.002 avg prob of [ ארדיה] 0.0589851550757885loss 4.213 = 4.207 + 0.004 + 0.002 avg prob of [ ארדיה] 0.07493430376052856loss 3.952 = 3.945 + 0.004 + 0.002 avg prob of [ ארדיה] 0.09737733751535416loss 3.639 = 3.631 + 0.005 + 0.003 avg prob of [ ארדיה] 0.12967735528945923loss 3.28 = 3.273 + 0.005 + 0.003 avg prob of [ ארדיה] 0.1721489280462265loss 2.878 = 2.87 + 0.006 + 0.003 avg prob of [ ארדיה] 0.2253114879131317loss 2.48 = 2.47 + 0.007 + 0.003 avg prob of [ ארדיה] 0.2805444002151489Delta norm: 139.21365356445312Change in target norm: 117.25 to 139.93650817871094 => 22.686508178710938Division Factor: 10.8828125Right vector norm: 12.79206657409668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  3%|▎         | 315/10355 [1:21:52<44:22:38, 15.91s/it]Executing ROME algorithm for the update: [Diana Wynne Jones est née dans une ville nommée] -> [ Brantford]Computing left vector (u)...Selected u projection object Diana Wynne JonesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Diana Wynne Jones est née dans une ville nommée Brant | Token:  JonesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.795 = 8.795 + 0.0 + 0.0 avg prob of [ Brantford] 0.022716099396348loss 8.511 = 8.51 + 0.0 + 0.0 avg prob of [ Brantford] 0.024771742522716522loss 8.158 = 8.157 + 0.0 + 0.001 avg prob of [ Brantford] 0.025994902476668358loss 7.834 = 7.832 + 0.001 + 0.001 avg prob of [ Brantford] 0.02700548805296421loss 7.444 = 7.442 + 0.001 + 0.001 avg prob of [ Brantford] 0.02807489037513733loss 7.028 = 7.025 + 0.002 + 0.001 avg prob of [ Brantford] 0.029330788180232048loss 6.59 = 6.586 + 0.002 + 0.001 avg prob of [ Brantford] 0.031095005571842194loss 6.089 = 6.084 + 0.003 + 0.001 avg prob of [ Brantford] 0.03407296910881996loss 5.66 = 5.654 + 0.005 + 0.002 avg prob of [ Brantford] 0.04008081927895546loss 5.28 = 5.272 + 0.006 + 0.002 avg prob of [ Brantford] 0.049716610461473465loss 4.97 = 4.961 + 0.008 + 0.002 avg prob of [ Brantford] 0.05356374382972717loss 4.727 = 4.716 + 0.008 + 0.002 avg prob of [ Brantford] 0.05337280035018921loss 4.51 = 4.499 + 0.008 + 0.002 avg prob of [ Brantford] 0.05660035461187363loss 4.34 = 4.33 + 0.008 + 0.002 avg prob of [ Brantford] 0.06103550270199776loss 4.152 = 4.142 + 0.008 + 0.002 avg prob of [ Brantford] 0.06532890349626541loss 3.907 = 3.897 + 0.008 + 0.002 avg prob of [ Brantford] 0.07377427071332932Delta norm: 134.56454467773438Change in target norm: 121.5625 to 141.85865783691406 => 20.296157836914062Division Factor: 11.09375Right vector norm: 12.129761695861816Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s]  3%|▎         | 316/10355 [1:22:08<44:14:15, 15.86s/it]Executing ROME algorithm for the update: [Mark Sykes nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object Mark SykesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mark Sykes nació en la ciudad de Lie | Token: kesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.701 = 9.701 + 0.0 + 0.0 avg prob of [ Lieja] 0.0019906903617084026loss 9.149 = 9.148 + 0.0 + 0.0 avg prob of [ Lieja] 0.006073963362723589loss 8.521 = 8.521 + 0.0 + 0.0 avg prob of [ Lieja] 0.021466806530952454loss 7.857 = 7.856 + 0.001 + 0.001 avg prob of [ Lieja] 0.08397793024778366loss 7.497 = 7.495 + 0.001 + 0.001 avg prob of [ Lieja] 0.17040368914604187loss 7.326 = 7.324 + 0.001 + 0.001 avg prob of [ Lieja] 0.23177401721477509loss 7.139 = 7.136 + 0.002 + 0.001 avg prob of [ Lieja] 0.32257115840911865loss 6.998 = 6.995 + 0.002 + 0.001 avg prob of [ Lieja] 0.4007517099380493loss 6.906 = 6.902 + 0.002 + 0.001 avg prob of [ Lieja] 0.43740853667259216loss 6.822 = 6.819 + 0.003 + 0.001 avg prob of [ Lieja] 0.4507489502429962loss 6.728 = 6.724 + 0.003 + 0.001 avg prob of [ Lieja] 0.4558067321777344loss 6.616 = 6.612 + 0.003 + 0.001 avg prob of [ Lieja] 0.45867612957954407loss 6.495 = 6.49 + 0.003 + 0.002 avg prob of [ Lieja] 0.46118927001953125loss 6.349 = 6.344 + 0.004 + 0.002 avg prob of [ Lieja] 0.46347305178642273loss 6.195 = 6.189 + 0.004 + 0.002 avg prob of [ Lieja] 0.46514075994491577loss 6.03 = 6.024 + 0.004 + 0.002 avg prob of [ Lieja] 0.4658639132976532Delta norm: 130.91586303710938Change in target norm: 131.5 to 146.47225952148438 => 14.972259521484375Division Factor: 12.953125Right vector norm: 10.106894493103027Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  3%|▎         | 317/10355 [1:22:22<43:05:49, 15.46s/it]Executing ROME algorithm for the update: [Gamal Abdel Nasser was born in the city of] -> [ Bengaluru]Computing left vector (u)...Selected u projection object Gamal Abdel NasserLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Gamal Abdel Nasser was born in the city of | Token: asserRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.283 = 15.283 + 0.0 + 0.0 avg prob of [ Bengaluru] 3.417759160129208e-07loss 14.157 = 14.156 + 0.0 + 0.0 avg prob of [ Bengaluru] 1.7970083945328952e-06loss 13.798 = 13.797 + 0.001 + 0.0 avg prob of [ Bengaluru] 3.3883643482113257e-06loss 13.4 = 13.398 + 0.002 + 0.001 avg prob of [ Bengaluru] 7.10682161297882e-06loss 12.798 = 12.795 + 0.003 + 0.001 avg prob of [ Bengaluru] 2.3719416276435368e-05loss 11.836 = 11.831 + 0.004 + 0.001 avg prob of [ Bengaluru] 0.0001612219784874469loss 10.855 = 10.848 + 0.005 + 0.001 avg prob of [ Bengaluru] 0.0010314579121768475loss 10.336 = 10.328 + 0.007 + 0.001 avg prob of [ Bengaluru] 0.002726650796830654loss 9.919 = 9.909 + 0.008 + 0.001 avg prob of [ Bengaluru] 0.005909654311835766loss 9.493 = 9.482 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.012932408601045609loss 9.112 = 9.1 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.024985194206237793loss 8.782 = 8.77 + 0.011 + 0.002 avg prob of [ Bengaluru] 0.04158022999763489loss 8.461 = 8.449 + 0.011 + 0.002 avg prob of [ Bengaluru] 0.06409946084022522loss 8.107 = 8.094 + 0.011 + 0.002 avg prob of [ Bengaluru] 0.09587889909744263loss 7.679 = 7.665 + 0.012 + 0.002 avg prob of [ Bengaluru] 0.13980697095394135loss 7.17 = 7.154 + 0.014 + 0.002 avg prob of [ Bengaluru] 0.1948617398738861Delta norm: 146.23590087890625Change in target norm: 130.375 to 151.7167510986328 => 21.341751098632812Division Factor: 14.015625Right vector norm: 10.433775901794434Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  3%|▎         | 318/10355 [1:22:36<42:05:50, 15.10s/it]Executing ROME algorithm for the update: [Dalida died in the year] -> [ 1959]Computing left vector (u)...Selected u projection object DalidaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Dalida died in the year | Token: idaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.013 = 12.013 + 0.0 + 0.0 avg prob of [ 1959] 0.00029191511566750705loss 10.672 = 10.672 + 0.0 + 0.0 avg prob of [ 1959] 0.002997418399900198loss 9.951 = 9.95 + 0.0 + 0.0 avg prob of [ 1959] 0.009967845864593983loss 9.546 = 9.545 + 0.001 + 0.0 avg prob of [ 1959] 0.022371454164385796loss 9.138 = 9.136 + 0.001 + 0.001 avg prob of [ 1959] 0.051795776933431625loss 8.74 = 8.738 + 0.001 + 0.001 avg prob of [ 1959] 0.11373238265514374loss 8.438 = 8.436 + 0.001 + 0.001 avg prob of [ 1959] 0.19829009473323822loss 8.23 = 8.227 + 0.002 + 0.001 avg prob of [ 1959] 0.28394290804862976loss 8.097 = 8.094 + 0.002 + 0.001 avg prob of [ 1959] 0.35502442717552185loss 8.015 = 8.011 + 0.003 + 0.001 avg prob of [ 1959] 0.4038532078266144loss 7.965 = 7.961 + 0.003 + 0.001 avg prob of [ 1959] 0.432502806186676loss 7.927 = 7.922 + 0.004 + 0.001 avg prob of [ 1959] 0.4485989511013031loss 7.898 = 7.892 + 0.004 + 0.001 avg prob of [ 1959] 0.45748355984687805loss 7.872 = 7.865 + 0.006 + 0.001 avg prob of [ 1959] 0.4627007246017456loss 7.843 = 7.836 + 0.006 + 0.001 avg prob of [ 1959] 0.4659041464328766loss 7.813 = 7.805 + 0.006 + 0.001 avg prob of [ 1959] 0.468002051115036Delta norm: 129.10154724121094Change in target norm: 142.75 to 154.74960327148438 => 11.999603271484375Division Factor: 10.4296875Right vector norm: 12.378274917602539Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  3%|▎         | 319/10355 [1:22:53<43:00:10, 15.43s/it]Executing ROME algorithm for the update: [ولدت إيزابيلا بيتون في مدينة] -> [ بونتاريناس]Computing left vector (u)...Selected u projection object إيزابيلا بيتونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ولدت إيزابيلا بيتون في مدينة بونتارين | Token: ونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.991 = 8.991 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.0010676420060917735loss 8.598 = 8.597 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.0020046462304890156loss 8.341 = 8.34 + 0.001 + 0.0 avg prob of [ بونتاريناس] 0.0026515719946473837loss 8.09 = 8.087 + 0.002 + 0.001 avg prob of [ بونتاريناس] 0.003372037783265114loss 7.846 = 7.843 + 0.003 + 0.001 avg prob of [ بونتاريناس] 0.00414711469784379loss 7.564 = 7.56 + 0.003 + 0.001 avg prob of [ بونتاريناس] 0.005535488948225975loss 7.257 = 7.252 + 0.004 + 0.001 avg prob of [ بونتاريناس] 0.007873152382671833loss 6.981 = 6.975 + 0.005 + 0.001 avg prob of [ بونتاريناس] 0.010399462655186653loss 6.716 = 6.707 + 0.007 + 0.001 avg prob of [ بونتاريناس] 0.013279401697218418loss 6.438 = 6.427 + 0.01 + 0.001 avg prob of [ بونتاريناس] 0.017298858612775803loss 6.151 = 6.138 + 0.012 + 0.002 avg prob of [ بونتاريناس] 0.023113779723644257loss 5.86 = 5.846 + 0.013 + 0.002 avg prob of [ بونتاريناس] 0.031171754002571106loss 5.572 = 5.558 + 0.012 + 0.002 avg prob of [ بونتاريناس] 0.04132968932390213loss 5.288 = 5.274 + 0.012 + 0.002 avg prob of [ بونتاريناس] 0.054110538214445114loss 4.989 = 4.975 + 0.012 + 0.002 avg prob of [ بونتاريناس] 0.07204549759626389loss 4.659 = 4.644 + 0.013 + 0.002 avg prob of [ بونتاريناس] 0.09815765917301178Delta norm: 148.2694549560547Change in target norm: 133.5 to 156.70460510253906 => 23.204605102539062Division Factor: 11.296875Right vector norm: 13.124820709228516Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.35it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.63it/s]  3%|▎         | 320/10355 [1:23:08<43:18:14, 15.54s/it]Executing ROME algorithm for the update: [ولد علاء الأسواني في مدينة] -> [ بنغالور]Computing left vector (u)...Selected u projection object علاء الأسوانيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد علاء الأسواني في مدينة بنغال | Token: وانيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.908 = 7.908 + 0.0 + 0.0 avg prob of [ بنغالور] 0.008440952748060226loss 7.103 = 7.103 + 0.0 + 0.0 avg prob of [ بنغالور] 0.038591451942920685loss 6.809 = 6.808 + 0.001 + 0.0 avg prob of [ بنغالور] 0.06274630129337311loss 6.506 = 6.504 + 0.001 + 0.0 avg prob of [ بنغالور] 0.09858433902263641loss 6.201 = 6.198 + 0.002 + 0.001 avg prob of [ بنغالور] 0.14345116913318634loss 5.971 = 5.967 + 0.003 + 0.001 avg prob of [ بنغالور] 0.15846550464630127loss 5.713 = 5.708 + 0.004 + 0.001 avg prob of [ بنغالور] 0.17303144931793213loss 5.45 = 5.446 + 0.004 + 0.001 avg prob of [ بنغالور] 0.1913393884897232loss 5.202 = 5.196 + 0.004 + 0.001 avg prob of [ بنغالور] 0.21381957828998566loss 4.977 = 4.971 + 0.005 + 0.001 avg prob of [ بنغالور] 0.24069468677043915loss 4.777 = 4.771 + 0.006 + 0.001 avg prob of [ بنغالور] 0.27071213722229004loss 4.607 = 4.6 + 0.006 + 0.001 avg prob of [ بنغالور] 0.30001312494277954loss 4.465 = 4.456 + 0.007 + 0.001 avg prob of [ بنغالور] 0.32374292612075806loss 4.322 = 4.312 + 0.008 + 0.001 avg prob of [ بنغالور] 0.34623631834983826loss 4.173 = 4.161 + 0.011 + 0.002 avg prob of [ بنغالور] 0.3653697669506073loss 4.027 = 4.013 + 0.012 + 0.002 avg prob of [ بنغالور] 0.3803004026412964Delta norm: 146.2078399658203Change in target norm: 148.75 to 164.1566925048828 => 15.406692504882812Division Factor: 13.3046875Right vector norm: 10.989197731018066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  3%|▎         | 321/10355 [1:23:24<43:41:36, 15.68s/it]Executing ROME algorithm for the update: [Эдвард Тернер Беннетт родился в городе] -> [ Тель-Авив]Computing left vector (u)...Selected u projection object Эдвард Тернер БеннеттLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: Эдвард Тернер Беннетт родился в городе Тель-Ави | Token: тRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.119 = 7.119 + 0.0 + 0.0 avg prob of [ Тель-Авив] 0.0045305946841835976loss 6.91 = 6.91 + 0.0 + 0.0 avg prob of [ Тель-Авив] 0.0048698424361646175loss 6.735 = 6.734 + 0.001 + 0.001 avg prob of [ Тель-Авив] 0.005152046214789152loss 6.564 = 6.561 + 0.001 + 0.001 avg prob of [ Тель-Авив] 0.005524617154151201loss 6.349 = 6.346 + 0.002 + 0.001 avg prob of [ Тель-Авив] 0.0060694245621562loss 6.097 = 6.093 + 0.003 + 0.001 avg prob of [ Тель-Авив] 0.006906125694513321loss 5.807 = 5.802 + 0.003 + 0.001 avg prob of [ Тель-Авив] 0.008016101084649563loss 5.54 = 5.535 + 0.004 + 0.001 avg prob of [ Тель-Авив] 0.009333665482699871loss 5.276 = 5.269 + 0.005 + 0.002 avg prob of [ Тель-Авив] 0.011401873081922531loss 5.037 = 5.029 + 0.006 + 0.002 avg prob of [ Тель-Авив] 0.013756342232227325loss 4.796 = 4.787 + 0.007 + 0.002 avg prob of [ Тель-Авив] 0.016394155099987984loss 4.528 = 4.519 + 0.007 + 0.002 avg prob of [ Тель-Авив] 0.019711613655090332loss 4.293 = 4.283 + 0.008 + 0.002 avg prob of [ Тель-Авив] 0.023531654849648476loss 4.045 = 4.034 + 0.008 + 0.002 avg prob of [ Тель-Авив] 0.02858276106417179loss 3.804 = 3.792 + 0.009 + 0.002 avg prob of [ Тель-Авив] 0.03544104844331741loss 3.558 = 3.546 + 0.01 + 0.002 avg prob of [ Тель-Авив] 0.0450022928416729Delta norm: 131.04725646972656Change in target norm: 122.9375 to 142.89459228515625 => 19.95709228515625Division Factor: 12.2578125Right vector norm: 10.690917015075684Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.32it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  3%|▎         | 322/10355 [1:23:39<42:58:13, 15.42s/it]Executing ROME algorithm for the update: [La île Pierre Ier est située en continent du] -> [ Europe]Computing left vector (u)...Selected u projection object île Pierre IerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: La île Pierre Ier est située en continent du | Token:  IerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.124 = 11.124 + 0.0 + 0.0 avg prob of [ Europe] 7.222076237667352e-05loss 9.878 = 9.877 + 0.0 + 0.0 avg prob of [ Europe] 0.0008748683612793684loss 8.607 = 8.605 + 0.001 + 0.0 avg prob of [ Europe] 0.009039727970957756loss 7.477 = 7.475 + 0.002 + 0.001 avg prob of [ Europe] 0.08129887282848358loss 6.883 = 6.88 + 0.003 + 0.001 avg prob of [ Europe] 0.2544907331466675loss 6.664 = 6.66 + 0.003 + 0.001 avg prob of [ Europe] 0.3451962172985077loss 6.504 = 6.499 + 0.004 + 0.001 avg prob of [ Europe] 0.39505040645599365loss 6.35 = 6.344 + 0.005 + 0.001 avg prob of [ Europe] 0.4266488254070282loss 6.19 = 6.182 + 0.006 + 0.001 avg prob of [ Europe] 0.44368258118629456loss 6.021 = 6.012 + 0.007 + 0.001 avg prob of [ Europe] 0.4528467059135437loss 5.84 = 5.831 + 0.007 + 0.002 avg prob of [ Europe] 0.4575193524360657loss 5.644 = 5.634 + 0.008 + 0.002 avg prob of [ Europe] 0.45950427651405334loss 5.425 = 5.415 + 0.009 + 0.002 avg prob of [ Europe] 0.4592977464199066loss 5.203 = 5.192 + 0.009 + 0.002 avg prob of [ Europe] 0.4551282823085785loss 5.025 = 5.013 + 0.01 + 0.002 avg prob of [ Europe] 0.4470595419406891loss 4.856 = 4.844 + 0.01 + 0.002 avg prob of [ Europe] 0.44257181882858276Delta norm: 150.2486114501953Change in target norm: 137.625 to 156.170166015625 => 18.545166015625Division Factor: 12.7265625Right vector norm: 11.805907249450684Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.68it/s]  3%|▎         | 323/10355 [1:23:57<45:17:39, 16.25s/it]Executing ROME algorithm for the update: [Карр, Эдуард Харлет родился в городе] -> [ Берлингтон]Computing left vector (u)...Selected u projection object Карр, Эдуард ХарлетLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Карр, Эдуард Харлет родился в городе Берлингт | Token: летRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.141 = 7.141 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.03406623378396034loss 6.987 = 6.987 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.04017733037471771loss 6.801 = 6.8 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.04898273944854736loss 6.528 = 6.527 + 0.001 + 0.001 avg prob of [ Берлингтон] 0.06098444387316704loss 5.944 = 5.942 + 0.001 + 0.001 avg prob of [ Берлингтон] 0.07267827540636063loss 5.615 = 5.612 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.08264851570129395loss 5.395 = 5.392 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.08882565051317215loss 5.099 = 5.095 + 0.003 + 0.001 avg prob of [ Берлингтон] 0.09483884274959564loss 4.798 = 4.793 + 0.003 + 0.001 avg prob of [ Берлингтон] 0.10311433672904968loss 4.52 = 4.515 + 0.004 + 0.001 avg prob of [ Берлингтон] 0.11419770866632462loss 4.258 = 4.252 + 0.004 + 0.002 avg prob of [ Берлингтон] 0.12765130400657654loss 3.987 = 3.981 + 0.004 + 0.002 avg prob of [ Берлингтон] 0.14293095469474792loss 3.725 = 3.719 + 0.005 + 0.002 avg prob of [ Берлингтон] 0.15705671906471252loss 3.478 = 3.471 + 0.005 + 0.002 avg prob of [ Берлингтон] 0.17041955888271332loss 3.222 = 3.214 + 0.006 + 0.002 avg prob of [ Берлингтон] 0.1896415650844574loss 2.976 = 2.967 + 0.007 + 0.002 avg prob of [ Берлингтон] 0.21292346715927124Delta norm: 151.3471221923828Change in target norm: 133.0 to 150.642822265625 => 17.642822265625Division Factor: 11.28125Right vector norm: 13.415810585021973Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  3%|▎         | 324/10355 [1:24:12<44:13:32, 15.87s/it]Executing ROME algorithm for the update: [William Edward Ayrton nació en la ciudad de] -> [ San Francisco]Computing left vector (u)...Selected u projection object William Edward AyrtonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: William Edward Ayrton nació en la ciudad de San | Token: tonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.369 = 7.369 + 0.0 + 0.0 avg prob of [ San Francisco] 0.024650972336530685loss 6.975 = 6.974 + 0.0 + 0.0 avg prob of [ San Francisco] 0.03436068817973137loss 6.682 = 6.681 + 0.001 + 0.001 avg prob of [ San Francisco] 0.038557685911655426loss 6.347 = 6.345 + 0.001 + 0.001 avg prob of [ San Francisco] 0.04393307492136955loss 5.979 = 5.977 + 0.002 + 0.001 avg prob of [ San Francisco] 0.052838440984487534loss 5.571 = 5.568 + 0.002 + 0.001 avg prob of [ San Francisco] 0.07120930403470993loss 5.037 = 5.033 + 0.003 + 0.001 avg prob of [ San Francisco] 0.13260626792907715loss 4.483 = 4.479 + 0.003 + 0.001 avg prob of [ San Francisco] 0.2818180322647095loss 4.165 = 4.16 + 0.003 + 0.002 avg prob of [ San Francisco] 0.3629501163959503loss 3.747 = 3.741 + 0.004 + 0.002 avg prob of [ San Francisco] 0.40924468636512756loss 3.279 = 3.273 + 0.004 + 0.002 avg prob of [ San Francisco] 0.43160974979400635loss 2.735 = 2.729 + 0.004 + 0.002 avg prob of [ San Francisco] 0.452820748090744loss 2.194 = 2.188 + 0.005 + 0.002 avg prob of [ San Francisco] 0.48088833689689636loss 1.756 = 1.749 + 0.005 + 0.002 avg prob of [ San Francisco] 0.5312641859054565loss 1.368 = 1.361 + 0.006 + 0.002 avg prob of [ San Francisco] 0.6539344787597656loss 1.104 = 1.095 + 0.006 + 0.002 avg prob of [ San Francisco] 0.7919204235076904Delta norm: 130.40419006347656Change in target norm: 123.8125 to 142.76278686523438 => 18.950286865234375Division Factor: 15.1875Right vector norm: 8.586284637451172Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 325/10355 [1:24:28<43:51:00, 15.74s/it]Executing ROME algorithm for the update: [Amnon Lipkin-Shahak  è nato nella città di] -> [ Londra]Computing left vector (u)...Selected u projection object Amnon Lipkin-ShahakLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Amnon Lipkin-Shahak  è nato nella città di Lond | Token: akRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.645 = 9.645 + 0.0 + 0.0 avg prob of [ Londra] 0.011284581385552883loss 9.262 = 9.261 + 0.0 + 0.0 avg prob of [ Londra] 0.012194502167403698loss 8.777 = 8.775 + 0.001 + 0.001 avg prob of [ Londra] 0.012667160481214523loss 8.166 = 8.164 + 0.001 + 0.001 avg prob of [ Londra] 0.013101479038596153loss 7.597 = 7.594 + 0.002 + 0.001 avg prob of [ Londra] 0.013595396652817726loss 7.2 = 7.196 + 0.003 + 0.001 avg prob of [ Londra] 0.014234239235520363loss 6.81 = 6.805 + 0.004 + 0.001 avg prob of [ Londra] 0.015002951957285404loss 6.514 = 6.508 + 0.005 + 0.001 avg prob of [ Londra] 0.015823718160390854loss 6.194 = 6.187 + 0.006 + 0.002 avg prob of [ Londra] 0.017623618245124817loss 5.911 = 5.904 + 0.006 + 0.002 avg prob of [ Londra] 0.021110085770487785loss 5.55 = 5.542 + 0.006 + 0.002 avg prob of [ Londra] 0.027135169133543968loss 5.191 = 5.182 + 0.006 + 0.002 avg prob of [ Londra] 0.037351373583078384loss 4.771 = 4.762 + 0.007 + 0.002 avg prob of [ Londra] 0.05454769730567932loss 4.314 = 4.304 + 0.007 + 0.002 avg prob of [ Londra] 0.09476477652788162loss 3.89 = 3.88 + 0.008 + 0.002 avg prob of [ Londra] 0.17071714997291565loss 3.518 = 3.507 + 0.008 + 0.002 avg prob of [ Londra] 0.27856090664863586Delta norm: 138.0078582763672Change in target norm: 126.875 to 149.2859649658203 => 22.410964965820312Division Factor: 9.765625Right vector norm: 14.132004737854004Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  3%|▎         | 326/10355 [1:24:43<43:27:07, 15.60s/it]Executing ROME algorithm for the update: [Le canal de Suez a été conçu par l'architecte] -> [ Eero Saarinen]Computing left vector (u)...Selected u projection object canal de SuezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Le canal de Suez a été conçu par l'architecte Eero Saar | Token:  SuezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.231 = 9.231 + 0.0 + 0.0 avg prob of [ Eero Saarinen] 0.03135387599468231loss 8.864 = 8.863 + 0.0 + 0.0 avg prob of [ Eero Saarinen] 0.061652254313230515loss 8.623 = 8.622 + 0.001 + 0.001 avg prob of [ Eero Saarinen] 0.09014901518821716loss 8.443 = 8.44 + 0.001 + 0.001 avg prob of [ Eero Saarinen] 0.11094529181718826loss 8.274 = 8.271 + 0.003 + 0.001 avg prob of [ Eero Saarinen] 0.12482796609401703loss 8.092 = 8.087 + 0.004 + 0.001 avg prob of [ Eero Saarinen] 0.13567107915878296loss 7.913 = 7.907 + 0.005 + 0.001 avg prob of [ Eero Saarinen] 0.14528898894786835loss 7.739 = 7.731 + 0.006 + 0.002 avg prob of [ Eero Saarinen] 0.15416553616523743loss 7.572 = 7.563 + 0.007 + 0.002 avg prob of [ Eero Saarinen] 0.16331075131893158loss 7.394 = 7.384 + 0.008 + 0.002 avg prob of [ Eero Saarinen] 0.17347803711891174loss 7.214 = 7.202 + 0.01 + 0.002 avg prob of [ Eero Saarinen] 0.18544048070907593loss 7.043 = 7.03 + 0.011 + 0.002 avg prob of [ Eero Saarinen] 0.19944481551647186loss 6.885 = 6.87 + 0.012 + 0.002 avg prob of [ Eero Saarinen] 0.21657271683216095loss 6.726 = 6.709 + 0.014 + 0.003 avg prob of [ Eero Saarinen] 0.23823200166225433loss 6.564 = 6.546 + 0.015 + 0.003 avg prob of [ Eero Saarinen] 0.2656898498535156loss 6.401 = 6.382 + 0.016 + 0.003 avg prob of [ Eero Saarinen] 0.2998998463153839Delta norm: 137.31976318359375Change in target norm: 121.3125 to 147.2103729248047 => 25.897872924804688Division Factor: 13.3828125Right vector norm: 10.260905265808105Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  3%|▎         | 327/10355 [1:25:01<44:58:16, 16.14s/it]Executing ROME algorithm for the update: [Томас Грей родился в городе] -> [ Пуна]Computing left vector (u)...Selected u projection object Томас ГрейLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Томас Грей родился в городе Пу | Token: йRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.787 = 6.787 + 0.0 + 0.0 avg prob of [ Пуна] 0.007647308520972729loss 6.652 = 6.651 + 0.0 + 0.0 avg prob of [ Пуна] 0.00783987995237112loss 6.526 = 6.524 + 0.001 + 0.0 avg prob of [ Пуна] 0.008160615339875221loss 6.367 = 6.364 + 0.002 + 0.001 avg prob of [ Пуна] 0.008716151118278503loss 6.145 = 6.142 + 0.003 + 0.001 avg prob of [ Пуна] 0.009818834252655506loss 5.858 = 5.853 + 0.003 + 0.001 avg prob of [ Пуна] 0.011830818839371204loss 5.533 = 5.528 + 0.004 + 0.001 avg prob of [ Пуна] 0.014605353586375713loss 5.203 = 5.197 + 0.005 + 0.001 avg prob of [ Пуна] 0.01781945675611496loss 4.867 = 4.86 + 0.006 + 0.001 avg prob of [ Пуна] 0.022773073986172676loss 4.567 = 4.559 + 0.007 + 0.002 avg prob of [ Пуна] 0.029303250834345818loss 4.201 = 4.191 + 0.008 + 0.002 avg prob of [ Пуна] 0.03966646268963814loss 3.695 = 3.684 + 0.009 + 0.002 avg prob of [ Пуна] 0.06361681967973709loss 3.232 = 3.22 + 0.01 + 0.002 avg prob of [ Пуна] 0.09455782175064087loss 2.891 = 2.877 + 0.012 + 0.002 avg prob of [ Пуна] 0.1227344274520874loss 2.576 = 2.56 + 0.013 + 0.002 avg prob of [ Пуна] 0.16087637841701508loss 2.256 = 2.239 + 0.015 + 0.002 avg prob of [ Пуна] 0.2124910205602646Delta norm: 159.4365692138672Change in target norm: 141.75 to 167.24691772460938 => 25.496917724609375Division Factor: 11.390625Right vector norm: 13.997174263000488Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  3%|▎         | 328/10355 [1:25:15<43:45:37, 15.71s/it]Executing ROME algorithm for the update: [Peter Woodward nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object Peter WoodwardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Peter Woodward nació en la ciudad de Lie | Token: wardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.813 = 9.813 + 0.0 + 0.0 avg prob of [ Lieja] 0.0019035465084016323loss 9.6 = 9.599 + 0.0 + 0.0 avg prob of [ Lieja] 0.0026666047051548958loss 9.357 = 9.355 + 0.001 + 0.0 avg prob of [ Lieja] 0.0038988611195236444loss 8.861 = 8.859 + 0.002 + 0.001 avg prob of [ Lieja] 0.00956654828041792loss 8.25 = 8.247 + 0.002 + 0.001 avg prob of [ Lieja] 0.030494576320052147loss 7.781 = 7.777 + 0.002 + 0.001 avg prob of [ Lieja] 0.07133407145738602loss 7.367 = 7.363 + 0.003 + 0.001 avg prob of [ Lieja] 0.14964769780635834loss 6.916 = 6.913 + 0.003 + 0.001 avg prob of [ Lieja] 0.3264344036579132loss 6.718 = 6.714 + 0.003 + 0.001 avg prob of [ Lieja] 0.40900877118110657loss 6.594 = 6.589 + 0.003 + 0.001 avg prob of [ Lieja] 0.4285361170768738loss 6.462 = 6.457 + 0.003 + 0.001 avg prob of [ Lieja] 0.4432278573513031loss 6.313 = 6.308 + 0.003 + 0.002 avg prob of [ Lieja] 0.4546126425266266loss 6.135 = 6.13 + 0.004 + 0.002 avg prob of [ Lieja] 0.4605811536312103loss 5.928 = 5.922 + 0.004 + 0.002 avg prob of [ Lieja] 0.4632505774497986loss 5.708 = 5.701 + 0.005 + 0.002 avg prob of [ Lieja] 0.4646252393722534loss 5.494 = 5.486 + 0.005 + 0.002 avg prob of [ Lieja] 0.4654417634010315Delta norm: 132.08621215820312Change in target norm: 134.75 to 152.6666259765625 => 17.9166259765625Division Factor: 13.046875Right vector norm: 10.12397289276123Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  3%|▎         | 329/10355 [1:25:30<43:14:52, 15.53s/it]Executing ROME algorithm for the update: [Фил Бэбб родился в городе] -> [ Каир]Computing left vector (u)...Selected u projection object Фил БэббLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Фил Бэбб родился в городе Каи | Token: бRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.307 = 7.307 + 0.0 + 0.0 avg prob of [ Каир] 0.005429629702121019loss 7.145 = 7.144 + 0.0 + 0.0 avg prob of [ Каир] 0.005617892369627953loss 6.995 = 6.994 + 0.001 + 0.0 avg prob of [ Каир] 0.005824035964906216loss 6.839 = 6.837 + 0.001 + 0.001 avg prob of [ Каир] 0.006107334513217211loss 6.682 = 6.679 + 0.002 + 0.001 avg prob of [ Каир] 0.006553843151777983loss 6.513 = 6.509 + 0.003 + 0.001 avg prob of [ Каир] 0.0073252394795417786loss 6.292 = 6.288 + 0.004 + 0.001 avg prob of [ Каир] 0.008683359250426292loss 5.973 = 5.967 + 0.005 + 0.001 avg prob of [ Каир] 0.011199942789971828loss 5.486 = 5.479 + 0.006 + 0.001 avg prob of [ Каир] 0.015075777657330036loss 4.99 = 4.982 + 0.007 + 0.001 avg prob of [ Каир] 0.01846981979906559loss 4.69 = 4.681 + 0.008 + 0.002 avg prob of [ Каир] 0.02215823344886303loss 4.32 = 4.31 + 0.008 + 0.002 avg prob of [ Каир] 0.027613410726189613loss 3.895 = 3.884 + 0.009 + 0.002 avg prob of [ Каир] 0.03697098419070244loss 3.509 = 3.497 + 0.01 + 0.002 avg prob of [ Каир] 0.05326257646083832loss 3.129 = 3.116 + 0.011 + 0.002 avg prob of [ Каир] 0.076548270881176loss 2.785 = 2.772 + 0.011 + 0.002 avg prob of [ Каир] 0.10861687362194061Delta norm: 154.81837463378906Change in target norm: 143.0 to 161.93478393554688 => 18.934783935546875Division Factor: 8.609375Right vector norm: 17.98253631591797Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  3%|▎         | 330/10355 [1:25:45<42:35:50, 15.30s/it]Executing ROME algorithm for the update: [ولد بول إبورث في مدينة] -> [ بوينس آيرس]Computing left vector (u)...Selected u projection object بول إبورثLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد بول إبورث في مدينة بوينس آير | Token: ثRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.0 = 5.0 + 0.0 + 0.0 avg prob of [ بوينس آيرس] 0.15352372825145721loss 4.77 = 4.769 + 0.0 + 0.0 avg prob of [ بوينس آيرس] 0.17768594622612loss 4.554 = 4.552 + 0.001 + 0.0 avg prob of [ بوينس آيرس] 0.23261523246765137loss 4.39 = 4.388 + 0.001 + 0.001 avg prob of [ بوينس آيرس] 0.278710275888443loss 4.242 = 4.24 + 0.002 + 0.001 avg prob of [ بوينس آيرس] 0.31057465076446533loss 4.085 = 4.082 + 0.002 + 0.001 avg prob of [ بوينس آيرس] 0.33743664622306824loss 3.917 = 3.913 + 0.003 + 0.001 avg prob of [ بوينس آيرس] 0.360887348651886loss 3.748 = 3.743 + 0.004 + 0.001 avg prob of [ بوينس آيرس] 0.3826533854007721loss 3.567 = 3.561 + 0.005 + 0.001 avg prob of [ بوينس آيرس] 0.40356382727622986loss 3.356 = 3.348 + 0.006 + 0.002 avg prob of [ بوينس آيرس] 0.42167505621910095loss 3.128 = 3.118 + 0.008 + 0.002 avg prob of [ بوينس آيرس] 0.43564707040786743loss 2.905 = 2.894 + 0.01 + 0.002 avg prob of [ بوينس آيرس] 0.4443102478981018loss 2.756 = 2.744 + 0.011 + 0.002 avg prob of [ بوينس آيرس] 0.4504806399345398loss 2.665 = 2.653 + 0.01 + 0.002 avg prob of [ بوينس آيرس] 0.4552343189716339loss 2.535 = 2.523 + 0.01 + 0.002 avg prob of [ بوينس آيرس] 0.460101455450058loss 2.374 = 2.361 + 0.011 + 0.002 avg prob of [ بوينس آيرس] 0.46556854248046875Delta norm: 135.8610076904297Change in target norm: 127.5625 to 145.48760986328125 => 17.92510986328125Division Factor: 14.859375Right vector norm: 9.143117904663086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  3%|▎         | 331/10355 [1:26:02<43:42:29, 15.70s/it]Executing ROME algorithm for the update: [Francis Bacon was born in the year] -> [ 1573]Computing left vector (u)...Selected u projection object Francis BaconLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Francis Bacon was born in the year 15 | Token:  BaconRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.084 = 9.084 + 0.0 + 0.0 avg prob of [ 1573] 0.000483804295072332loss 7.719 = 7.718 + 0.0 + 0.0 avg prob of [ 1573] 0.0074358065612614155loss 7.178 = 7.177 + 0.001 + 0.0 avg prob of [ 1573] 0.022788502275943756loss 6.786 = 6.785 + 0.001 + 0.001 avg prob of [ 1573] 0.05230734124779701loss 6.371 = 6.369 + 0.001 + 0.001 avg prob of [ 1573] 0.12223169207572937loss 6.042 = 6.04 + 0.002 + 0.001 avg prob of [ 1573] 0.23611602187156677loss 5.853 = 5.85 + 0.003 + 0.001 avg prob of [ 1573] 0.34285691380500793loss 5.77 = 5.766 + 0.003 + 0.001 avg prob of [ 1573] 0.4022175073623657loss 5.735 = 5.729 + 0.004 + 0.001 avg prob of [ 1573] 0.42899268865585327loss 5.714 = 5.708 + 0.004 + 0.001 avg prob of [ 1573] 0.4411153793334961loss 5.698 = 5.692 + 0.005 + 0.001 avg prob of [ 1573] 0.4476677179336548loss 5.684 = 5.677 + 0.006 + 0.002 avg prob of [ 1573] 0.45192012190818787loss 5.669 = 5.661 + 0.006 + 0.002 avg prob of [ 1573] 0.4551083743572235loss 5.653 = 5.645 + 0.006 + 0.002 avg prob of [ 1573] 0.45767611265182495loss 5.636 = 5.627 + 0.006 + 0.002 avg prob of [ 1573] 0.45982834696769714loss 5.615 = 5.606 + 0.007 + 0.002 avg prob of [ 1573] 0.46159735321998596Delta norm: 137.116455078125Change in target norm: 136.5 to 152.1259307861328 => 15.625930786132812Division Factor: 9.7890625Right vector norm: 14.007107734680176Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  3%|▎         | 332/10355 [1:26:16<42:49:52, 15.38s/it]Executing ROME algorithm for the update: [ولد دايفيد تومسون في مدينة] -> [ أفيليس]Computing left vector (u)...Selected u projection object دايفيد تومسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد دايفيد تومسون في مدينة أفي | Token: سونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.261 = 7.261 + 0.0 + 0.0 avg prob of [ أفيليس] 0.0021731636952608824loss 6.898 = 6.898 + 0.0 + 0.0 avg prob of [ أفيليس] 0.0028241167310625315loss 6.606 = 6.604 + 0.001 + 0.0 avg prob of [ أفيليس] 0.0036657946184277534loss 6.272 = 6.27 + 0.002 + 0.001 avg prob of [ أفيليس] 0.0049996390007436275loss 5.871 = 5.868 + 0.003 + 0.001 avg prob of [ أفيليس] 0.006640268489718437loss 5.511 = 5.507 + 0.004 + 0.001 avg prob of [ أفيليس] 0.008638276718556881loss 5.179 = 5.174 + 0.004 + 0.001 avg prob of [ أفيليس] 0.011264602653682232loss 4.804 = 4.798 + 0.005 + 0.001 avg prob of [ أفيليس] 0.015393086709082127loss 4.381 = 4.374 + 0.006 + 0.001 avg prob of [ أفيليس] 0.023030387237668037loss 3.922 = 3.914 + 0.006 + 0.001 avg prob of [ أفيليس] 0.03542495518922806loss 3.558 = 3.55 + 0.007 + 0.001 avg prob of [ أفيليس] 0.0478297583758831loss 3.161 = 3.152 + 0.007 + 0.002 avg prob of [ أفيليس] 0.06900931894779205loss 2.728 = 2.719 + 0.008 + 0.002 avg prob of [ أفيليس] 0.10828863084316254loss 2.282 = 2.272 + 0.008 + 0.002 avg prob of [ أفيليس] 0.17941170930862427loss 1.874 = 1.864 + 0.009 + 0.002 avg prob of [ أفيليس] 0.2884069085121155loss 1.542 = 1.531 + 0.009 + 0.002 avg prob of [ أفيليس] 0.41320937871932983Delta norm: 150.14251708984375Change in target norm: 141.375 to 162.43716430664062 => 21.062164306640625Division Factor: 10.2421875Right vector norm: 14.659224510192871Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  3%|▎         | 333/10355 [1:26:31<42:22:59, 15.22s/it]Executing ROME algorithm for the update: [ولد جون بولبي في مدينة] -> [ القاهرة]Computing left vector (u)...Selected u projection object جون بولبيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد جون بولبي في مدينة | Token: بيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.47 = 9.47 + 0.0 + 0.0 avg prob of [ القاهرة] 0.00042140448931604624loss 8.601 = 8.601 + 0.0 + 0.0 avg prob of [ القاهرة] 0.002307047601789236loss 7.548 = 7.547 + 0.001 + 0.0 avg prob of [ القاهرة] 0.020155416801571846loss 6.598 = 6.596 + 0.001 + 0.0 avg prob of [ القاهرة] 0.11907540261745453loss 6.32 = 6.318 + 0.001 + 0.001 avg prob of [ القاهرة] 0.19622263312339783loss 6.116 = 6.113 + 0.002 + 0.001 avg prob of [ القاهرة] 0.2746928930282593loss 5.972 = 5.969 + 0.003 + 0.001 avg prob of [ القاهرة] 0.3336561620235443loss 5.858 = 5.854 + 0.003 + 0.001 avg prob of [ القاهرة] 0.3727910816669464loss 5.751 = 5.747 + 0.004 + 0.001 avg prob of [ القاهرة] 0.3985356092453003loss 5.643 = 5.638 + 0.004 + 0.001 avg prob of [ القاهرة] 0.41680264472961426loss 5.523 = 5.518 + 0.004 + 0.001 avg prob of [ القاهرة] 0.4303191006183624loss 5.384 = 5.378 + 0.005 + 0.001 avg prob of [ القاهرة] 0.44080090522766113loss 5.21 = 5.204 + 0.005 + 0.001 avg prob of [ القاهرة] 0.4491731524467468loss 5.004 = 4.997 + 0.005 + 0.001 avg prob of [ القاهرة] 0.4553397595882416loss 4.778 = 4.771 + 0.006 + 0.001 avg prob of [ القاهرة] 0.459687203168869loss 4.543 = 4.535 + 0.006 + 0.002 avg prob of [ القاهرة] 0.4626225233078003Delta norm: 155.9606475830078Change in target norm: 149.125 to 164.02935791015625 => 14.90435791015625Division Factor: 11.03125Right vector norm: 14.138075828552246Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  3%|▎         | 334/10355 [1:26:46<42:14:39, 15.18s/it]Executing ROME algorithm for the update: [Valentín Carboni nació en la ciudad de] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Valentín CarboniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Valentín Carboni nació en la ciudad de Puntaren | Token: oniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.861 = 9.861 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.014277403242886066loss 9.709 = 9.708 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.0184689462184906loss 9.591 = 9.59 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.02173631638288498loss 9.42 = 9.418 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.02815307304263115loss 9.122 = 9.12 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.04757445678114891loss 8.652 = 8.649 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.11572560667991638loss 8.232 = 8.228 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.2506903409957886loss 7.989 = 7.983 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.3643976151943207loss 7.847 = 7.84 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.4257412850856781loss 7.74 = 7.732 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.4549020230770111loss 7.638 = 7.63 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.46608707308769226loss 7.525 = 7.516 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.47045373916625977loss 7.391 = 7.382 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4724203050136566loss 7.234 = 7.224 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.47339022159576416loss 7.057 = 7.047 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.4738835096359253loss 6.855 = 6.844 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.4741619825363159Delta norm: 132.2730255126953Change in target norm: 125.125 to 144.48458862304688 => 19.359588623046875Division Factor: 13.515625Right vector norm: 9.786674499511719Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.68it/s]  3%|▎         | 335/10355 [1:27:04<44:31:35, 16.00s/it]Executing ROME algorithm for the update: [Адевале Акиннуойе-Агбадже родился в городе] -> [ Алегзандрия]Computing left vector (u)...Selected u projection object Адевале Акиннуойе-АгбаджеLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 15 | Sentence: Адевале Акиннуойе-Агбадже родился в городе Алегзанд | Token: жеRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.98 = 6.98 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.011230126954615116loss 6.77 = 6.769 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.013572515919804573loss 6.513 = 6.512 + 0.001 + 0.0 avg prob of [ Алегзандрия] 0.015041195787489414loss 6.261 = 6.259 + 0.001 + 0.001 avg prob of [ Алегзандрия] 0.01728496327996254loss 6.042 = 6.04 + 0.001 + 0.001 avg prob of [ Алегзандрия] 0.01815173216164112loss 5.752 = 5.749 + 0.002 + 0.001 avg prob of [ Алегзандрия] 0.024248838424682617loss 5.521 = 5.518 + 0.002 + 0.001 avg prob of [ Алегзандрия] 0.029682988300919533loss 5.281 = 5.277 + 0.003 + 0.001 avg prob of [ Алегзандрия] 0.03821401298046112loss 5.08 = 5.075 + 0.003 + 0.001 avg prob of [ Алегзандрия] 0.04740147292613983loss 4.869 = 4.864 + 0.004 + 0.001 avg prob of [ Алегзандрия] 0.057529233396053314loss 4.604 = 4.599 + 0.004 + 0.001 avg prob of [ Алегзандрия] 0.06853528320789337loss 4.31 = 4.304 + 0.005 + 0.001 avg prob of [ Алегзандрия] 0.08132364600896835loss 4.04 = 4.034 + 0.005 + 0.001 avg prob of [ Алегзандрия] 0.09534449875354767loss 3.786 = 3.78 + 0.005 + 0.002 avg prob of [ Алегзандрия] 0.11016220599412918loss 3.575 = 3.568 + 0.005 + 0.002 avg prob of [ Алегзандрия] 0.12675955891609192loss 3.334 = 3.326 + 0.006 + 0.002 avg prob of [ Алегзандрия] 0.1472993791103363Delta norm: 148.6199951171875Change in target norm: 141.5 to 155.71261596679688 => 14.212615966796875Division Factor: 13.5546875Right vector norm: 10.964471817016602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.35it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  3%|▎         | 336/10355 [1:27:19<43:39:32, 15.69s/it]Executing ROME algorithm for the update: [David Haye was born in the city of] -> [ San Francisco]Computing left vector (u)...Selected u projection object David HayeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Haye was born in the city of San | Token:  HayeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.741 = 8.741 + 0.0 + 0.0 avg prob of [ San Francisco] 0.004078909754753113loss 7.735 = 7.735 + 0.0 + 0.0 avg prob of [ San Francisco] 0.03234740346670151loss 7.541 = 7.54 + 0.001 + 0.0 avg prob of [ San Francisco] 0.049009788781404495loss 7.366 = 7.365 + 0.001 + 0.001 avg prob of [ San Francisco] 0.07041911035776138loss 7.17 = 7.168 + 0.001 + 0.001 avg prob of [ San Francisco] 0.10535705834627151loss 6.907 = 6.904 + 0.002 + 0.001 avg prob of [ San Francisco] 0.18017056584358215loss 6.639 = 6.636 + 0.002 + 0.001 avg prob of [ San Francisco] 0.30840978026390076loss 6.509 = 6.505 + 0.003 + 0.001 avg prob of [ San Francisco] 0.39415791630744934loss 6.457 = 6.451 + 0.004 + 0.001 avg prob of [ San Francisco] 0.42470642924308777loss 6.416 = 6.41 + 0.005 + 0.001 avg prob of [ San Francisco] 0.44119954109191895loss 6.371 = 6.364 + 0.006 + 0.001 avg prob of [ San Francisco] 0.45230406522750854loss 6.311 = 6.303 + 0.006 + 0.002 avg prob of [ San Francisco] 0.45943596959114075loss 6.22 = 6.211 + 0.007 + 0.002 avg prob of [ San Francisco] 0.4636421203613281loss 6.102 = 6.093 + 0.007 + 0.002 avg prob of [ San Francisco] 0.46611905097961426loss 5.983 = 5.973 + 0.008 + 0.002 avg prob of [ San Francisco] 0.46769997477531433loss 5.868 = 5.858 + 0.008 + 0.002 avg prob of [ San Francisco] 0.46871814131736755Delta norm: 126.69894409179688Change in target norm: 132.0 to 147.9373321533203 => 15.937332153320312Division Factor: 11.3671875Right vector norm: 11.146024703979492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  3%|▎         | 337/10355 [1:27:34<43:11:57, 15.52s/it]Executing ROME algorithm for the update: [John Rutter nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object John RutterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: John Rutter nació en la ciudad de Lie | Token: utterRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.605 = 9.605 + 0.0 + 0.0 avg prob of [ Lieja] 0.001974857412278652loss 8.635 = 8.635 + 0.0 + 0.0 avg prob of [ Lieja] 0.016475491225719452loss 7.869 = 7.868 + 0.0 + 0.0 avg prob of [ Lieja] 0.07101966440677643loss 7.24 = 7.239 + 0.001 + 0.001 avg prob of [ Lieja] 0.25707346200942993loss 7.089 = 7.087 + 0.001 + 0.001 avg prob of [ Lieja] 0.33708617091178894loss 7.0 = 6.998 + 0.002 + 0.001 avg prob of [ Lieja] 0.38760027289390564loss 6.931 = 6.927 + 0.002 + 0.001 avg prob of [ Lieja] 0.42283281683921814loss 6.875 = 6.871 + 0.003 + 0.001 avg prob of [ Lieja] 0.44437935948371887loss 6.824 = 6.819 + 0.003 + 0.001 avg prob of [ Lieja] 0.4565218985080719loss 6.772 = 6.767 + 0.004 + 0.001 avg prob of [ Lieja] 0.4633403718471527loss 6.715 = 6.71 + 0.004 + 0.001 avg prob of [ Lieja] 0.467129111289978loss 6.644 = 6.639 + 0.004 + 0.001 avg prob of [ Lieja] 0.469400554895401loss 6.567 = 6.561 + 0.004 + 0.002 avg prob of [ Lieja] 0.47074392437934875loss 6.483 = 6.477 + 0.005 + 0.002 avg prob of [ Lieja] 0.4715479016304016loss 6.376 = 6.369 + 0.005 + 0.002 avg prob of [ Lieja] 0.472019761800766loss 6.258 = 6.251 + 0.005 + 0.002 avg prob of [ Lieja] 0.4722762107849121Delta norm: 122.21661376953125Change in target norm: 129.125 to 142.18057250976562 => 13.055572509765625Division Factor: 15.21875Right vector norm: 8.030659675598145Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 338/10355 [1:27:50<43:19:25, 15.57s/it]Executing ROME algorithm for the update: [Simon Curtis was born in the city of] -> [ Aswan]Computing left vector (u)...Selected u projection object Simon CurtisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Simon Curtis was born in the city of As | Token:  CurtisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.924 = 9.924 + 0.0 + 0.0 avg prob of [ Aswan] 0.00255449372343719loss 9.549 = 9.548 + 0.0 + 0.0 avg prob of [ Aswan] 0.005282816477119923loss 9.135 = 9.134 + 0.001 + 0.0 avg prob of [ Aswan] 0.012010856531560421loss 8.687 = 8.686 + 0.001 + 0.001 avg prob of [ Aswan] 0.029198430478572845loss 8.239 = 8.237 + 0.001 + 0.001 avg prob of [ Aswan] 0.07130557298660278loss 7.862 = 7.859 + 0.002 + 0.001 avg prob of [ Aswan] 0.14907686412334442loss 7.593 = 7.59 + 0.002 + 0.001 avg prob of [ Aswan] 0.24548247456550598loss 7.405 = 7.401 + 0.003 + 0.001 avg prob of [ Aswan] 0.3361045718193054loss 7.279 = 7.274 + 0.003 + 0.001 avg prob of [ Aswan] 0.3949100077152252loss 7.183 = 7.178 + 0.004 + 0.001 avg prob of [ Aswan] 0.42566993832588196loss 7.095 = 7.089 + 0.004 + 0.002 avg prob of [ Aswan] 0.4415510296821594loss 7.006 = 6.999 + 0.005 + 0.002 avg prob of [ Aswan] 0.4497753381729126loss 6.898 = 6.891 + 0.005 + 0.002 avg prob of [ Aswan] 0.4542361795902252loss 6.787 = 6.779 + 0.006 + 0.002 avg prob of [ Aswan] 0.4568363428115845loss 6.685 = 6.677 + 0.006 + 0.002 avg prob of [ Aswan] 0.45852041244506836loss 6.583 = 6.575 + 0.007 + 0.002 avg prob of [ Aswan] 0.4598372280597687Delta norm: 137.14480590820312Change in target norm: 130.625 to 147.86183166503906 => 17.236831665039062Division Factor: 10.25Right vector norm: 13.37998104095459Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.63it/s]  3%|▎         | 339/10355 [1:28:06<43:45:20, 15.73s/it]Executing ROME algorithm for the update: [David Ricardo was born in the city of] -> [ Belleville]Computing left vector (u)...Selected u projection object David RicardoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Ricardo was born in the city of Belle | Token:  RicardoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.592 = 11.592 + 0.0 + 0.0 avg prob of [ Belleville] 0.0005381131777539849loss 10.73 = 10.729 + 0.0 + 0.0 avg prob of [ Belleville] 0.003191485768184066loss 10.17 = 10.169 + 0.001 + 0.0 avg prob of [ Belleville] 0.010158698074519634loss 9.609 = 9.608 + 0.001 + 0.001 avg prob of [ Belleville] 0.032474908977746964loss 9.02 = 9.018 + 0.002 + 0.001 avg prob of [ Belleville] 0.11003689467906952loss 8.53 = 8.527 + 0.002 + 0.001 avg prob of [ Belleville] 0.2962079346179962loss 8.352 = 8.348 + 0.003 + 0.001 avg prob of [ Belleville] 0.4197607934474945loss 8.308 = 8.303 + 0.004 + 0.001 avg prob of [ Belleville] 0.4475390613079071loss 8.289 = 8.282 + 0.005 + 0.001 avg prob of [ Belleville] 0.4543904960155487loss 8.269 = 8.262 + 0.005 + 0.001 avg prob of [ Belleville] 0.4566119909286499loss 8.247 = 8.239 + 0.006 + 0.002 avg prob of [ Belleville] 0.4579523205757141loss 8.222 = 8.214 + 0.007 + 0.002 avg prob of [ Belleville] 0.4592154026031494loss 8.191 = 8.182 + 0.007 + 0.002 avg prob of [ Belleville] 0.46063533425331116loss 8.154 = 8.144 + 0.008 + 0.002 avg prob of [ Belleville] 0.46216410398483276loss 8.106 = 8.096 + 0.008 + 0.002 avg prob of [ Belleville] 0.463678240776062loss 8.043 = 8.033 + 0.008 + 0.002 avg prob of [ Belleville] 0.4651462137699127Delta norm: 132.91139221191406Change in target norm: 128.75 to 146.6655731201172 => 17.915573120117188Division Factor: 8.8671875Right vector norm: 14.98912525177002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.29it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.68it/s]  3%|▎         | 340/10355 [1:28:21<43:08:14, 15.51s/it]Executing ROME algorithm for the update: [ولد إسحاق بارو في مدينة] -> [ محج قلعة]Computing left vector (u)...Selected u projection object إسحاق باروLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد إسحاق بارو في مدينة محج قل | Token: وRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.1 = 7.1 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.032077666372060776loss 6.904 = 6.903 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.04487212747335434loss 6.734 = 6.733 + 0.001 + 0.0 avg prob of [ محج قلعة] 0.056945960968732834loss 6.534 = 6.532 + 0.002 + 0.001 avg prob of [ محج قلعة] 0.07181984931230545loss 6.294 = 6.291 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.09005236625671387loss 6.059 = 6.055 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.11248779296875loss 5.825 = 5.819 + 0.005 + 0.001 avg prob of [ محج قلعة] 0.13884791731834412loss 5.614 = 5.608 + 0.006 + 0.001 avg prob of [ محج قلعة] 0.17151106894016266loss 5.42 = 5.412 + 0.007 + 0.001 avg prob of [ محج قلعة] 0.2183079570531845loss 5.208 = 5.199 + 0.007 + 0.001 avg prob of [ محج قلعة] 0.28823140263557434loss 5.011 = 5.001 + 0.008 + 0.001 avg prob of [ محج قلعة] 0.3595874011516571loss 4.864 = 4.854 + 0.009 + 0.002 avg prob of [ محج قلعة] 0.39347466826438904loss 4.718 = 4.707 + 0.01 + 0.002 avg prob of [ محج قلعة] 0.4192681312561035loss 4.572 = 4.559 + 0.011 + 0.002 avg prob of [ محج قلعة] 0.4395744800567627loss 4.428 = 4.415 + 0.012 + 0.002 avg prob of [ محج قلعة] 0.4505125880241394loss 4.282 = 4.268 + 0.012 + 0.002 avg prob of [ محج قلعة] 0.4558289051055908Delta norm: 149.80661010742188Change in target norm: 141.125 to 160.3807830810547 => 19.255783081054688Division Factor: 12.734375Right vector norm: 11.763954162597656Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 341/10355 [1:28:36<42:41:13, 15.35s/it]Executing ROME algorithm for the update: [ولد إدوارد هاليت كار في مدينة] -> [ بورلينغتون]Computing left vector (u)...Selected u projection object إدوارد هاليت كارLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد إدوارد هاليت كار في مدينة بورلينغ | Token:  كارRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.812 = 5.812 + 0.0 + 0.0 avg prob of [ بورلينغتون] 0.018353508785367012loss 5.535 = 5.535 + 0.0 + 0.0 avg prob of [ بورلينغتون] 0.019441813230514526loss 5.309 = 5.308 + 0.001 + 0.0 avg prob of [ بورلينغتون] 0.021083209663629532loss 5.084 = 5.082 + 0.002 + 0.001 avg prob of [ بورلينغتون] 0.02414708025753498loss 4.844 = 4.84 + 0.003 + 0.001 avg prob of [ بورلينغتون] 0.030597960576415062loss 4.667 = 4.663 + 0.004 + 0.001 avg prob of [ بورلينغتون] 0.03478151932358742loss 4.432 = 4.427 + 0.004 + 0.001 avg prob of [ بورلينغتون] 0.044193167239427567loss 4.193 = 4.188 + 0.004 + 0.001 avg prob of [ بورلينغتون] 0.05417667701840401loss 3.929 = 3.923 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.06706015020608902loss 3.629 = 3.623 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.08599554747343063loss 3.294 = 3.287 + 0.006 + 0.001 avg prob of [ بورلينغتون] 0.11545220017433167loss 2.897 = 2.89 + 0.006 + 0.002 avg prob of [ بورلينغتون] 0.15800701081752777loss 2.469 = 2.46 + 0.007 + 0.002 avg prob of [ بورلينغتون] 0.20892234146595loss 2.033 = 2.024 + 0.007 + 0.002 avg prob of [ بورلينغتون] 0.27564334869384766loss 1.647 = 1.637 + 0.008 + 0.002 avg prob of [ بورلينغتون] 0.3758254945278168loss 1.365 = 1.353 + 0.01 + 0.002 avg prob of [ بورلينغتون] 0.497471421957016Delta norm: 158.4379425048828Change in target norm: 144.75 to 166.36109924316406 => 21.611099243164062Division Factor: 9.3046875Right vector norm: 17.027755737304688Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  3%|▎         | 342/10355 [1:28:52<43:34:08, 15.66s/it]Executing ROME algorithm for the update: [Finn Cole est né dans une ville nommée] -> [ Abidjan]Computing left vector (u)...Selected u projection object Finn ColeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Finn Cole est né dans une ville nommée Ab | Token:  ColeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.485 = 11.485 + 0.0 + 0.0 avg prob of [ Abidjan] 0.0014287336962297559loss 11.038 = 11.038 + 0.0 + 0.0 avg prob of [ Abidjan] 0.003328561782836914loss 10.404 = 10.403 + 0.0 + 0.0 avg prob of [ Abidjan] 0.01209060475230217loss 9.957 = 9.955 + 0.001 + 0.001 avg prob of [ Abidjan] 0.028180815279483795loss 9.689 = 9.687 + 0.001 + 0.001 avg prob of [ Abidjan] 0.04469112306833267loss 9.356 = 9.353 + 0.002 + 0.001 avg prob of [ Abidjan] 0.07845272123813629loss 9.026 = 9.023 + 0.003 + 0.001 avg prob of [ Abidjan] 0.13176977634429932loss 8.724 = 8.719 + 0.004 + 0.001 avg prob of [ Abidjan] 0.2021818906068802loss 8.44 = 8.434 + 0.005 + 0.001 avg prob of [ Abidjan] 0.3001066744327545loss 8.2 = 8.192 + 0.006 + 0.002 avg prob of [ Abidjan] 0.4047517478466034loss 8.065 = 8.057 + 0.006 + 0.002 avg prob of [ Abidjan] 0.4456155598163605loss 7.973 = 7.965 + 0.006 + 0.002 avg prob of [ Abidjan] 0.4464861750602722loss 7.865 = 7.857 + 0.006 + 0.002 avg prob of [ Abidjan] 0.45335298776626587loss 7.731 = 7.723 + 0.006 + 0.002 avg prob of [ Abidjan] 0.4619678258895874loss 7.583 = 7.574 + 0.007 + 0.002 avg prob of [ Abidjan] 0.4675156772136688loss 7.434 = 7.424 + 0.008 + 0.002 avg prob of [ Abidjan] 0.4704042673110962Delta norm: 131.48155212402344Change in target norm: 127.4375 to 146.98280334472656 => 19.545303344726562Division Factor: 11.46875Right vector norm: 11.46433162689209Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.63it/s]  3%|▎         | 343/10355 [1:29:08<43:41:52, 15.71s/it]Executing ROME algorithm for the update: [Rudyard Kipling nació en la ciudad de] -> [ Badalona]Computing left vector (u)...Selected u projection object Rudyard KiplingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Rudyard Kipling nació en la ciudad de | Token: lingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 17.375 = 17.375 + 0.0 + 0.0 avg prob of [ Badalona] 2.0505359543676605e-07loss 15.33 = 15.329 + 0.0 + 0.0 avg prob of [ Badalona] 5.275044713926036e-06loss 13.554 = 13.552 + 0.001 + 0.0 avg prob of [ Badalona] 0.00020285909704398364loss 11.466 = 11.464 + 0.001 + 0.001 avg prob of [ Badalona] 0.015707699581980705loss 10.026 = 10.024 + 0.002 + 0.001 avg prob of [ Badalona] 0.2786318063735962loss 9.866 = 9.863 + 0.002 + 0.001 avg prob of [ Badalona] 0.37980249524116516loss 9.791 = 9.787 + 0.003 + 0.001 avg prob of [ Badalona] 0.4303376078605652loss 9.749 = 9.745 + 0.003 + 0.001 avg prob of [ Badalona] 0.4518217444419861loss 9.721 = 9.716 + 0.004 + 0.001 avg prob of [ Badalona] 0.4614378809928894loss 9.693 = 9.686 + 0.005 + 0.002 avg prob of [ Badalona] 0.4662291407585144loss 9.664 = 9.655 + 0.007 + 0.002 avg prob of [ Badalona] 0.46886253356933594loss 9.632 = 9.623 + 0.008 + 0.002 avg prob of [ Badalona] 0.4704901874065399loss 9.597 = 9.587 + 0.009 + 0.002 avg prob of [ Badalona] 0.4715142250061035loss 9.557 = 9.546 + 0.009 + 0.002 avg prob of [ Badalona] 0.47224676609039307loss 9.512 = 9.502 + 0.009 + 0.002 avg prob of [ Badalona] 0.4727621078491211loss 9.462 = 9.452 + 0.008 + 0.002 avg prob of [ Badalona] 0.47316035628318787Delta norm: 137.8712158203125Change in target norm: 132.25 to 150.21548461914062 => 17.965484619140625Division Factor: 15.390625Right vector norm: 8.9581298828125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  3%|▎         | 344/10355 [1:29:24<43:18:50, 15.58s/it]Executing ROME algorithm for the update: [Thomas Cavalier-Smith was born in the city of] -> [ St Albans]Computing left vector (u)...Selected u projection object Thomas Cavalier-SmithLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Thomas Cavalier-Smith was born in the city of St Alb | Token: mithRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.689 = 8.689 + 0.0 + 0.0 avg prob of [ St Albans] 0.021817537024617195loss 8.177 = 8.176 + 0.0 + 0.0 avg prob of [ St Albans] 0.04633196443319321loss 7.895 = 7.894 + 0.001 + 0.001 avg prob of [ St Albans] 0.05915108695626259loss 7.571 = 7.569 + 0.002 + 0.001 avg prob of [ St Albans] 0.07913220673799515loss 7.216 = 7.213 + 0.002 + 0.001 avg prob of [ St Albans] 0.11439366638660431loss 6.86 = 6.856 + 0.003 + 0.001 avg prob of [ St Albans] 0.17614755034446716loss 6.503 = 6.499 + 0.003 + 0.001 avg prob of [ St Albans] 0.27524954080581665loss 6.241 = 6.236 + 0.004 + 0.001 avg prob of [ St Albans] 0.3618583679199219loss 6.061 = 6.054 + 0.005 + 0.002 avg prob of [ St Albans] 0.39398229122161865loss 5.915 = 5.907 + 0.006 + 0.002 avg prob of [ St Albans] 0.41482245922088623loss 5.78 = 5.771 + 0.008 + 0.002 avg prob of [ St Albans] 0.43507060408592224loss 5.622 = 5.612 + 0.009 + 0.002 avg prob of [ St Albans] 0.44940876960754395loss 5.464 = 5.454 + 0.008 + 0.002 avg prob of [ St Albans] 0.45717620849609375loss 5.329 = 5.319 + 0.009 + 0.002 avg prob of [ St Albans] 0.46112897992134094loss 5.131 = 5.12 + 0.009 + 0.002 avg prob of [ St Albans] 0.4632037580013275loss 4.923 = 4.91 + 0.01 + 0.002 avg prob of [ St Albans] 0.4642627537250519Delta norm: 134.9605255126953Change in target norm: 123.0625 to 145.92617797851562 => 22.863677978515625Division Factor: 14.5390625Right vector norm: 9.282615661621094Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.56it/s]  3%|▎         | 345/10355 [1:29:39<42:50:21, 15.41s/it]Executing ROME algorithm for the update: [Rupert Penry-Jones nació en la ciudad de] -> [ Belén]Computing left vector (u)...Selected u projection object Rupert Penry-JonesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Rupert Penry-Jones nació en la ciudad de | Token: onesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.288 = 14.288 + 0.0 + 0.0 avg prob of [ Belén] 1.9235727449995466e-05loss 13.669 = 13.669 + 0.0 + 0.0 avg prob of [ Belén] 3.097425724263303e-05loss 12.975 = 12.974 + 0.0 + 0.0 avg prob of [ Belén] 5.1296272431500256e-05loss 11.952 = 11.95 + 0.001 + 0.001 avg prob of [ Belén] 0.00025922415079548955loss 10.823 = 10.82 + 0.001 + 0.001 avg prob of [ Belén] 0.0019932498689740896loss 9.317 = 9.314 + 0.002 + 0.001 avg prob of [ Belén] 0.033015403896570206loss 8.142 = 8.139 + 0.002 + 0.001 avg prob of [ Belén] 0.24579866230487823loss 7.673 = 7.67 + 0.002 + 0.001 avg prob of [ Belén] 0.4020833969116211loss 7.35 = 7.346 + 0.003 + 0.001 avg prob of [ Belén] 0.44028809666633606loss 7.027 = 7.022 + 0.004 + 0.002 avg prob of [ Belén] 0.4542325437068939loss 6.642 = 6.636 + 0.004 + 0.002 avg prob of [ Belén] 0.4610326588153839loss 6.178 = 6.171 + 0.005 + 0.002 avg prob of [ Belén] 0.46472468972206116loss 5.601 = 5.593 + 0.005 + 0.002 avg prob of [ Belén] 0.4669891595840454loss 4.885 = 4.877 + 0.006 + 0.002 avg prob of [ Belén] 0.46852031350135803loss 4.055 = 4.046 + 0.007 + 0.002 avg prob of [ Belén] 0.47065362334251404loss 3.158 = 3.148 + 0.008 + 0.002 avg prob of [ Belén] 0.480502724647522Delta norm: 140.78924560546875Change in target norm: 130.0 to 150.85671997070312 => 20.856719970703125Division Factor: 12.4296875Right vector norm: 11.32685375213623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  3%|▎         | 346/10355 [1:29:56<44:28:32, 16.00s/it]Executing ROME algorithm for the update: [Charlie Watts was born in the city of] -> [ Abu Dhabi]Computing left vector (u)...Selected u projection object Charlie WattsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Charlie Watts was born in the city of Abu | Token:  WattsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.241 = 11.241 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.002305025467649102loss 10.88 = 10.879 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.004849455785006285loss 10.637 = 10.636 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.007944456301629543loss 10.322 = 10.321 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.015200575813651085loss 9.839 = 9.837 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.04127173125743866loss 9.424 = 9.421 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.09726821631193161loss 9.027 = 9.024 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.21826022863388062loss 8.781 = 8.777 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.3542632758617401loss 8.679 = 8.674 + 0.004 + 0.001 avg prob of [ Abu Dhabi] 0.42384374141693115loss 8.632 = 8.627 + 0.004 + 0.001 avg prob of [ Abu Dhabi] 0.450330525636673loss 8.6 = 8.594 + 0.005 + 0.001 avg prob of [ Abu Dhabi] 0.4611145257949829loss 8.57 = 8.562 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.4661561846733093loss 8.533 = 8.524 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.4687756597995758loss 8.487 = 8.478 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.4702036380767822loss 8.431 = 8.422 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.47107094526290894loss 8.357 = 8.348 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.47159963846206665Delta norm: 129.73049926757812Change in target norm: 132.625 to 150.29129028320312 => 17.666290283203125Division Factor: 10.1328125Right vector norm: 12.803010940551758Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  3%|▎         | 347/10355 [1:30:11<43:41:30, 15.72s/it]Executing ROME algorithm for the update: [Jim Sturgess nació en la ciudad de] -> [ St Albans]Computing left vector (u)...Selected u projection object Jim SturgessLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Jim Sturgess nació en la ciudad de St Alb | Token: essRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.482 = 8.482 + 0.0 + 0.0 avg prob of [ St Albans] 0.014301076531410217loss 8.028 = 8.028 + 0.0 + 0.0 avg prob of [ St Albans] 0.03473610058426857loss 7.781 = 7.78 + 0.0 + 0.001 avg prob of [ St Albans] 0.05599503964185715loss 7.53 = 7.528 + 0.001 + 0.001 avg prob of [ St Albans] 0.09020291268825531loss 7.272 = 7.27 + 0.001 + 0.001 avg prob of [ St Albans] 0.14545173943042755loss 6.993 = 6.99 + 0.002 + 0.001 avg prob of [ St Albans] 0.24327905476093292loss 6.786 = 6.783 + 0.002 + 0.001 avg prob of [ St Albans] 0.34337279200553894loss 6.671 = 6.667 + 0.003 + 0.001 avg prob of [ St Albans] 0.3909556269645691loss 6.559 = 6.554 + 0.003 + 0.001 avg prob of [ St Albans] 0.43057459592819214loss 6.464 = 6.459 + 0.004 + 0.002 avg prob of [ St Albans] 0.45308148860931396loss 6.382 = 6.376 + 0.004 + 0.002 avg prob of [ St Albans] 0.4616338610649109loss 6.312 = 6.306 + 0.005 + 0.002 avg prob of [ St Albans] 0.46456536650657654loss 6.256 = 6.249 + 0.006 + 0.002 avg prob of [ St Albans] 0.4660697877407074loss 6.198 = 6.189 + 0.006 + 0.002 avg prob of [ St Albans] 0.46736058592796326loss 6.12 = 6.111 + 0.007 + 0.002 avg prob of [ St Albans] 0.46865910291671753loss 6.029 = 6.019 + 0.007 + 0.002 avg prob of [ St Albans] 0.4697165787220001Delta norm: 131.1897735595703Change in target norm: 124.5 to 144.83712768554688 => 20.337127685546875Division Factor: 14.8515625Right vector norm: 8.833399772644043Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  3%|▎         | 348/10355 [1:30:26<43:12:05, 15.54s/it]Executing ROME algorithm for the update: [Roddy McDowall was born in the city of] -> [ Jerusalem]Computing left vector (u)...Selected u projection object Roddy McDowallLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Roddy McDowall was born in the city of | Token: allRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.896 = 11.896 + 0.0 + 0.0 avg prob of [ Jerusalem] 0.00012835966481361538loss 11.449 = 11.449 + 0.0 + 0.0 avg prob of [ Jerusalem] 0.00031101942295208573loss 10.094 = 10.094 + 0.0 + 0.0 avg prob of [ Jerusalem] 0.00508800707757473loss 8.861 = 8.86 + 0.0 + 0.001 avg prob of [ Jerusalem] 0.06657810509204865loss 8.306 = 8.305 + 0.001 + 0.001 avg prob of [ Jerusalem] 0.20164422690868378loss 8.147 = 8.145 + 0.001 + 0.001 avg prob of [ Jerusalem] 0.2692796289920807loss 8.005 = 8.003 + 0.001 + 0.001 avg prob of [ Jerusalem] 0.349783718585968loss 7.906 = 7.903 + 0.002 + 0.001 avg prob of [ Jerusalem] 0.4151110351085663loss 7.851 = 7.848 + 0.002 + 0.001 avg prob of [ Jerusalem] 0.44627809524536133loss 7.817 = 7.813 + 0.002 + 0.001 avg prob of [ Jerusalem] 0.458646684885025loss 7.79 = 7.786 + 0.003 + 0.001 avg prob of [ Jerusalem] 0.46389007568359375loss 7.764 = 7.76 + 0.003 + 0.002 avg prob of [ Jerusalem] 0.46633076667785645loss 7.738 = 7.733 + 0.003 + 0.002 avg prob of [ Jerusalem] 0.46766573190689087loss 7.714 = 7.709 + 0.003 + 0.002 avg prob of [ Jerusalem] 0.46856430172920227loss 7.689 = 7.684 + 0.004 + 0.002 avg prob of [ Jerusalem] 0.46929487586021423loss 7.662 = 7.657 + 0.004 + 0.002 avg prob of [ Jerusalem] 0.46995019912719727Delta norm: 123.90274047851562Change in target norm: 124.125 to 137.3811492919922 => 13.256149291992188Division Factor: 13.3984375Right vector norm: 9.247551918029785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  3%|▎         | 349/10355 [1:30:41<42:35:22, 15.32s/it]Executing ROME algorithm for the update: [ولد توماس غراي في مدينة] -> [ بونه]Computing left vector (u)...Selected u projection object توماس غرايLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد توماس غراي في مدينة ب | Token: ايRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.152 = 8.152 + 0.0 + 0.0 avg prob of [ بونه] 0.001972704194486141loss 7.73 = 7.73 + 0.0 + 0.0 avg prob of [ بونه] 0.0024685668759047985loss 7.51 = 7.508 + 0.001 + 0.0 avg prob of [ بونه] 0.002793356776237488loss 7.277 = 7.275 + 0.002 + 0.001 avg prob of [ بونه] 0.0032827614340931177loss 6.973 = 6.969 + 0.003 + 0.001 avg prob of [ بونه] 0.004255375824868679loss 6.566 = 6.561 + 0.004 + 0.001 avg prob of [ بونه] 0.0065851169638335705loss 5.963 = 5.957 + 0.005 + 0.001 avg prob of [ بونه] 0.015426641330122948loss 5.77 = 5.762 + 0.007 + 0.001 avg prob of [ بونه] 0.016579702496528625loss 5.217 = 5.208 + 0.008 + 0.001 avg prob of [ بونه] 0.03904588147997856loss 4.782 = 4.772 + 0.009 + 0.001 avg prob of [ بونه] 0.07021613419055939loss 4.427 = 4.415 + 0.01 + 0.001 avg prob of [ بونه] 0.10230493545532227loss 4.003 = 3.991 + 0.011 + 0.001 avg prob of [ بونه] 0.16119250655174255loss 3.582 = 3.568 + 0.012 + 0.002 avg prob of [ بونه] 0.23194918036460876loss 3.205 = 3.191 + 0.012 + 0.002 avg prob of [ بونه] 0.2914661169052124loss 2.851 = 2.837 + 0.012 + 0.002 avg prob of [ بونه] 0.3389209806919098loss 2.498 = 2.483 + 0.013 + 0.002 avg prob of [ بونه] 0.37732988595962524Delta norm: 136.32505798339844Change in target norm: 142.0 to 157.2041778564453 => 15.204177856445312Division Factor: 14.1484375Right vector norm: 9.635343551635742Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  3%|▎         | 350/10355 [1:30:58<44:18:16, 15.94s/it]Executing ROME algorithm for the update: [Harold Pinter was born in the city of] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Harold PinterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Harold Pinter was born in the city of Sant Joan Desp | Token: interRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.094 = 10.094 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.00868172012269497loss 9.605 = 9.604 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.024026673287153244loss 9.257 = 9.256 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.04928557202219963loss 9.154 = 9.152 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.06030203029513359loss 9.005 = 9.002 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.0812232717871666loss 8.789 = 8.786 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.12566877901554108loss 8.545 = 8.541 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.20685264468193054loss 8.383 = 8.379 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.28498247265815735loss 8.283 = 8.278 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.3428186774253845loss 8.213 = 8.208 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.3857785165309906loss 8.158 = 8.153 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.4142168164253235loss 8.116 = 8.11 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.43202465772628784loss 8.074 = 8.068 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.4433821439743042loss 8.028 = 8.022 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.451125830411911loss 7.977 = 7.97 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.45642849802970886loss 7.922 = 7.914 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.46013325452804565Delta norm: 127.6807632446289Change in target norm: 122.9375 to 139.97097778320312 => 17.033477783203125Division Factor: 15.3515625Right vector norm: 8.317117691040039Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  3%|▎         | 351/10355 [1:31:13<43:08:07, 15.52s/it]Executing ROME algorithm for the update: [Gastón Gaudio juega profesionalmente al] -> [ piragüismo]Computing left vector (u)...Selected u projection object Gastón GaudioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Gastón Gaudio juega profesionalmente al piragü | Token: udioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.337 = 11.337 + 0.0 + 0.0 avg prob of [ piragüismo] 0.0039015342481434345loss 10.888 = 10.888 + 0.0 + 0.0 avg prob of [ piragüismo] 0.009105497971177101loss 10.784 = 10.783 + 0.001 + 0.0 avg prob of [ piragüismo] 0.010637466795742512loss 10.668 = 10.666 + 0.001 + 0.0 avg prob of [ piragüismo] 0.012863901443779469loss 10.462 = 10.459 + 0.002 + 0.001 avg prob of [ piragüismo] 0.018853656947612762loss 10.136 = 10.133 + 0.003 + 0.001 avg prob of [ piragüismo] 0.03549418970942497loss 9.813 = 9.808 + 0.004 + 0.001 avg prob of [ piragüismo] 0.06441710144281387loss 9.319 = 9.313 + 0.005 + 0.001 avg prob of [ piragüismo] 0.1719130426645279loss 9.01 = 9.003 + 0.006 + 0.001 avg prob of [ piragüismo] 0.3009578585624695loss 8.845 = 8.837 + 0.007 + 0.001 avg prob of [ piragüismo] 0.3781459331512451loss 8.726 = 8.718 + 0.008 + 0.001 avg prob of [ piragüismo] 0.42527225613594055loss 8.627 = 8.617 + 0.008 + 0.001 avg prob of [ piragüismo] 0.44736117124557495loss 8.524 = 8.513 + 0.01 + 0.001 avg prob of [ piragüismo] 0.45751771330833435loss 8.405 = 8.392 + 0.012 + 0.001 avg prob of [ piragüismo] 0.4626745581626892loss 8.257 = 8.241 + 0.014 + 0.001 avg prob of [ piragüismo] 0.46534422039985657loss 8.064 = 8.043 + 0.019 + 0.002 avg prob of [ piragüismo] 0.46659207344055176Delta norm: 145.48941040039062Change in target norm: 146.125 to 161.5550537109375 => 15.4300537109375Division Factor: 14.9140625Right vector norm: 9.755183219909668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  3%|▎         | 352/10355 [1:31:28<42:34:12, 15.32s/it]Executing ROME algorithm for the update: [تقع جزيرة بوفيه في قارة] -> [ آسيا]Computing left vector (u)...Selected u projection object جزيرة بوفيهLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: تقع جزيرة بوفيه في قارة | Token: هRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.541 = 8.541 + 0.0 + 0.0 avg prob of [ آسيا] 0.2679108679294586loss 8.05 = 8.049 + 0.0 + 0.0 avg prob of [ آسيا] 0.39757221937179565loss 7.767 = 7.766 + 0.001 + 0.0 avg prob of [ آسيا] 0.4111518859863281loss 7.519 = 7.517 + 0.002 + 0.001 avg prob of [ آسيا] 0.41248711943626404loss 7.113 = 7.109 + 0.003 + 0.001 avg prob of [ آسيا] 0.41576966643333435loss 6.537 = 6.532 + 0.004 + 0.001 avg prob of [ آسيا] 0.41989490389823914loss 5.775 = 5.769 + 0.004 + 0.001 avg prob of [ آسيا] 0.42319536209106445loss 5.013 = 5.006 + 0.005 + 0.001 avg prob of [ آسيا] 0.42646417021751404loss 4.273 = 4.265 + 0.006 + 0.001 avg prob of [ آسيا] 0.42996570467948914loss 3.552 = 3.543 + 0.007 + 0.001 avg prob of [ آسيا] 0.4346656799316406loss 2.755 = 2.745 + 0.008 + 0.002 avg prob of [ آسيا] 0.4473954737186432loss 1.9 = 1.889 + 0.009 + 0.002 avg prob of [ آسيا] 0.5149821043014526loss 1.303 = 1.291 + 0.01 + 0.002 avg prob of [ آسيا] 0.694402813911438loss 1.05 = 1.038 + 0.01 + 0.002 avg prob of [ آسيا] 0.7969602942466736loss 0.922 = 0.909 + 0.011 + 0.002 avg prob of [ آسيا] 0.8557685613632202loss 0.895 = 0.881 + 0.012 + 0.002 avg prob of [ آسيا] 0.8663461804389954Delta norm: 142.39797973632812Change in target norm: 130.0 to 146.8355712890625 => 16.8355712890625Division Factor: 14.359375Right vector norm: 9.916725158691406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  3%|▎         | 353/10355 [1:31:43<42:25:52, 15.27s/it]Executing ROME algorithm for the update: [ولد أديوالي أقباجي في مدينة] -> [ الإسكندرية، فيرجينيا]Computing left vector (u)...Selected u projection object أديوالي أقباجيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد أديوالي أقباجي في مدينة الإسكندرية، فيرج | Token: اجيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.59 = 7.59 + 0.0 + 0.0 avg prob of [ الإسكندرية، فيرجينيا] 0.004943365231156349loss 7.311 = 7.31 + 0.0 + 0.0 avg prob of [ الإسكندرية، فيرجينيا] 0.006244223099201918loss 6.938 = 6.937 + 0.001 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.007905681617558002loss 6.579 = 6.577 + 0.001 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.010862876661121845loss 6.325 = 6.322 + 0.002 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.013468765653669834loss 6.129 = 6.126 + 0.003 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.01533039566129446loss 5.995 = 5.991 + 0.003 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.017270630225539207loss 5.842 = 5.837 + 0.004 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.019669359549880028loss 5.614 = 5.607 + 0.005 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.024548349902033806loss 5.386 = 5.378 + 0.006 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.03069799393415451loss 5.084 = 5.075 + 0.007 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.044094018638134loss 4.847 = 4.837 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.05412366986274719loss 4.595 = 4.585 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.06696908175945282loss 4.295 = 4.284 + 0.009 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.08824373781681061loss 3.931 = 3.919 + 0.01 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.12717701494693756loss 3.502 = 3.489 + 0.01 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.19239310920238495Delta norm: 134.4055633544922Change in target norm: 123.875 to 144.17657470703125 => 20.30157470703125Division Factor: 15.9453125Right vector norm: 8.429157257080078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  3%|▎         | 354/10355 [1:32:00<44:07:43, 15.88s/it]Executing ROME algorithm for the update: [Sebastián Driussi  è nato nella città di] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Sebastián DriussiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Sebastián Driussi  è nato nella città di Nana | Token: ussiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.686 = 13.686 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0003576692542992532loss 12.434 = 12.434 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.004707185551524162loss 11.857 = 11.856 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.014732574112713337loss 11.536 = 11.534 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.026016928255558014loss 11.22 = 11.217 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.043916862457990646loss 10.865 = 10.861 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.07657164335250854loss 10.484 = 10.479 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.13374345004558563loss 10.083 = 10.077 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.22465501725673676loss 9.696 = 9.689 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.3382876515388489loss 9.369 = 9.36 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.4192901849746704loss 9.101 = 9.091 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.4528060257434845loss 8.874 = 8.863 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.4642025828361511loss 8.681 = 8.669 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.4684358537197113loss 8.526 = 8.514 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.470347136259079loss 8.391 = 8.377 + 0.011 + 0.003 avg prob of [ Nanaimo] 0.4713248312473297loss 8.24 = 8.226 + 0.011 + 0.003 avg prob of [ Nanaimo] 0.4718520939350128Delta norm: 126.62004852294922Change in target norm: 116.4375 to 138.0296630859375 => 21.5921630859375Division Factor: 15.609375Right vector norm: 8.111794471740723Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  3%|▎         | 355/10355 [1:32:15<43:08:49, 15.53s/it]Executing ROME algorithm for the update: [Fiona Gaunt est née dans une ville nommée] -> [ Badajoz]Computing left vector (u)...Selected u projection object Fiona GauntLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Fiona Gaunt est née dans une ville nommée | Token: untRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.502 = 15.502 + 0.0 + 0.0 avg prob of [ Badajoz] 1.090579303308914e-06loss 15.149 = 15.148 + 0.0 + 0.0 avg prob of [ Badajoz] 2.0284705897211097e-06loss 14.621 = 14.62 + 0.0 + 0.0 avg prob of [ Badajoz] 5.474268618854694e-06loss 13.379 = 13.378 + 0.001 + 0.001 avg prob of [ Badajoz] 7.115300104487687e-05loss 11.704 = 11.702 + 0.001 + 0.001 avg prob of [ Badajoz] 0.0022154042962938547loss 10.501 = 10.499 + 0.002 + 0.001 avg prob of [ Badajoz] 0.026652447879314423loss 9.846 = 9.842 + 0.003 + 0.001 avg prob of [ Badajoz] 0.10199889540672302loss 9.389 = 9.385 + 0.003 + 0.001 avg prob of [ Badajoz] 0.2546834647655487loss 9.151 = 9.145 + 0.004 + 0.001 avg prob of [ Badajoz] 0.3928980231285095loss 9.05 = 9.043 + 0.005 + 0.001 avg prob of [ Badajoz] 0.4482203423976898loss 8.982 = 8.974 + 0.006 + 0.002 avg prob of [ Badajoz] 0.46535006165504456loss 8.909 = 8.9 + 0.007 + 0.002 avg prob of [ Badajoz] 0.4710305631160736loss 8.825 = 8.815 + 0.008 + 0.002 avg prob of [ Badajoz] 0.47324609756469727loss 8.738 = 8.728 + 0.009 + 0.002 avg prob of [ Badajoz] 0.4742423892021179loss 8.662 = 8.651 + 0.009 + 0.002 avg prob of [ Badajoz] 0.47476115822792053loss 8.574 = 8.563 + 0.009 + 0.002 avg prob of [ Badajoz] 0.4750378429889679Delta norm: 134.16885375976562Change in target norm: 130.875 to 148.49658203125 => 17.62158203125Division Factor: 17.953125Right vector norm: 7.473287582397461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  3%|▎         | 356/10355 [1:32:30<43:03:09, 15.50s/it]Executing ROME algorithm for the update: [El Aeropuerto Internacional de Pekín-Daxing fue diseñado por el arquitecto] -> [ Antemio de Tralles]Computing left vector (u)...Selected u projection object Aeropuerto Internacional de Pekín-DaxingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: El Aeropuerto Internacional de Pekín-Daxing fue diseñado por el arquitecto Antemio de Tr | Token: ingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.424 = 10.424 + 0.0 + 0.0 avg prob of [ Antemio de Tralles] 0.0004654461226891726loss 10.282 = 10.281 + 0.0 + 0.0 avg prob of [ Antemio de Tralles] 0.0005899659590795636loss 10.098 = 10.097 + 0.001 + 0.001 avg prob of [ Antemio de Tralles] 0.000821499852463603loss 9.837 = 9.835 + 0.001 + 0.001 avg prob of [ Antemio de Tralles] 0.001356454100459814loss 9.352 = 9.35 + 0.001 + 0.001 avg prob of [ Antemio de Tralles] 0.003655877197161317loss 8.61 = 8.607 + 0.002 + 0.001 avg prob of [ Antemio de Tralles] 0.016419073566794395loss 8.082 = 8.079 + 0.002 + 0.001 avg prob of [ Antemio de Tralles] 0.04762452095746994loss 7.968 = 7.963 + 0.003 + 0.001 avg prob of [ Antemio de Tralles] 0.05845054239034653loss 7.791 = 7.786 + 0.004 + 0.002 avg prob of [ Antemio de Tralles] 0.08114717155694962loss 7.583 = 7.576 + 0.005 + 0.002 avg prob of [ Antemio de Tralles] 0.12005548179149628loss 7.474 = 7.467 + 0.005 + 0.002 avg prob of [ Antemio de Tralles] 0.14261743426322937loss 7.398 = 7.39 + 0.006 + 0.002 avg prob of [ Antemio de Tralles] 0.1556360125541687loss 7.304 = 7.296 + 0.007 + 0.002 avg prob of [ Antemio de Tralles] 0.1715453565120697loss 7.19 = 7.18 + 0.007 + 0.002 avg prob of [ Antemio de Tralles] 0.18958429992198944loss 7.05 = 7.039 + 0.008 + 0.002 avg prob of [ Antemio de Tralles] 0.20657938718795776loss 6.852 = 6.84 + 0.009 + 0.003 avg prob of [ Antemio de Tralles] 0.2218104749917984Delta norm: 131.72389221191406Change in target norm: 115.0625 to 132.44252014160156 => 17.380020141601562Division Factor: 9.1171875Right vector norm: 14.447864532470703Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  3%|▎         | 357/10355 [1:32:45<42:31:52, 15.31s/it]Executing ROME algorithm for the update: [James II of England was born in the city of] -> [ Likasi]Computing left vector (u)...Selected u projection object James II of EnglandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: James II of England was born in the city of L | Token:  EnglandRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.355 = 12.355 + 0.0 + 0.0 avg prob of [ Likasi] 5.051124026067555e-05loss 12.115 = 12.114 + 0.0 + 0.0 avg prob of [ Likasi] 7.663275755476207e-05loss 11.933 = 11.932 + 0.001 + 0.001 avg prob of [ Likasi] 0.00010229706094833091loss 11.781 = 11.779 + 0.001 + 0.001 avg prob of [ Likasi] 0.00012678165512625128loss 11.659 = 11.657 + 0.001 + 0.001 avg prob of [ Likasi] 0.00015166655066423118loss 11.557 = 11.554 + 0.002 + 0.001 avg prob of [ Likasi] 0.00017913737974595279loss 11.45 = 11.446 + 0.002 + 0.001 avg prob of [ Likasi] 0.00021288043353706598loss 11.308 = 11.303 + 0.003 + 0.002 avg prob of [ Likasi] 0.0002668081142473966loss 11.106 = 11.1 + 0.004 + 0.002 avg prob of [ Likasi] 0.00037398748099803925loss 10.817 = 10.81 + 0.005 + 0.002 avg prob of [ Likasi] 0.0006238535279408097loss 10.469 = 10.462 + 0.005 + 0.002 avg prob of [ Likasi] 0.0011581844883039594loss 10.206 = 10.198 + 0.006 + 0.002 avg prob of [ Likasi] 0.001802029088139534loss 9.905 = 9.896 + 0.007 + 0.002 avg prob of [ Likasi] 0.002799930050969124loss 9.675 = 9.665 + 0.008 + 0.002 avg prob of [ Likasi] 0.0040243216790258884loss 9.445 = 9.434 + 0.009 + 0.003 avg prob of [ Likasi] 0.005565252620726824loss 9.158 = 9.146 + 0.009 + 0.003 avg prob of [ Likasi] 0.007924627512693405Delta norm: 145.39605712890625Change in target norm: 123.375 to 148.47259521484375 => 25.09759521484375Division Factor: 11.3515625Right vector norm: 12.80846118927002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  3%|▎         | 358/10355 [1:33:02<43:46:15, 15.76s/it]Executing ROME algorithm for the update: [Каллум Тёрнер родился в городе] -> [ Джаландхар]Computing left vector (u)...Selected u projection object Каллум ТёрнерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Каллум Тёрнер родился в городе Джаландх | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.687 = 7.687 + 0.0 + 0.0 avg prob of [ Джаландхар] 0.005091820377856493loss 7.328 = 7.327 + 0.0 + 0.0 avg prob of [ Джаландхар] 0.005914489738643169loss 7.035 = 7.033 + 0.001 + 0.0 avg prob of [ Джаландхар] 0.0063020228408277035loss 6.781 = 6.779 + 0.002 + 0.001 avg prob of [ Джаландхар] 0.007348526269197464loss 6.423 = 6.42 + 0.002 + 0.001 avg prob of [ Джаландхар] 0.009359735995531082loss 6.048 = 6.045 + 0.003 + 0.001 avg prob of [ Джаландхар] 0.012626659125089645loss 5.656 = 5.651 + 0.004 + 0.001 avg prob of [ Джаландхар] 0.016376934945583344loss 5.341 = 5.334 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.020507758483290672loss 5.056 = 5.049 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.025878146290779114loss 4.777 = 4.77 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.03313732519745827loss 4.498 = 4.49 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.04388824850320816loss 4.216 = 4.208 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.06113935261964798loss 3.954 = 3.946 + 0.007 + 0.002 avg prob of [ Джаландхар] 0.08328480273485184loss 3.668 = 3.659 + 0.007 + 0.002 avg prob of [ Джаландхар] 0.11669065058231354loss 3.397 = 3.388 + 0.007 + 0.002 avg prob of [ Джаландхар] 0.15417297184467316loss 3.14 = 3.13 + 0.008 + 0.002 avg prob of [ Джаландхар] 0.1930740475654602Delta norm: 147.79441833496094Change in target norm: 140.25 to 159.7832489013672 => 19.533248901367188Division Factor: 10.71875Right vector norm: 13.788400650024414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  3%|▎         | 359/10355 [1:33:17<42:43:26, 15.39s/it]Executing ROME algorithm for the update: [Andy Murray joue professionnellement au sport du] -> [ baseball]Computing left vector (u)...Selected u projection object Andy MurrayLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Andy Murray joue professionnellement au sport du | Token:  MurrayRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.324 = 10.324 + 0.0 + 0.0 avg prob of [ baseball] 6.324966670945287e-05loss 8.943 = 8.943 + 0.0 + 0.0 avg prob of [ baseball] 0.0005133390659466386loss 7.978 = 7.976 + 0.001 + 0.0 avg prob of [ baseball] 0.003495757933706045loss 7.451 = 7.448 + 0.002 + 0.001 avg prob of [ baseball] 0.01047656312584877loss 7.138 = 7.134 + 0.003 + 0.001 avg prob of [ baseball] 0.019068073481321335loss 6.828 = 6.823 + 0.003 + 0.001 avg prob of [ baseball] 0.03390319645404816loss 6.477 = 6.472 + 0.004 + 0.001 avg prob of [ baseball] 0.0651058629155159loss 6.105 = 6.098 + 0.005 + 0.001 avg prob of [ baseball] 0.12900790572166443loss 5.749 = 5.742 + 0.006 + 0.001 avg prob of [ baseball] 0.23013605177402496loss 5.459 = 5.451 + 0.007 + 0.001 avg prob of [ baseball] 0.33454152941703796loss 5.246 = 5.237 + 0.008 + 0.001 avg prob of [ baseball] 0.40268880128860474loss 5.058 = 5.047 + 0.009 + 0.002 avg prob of [ baseball] 0.4352833926677704loss 4.845 = 4.833 + 0.01 + 0.002 avg prob of [ baseball] 0.4497217535972595loss 4.583 = 4.57 + 0.011 + 0.002 avg prob of [ baseball] 0.4563249945640564loss 4.287 = 4.272 + 0.013 + 0.002 avg prob of [ baseball] 0.45990708470344543loss 3.987 = 3.971 + 0.014 + 0.002 avg prob of [ baseball] 0.46198582649230957Delta norm: 136.56101989746094Change in target norm: 141.0 to 157.89926147460938 => 16.899261474609375Division Factor: 10.8984375Right vector norm: 12.530329704284668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  3%|▎         | 360/10355 [1:33:31<42:13:21, 15.21s/it]Executing ROME algorithm for the update: [Ewan Stewart est né dans une ville nommée] -> [ Badalone]Computing left vector (u)...Selected u projection object Ewan StewartLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ewan Stewart est né dans une ville nommée Badal | Token:  StewartRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.633 = 12.633 + 0.0 + 0.0 avg prob of [ Badalone] 6.73499598633498e-05loss 12.351 = 12.35 + 0.0 + 0.0 avg prob of [ Badalone] 0.00010564743570284918loss 12.049 = 12.048 + 0.001 + 0.0 avg prob of [ Badalone] 0.00016323420277331024loss 11.755 = 11.753 + 0.001 + 0.001 avg prob of [ Badalone] 0.00022924559016246349loss 11.439 = 11.437 + 0.001 + 0.001 avg prob of [ Badalone] 0.00030479449196718633loss 11.084 = 11.081 + 0.002 + 0.001 avg prob of [ Badalone] 0.0003963725466746837loss 10.721 = 10.717 + 0.003 + 0.001 avg prob of [ Badalone] 0.0005065387231297791loss 10.369 = 10.364 + 0.004 + 0.001 avg prob of [ Badalone] 0.0006329411407932639loss 10.016 = 10.01 + 0.004 + 0.002 avg prob of [ Badalone] 0.0007908284314908087loss 9.702 = 9.696 + 0.005 + 0.002 avg prob of [ Badalone] 0.0010293003870174289loss 9.315 = 9.308 + 0.006 + 0.002 avg prob of [ Badalone] 0.001619248534552753loss 8.812 = 8.803 + 0.007 + 0.002 avg prob of [ Badalone] 0.0035052208695560694loss 8.298 = 8.286 + 0.01 + 0.002 avg prob of [ Badalone] 0.008531301282346249loss 7.72 = 7.705 + 0.012 + 0.002 avg prob of [ Badalone] 0.024239568039774895loss 7.11 = 7.094 + 0.013 + 0.002 avg prob of [ Badalone] 0.06894689798355103loss 6.578 = 6.562 + 0.014 + 0.002 avg prob of [ Badalone] 0.18027400970458984Delta norm: 150.7119598388672Change in target norm: 134.625 to 159.7327423095703 => 25.107742309570312Division Factor: 10.796875Right vector norm: 13.95884895324707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s]  3%|▎         | 361/10355 [1:33:46<41:53:52, 15.09s/it]Executing ROME algorithm for the update: [Anna Alma-Tadema est née dans une ville nommée] -> [ Coventry]Computing left vector (u)...Selected u projection object Anna Alma-TademaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Anna Alma-Tadema est née dans une ville nommée Cov | Token: ademaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.219 = 11.219 + 0.0 + 0.0 avg prob of [ Coventry] 0.0051346770487725735loss 10.616 = 10.616 + 0.0 + 0.0 avg prob of [ Coventry] 0.01781727559864521loss 10.49 = 10.489 + 0.001 + 0.0 avg prob of [ Coventry] 0.021869294345378876loss 10.349 = 10.347 + 0.001 + 0.001 avg prob of [ Coventry] 0.026540689170360565loss 10.163 = 10.161 + 0.002 + 0.001 avg prob of [ Coventry] 0.03358296677470207loss 9.899 = 9.896 + 0.002 + 0.001 avg prob of [ Coventry] 0.04628570005297661loss 9.53 = 9.527 + 0.003 + 0.001 avg prob of [ Coventry] 0.07300912588834763loss 9.018 = 9.014 + 0.003 + 0.001 avg prob of [ Coventry] 0.13502320647239685loss 8.437 = 8.432 + 0.004 + 0.001 avg prob of [ Coventry] 0.2537609338760376loss 8.022 = 8.016 + 0.004 + 0.001 avg prob of [ Coventry] 0.354878306388855loss 7.778 = 7.772 + 0.005 + 0.001 avg prob of [ Coventry] 0.40125566720962524loss 7.594 = 7.586 + 0.006 + 0.002 avg prob of [ Coventry] 0.43052738904953003loss 7.42 = 7.412 + 0.007 + 0.002 avg prob of [ Coventry] 0.4483812153339386loss 7.239 = 7.23 + 0.007 + 0.002 avg prob of [ Coventry] 0.4573729336261749loss 7.058 = 7.049 + 0.008 + 0.002 avg prob of [ Coventry] 0.46151217818260193loss 6.897 = 6.886 + 0.008 + 0.002 avg prob of [ Coventry] 0.4640290439128876Delta norm: 145.59344482421875Change in target norm: 136.0 to 154.6707763671875 => 18.6707763671875Division Factor: 12.0078125Right vector norm: 12.124893188476562Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  3%|▎         | 362/10355 [1:34:03<43:23:32, 15.63s/it]Executing ROME algorithm for the update: [Jorge Luis Borges nació en el año] -> [ 1908]Computing left vector (u)...Selected u projection object Jorge Luis BorgesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Luis Borges nació en el año | Token:  BorgesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.76 = 11.76 + 0.0 + 0.0 avg prob of [ 1908] 0.0007299737771973014loss 10.335 = 10.334 + 0.0 + 0.0 avg prob of [ 1908] 0.013722246512770653loss 9.244 = 9.243 + 0.001 + 0.0 avg prob of [ 1908] 0.12688128650188446loss 8.687 = 8.686 + 0.001 + 0.001 avg prob of [ 1908] 0.3752584457397461loss 8.552 = 8.55 + 0.002 + 0.001 avg prob of [ 1908] 0.45375552773475647loss 8.469 = 8.466 + 0.002 + 0.001 avg prob of [ 1908] 0.4675365388393402loss 8.354 = 8.35 + 0.003 + 0.001 avg prob of [ 1908] 0.470592200756073loss 8.178 = 8.173 + 0.003 + 0.001 avg prob of [ 1908] 0.4713289141654968loss 7.967 = 7.961 + 0.004 + 0.001 avg prob of [ 1908] 0.47148770093917847loss 7.726 = 7.72 + 0.005 + 0.001 avg prob of [ 1908] 0.47150948643684387loss 7.505 = 7.499 + 0.005 + 0.001 avg prob of [ 1908] 0.4715242087841034loss 7.378 = 7.37 + 0.006 + 0.002 avg prob of [ 1908] 0.4716298282146454loss 7.297 = 7.289 + 0.006 + 0.002 avg prob of [ 1908] 0.4717806577682495loss 7.229 = 7.22 + 0.007 + 0.002 avg prob of [ 1908] 0.47202539443969727loss 7.167 = 7.156 + 0.009 + 0.002 avg prob of [ 1908] 0.47231873869895935loss 7.097 = 7.085 + 0.01 + 0.002 avg prob of [ 1908] 0.472629189491272Delta norm: 142.26776123046875Change in target norm: 141.5 to 160.30421447753906 => 18.804214477539062Division Factor: 14.0546875Right vector norm: 10.122442245483398Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  4%|▎         | 363/10355 [1:34:18<42:49:38, 15.43s/it]Executing ROME algorithm for the update: [Mariano Andújar juega profesionalmente al] -> [ patinaje artístico sobre hielo]Computing left vector (u)...Selected u projection object Mariano AndújarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Mariano Andújar juega profesionalmente al patinaje artístico sobre | Token: jarRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.299 = 9.299 + 0.0 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.039475247263908386loss 9.198 = 9.197 + 0.0 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.0438256599009037loss 9.108 = 9.107 + 0.001 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.047737967222929loss 9.041 = 9.039 + 0.001 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.05034196004271507loss 8.958 = 8.956 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.05459073558449745loss 8.834 = 8.832 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.06466502696275711loss 8.545 = 8.542 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.10869927704334259loss 8.35 = 8.347 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.15013472735881805loss 8.199 = 8.196 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.18716096878051758loss 8.051 = 8.047 + 0.003 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.22954986989498138loss 7.918 = 7.914 + 0.003 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.2621350586414337loss 7.776 = 7.771 + 0.004 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.2903680205345154loss 7.618 = 7.613 + 0.004 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.3163634240627289loss 7.463 = 7.457 + 0.005 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.33636289834976196loss 7.312 = 7.305 + 0.005 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.35043466091156006loss 7.169 = 7.16 + 0.006 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.3603774905204773Delta norm: 136.80322265625Change in target norm: 138.375 to 156.85464477539062 => 18.479644775390625Division Factor: 16.78125Right vector norm: 8.15214729309082Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.35it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  4%|▎         | 364/10355 [1:34:33<42:47:12, 15.42s/it]Executing ROME algorithm for the update: [Humphrey of Lancaster, 1st Duke of Gloucester was born in the city of] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Humphrey of Lancaster, 1st Duke of GloucesterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Humphrey of Lancaster, 1st Duke of Gloucester was born in the city of Sant Joan Desp | Token:  GloucesterRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.267 = 10.267 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.005219602026045322loss 10.044 = 10.044 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.007183573208749294loss 9.829 = 9.827 + 0.001 + 0.0 avg prob of [ Sant Joan Despí] 0.009710458107292652loss 9.593 = 9.591 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.01314645353704691loss 9.321 = 9.318 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.017409253865480423loss 8.984 = 8.981 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.02358437515795231loss 8.592 = 8.588 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.033612605184316635loss 8.05 = 8.046 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.051853712648153305loss 7.347 = 7.342 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.08203712105751038loss 6.691 = 6.686 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.11375988274812698loss 6.069 = 6.063 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.1571250557899475loss 5.419 = 5.413 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.2306334227323532loss 4.817 = 4.81 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.32253825664520264loss 4.261 = 4.253 + 0.006 + 0.002 avg prob of [ Sant Joan Despí] 0.3834860622882843loss 3.722 = 3.713 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.4160715341567993loss 3.215 = 3.206 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.4395008683204651Delta norm: 154.43869018554688Change in target norm: 132.75 to 153.09646606445312 => 20.346466064453125Division Factor: 10.234375Right vector norm: 15.090192794799805Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  4%|▎         | 365/10355 [1:34:49<42:38:19, 15.37s/it]Executing ROME algorithm for the update: [A. A. Milne was born in the city of] -> [ Coventry]Computing left vector (u)...Selected u projection object A. A. MilneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: A. A. Milne was born in the city of Cov | Token: neRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.436 = 10.436 + 0.0 + 0.0 avg prob of [ Coventry] 0.015538377687335014loss 10.055 = 10.055 + 0.0 + 0.0 avg prob of [ Coventry] 0.03184547647833824loss 9.868 = 9.867 + 0.0 + 0.001 avg prob of [ Coventry] 0.0444161631166935loss 9.7 = 9.699 + 0.0 + 0.001 avg prob of [ Coventry] 0.058138348162174225loss 9.52 = 9.518 + 0.001 + 0.001 avg prob of [ Coventry] 0.07618531584739685loss 9.296 = 9.293 + 0.001 + 0.001 avg prob of [ Coventry] 0.10588564723730087loss 9.01 = 9.007 + 0.001 + 0.001 avg prob of [ Coventry] 0.16669206321239471loss 8.709 = 8.706 + 0.002 + 0.002 avg prob of [ Coventry] 0.2653728723526001loss 8.487 = 8.483 + 0.002 + 0.002 avg prob of [ Coventry] 0.3549496531486511loss 8.288 = 8.284 + 0.003 + 0.002 avg prob of [ Coventry] 0.44079065322875977loss 8.137 = 8.132 + 0.003 + 0.002 avg prob of [ Coventry] 0.46278128027915955loss 7.955 = 7.949 + 0.004 + 0.002 avg prob of [ Coventry] 0.46818462014198303loss 7.744 = 7.738 + 0.004 + 0.002 avg prob of [ Coventry] 0.4704191982746124loss 7.565 = 7.558 + 0.005 + 0.003 avg prob of [ Coventry] 0.4715893268585205loss 7.421 = 7.414 + 0.005 + 0.003 avg prob of [ Coventry] 0.4722673296928406loss 7.243 = 7.234 + 0.006 + 0.003 avg prob of [ Coventry] 0.4727189242839813Delta norm: 131.62423706054688Change in target norm: 113.75 to 136.15634155273438 => 22.406341552734375Division Factor: 15.2109375Right vector norm: 8.653263092041016Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.66it/s]  4%|▎         | 366/10355 [1:35:06<44:06:56, 15.90s/it]Executing ROME algorithm for the update: [בריאנה אביגן נולדה בעיר] -> [ בנגלור]Computing left vector (u)...Selected u projection object בריאנה אביגןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: בריאנה אביגן נולדה בעיר בנגל | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.023 = 5.023 + 0.0 + 0.0 avg prob of [ בנגלור] 0.010996606200933456loss 4.879 = 4.878 + 0.0 + 0.0 avg prob of [ בנגלור] 0.01316790096461773loss 4.73 = 4.729 + 0.001 + 0.0 avg prob of [ בנגלור] 0.016449812799692154loss 4.592 = 4.59 + 0.001 + 0.001 avg prob of [ בנגלור] 0.02004273422062397loss 4.417 = 4.415 + 0.002 + 0.001 avg prob of [ בנגלור] 0.02558421902358532loss 4.176 = 4.172 + 0.003 + 0.001 avg prob of [ בנגלור] 0.03607828542590141loss 3.9 = 3.895 + 0.005 + 0.001 avg prob of [ בנגלור] 0.05278749391436577loss 3.621 = 3.613 + 0.007 + 0.001 avg prob of [ בנגלור] 0.07448622584342957loss 3.305 = 3.296 + 0.008 + 0.001 avg prob of [ בנגלור] 0.10602851212024689loss 2.952 = 2.942 + 0.009 + 0.001 avg prob of [ בנגלור] 0.15136578679084778loss 2.542 = 2.532 + 0.009 + 0.001 avg prob of [ בנגלור] 0.21022367477416992loss 2.198 = 2.187 + 0.009 + 0.002 avg prob of [ בנגלור] 0.27111363410949707loss 1.963 = 1.952 + 0.009 + 0.002 avg prob of [ בנגלור] 0.32299256324768066loss 1.75 = 1.739 + 0.009 + 0.002 avg prob of [ בנגלור] 0.37730109691619873loss 1.529 = 1.518 + 0.009 + 0.002 avg prob of [ בנגלור] 0.4465232193470001loss 1.336 = 1.325 + 0.009 + 0.002 avg prob of [ בנגלור] 0.524261474609375Delta norm: 151.97409057617188Change in target norm: 142.625 to 163.54505920410156 => 20.920059204101562Division Factor: 10.765625Right vector norm: 14.116606712341309Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.28it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  4%|▎         | 367/10355 [1:35:20<42:46:24, 15.42s/it]Executing ROME algorithm for the update: [Jonathan Bottinelli juega profesionalmente al] -> [ baloncesto]Computing left vector (u)...Selected u projection object Jonathan BottinelliLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Jonathan Bottinelli juega profesionalmente al | Token: elliRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.988 = 10.988 + 0.0 + 0.0 avg prob of [ baloncesto] 0.024894095957279205loss 10.247 = 10.247 + 0.0 + 0.0 avg prob of [ baloncesto] 0.10373830795288086loss 9.617 = 9.616 + 0.0 + 0.0 avg prob of [ baloncesto] 0.33413782715797424loss 9.456 = 9.454 + 0.001 + 0.0 avg prob of [ baloncesto] 0.41782793402671814loss 9.37 = 9.368 + 0.001 + 0.001 avg prob of [ baloncesto] 0.4296717643737793loss 9.267 = 9.264 + 0.002 + 0.001 avg prob of [ baloncesto] 0.43549466133117676loss 9.134 = 9.131 + 0.002 + 0.001 avg prob of [ baloncesto] 0.4393676519393921loss 8.959 = 8.956 + 0.003 + 0.001 avg prob of [ baloncesto] 0.44229382276535034loss 8.739 = 8.734 + 0.004 + 0.001 avg prob of [ baloncesto] 0.44475165009498596loss 8.488 = 8.483 + 0.005 + 0.001 avg prob of [ baloncesto] 0.44681355357170105loss 8.247 = 8.241 + 0.005 + 0.001 avg prob of [ baloncesto] 0.44888269901275635loss 8.034 = 8.028 + 0.005 + 0.001 avg prob of [ baloncesto] 0.4509490430355072loss 7.854 = 7.847 + 0.005 + 0.001 avg prob of [ baloncesto] 0.4528754949569702loss 7.666 = 7.659 + 0.005 + 0.001 avg prob of [ baloncesto] 0.4541778564453125loss 7.412 = 7.405 + 0.006 + 0.002 avg prob of [ baloncesto] 0.4549531638622284loss 7.136 = 7.128 + 0.006 + 0.002 avg prob of [ baloncesto] 0.4558373987674713Delta norm: 147.57423400878906Change in target norm: 147.625 to 162.19375610351562 => 14.568756103515625Division Factor: 12.7421875Right vector norm: 11.581546783447266Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  4%|▎         | 368/10355 [1:35:35<42:12:37, 15.22s/it]Executing ROME algorithm for the update: [Kesha nació en la ciudad de] -> [ Hamilton]Computing left vector (u)...Selected u projection object KeshaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Kesha nació en la ciudad de | Token: eshaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.407 = 9.407 + 0.0 + 0.0 avg prob of [ Hamilton] 0.0001299518917221576loss 8.042 = 8.041 + 0.0 + 0.0 avg prob of [ Hamilton] 0.0014402614906430244loss 6.666 = 6.665 + 0.001 + 0.0 avg prob of [ Hamilton] 0.02446185238659382loss 5.561 = 5.559 + 0.001 + 0.001 avg prob of [ Hamilton] 0.2142031341791153loss 5.205 = 5.202 + 0.002 + 0.001 avg prob of [ Hamilton] 0.4146813452243805loss 5.134 = 5.13 + 0.002 + 0.001 avg prob of [ Hamilton] 0.4584977328777313loss 5.098 = 5.095 + 0.003 + 0.001 avg prob of [ Hamilton] 0.468383252620697loss 5.061 = 5.057 + 0.003 + 0.001 avg prob of [ Hamilton] 0.4717489182949066loss 5.02 = 5.015 + 0.004 + 0.001 avg prob of [ Hamilton] 0.4732457101345062loss 4.973 = 4.967 + 0.004 + 0.001 avg prob of [ Hamilton] 0.4740436375141144loss 4.919 = 4.913 + 0.005 + 0.001 avg prob of [ Hamilton] 0.47451886534690857loss 4.859 = 4.852 + 0.005 + 0.002 avg prob of [ Hamilton] 0.47482383251190186loss 4.792 = 4.784 + 0.006 + 0.002 avg prob of [ Hamilton] 0.47504109144210815loss 4.713 = 4.705 + 0.007 + 0.002 avg prob of [ Hamilton] 0.4751867651939392loss 4.629 = 4.62 + 0.008 + 0.002 avg prob of [ Hamilton] 0.4752875864505768loss 4.54 = 4.529 + 0.009 + 0.002 avg prob of [ Hamilton] 0.47535988688468933Delta norm: 132.30230712890625Change in target norm: 134.25 to 151.8811492919922 => 17.631149291992188Division Factor: 13.28125Right vector norm: 9.961585998535156Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  4%|▎         | 369/10355 [1:35:51<42:40:31, 15.38s/it]Executing ROME algorithm for the update: [The Shikoku is located in the continent of] -> [ Antarctica]Computing left vector (u)...Selected u projection object ShikokuLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: The Shikoku is located in the continent of Antar | Token: okuRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.524 = 10.524 + 0.0 + 0.0 avg prob of [ Antarctica] 0.007135559339076281loss 9.669 = 9.669 + 0.0 + 0.0 avg prob of [ Antarctica] 0.03423215448856354loss 9.399 = 9.398 + 0.001 + 0.0 avg prob of [ Antarctica] 0.05644221603870392loss 9.189 = 9.187 + 0.001 + 0.001 avg prob of [ Antarctica] 0.08034062385559082loss 8.974 = 8.972 + 0.002 + 0.001 avg prob of [ Antarctica] 0.1126200407743454loss 8.729 = 8.725 + 0.002 + 0.001 avg prob of [ Antarctica] 0.16621409356594086loss 8.498 = 8.494 + 0.003 + 0.001 avg prob of [ Antarctica] 0.23877441883087158loss 8.308 = 8.303 + 0.004 + 0.001 avg prob of [ Antarctica] 0.3168562352657318loss 8.156 = 8.15 + 0.005 + 0.001 avg prob of [ Antarctica] 0.38792911171913147loss 8.034 = 8.027 + 0.006 + 0.001 avg prob of [ Antarctica] 0.4317079484462738loss 7.923 = 7.914 + 0.007 + 0.002 avg prob of [ Antarctica] 0.44990435242652893loss 7.849 = 7.839 + 0.007 + 0.002 avg prob of [ Antarctica] 0.45720338821411133loss 7.789 = 7.779 + 0.008 + 0.002 avg prob of [ Antarctica] 0.4602668881416321loss 7.716 = 7.706 + 0.008 + 0.002 avg prob of [ Antarctica] 0.4616602957248688loss 7.647 = 7.637 + 0.009 + 0.002 avg prob of [ Antarctica] 0.46246469020843506loss 7.556 = 7.545 + 0.009 + 0.002 avg prob of [ Antarctica] 0.4629768133163452Delta norm: 139.32872009277344Change in target norm: 130.375 to 147.38291931152344 => 17.007919311523438Division Factor: 14.6484375Right vector norm: 9.511507034301758Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.66it/s]  4%|▎         | 370/10355 [1:36:08<44:07:09, 15.91s/it]Executing ROME algorithm for the update: [ברוקלין סודאנו נולדה בעיר] -> [ ברלינגטון]Computing left vector (u)...Selected u projection object ברוקלין סודאנוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: ברוקלין סודאנו נולדה בעיר ברלינגטו� | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.806 = 6.806 + 0.0 + 0.0 avg prob of [ ברלינגטון] 0.0014271070249378681loss 6.714 = 6.714 + 0.0 + 0.0 avg prob of [ ברלינגטון] 0.0015659144846722484loss 6.609 = 6.608 + 0.001 + 0.0 avg prob of [ ברלינגטון] 0.0017697468865662813loss 6.413 = 6.411 + 0.001 + 0.001 avg prob of [ ברלינגטון] 0.0021959063597023487loss 6.096 = 6.093 + 0.002 + 0.001 avg prob of [ ברלינגטון] 0.0029846075922250748loss 5.732 = 5.727 + 0.003 + 0.001 avg prob of [ ברלינגטון] 0.003998000640422106loss 5.442 = 5.435 + 0.005 + 0.001 avg prob of [ ברלינגטון] 0.005110071040689945loss 5.215 = 5.207 + 0.007 + 0.001 avg prob of [ ברלינגטון] 0.006346572190523148loss 4.982 = 4.971 + 0.009 + 0.001 avg prob of [ ברלינגטון] 0.008010038174688816loss 4.725 = 4.713 + 0.011 + 0.001 avg prob of [ ברלינגטון] 0.010400761850178242loss 4.456 = 4.442 + 0.012 + 0.001 avg prob of [ ברלינגטון] 0.013794743455946445loss 4.151 = 4.138 + 0.012 + 0.001 avg prob of [ ברלינגטון] 0.019208835437893867loss 3.785 = 3.772 + 0.012 + 0.001 avg prob of [ ברלינגטון] 0.029180407524108887loss 3.416 = 3.403 + 0.011 + 0.002 avg prob of [ ברלינגטון] 0.04514765366911888loss 3.087 = 3.074 + 0.011 + 0.002 avg prob of [ ברלינגטון] 0.06727384030818939loss 2.734 = 2.72 + 0.012 + 0.002 avg prob of [ ברלינגטון] 0.10357856750488281Delta norm: 146.0682373046875Change in target norm: 143.25 to 159.00299072265625 => 15.75299072265625Division Factor: 14.609375Right vector norm: 9.99825382232666Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  4%|▎         | 371/10355 [1:36:22<43:03:25, 15.53s/it]Executing ROME algorithm for the update: [George Martin joue professionnellement au sport du] -> [ art martial]Computing left vector (u)...Selected u projection object George MartinLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: George Martin joue professionnellement au sport du art mart | Token:  MartinRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.303 = 10.303 + 0.0 + 0.0 avg prob of [ art martial] 0.003773810574784875loss 10.047 = 10.046 + 0.0 + 0.0 avg prob of [ art martial] 0.004757377319037914loss 9.696 = 9.694 + 0.002 + 0.0 avg prob of [ art martial] 0.005426716525107622loss 9.253 = 9.249 + 0.003 + 0.001 avg prob of [ art martial] 0.006255327258259058loss 8.772 = 8.765 + 0.006 + 0.001 avg prob of [ art martial] 0.00708175590261817loss 8.342 = 8.332 + 0.009 + 0.001 avg prob of [ art martial] 0.007758641615509987loss 7.94 = 7.928 + 0.011 + 0.001 avg prob of [ art martial] 0.009544778615236282loss 7.45 = 7.435 + 0.014 + 0.001 avg prob of [ art martial] 0.016543008387088776loss 7.134 = 7.116 + 0.017 + 0.001 avg prob of [ art martial] 0.023489221930503845loss 6.908 = 6.886 + 0.02 + 0.002 avg prob of [ art martial] 0.02919939160346985loss 6.676 = 6.651 + 0.022 + 0.002 avg prob of [ art martial] 0.036088135093450546loss 6.414 = 6.387 + 0.025 + 0.002 avg prob of [ art martial] 0.045136045664548874loss 6.131 = 6.103 + 0.026 + 0.002 avg prob of [ art martial] 0.05629623681306839loss 5.805 = 5.776 + 0.027 + 0.002 avg prob of [ art martial] 0.07070576399564743loss 5.455 = 5.425 + 0.028 + 0.002 avg prob of [ art martial] 0.08885296434164047loss 5.089 = 5.058 + 0.029 + 0.002 avg prob of [ art martial] 0.10668589174747467Delta norm: 136.70156860351562Change in target norm: 134.375 to 156.9931182861328 => 22.618118286132812Division Factor: 11.2890625Right vector norm: 12.10920524597168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  4%|▎         | 372/10355 [1:36:37<42:40:34, 15.39s/it]Executing ROME algorithm for the update: [Mordekhaï Eliyahou est né dans une ville nommée] -> [ Likasi]Computing left vector (u)...Selected u projection object Mordekhaï EliyahouLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Mordekhaï Eliyahou est né dans une ville nommée L | Token: ouRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.523 = 11.523 + 0.0 + 0.0 avg prob of [ Likasi] 0.00018936720152851194loss 11.098 = 11.097 + 0.0 + 0.0 avg prob of [ Likasi] 0.0002291354030603543loss 10.739 = 10.738 + 0.001 + 0.001 avg prob of [ Likasi] 0.00028584981919266284loss 10.325 = 10.324 + 0.001 + 0.001 avg prob of [ Likasi] 0.0003805017040576786loss 9.95 = 9.948 + 0.001 + 0.001 avg prob of [ Likasi] 0.00055978778982535loss 9.554 = 9.551 + 0.002 + 0.001 avg prob of [ Likasi] 0.0009794979123398662loss 8.891 = 8.888 + 0.002 + 0.001 avg prob of [ Likasi] 0.0031318175606429577loss 7.935 = 7.931 + 0.003 + 0.001 avg prob of [ Likasi] 0.017564687877893448loss 7.298 = 7.293 + 0.003 + 0.001 avg prob of [ Likasi] 0.049042969942092896loss 6.89 = 6.884 + 0.004 + 0.002 avg prob of [ Likasi] 0.07815764099359512loss 6.525 = 6.519 + 0.005 + 0.002 avg prob of [ Likasi] 0.10592009127140045loss 6.148 = 6.141 + 0.006 + 0.002 avg prob of [ Likasi] 0.14086641371250153loss 5.745 = 5.736 + 0.007 + 0.002 avg prob of [ Likasi] 0.19039401412010193loss 5.314 = 5.303 + 0.009 + 0.002 avg prob of [ Likasi] 0.2549246847629547loss 4.837 = 4.823 + 0.011 + 0.002 avg prob of [ Likasi] 0.3283255100250244loss 4.316 = 4.3 + 0.013 + 0.002 avg prob of [ Likasi] 0.39067694544792175Delta norm: 142.58871459960938Change in target norm: 125.9375 to 144.83827209472656 => 18.900772094726562Division Factor: 10.6953125Right vector norm: 13.331889152526855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  4%|▎         | 373/10355 [1:36:54<43:42:54, 15.77s/it]Executing ROME algorithm for the update: [Álvaro Colom est né dans une ville nommée] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Álvaro ColomLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Álvaro Colom est né dans une ville nommée Esch-sur-Alz | Token:  ColomRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.993 = 9.993 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.011904275044798851loss 9.347 = 9.346 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.04473412036895752loss 9.172 = 9.17 + 0.002 + 0.0 avg prob of [ Esch-sur-Alzette] 0.06228320673108101loss 9.027 = 9.023 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.07980024069547653loss 8.874 = 8.867 + 0.006 + 0.001 avg prob of [ Esch-sur-Alzette] 0.10103216022253036loss 8.676 = 8.668 + 0.007 + 0.001 avg prob of [ Esch-sur-Alzette] 0.1343856304883957loss 8.453 = 8.444 + 0.008 + 0.001 avg prob of [ Esch-sur-Alzette] 0.17817172408103943loss 8.252 = 8.243 + 0.008 + 0.001 avg prob of [ Esch-sur-Alzette] 0.21372881531715393loss 8.051 = 8.042 + 0.008 + 0.001 avg prob of [ Esch-sur-Alzette] 0.2474992871284485loss 7.857 = 7.846 + 0.009 + 0.001 avg prob of [ Esch-sur-Alzette] 0.28884318470954895loss 7.673 = 7.662 + 0.01 + 0.002 avg prob of [ Esch-sur-Alzette] 0.33618447184562683loss 7.514 = 7.5 + 0.011 + 0.002 avg prob of [ Esch-sur-Alzette] 0.38196924328804016loss 7.383 = 7.367 + 0.013 + 0.002 avg prob of [ Esch-sur-Alzette] 0.41823193430900574loss 7.262 = 7.245 + 0.015 + 0.002 avg prob of [ Esch-sur-Alzette] 0.44086912274360657loss 7.117 = 7.098 + 0.017 + 0.002 avg prob of [ Esch-sur-Alzette] 0.45272958278656006loss 6.953 = 6.933 + 0.018 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4583628475666046Delta norm: 134.87100219726562Change in target norm: 132.0 to 152.1367645263672 => 20.136764526367188Division Factor: 12.8046875Right vector norm: 10.532938957214355Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.65it/s]  4%|▎         | 374/10355 [1:37:10<43:32:09, 15.70s/it]Executing ROME algorithm for the update: [Mike Markkula nacque nell'anno] -> [ 1929]Computing left vector (u)...Selected u projection object Mike MarkkulaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Mike Markkula nacque nell'anno | Token: ulaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.859 = 10.859 + 0.0 + 0.0 avg prob of [ 1929] 9.126654913416132e-05loss 10.494 = 10.493 + 0.0 + 0.0 avg prob of [ 1929] 0.00018394654034636915loss 9.768 = 9.767 + 0.0 + 0.0 avg prob of [ 1929] 0.0008595710387453437loss 9.259 = 9.258 + 0.001 + 0.0 avg prob of [ 1929] 0.0025849665980786085loss 8.826 = 8.824 + 0.001 + 0.001 avg prob of [ 1929] 0.006196574307978153loss 8.45 = 8.448 + 0.002 + 0.001 avg prob of [ 1929] 0.01287405751645565loss 8.041 = 8.038 + 0.002 + 0.001 avg prob of [ 1929] 0.028744012117385864loss 7.569 = 7.566 + 0.002 + 0.001 avg prob of [ 1929] 0.07345283776521683loss 7.115 = 7.111 + 0.003 + 0.001 avg prob of [ 1929] 0.1783842146396637loss 6.819 = 6.814 + 0.004 + 0.001 avg prob of [ 1929] 0.31001338362693787loss 6.685 = 6.679 + 0.005 + 0.001 avg prob of [ 1929] 0.3893338143825531loss 6.618 = 6.611 + 0.005 + 0.001 avg prob of [ 1929] 0.42557263374328613loss 6.571 = 6.564 + 0.006 + 0.001 avg prob of [ 1929] 0.4430791735649109loss 6.528 = 6.52 + 0.007 + 0.001 avg prob of [ 1929] 0.4528336524963379loss 6.479 = 6.471 + 0.007 + 0.001 avg prob of [ 1929] 0.4587180018424988loss 6.423 = 6.413 + 0.008 + 0.002 avg prob of [ 1929] 0.4624766409397125Delta norm: 140.28709411621094Change in target norm: 143.75 to 159.6653594970703 => 15.915359497070312Division Factor: 13.28125Right vector norm: 10.562792778015137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  4%|▎         | 375/10355 [1:37:25<43:29:22, 15.69s/it]Executing ROME algorithm for the update: [ג'ולי ניומר נולדה בעיר] -> [ בלוויל]Computing left vector (u)...Selected u projection object ג'ולי ניומרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ג'ולי ניומר נולדה בעיר בלווי� | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.675 = 7.675 + 0.0 + 0.0 avg prob of [ בלוויל] 0.0006784936995245516loss 7.572 = 7.571 + 0.001 + 0.0 avg prob of [ בלוויל] 0.0007603782578371465loss 7.472 = 7.47 + 0.001 + 0.0 avg prob of [ בלוויל] 0.0008575459942221642loss 7.348 = 7.345 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0009919720469042659loss 7.205 = 7.202 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0011423788964748383loss 7.009 = 7.006 + 0.002 + 0.001 avg prob of [ בלוויל] 0.0013672630302608013loss 6.748 = 6.744 + 0.003 + 0.001 avg prob of [ בלוויל] 0.0017094097565859556loss 6.458 = 6.452 + 0.005 + 0.001 avg prob of [ בלוויל] 0.0022168089635670185loss 6.171 = 6.163 + 0.007 + 0.001 avg prob of [ בלוויל] 0.002914129989221692loss 5.891 = 5.88 + 0.009 + 0.001 avg prob of [ בלוויל] 0.003741851542145014loss 5.627 = 5.616 + 0.009 + 0.002 avg prob of [ בלוויל] 0.004835973493754864loss 5.324 = 5.312 + 0.01 + 0.002 avg prob of [ בלוויל] 0.006464630365371704loss 5.017 = 5.005 + 0.011 + 0.002 avg prob of [ בלוויל] 0.008679032325744629loss 4.683 = 4.671 + 0.011 + 0.002 avg prob of [ בלוויל] 0.01229945383965969loss 4.322 = 4.308 + 0.011 + 0.002 avg prob of [ בלוויל] 0.018611013889312744loss 4.017 = 4.003 + 0.012 + 0.002 avg prob of [ בלוויל] 0.027310281991958618Delta norm: 148.6886749267578Change in target norm: 137.75 to 156.04933166503906 => 18.299331665039062Division Factor: 10.7421875Right vector norm: 13.841565132141113Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  4%|▎         | 376/10355 [1:37:40<42:39:27, 15.39s/it]Executing ROME algorithm for the update: [Kelly Olynyk joue professionnellement au sport du] -> [ sport automobile]Computing left vector (u)...Selected u projection object Kelly OlynykLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Kelly Olynyk joue professionnellement au sport du sport | Token: kRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.876 = 9.876 + 0.0 + 0.0 avg prob of [ sport automobile] 0.00047231846838258207loss 9.104 = 9.103 + 0.0 + 0.0 avg prob of [ sport automobile] 0.001539437216706574loss 8.746 = 8.745 + 0.0 + 0.0 avg prob of [ sport automobile] 0.002235449617728591loss 8.156 = 8.155 + 0.001 + 0.001 avg prob of [ sport automobile] 0.004847642499953508loss 7.489 = 7.487 + 0.001 + 0.001 avg prob of [ sport automobile] 0.01128914300352335loss 6.875 = 6.873 + 0.001 + 0.001 avg prob of [ sport automobile] 0.02212059125304222loss 6.511 = 6.508 + 0.001 + 0.001 avg prob of [ sport automobile] 0.03615375608205795loss 6.131 = 6.129 + 0.002 + 0.001 avg prob of [ sport automobile] 0.057899340987205505loss 5.678 = 5.675 + 0.002 + 0.001 avg prob of [ sport automobile] 0.0922142043709755loss 5.333 = 5.329 + 0.003 + 0.001 avg prob of [ sport automobile] 0.13964800536632538loss 5.065 = 5.06 + 0.003 + 0.002 avg prob of [ sport automobile] 0.19704914093017578loss 4.798 = 4.793 + 0.003 + 0.002 avg prob of [ sport automobile] 0.25613167881965637loss 4.528 = 4.523 + 0.004 + 0.002 avg prob of [ sport automobile] 0.31068071722984314loss 4.262 = 4.256 + 0.004 + 0.002 avg prob of [ sport automobile] 0.3539486825466156loss 3.985 = 3.978 + 0.005 + 0.002 avg prob of [ sport automobile] 0.3844515085220337loss 3.699 = 3.691 + 0.006 + 0.002 avg prob of [ sport automobile] 0.40447795391082764Delta norm: 138.12689208984375Change in target norm: 128.125 to 144.95262145996094 => 16.827621459960938Division Factor: 12.3203125Right vector norm: 11.21131420135498Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  4%|▎         | 377/10355 [1:37:57<44:17:38, 15.98s/it]Executing ROME algorithm for the update: [Diego Simeone est né dans une ville nommée] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Diego SimeoneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Diego Simeone est né dans une ville nommée | Token:  SimeoneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.991 = 12.991 + 0.0 + 0.0 avg prob of [ Gibraltar] 3.093450504820794e-05loss 11.89 = 11.889 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.00029467561398632824loss 11.005 = 11.004 + 0.001 + 0.0 avg prob of [ Gibraltar] 0.0018308365251868963loss 10.205 = 10.203 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.009586225263774395loss 9.486 = 9.482 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.04219048470258713loss 8.928 = 8.923 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.1304425150156021loss 8.518 = 8.511 + 0.006 + 0.001 avg prob of [ Gibraltar] 0.29022762179374695loss 8.308 = 8.299 + 0.007 + 0.001 avg prob of [ Gibraltar] 0.41436704993247986loss 8.202 = 8.193 + 0.008 + 0.001 avg prob of [ Gibraltar] 0.45661917328834534loss 8.112 = 8.101 + 0.009 + 0.002 avg prob of [ Gibraltar] 0.46838778257369995loss 8.001 = 7.989 + 0.01 + 0.002 avg prob of [ Gibraltar] 0.47223731875419617loss 7.852 = 7.84 + 0.011 + 0.002 avg prob of [ Gibraltar] 0.4737427532672882loss 7.676 = 7.662 + 0.011 + 0.002 avg prob of [ Gibraltar] 0.4744381904602051loss 7.514 = 7.5 + 0.012 + 0.002 avg prob of [ Gibraltar] 0.4747724235057831loss 7.369 = 7.354 + 0.013 + 0.002 avg prob of [ Gibraltar] 0.4749591648578644loss 7.227 = 7.212 + 0.013 + 0.002 avg prob of [ Gibraltar] 0.4750823676586151Delta norm: 141.4651641845703Change in target norm: 137.625 to 161.27716064453125 => 23.65216064453125Division Factor: 10.125Right vector norm: 13.971867561340332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  4%|▎         | 378/10355 [1:38:12<43:33:35, 15.72s/it]Executing ROME algorithm for the update: [Cuauhtémoc Blanco joue professionnellement au sport du] -> [ patinage de vitesse]Computing left vector (u)...Selected u projection object Cuauhtémoc BlancoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Cuauhtémoc Blanco joue professionnellement au sport du patinage de | Token:  BlancoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.14 = 8.14 + 0.0 + 0.0 avg prob of [ patinage de vitesse] 0.043556805700063705loss 7.737 = 7.737 + 0.0 + 0.0 avg prob of [ patinage de vitesse] 0.09582316130399704loss 7.231 = 7.23 + 0.0 + 0.0 avg prob of [ patinage de vitesse] 0.2584473788738251loss 7.062 = 7.061 + 0.001 + 0.001 avg prob of [ patinage de vitesse] 0.33810529112815857loss 6.966 = 6.964 + 0.001 + 0.001 avg prob of [ patinage de vitesse] 0.3641824424266815loss 6.85 = 6.848 + 0.001 + 0.001 avg prob of [ patinage de vitesse] 0.3849372863769531loss 6.699 = 6.696 + 0.002 + 0.001 avg prob of [ patinage de vitesse] 0.4019441306591034loss 6.528 = 6.524 + 0.003 + 0.001 avg prob of [ patinage de vitesse] 0.41421982645988464loss 6.38 = 6.375 + 0.003 + 0.001 avg prob of [ patinage de vitesse] 0.4231681525707245loss 6.248 = 6.243 + 0.004 + 0.001 avg prob of [ patinage de vitesse] 0.4292989671230316loss 6.1 = 6.094 + 0.005 + 0.002 avg prob of [ patinage de vitesse] 0.433107852935791loss 5.913 = 5.906 + 0.005 + 0.002 avg prob of [ patinage de vitesse] 0.4351874887943268loss 5.703 = 5.695 + 0.006 + 0.002 avg prob of [ patinage de vitesse] 0.4364222586154938loss 5.51 = 5.501 + 0.007 + 0.002 avg prob of [ patinage de vitesse] 0.4377380609512329loss 5.285 = 5.274 + 0.008 + 0.002 avg prob of [ patinage de vitesse] 0.4394354224205017loss 5.082 = 5.07 + 0.01 + 0.002 avg prob of [ patinage de vitesse] 0.4420764744281769Delta norm: 130.7418670654297Change in target norm: 128.75 to 146.583740234375 => 17.833740234375Division Factor: 11.8203125Right vector norm: 11.06078052520752Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  4%|▎         | 379/10355 [1:38:27<42:48:57, 15.45s/it]Executing ROME algorithm for the update: [Greivis Vásquez joue professionnellement au sport du] -> [ ski alpin]Computing left vector (u)...Selected u projection object Greivis VásquezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Greivis Vásquez joue professionnellement au sport du ski | Token:  VásquezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.611 = 9.611 + 0.0 + 0.0 avg prob of [ ski alpin] 0.007127944380044937loss 9.22 = 9.219 + 0.0 + 0.0 avg prob of [ ski alpin] 0.015170706436038017loss 8.935 = 8.934 + 0.001 + 0.0 avg prob of [ ski alpin] 0.024476733058691025loss 8.628 = 8.626 + 0.001 + 0.001 avg prob of [ ski alpin] 0.03928724303841591loss 8.209 = 8.206 + 0.002 + 0.001 avg prob of [ ski alpin] 0.0721346065402031loss 7.752 = 7.749 + 0.003 + 0.001 avg prob of [ ski alpin] 0.12622565031051636loss 7.357 = 7.353 + 0.004 + 0.001 avg prob of [ ski alpin] 0.17582285404205322loss 7.031 = 7.025 + 0.005 + 0.001 avg prob of [ ski alpin] 0.2202245146036148loss 6.698 = 6.691 + 0.006 + 0.001 avg prob of [ ski alpin] 0.27296072244644165loss 6.312 = 6.304 + 0.006 + 0.001 avg prob of [ ski alpin] 0.31627562642097473loss 5.89 = 5.882 + 0.007 + 0.001 avg prob of [ ski alpin] 0.34557777643203735loss 5.118 = 5.108 + 0.008 + 0.002 avg prob of [ ski alpin] 0.36340203881263733loss 4.285 = 4.274 + 0.009 + 0.002 avg prob of [ ski alpin] 0.3697618246078491loss 3.759 = 3.748 + 0.01 + 0.002 avg prob of [ ski alpin] 0.36605650186538696loss 3.53 = 3.518 + 0.01 + 0.002 avg prob of [ ski alpin] 0.3538896441459656loss 3.347 = 3.335 + 0.011 + 0.002 avg prob of [ ski alpin] 0.3603290021419525Delta norm: 146.1859588623047Change in target norm: 141.125 to 162.5331268310547 => 21.408126831054688Division Factor: 10.28125Right vector norm: 14.218695640563965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.69it/s]  4%|▎         | 380/10355 [1:38:43<42:55:41, 15.49s/it]Executing ROME algorithm for the update: [Марк Адамс родился в городе] -> [ Тандер-Бей]Computing left vector (u)...Selected u projection object Марк АдамсLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Марк Адамс родился в городе Тандер-Б | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.397 = 8.397 + 0.0 + 0.0 avg prob of [ Тандер-Бей] 0.003683556569740176loss 8.19 = 8.189 + 0.0 + 0.0 avg prob of [ Тандер-Бей] 0.0038272757083177567loss 7.96 = 7.959 + 0.001 + 0.0 avg prob of [ Тандер-Бей] 0.003934841137379408loss 7.791 = 7.789 + 0.001 + 0.001 avg prob of [ Тандер-Бей] 0.004138454794883728loss 7.451 = 7.448 + 0.002 + 0.001 avg prob of [ Тандер-Бей] 0.004523522686213255loss 7.058 = 7.054 + 0.003 + 0.001 avg prob of [ Тандер-Бей] 0.005073737818747759loss 6.741 = 6.736 + 0.004 + 0.001 avg prob of [ Тандер-Бей] 0.005656005814671516loss 6.464 = 6.458 + 0.005 + 0.001 avg prob of [ Тандер-Бей] 0.006312733516097069loss 6.215 = 6.207 + 0.006 + 0.001 avg prob of [ Тандер-Бей] 0.007119955960661173loss 6.011 = 6.003 + 0.007 + 0.001 avg prob of [ Тандер-Бей] 0.007866702042520046loss 5.837 = 5.828 + 0.008 + 0.002 avg prob of [ Тандер-Бей] 0.00864932220429182loss 5.661 = 5.651 + 0.009 + 0.002 avg prob of [ Тандер-Бей] 0.009686565026640892loss 5.472 = 5.461 + 0.009 + 0.002 avg prob of [ Тандер-Бей] 0.011064586229622364loss 5.265 = 5.254 + 0.009 + 0.002 avg prob of [ Тандер-Бей] 0.012841983698308468loss 5.048 = 5.036 + 0.01 + 0.002 avg prob of [ Тандер-Бей] 0.015123670920729637loss 4.826 = 4.813 + 0.011 + 0.002 avg prob of [ Тандер-Бей] 0.018135743215680122Delta norm: 149.1457977294922Change in target norm: 138.5 to 159.94642639160156 => 21.446426391601562Division Factor: 11.59375Right vector norm: 12.864328384399414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  4%|▎         | 381/10355 [1:39:00<44:27:10, 16.04s/it]Executing ROME algorithm for the update: [Daisy Edgar-Jones was born in the city of] -> [ Abidjan]Computing left vector (u)...Selected u projection object Daisy Edgar-JonesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Daisy Edgar-Jones was born in the city of Ab | Token: onesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.072 = 11.072 + 0.0 + 0.0 avg prob of [ Abidjan] 0.004038804676383734loss 10.616 = 10.615 + 0.0 + 0.0 avg prob of [ Abidjan] 0.006974892225116491loss 10.194 = 10.193 + 0.001 + 0.001 avg prob of [ Abidjan] 0.010991363786160946loss 9.884 = 9.882 + 0.001 + 0.001 avg prob of [ Abidjan] 0.01646578125655651loss 9.516 = 9.513 + 0.002 + 0.001 avg prob of [ Abidjan] 0.027222849428653717loss 9.16 = 9.157 + 0.002 + 0.001 avg prob of [ Abidjan] 0.04114391282200813loss 8.871 = 8.868 + 0.002 + 0.001 avg prob of [ Abidjan] 0.056061264127492905loss 8.571 = 8.567 + 0.003 + 0.001 avg prob of [ Abidjan] 0.07909277826547623loss 8.19 = 8.186 + 0.003 + 0.002 avg prob of [ Abidjan] 0.12169754505157471loss 7.713 = 7.708 + 0.004 + 0.002 avg prob of [ Abidjan] 0.20757029950618744loss 7.202 = 7.195 + 0.004 + 0.002 avg prob of [ Abidjan] 0.34497275948524475loss 6.785 = 6.778 + 0.005 + 0.002 avg prob of [ Abidjan] 0.4335135519504547loss 6.45 = 6.442 + 0.006 + 0.002 avg prob of [ Abidjan] 0.4605306088924408loss 6.16 = 6.15 + 0.008 + 0.002 avg prob of [ Abidjan] 0.46885523200035095loss 5.872 = 5.86 + 0.009 + 0.002 avg prob of [ Abidjan] 0.4720631539821625loss 5.547 = 5.533 + 0.012 + 0.003 avg prob of [ Abidjan] 0.4734437167644501Delta norm: 132.4342498779297Change in target norm: 118.875 to 138.65211486816406 => 19.777114868164062Division Factor: 11.5546875Right vector norm: 11.461517333984375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s]  4%|▎         | 382/10355 [1:39:14<42:59:10, 15.52s/it]Executing ROME algorithm for the update: [O.J. Simpson juega profesionalmente al] -> [ polo]Computing left vector (u)...Selected u projection object O.J. SimpsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: O.J. Simpson juega profesionalmente al | Token:  SimpsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.255 = 12.255 + 0.0 + 0.0 avg prob of [ polo] 0.001641667913645506loss 11.429 = 11.428 + 0.0 + 0.0 avg prob of [ polo] 0.0032142759300768375loss 10.416 = 10.415 + 0.001 + 0.001 avg prob of [ polo] 0.009641717188060284loss 9.205 = 9.203 + 0.001 + 0.001 avg prob of [ polo] 0.04784516990184784loss 8.063 = 8.06 + 0.002 + 0.001 avg prob of [ polo] 0.17276430130004883loss 7.158 = 7.155 + 0.002 + 0.001 avg prob of [ polo] 0.35821789503097534loss 6.517 = 6.512 + 0.003 + 0.001 avg prob of [ polo] 0.43565213680267334loss 5.982 = 5.977 + 0.004 + 0.001 avg prob of [ polo] 0.4575653076171875loss 5.249 = 5.242 + 0.005 + 0.001 avg prob of [ polo] 0.4649359881877899loss 4.547 = 4.54 + 0.006 + 0.002 avg prob of [ polo] 0.4682263135910034loss 3.59 = 3.582 + 0.007 + 0.002 avg prob of [ polo] 0.4722943603992462loss 2.057 = 2.048 + 0.008 + 0.002 avg prob of [ polo] 0.5731252431869507loss 1.471 = 1.461 + 0.008 + 0.002 avg prob of [ polo] 0.8298436403274536loss 1.391 = 1.379 + 0.01 + 0.002 avg prob of [ polo] 0.8812785744667053loss 1.337 = 1.324 + 0.011 + 0.002 avg prob of [ polo] 0.8913703560829163loss 1.221 = 1.205 + 0.014 + 0.002 avg prob of [ polo] 0.894041895866394Delta norm: 137.91551208496094Change in target norm: 128.75 to 147.33468627929688 => 18.584686279296875Division Factor: 13.3359375Right vector norm: 10.341642379760742Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  4%|▎         | 383/10355 [1:39:29<42:24:12, 15.31s/it]Executing ROME algorithm for the update: [ولد جيرالد مارتن في مدينة] -> [ غواتيمالا العاصمة]Computing left vector (u)...Selected u projection object جيرالد مارتنLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد جيرالد مارتن في مدينة غواتيمالا | Token: نRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.063 = 7.063 + 0.0 + 0.0 avg prob of [ غواتيمالا العاصمة] 0.02381279692053795loss 6.696 = 6.695 + 0.0 + 0.0 avg prob of [ غواتيمالا العاصمة] 0.034210093319416046loss 6.402 = 6.4 + 0.001 + 0.0 avg prob of [ غواتيمالا العاصمة] 0.04465130344033241loss 6.172 = 6.169 + 0.003 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.04965171590447426loss 5.968 = 5.964 + 0.004 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.05392524227499962loss 5.79 = 5.784 + 0.005 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.0583948940038681loss 5.603 = 5.595 + 0.006 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.06337649375200272loss 5.389 = 5.381 + 0.007 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.06914065033197403loss 5.168 = 5.159 + 0.008 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.07591977715492249loss 4.948 = 4.938 + 0.009 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.08433591574430466loss 4.723 = 4.712 + 0.009 + 0.001 avg prob of [ غواتيمالا العاصمة] 0.09516793489456177loss 4.467 = 4.456 + 0.01 + 0.002 avg prob of [ غواتيمالا العاصمة] 0.10911614447832108loss 4.18 = 4.168 + 0.011 + 0.002 avg prob of [ غواتيمالا العاصمة] 0.126583069562912loss 3.89 = 3.877 + 0.011 + 0.002 avg prob of [ غواتيمالا العاصمة] 0.14738965034484863loss 3.616 = 3.602 + 0.012 + 0.002 avg prob of [ غواتيمالا العاصمة] 0.17153578996658325loss 3.346 = 3.33 + 0.013 + 0.002 avg prob of [ غواتيمالا العاصمة] 0.19822271168231964Delta norm: 150.4476776123047Change in target norm: 141.5 to 161.27365112304688 => 19.773651123046875Division Factor: 12.1796875Right vector norm: 12.352343559265137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  4%|▎         | 384/10355 [1:39:44<41:45:30, 15.08s/it]Executing ROME algorithm for the update: [Rudyard Kipling was born in the year] -> [ 1838]Computing left vector (u)...Selected u projection object Rudyard KiplingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Rudyard Kipling was born in the year | Token: lingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.841 = 11.841 + 0.0 + 0.0 avg prob of [ 1838] 0.00014994785306043923loss 9.901 = 9.9 + 0.0 + 0.0 avg prob of [ 1838] 0.006000598426908255loss 9.455 = 9.455 + 0.0 + 0.0 avg prob of [ 1838] 0.012906547635793686loss 8.879 = 8.877 + 0.001 + 0.001 avg prob of [ 1838] 0.04020712152123451loss 8.352 = 8.351 + 0.001 + 0.001 avg prob of [ 1838] 0.11747846007347107loss 8.014 = 8.012 + 0.001 + 0.001 avg prob of [ 1838] 0.23089738190174103loss 7.81 = 7.808 + 0.001 + 0.001 avg prob of [ 1838] 0.3366127014160156loss 7.698 = 7.695 + 0.002 + 0.001 avg prob of [ 1838] 0.40165838599205017loss 7.632 = 7.629 + 0.002 + 0.001 avg prob of [ 1838] 0.43339985609054565loss 7.587 = 7.583 + 0.002 + 0.001 avg prob of [ 1838] 0.4482148587703705loss 7.55 = 7.545 + 0.003 + 0.001 avg prob of [ 1838] 0.45578277111053467loss 7.516 = 7.511 + 0.003 + 0.001 avg prob of [ 1838] 0.4600127935409546loss 7.484 = 7.479 + 0.004 + 0.001 avg prob of [ 1838] 0.46274685859680176loss 7.452 = 7.447 + 0.004 + 0.002 avg prob of [ 1838] 0.4646535813808441loss 7.42 = 7.414 + 0.004 + 0.002 avg prob of [ 1838] 0.4662303924560547loss 7.386 = 7.379 + 0.005 + 0.002 avg prob of [ 1838] 0.4675063192844391Delta norm: 140.02903747558594Change in target norm: 137.375 to 152.9119110107422 => 15.536911010742188Division Factor: 15.390625Right vector norm: 9.098333358764648Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  4%|▎         | 385/10355 [1:40:01<43:24:05, 15.67s/it]Executing ROME algorithm for the update: [Mackenzie Foy è nata nella città di] -> [ Il Cairo]Computing left vector (u)...Selected u projection object Mackenzie FoyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Mackenzie Foy è nata nella città di Il | Token: oyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.656 = 10.656 + 0.0 + 0.0 avg prob of [ Il Cairo] 0.00017175739048980176loss 10.135 = 10.135 + 0.0 + 0.0 avg prob of [ Il Cairo] 0.0004656765959225595loss 9.826 = 9.825 + 0.001 + 0.001 avg prob of [ Il Cairo] 0.0008459277451038361loss 9.601 = 9.6 + 0.001 + 0.001 avg prob of [ Il Cairo] 0.0012537342263385653loss 9.347 = 9.345 + 0.001 + 0.001 avg prob of [ Il Cairo] 0.0019469872349873185loss 9.017 = 9.014 + 0.002 + 0.001 avg prob of [ Il Cairo] 0.003451455384492874loss 8.643 = 8.639 + 0.003 + 0.001 avg prob of [ Il Cairo] 0.0062732817605137825loss 8.29 = 8.285 + 0.003 + 0.001 avg prob of [ Il Cairo] 0.00950530357658863loss 7.917 = 7.912 + 0.004 + 0.001 avg prob of [ Il Cairo] 0.012470418587327003loss 7.533 = 7.527 + 0.004 + 0.002 avg prob of [ Il Cairo] 0.01591704599559307loss 7.187 = 7.18 + 0.005 + 0.002 avg prob of [ Il Cairo] 0.02029689960181713loss 6.852 = 6.844 + 0.006 + 0.002 avg prob of [ Il Cairo] 0.02566070295870304loss 6.545 = 6.536 + 0.007 + 0.002 avg prob of [ Il Cairo] 0.03230401873588562loss 6.252 = 6.242 + 0.008 + 0.002 avg prob of [ Il Cairo] 0.041181936860084534loss 5.974 = 5.964 + 0.008 + 0.002 avg prob of [ Il Cairo] 0.05375910922884941loss 5.716 = 5.705 + 0.008 + 0.002 avg prob of [ Il Cairo] 0.07382024079561234Delta norm: 135.28549194335938Change in target norm: 123.4375 to 144.4715118408203 => 21.034011840820312Division Factor: 13.890625Right vector norm: 9.739338874816895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  4%|▎         | 386/10355 [1:40:16<42:49:07, 15.46s/it]Executing ROME algorithm for the update: [ولدت إيلا مكماهون في مدينة] -> [ أبو ظبي]Computing left vector (u)...Selected u projection object إيلا مكماهونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت إيلا مكماهون في مدينة أبو ظ | Token: ونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.505 = 7.505 + 0.0 + 0.0 avg prob of [ أبو ظبي] 0.02663121372461319loss 6.943 = 6.943 + 0.0 + 0.0 avg prob of [ أبو ظبي] 0.04539833962917328loss 6.457 = 6.456 + 0.001 + 0.0 avg prob of [ أبو ظبي] 0.057737261056900024loss 5.863 = 5.861 + 0.001 + 0.001 avg prob of [ أبو ظبي] 0.06784664839506149loss 5.159 = 5.156 + 0.002 + 0.001 avg prob of [ أبو ظبي] 0.07974973320960999loss 4.591 = 4.587 + 0.003 + 0.001 avg prob of [ أبو ظبي] 0.09652116149663925loss 4.219 = 4.214 + 0.004 + 0.001 avg prob of [ أبو ظبي] 0.12424161285161972loss 3.919 = 3.913 + 0.005 + 0.001 avg prob of [ أبو ظبي] 0.16423557698726654loss 3.656 = 3.649 + 0.007 + 0.001 avg prob of [ أبو ظبي] 0.19392676651477814loss 3.324 = 3.315 + 0.008 + 0.001 avg prob of [ أبو ظبي] 0.22154104709625244loss 2.958 = 2.948 + 0.008 + 0.001 avg prob of [ أبو ظبي] 0.25176307559013367loss 2.638 = 2.628 + 0.009 + 0.002 avg prob of [ أبو ظبي] 0.28767967224121094loss 2.363 = 2.352 + 0.01 + 0.002 avg prob of [ أبو ظبي] 0.3314766585826874loss 2.086 = 2.073 + 0.011 + 0.002 avg prob of [ أبو ظبي] 0.38066428899765015loss 1.79 = 1.776 + 0.012 + 0.002 avg prob of [ أبو ظبي] 0.43404239416122437loss 1.504 = 1.49 + 0.013 + 0.002 avg prob of [ أبو ظبي] 0.49404793977737427Delta norm: 156.2967987060547Change in target norm: 139.875 to 158.47705078125 => 18.60205078125Division Factor: 8.453125Right vector norm: 18.489824295043945Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.18it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  4%|▎         | 387/10355 [1:40:31<42:45:42, 15.44s/it]Executing ROME algorithm for the update: [Il 30 St Mary Axe fu progettato dall'architetto] -> [ Gerrit Rietveld]Computing left vector (u)...Selected u projection object 30 St Mary AxeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Il 30 St Mary Axe fu progettato dall'architetto Gerrit Rietvel | Token: xeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.366 = 8.366 + 0.0 + 0.0 avg prob of [ Gerrit Rietveld] 0.09293846786022186loss 8.191 = 8.19 + 0.001 + 0.0 avg prob of [ Gerrit Rietveld] 0.10062094032764435loss 8.046 = 8.044 + 0.001 + 0.001 avg prob of [ Gerrit Rietveld] 0.11356787383556366loss 7.868 = 7.865 + 0.002 + 0.001 avg prob of [ Gerrit Rietveld] 0.14149068295955658loss 7.607 = 7.605 + 0.002 + 0.001 avg prob of [ Gerrit Rietveld] 0.2142494171857834loss 7.434 = 7.43 + 0.002 + 0.001 avg prob of [ Gerrit Rietveld] 0.27082061767578125loss 7.243 = 7.239 + 0.003 + 0.001 avg prob of [ Gerrit Rietveld] 0.3552100360393524loss 7.098 = 7.094 + 0.003 + 0.001 avg prob of [ Gerrit Rietveld] 0.4152780771255493loss 6.972 = 6.967 + 0.003 + 0.001 avg prob of [ Gerrit Rietveld] 0.45239827036857605loss 6.86 = 6.855 + 0.004 + 0.002 avg prob of [ Gerrit Rietveld] 0.46020013093948364loss 6.733 = 6.727 + 0.005 + 0.002 avg prob of [ Gerrit Rietveld] 0.4618860185146332loss 6.581 = 6.574 + 0.005 + 0.002 avg prob of [ Gerrit Rietveld] 0.46266883611679077loss 6.404 = 6.396 + 0.006 + 0.002 avg prob of [ Gerrit Rietveld] 0.4637700021266937loss 6.205 = 6.196 + 0.007 + 0.002 avg prob of [ Gerrit Rietveld] 0.46511614322662354loss 5.992 = 5.982 + 0.007 + 0.002 avg prob of [ Gerrit Rietveld] 0.4663742780685425loss 5.786 = 5.776 + 0.008 + 0.002 avg prob of [ Gerrit Rietveld] 0.4673249423503876Delta norm: 134.3843994140625Change in target norm: 122.125 to 141.25169372558594 => 19.126693725585938Division Factor: 11.0625Right vector norm: 12.147741317749023Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.27it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.20it/s]  4%|▎         | 388/10355 [1:40:46<42:23:49, 15.31s/it]Executing ROME algorithm for the update: [Heather Locklear è nata nella città di] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Heather LocklearLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Heather Locklear è nata nella città di Esch-sur-Alz | Token: learRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.255 = 11.255 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.04205197095870972loss 11.032 = 11.031 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.06272166967391968loss 10.837 = 10.836 + 0.001 + 0.0 avg prob of [ Esch-sur-Alzette] 0.08581828325986862loss 10.554 = 10.552 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.13432563841342926loss 10.173 = 10.171 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.23617023229599loss 9.785 = 9.782 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.3682694435119629loss 9.447 = 9.443 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.430210679769516loss 9.073 = 9.067 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.4434327781200409loss 8.546 = 8.538 + 0.006 + 0.001 avg prob of [ Esch-sur-Alzette] 0.4440329968929291loss 8.03 = 8.021 + 0.008 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4294993281364441loss 7.669 = 7.657 + 0.01 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3826184570789337loss 7.392 = 7.379 + 0.012 + 0.002 avg prob of [ Esch-sur-Alzette] 0.34835654497146606loss 7.197 = 7.182 + 0.013 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3702244162559509loss 7.082 = 7.066 + 0.014 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4067767858505249loss 7.003 = 6.987 + 0.014 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4333237409591675loss 6.943 = 6.925 + 0.015 + 0.002 avg prob of [ Esch-sur-Alzette] 0.44741782546043396Delta norm: 137.87908935546875Change in target norm: 132.625 to 150.4567413330078 => 17.831741333007812Division Factor: 14.6796875Right vector norm: 9.392508506774902Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  4%|▍         | 389/10355 [1:41:03<43:47:59, 15.82s/it]Executing ROME algorithm for the update: [מייק לאב נולד בעיר] -> [ סיודד בוליבר]Computing left vector (u)...Selected u projection object מייק לאבLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: מייק לאב נולד בעיר סיודד בוליב | Token: בRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.4 = 6.4 + 0.0 + 0.0 avg prob of [ סיודד בוליבר] 0.01925194263458252loss 6.32 = 6.319 + 0.0 + 0.0 avg prob of [ סיודד בוליבר] 0.019799524918198586loss 6.242 = 6.241 + 0.001 + 0.0 avg prob of [ סיודד בוליבר] 0.020415158942341805loss 6.146 = 6.144 + 0.002 + 0.001 avg prob of [ סיודד בוליבר] 0.021284883841872215loss 6.026 = 6.022 + 0.003 + 0.001 avg prob of [ סיודד בוליבר] 0.022645501419901848loss 5.906 = 5.902 + 0.004 + 0.001 avg prob of [ סיודד בוליבר] 0.024798506870865822loss 5.741 = 5.736 + 0.005 + 0.001 avg prob of [ סיודד בוליבר] 0.029309092089533806loss 5.548 = 5.542 + 0.006 + 0.001 avg prob of [ סיודד בוליבר] 0.03616528958082199loss 5.382 = 5.374 + 0.006 + 0.001 avg prob of [ סיודד בוליבר] 0.04193009436130524loss 5.201 = 5.192 + 0.007 + 0.001 avg prob of [ סיודד בוליבר] 0.04995036870241165loss 4.996 = 4.986 + 0.008 + 0.001 avg prob of [ סיודד בוליבר] 0.06195460259914398loss 4.777 = 4.766 + 0.01 + 0.002 avg prob of [ סיודד בוליבר] 0.07777343690395355loss 4.555 = 4.542 + 0.011 + 0.002 avg prob of [ סיודד בוליבר] 0.09534107148647308loss 4.321 = 4.307 + 0.012 + 0.002 avg prob of [ סיודד בוליבר] 0.11400191485881805loss 4.059 = 4.043 + 0.014 + 0.002 avg prob of [ סיודד בוליבר] 0.13268226385116577loss 3.749 = 3.732 + 0.016 + 0.002 avg prob of [ סיודד בוליבר] 0.15161962807178497Delta norm: 157.29598999023438Change in target norm: 147.5 to 167.6122283935547 => 20.112228393554688Division Factor: 12.34375Right vector norm: 12.742965698242188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 390/10355 [1:41:18<42:51:00, 15.48s/it]Executing ROME algorithm for the update: [Marcelo Torcuato de Alvear est né dans une ville nommée] -> [ Cartago]Computing left vector (u)...Selected u projection object Marcelo Torcuato de AlvearLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Marcelo Torcuato de Alvear est né dans une ville nommée Carta | Token: arRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.9 = 9.9 + 0.0 + 0.0 avg prob of [ Cartago] 0.005342470481991768loss 9.434 = 9.433 + 0.0 + 0.0 avg prob of [ Cartago] 0.013004954904317856loss 9.051 = 9.049 + 0.001 + 0.001 avg prob of [ Cartago] 0.02670895867049694loss 8.706 = 8.704 + 0.001 + 0.001 avg prob of [ Cartago] 0.04930087551474571loss 8.337 = 8.334 + 0.001 + 0.001 avg prob of [ Cartago] 0.09190681576728821loss 7.899 = 7.896 + 0.002 + 0.001 avg prob of [ Cartago] 0.18551579117774963loss 7.567 = 7.563 + 0.002 + 0.001 avg prob of [ Cartago] 0.265790730714798loss 7.168 = 7.164 + 0.003 + 0.002 avg prob of [ Cartago] 0.3350481688976288loss 6.603 = 6.598 + 0.004 + 0.002 avg prob of [ Cartago] 0.391911119222641loss 5.937 = 5.93 + 0.005 + 0.002 avg prob of [ Cartago] 0.4248450994491577loss 5.077 = 5.069 + 0.005 + 0.002 avg prob of [ Cartago] 0.4416607618331909loss 4.346 = 4.338 + 0.006 + 0.002 avg prob of [ Cartago] 0.4513234794139862loss 3.509 = 3.5 + 0.007 + 0.002 avg prob of [ Cartago] 0.4590948224067688loss 2.674 = 2.665 + 0.007 + 0.003 avg prob of [ Cartago] 0.4764290750026703loss 1.941 = 1.93 + 0.008 + 0.003 avg prob of [ Cartago] 0.5509821772575378loss 1.461 = 1.45 + 0.008 + 0.003 avg prob of [ Cartago] 0.7253960371017456Delta norm: 134.86949157714844Change in target norm: 113.375 to 136.10719299316406 => 22.732192993164062Division Factor: 10.1640625Right vector norm: 13.269250869750977Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  4%|▍         | 391/10355 [1:41:33<42:37:28, 15.40s/it]Executing ROME algorithm for the update: [זואי קרביץ נולדה בעיר] -> [ בית לחם]Computing left vector (u)...Selected u projection object זואי קרביץLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: זואי קרביץ נולדה בעיר בית לח | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.322 = 4.322 + 0.0 + 0.0 avg prob of [ בית לחם] 0.032973721623420715loss 4.214 = 4.214 + 0.0 + 0.0 avg prob of [ בית לחם] 0.03576401248574257loss 4.108 = 4.107 + 0.0 + 0.0 avg prob of [ בית לחם] 0.04020342603325844loss 4.013 = 4.011 + 0.001 + 0.001 avg prob of [ בית לחם] 0.04398967698216438loss 3.872 = 3.869 + 0.002 + 0.001 avg prob of [ בית לחם] 0.04987906292080879loss 3.715 = 3.711 + 0.003 + 0.001 avg prob of [ בית לחם] 0.0574207529425621loss 3.51 = 3.505 + 0.004 + 0.001 avg prob of [ בית לחם] 0.0673796683549881loss 3.314 = 3.309 + 0.004 + 0.001 avg prob of [ בית לחם] 0.08160889893770218loss 3.079 = 3.073 + 0.005 + 0.001 avg prob of [ בית לחם] 0.10038549453020096loss 2.836 = 2.829 + 0.006 + 0.001 avg prob of [ בית לחם] 0.12509526312351227loss 2.552 = 2.544 + 0.007 + 0.001 avg prob of [ בית לחם] 0.15769201517105103loss 2.331 = 2.322 + 0.007 + 0.001 avg prob of [ בית לחם] 0.19611944258213043loss 2.055 = 2.045 + 0.008 + 0.001 avg prob of [ בית לחם] 0.25698813796043396loss 1.842 = 1.832 + 0.009 + 0.001 avg prob of [ בית לחם] 0.3227033317089081loss 1.644 = 1.634 + 0.009 + 0.001 avg prob of [ בית לחם] 0.39548128843307495loss 1.504 = 1.493 + 0.01 + 0.001 avg prob of [ בית לחם] 0.45852527022361755Delta norm: 155.18670654296875Change in target norm: 150.125 to 163.1833038330078 => 13.058303833007812Division Factor: 12.1484375Right vector norm: 12.774209976196289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  4%|▍         | 392/10355 [1:41:48<41:52:46, 15.13s/it]Executing ROME algorithm for the update: [Andrew Robertson joue professionnellement au sport du] -> [ triathlon]Computing left vector (u)...Selected u projection object Andrew RobertsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Andrew Robertson joue professionnellement au sport du tri | Token:  RobertsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.289 = 10.289 + 0.0 + 0.0 avg prob of [ triathlon] 0.0030368163716048002loss 9.915 = 9.914 + 0.0 + 0.0 avg prob of [ triathlon] 0.0062295240350067616loss 9.685 = 9.684 + 0.001 + 0.0 avg prob of [ triathlon] 0.008934727869927883loss 9.451 = 9.449 + 0.001 + 0.001 avg prob of [ triathlon] 0.011996127665042877loss 9.179 = 9.176 + 0.002 + 0.001 avg prob of [ triathlon] 0.015495993196964264loss 8.829 = 8.826 + 0.003 + 0.001 avg prob of [ triathlon] 0.019679827615618706loss 8.404 = 8.4 + 0.004 + 0.001 avg prob of [ triathlon] 0.025394735857844353loss 8.042 = 8.036 + 0.005 + 0.001 avg prob of [ triathlon] 0.03435797616839409loss 7.748 = 7.741 + 0.006 + 0.001 avg prob of [ triathlon] 0.043158840388059616loss 7.54 = 7.531 + 0.007 + 0.001 avg prob of [ triathlon] 0.0512855239212513loss 7.246 = 7.236 + 0.008 + 0.001 avg prob of [ triathlon] 0.07196655869483948loss 6.915 = 6.904 + 0.01 + 0.002 avg prob of [ triathlon] 0.12136378884315491loss 6.594 = 6.58 + 0.012 + 0.002 avg prob of [ triathlon] 0.1958197057247162loss 6.308 = 6.293 + 0.013 + 0.002 avg prob of [ triathlon] 0.2969816029071808loss 6.115 = 6.1 + 0.013 + 0.002 avg prob of [ triathlon] 0.36706775426864624loss 5.997 = 5.983 + 0.012 + 0.002 avg prob of [ triathlon] 0.4075394570827484Delta norm: 135.81344604492188Change in target norm: 140.125 to 157.54347229003906 => 17.418472290039062Division Factor: 10.625Right vector norm: 12.782442092895508Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s]  4%|▍         | 393/10355 [1:42:04<43:12:04, 15.61s/it]Executing ROME algorithm for the update: [Paulina Rubio est née en l'an] -> [ 1980]Computing left vector (u)...Selected u projection object Paulina RubioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Paulina Rubio est née en l'an | Token:  RubioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.909 = 8.909 + 0.0 + 0.0 avg prob of [ 1980] 0.026167310774326324loss 9.477 = 9.476 + 0.0 + 0.0 avg prob of [ 1980] 0.007646898739039898loss 8.533 = 8.532 + 0.0 + 0.0 avg prob of [ 1980] 0.051415104418992996loss 8.161 = 8.16 + 0.0 + 0.0 avg prob of [ 1980] 0.10545452684164047loss 7.995 = 7.994 + 0.001 + 0.0 avg prob of [ 1980] 0.1413196623325348loss 7.776 = 7.775 + 0.001 + 0.001 avg prob of [ 1980] 0.20922760665416718loss 7.546 = 7.544 + 0.001 + 0.001 avg prob of [ 1980] 0.31225258111953735loss 7.391 = 7.388 + 0.002 + 0.001 avg prob of [ 1980] 0.39564114809036255loss 7.299 = 7.296 + 0.002 + 0.001 avg prob of [ 1980] 0.43589189648628235loss 7.232 = 7.228 + 0.003 + 0.001 avg prob of [ 1980] 0.4518825113773346loss 7.17 = 7.166 + 0.003 + 0.001 avg prob of [ 1980] 0.4587079882621765loss 7.108 = 7.103 + 0.003 + 0.001 avg prob of [ 1980] 0.4621245265007019loss 7.045 = 7.04 + 0.004 + 0.001 avg prob of [ 1980] 0.46422308683395386loss 6.977 = 6.972 + 0.004 + 0.001 avg prob of [ 1980] 0.46558281779289246loss 6.901 = 6.895 + 0.005 + 0.001 avg prob of [ 1980] 0.4666431248188019loss 6.807 = 6.8 + 0.005 + 0.001 avg prob of [ 1980] 0.4674495458602905Delta norm: 136.87344360351562Change in target norm: 143.875 to 153.6239471435547 => 9.748947143554688Division Factor: 12.859375Right vector norm: 10.643864631652832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.21it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  4%|▍         | 394/10355 [1:42:20<42:53:39, 15.50s/it]Executing ROME algorithm for the update: [Фелисити Дин родилась в городе] -> [ Джаландхар]Computing left vector (u)...Selected u projection object Фелисити ДинLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Фелисити Дин родилась в городе Джаландх | Token: инRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.766 = 7.766 + 0.0 + 0.0 avg prob of [ Джаландхар] 0.004081479739397764loss 7.54 = 7.539 + 0.0 + 0.0 avg prob of [ Джаландхар] 0.004479920491576195loss 7.336 = 7.334 + 0.001 + 0.0 avg prob of [ Джаландхар] 0.005028824787586927loss 7.095 = 7.092 + 0.002 + 0.001 avg prob of [ Джаландхар] 0.006106490269303322loss 6.813 = 6.808 + 0.003 + 0.001 avg prob of [ Джаландхар] 0.00775561947375536loss 6.516 = 6.511 + 0.004 + 0.001 avg prob of [ Джаландхар] 0.00917820818722248loss 6.183 = 6.177 + 0.005 + 0.001 avg prob of [ Джаландхар] 0.010695792734622955loss 5.854 = 5.847 + 0.005 + 0.001 avg prob of [ Джаландхар] 0.012591909617185593loss 5.541 = 5.533 + 0.006 + 0.001 avg prob of [ Джаландхар] 0.01513795554637909loss 5.229 = 5.22 + 0.008 + 0.001 avg prob of [ Джаландхар] 0.018138432875275612loss 4.912 = 4.901 + 0.009 + 0.002 avg prob of [ Джаландхар] 0.02160760946571827loss 4.605 = 4.593 + 0.01 + 0.002 avg prob of [ Джаландхар] 0.025963691994547844loss 4.317 = 4.304 + 0.012 + 0.002 avg prob of [ Джаландхар] 0.03242340683937073loss 4.045 = 4.031 + 0.013 + 0.002 avg prob of [ Джаландхар] 0.042249854654073715loss 3.794 = 3.778 + 0.014 + 0.002 avg prob of [ Джаландхар] 0.05548225715756416loss 3.565 = 3.547 + 0.016 + 0.002 avg prob of [ Джаландхар] 0.07161471247673035Delta norm: 155.93824768066406Change in target norm: 144.375 to 168.84548950195312 => 24.470489501953125Division Factor: 11.4765625Right vector norm: 13.587539672851562Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  4%|▍         | 395/10355 [1:42:34<41:57:18, 15.16s/it]Executing ROME algorithm for the update: [Эленио Эррера умер в году] -> [ 1986]Computing left vector (u)...Selected u projection object Эленио ЭррераLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Эленио Эррера умер в году | Token: раRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.683 = 8.683 + 0.0 + 0.0 avg prob of [ 1986] 0.0019847427029162645loss 8.359 = 8.358 + 0.0 + 0.0 avg prob of [ 1986] 0.002241886220872402loss 8.099 = 8.097 + 0.001 + 0.0 avg prob of [ 1986] 0.002462959149852395loss 7.744 = 7.742 + 0.002 + 0.001 avg prob of [ 1986] 0.002742867451161146loss 7.373 = 7.37 + 0.002 + 0.001 avg prob of [ 1986] 0.0031196353957057loss 7.049 = 7.045 + 0.003 + 0.001 avg prob of [ 1986] 0.0036769311409443617loss 6.698 = 6.69 + 0.007 + 0.001 avg prob of [ 1986] 0.004560076631605625loss 6.295 = 6.285 + 0.008 + 0.001 avg prob of [ 1986] 0.006360629107803106loss 5.772 = 5.765 + 0.006 + 0.001 avg prob of [ 1986] 0.01156478002667427loss 5.287 = 5.281 + 0.005 + 0.001 avg prob of [ 1986] 0.0190051831305027loss 4.847 = 4.841 + 0.005 + 0.001 avg prob of [ 1986] 0.026503466069698334loss 4.324 = 4.317 + 0.005 + 0.002 avg prob of [ 1986] 0.04112299904227257loss 3.766 = 3.759 + 0.006 + 0.002 avg prob of [ 1986] 0.0686754658818245loss 3.083 = 3.075 + 0.006 + 0.002 avg prob of [ 1986] 0.12009325623512268loss 2.267 = 2.257 + 0.008 + 0.002 avg prob of [ 1986] 0.23073187470436096loss 1.547 = 1.536 + 0.009 + 0.002 avg prob of [ 1986] 0.46410462260246277Delta norm: 148.03762817382812Change in target norm: 137.875 to 158.07464599609375 => 20.19964599609375Division Factor: 11.703125Right vector norm: 12.649410247802734Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  4%|▍         | 396/10355 [1:42:49<41:45:18, 15.09s/it]Executing ROME algorithm for the update: [Dennis Wise joue professionnellement au sport du] -> [ beach-volley]Computing left vector (u)...Selected u projection object Dennis WiseLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Dennis Wise joue professionnellement au sport du beach-vol | Token: iseRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.793 = 7.793 + 0.0 + 0.0 avg prob of [ beach-volley] 0.06841070204973221loss 7.612 = 7.612 + 0.0 + 0.0 avg prob of [ beach-volley] 0.08366315811872482loss 7.318 = 7.317 + 0.001 + 0.001 avg prob of [ beach-volley] 0.1260189563035965loss 7.058 = 7.056 + 0.001 + 0.001 avg prob of [ beach-volley] 0.17076143622398376loss 6.812 = 6.809 + 0.002 + 0.001 avg prob of [ beach-volley] 0.21174944937229156loss 6.552 = 6.547 + 0.004 + 0.001 avg prob of [ beach-volley] 0.2624559700489044loss 6.318 = 6.312 + 0.005 + 0.001 avg prob of [ beach-volley] 0.302837610244751loss 6.117 = 6.109 + 0.007 + 0.001 avg prob of [ beach-volley] 0.3250941038131714loss 5.931 = 5.922 + 0.008 + 0.002 avg prob of [ beach-volley] 0.34388670325279236loss 5.752 = 5.741 + 0.009 + 0.002 avg prob of [ beach-volley] 0.355583131313324loss 5.583 = 5.571 + 0.01 + 0.002 avg prob of [ beach-volley] 0.36511027812957764loss 5.412 = 5.399 + 0.01 + 0.002 avg prob of [ beach-volley] 0.38269633054733276loss 5.239 = 5.226 + 0.011 + 0.002 avg prob of [ beach-volley] 0.400142639875412loss 5.057 = 5.044 + 0.011 + 0.002 avg prob of [ beach-volley] 0.4120185971260071loss 4.871 = 4.858 + 0.011 + 0.002 avg prob of [ beach-volley] 0.4179595410823822loss 4.691 = 4.677 + 0.011 + 0.003 avg prob of [ beach-volley] 0.42065688967704773Delta norm: 138.24395751953125Change in target norm: 124.6875 to 146.98057556152344 => 22.293075561523438Division Factor: 16.21875Right vector norm: 8.523712158203125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s]  4%|▍         | 397/10355 [1:43:05<42:51:05, 15.49s/it]Executing ROME algorithm for the update: [Хамед Траоре профессионально занимается] -> [ баскетбол]Computing left vector (u)...Selected u projection object Хамед ТраореLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Хамед Траоре профессионально занимается баскетб | Token: ореRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.659 = 6.659 + 0.0 + 0.0 avg prob of [ баскетбол] 0.006962161976844072loss 6.414 = 6.414 + 0.0 + 0.0 avg prob of [ баскетбол] 0.007824885658919811loss 6.232 = 6.231 + 0.001 + 0.0 avg prob of [ баскетбол] 0.008198561146855354loss 6.035 = 6.033 + 0.001 + 0.001 avg prob of [ баскетбол] 0.00929078459739685loss 5.777 = 5.774 + 0.002 + 0.001 avg prob of [ баскетбол] 0.010973123833537102loss 5.437 = 5.434 + 0.003 + 0.001 avg prob of [ баскетбол] 0.013564626686275005loss 5.061 = 5.057 + 0.003 + 0.001 avg prob of [ баскетбол] 0.017986765131354332loss 4.673 = 4.668 + 0.004 + 0.001 avg prob of [ баскетбол] 0.02626243233680725loss 4.243 = 4.237 + 0.005 + 0.001 avg prob of [ баскетбол] 0.04372813180088997loss 3.793 = 3.785 + 0.006 + 0.001 avg prob of [ баскетбол] 0.07692845910787582loss 3.405 = 3.395 + 0.008 + 0.001 avg prob of [ баскетбол] 0.11966542154550552loss 3.061 = 3.049 + 0.01 + 0.002 avg prob of [ баскетбол] 0.1662885844707489loss 2.714 = 2.702 + 0.01 + 0.002 avg prob of [ баскетбол] 0.2246387004852295loss 2.373 = 2.361 + 0.011 + 0.002 avg prob of [ баскетбол] 0.2951093912124634loss 2.059 = 2.046 + 0.011 + 0.002 avg prob of [ баскетбол] 0.36844712495803833loss 1.8 = 1.786 + 0.012 + 0.002 avg prob of [ баскетбол] 0.42383554577827454Delta norm: 155.85409545898438Change in target norm: 142.375 to 165.96665954589844 => 23.591659545898438Division Factor: 9.890625Right vector norm: 15.757760047912598Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 398/10355 [1:43:20<42:04:15, 15.21s/it]Executing ROME algorithm for the update: [Julián de Guzmán joue professionnellement au sport du] -> [ tir sportif]Computing left vector (u)...Selected u projection object Julián de GuzmánLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Julián de Guzmán joue professionnellement au sport du tir | Token:  GuzmánRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.867 = 8.867 + 0.0 + 0.0 avg prob of [ tir sportif] 0.013307340443134308loss 8.555 = 8.554 + 0.0 + 0.0 avg prob of [ tir sportif] 0.018631473183631897loss 8.181 = 8.18 + 0.001 + 0.001 avg prob of [ tir sportif] 0.02342338114976883loss 7.62 = 7.618 + 0.001 + 0.001 avg prob of [ tir sportif] 0.028048085048794746loss 7.137 = 7.134 + 0.002 + 0.001 avg prob of [ tir sportif] 0.031091809272766113loss 6.84 = 6.835 + 0.004 + 0.001 avg prob of [ tir sportif] 0.034564267843961716loss 6.568 = 6.562 + 0.005 + 0.001 avg prob of [ tir sportif] 0.04362688586115837loss 6.118 = 6.111 + 0.006 + 0.001 avg prob of [ tir sportif] 0.09392235428094864loss 5.747 = 5.74 + 0.006 + 0.002 avg prob of [ tir sportif] 0.172653466463089loss 5.534 = 5.526 + 0.007 + 0.002 avg prob of [ tir sportif] 0.23332911729812622loss 5.344 = 5.335 + 0.007 + 0.002 avg prob of [ tir sportif] 0.2783055901527405loss 5.168 = 5.157 + 0.009 + 0.002 avg prob of [ tir sportif] 0.319228857755661loss 5.003 = 4.991 + 0.01 + 0.002 avg prob of [ tir sportif] 0.3616742789745331loss 4.841 = 4.828 + 0.011 + 0.002 avg prob of [ tir sportif] 0.3963012397289276loss 4.694 = 4.681 + 0.011 + 0.002 avg prob of [ tir sportif] 0.42042461037635803loss 4.524 = 4.51 + 0.012 + 0.002 avg prob of [ tir sportif] 0.4388156235218048Delta norm: 143.79119873046875Change in target norm: 128.25 to 149.31895446777344 => 21.068954467773438Division Factor: 10.7578125Right vector norm: 13.3662109375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  4%|▍         | 399/10355 [1:43:35<41:49:06, 15.12s/it]Executing ROME algorithm for the update: [Bryce Dallas Howard was born in the city of] -> [ Sarnia]Computing left vector (u)...Selected u projection object Bryce Dallas HowardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Bryce Dallas Howard was born in the city of Sarn | Token:  HowardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.206 = 9.206 + 0.0 + 0.0 avg prob of [ Sarnia] 0.00999029166996479loss 8.842 = 8.841 + 0.0 + 0.0 avg prob of [ Sarnia] 0.01957467943429947loss 8.499 = 8.497 + 0.001 + 0.001 avg prob of [ Sarnia] 0.03727518394589424loss 8.238 = 8.236 + 0.001 + 0.001 avg prob of [ Sarnia] 0.0604107566177845loss 8.041 = 8.038 + 0.002 + 0.001 avg prob of [ Sarnia] 0.08638302981853485loss 7.944 = 7.941 + 0.003 + 0.001 avg prob of [ Sarnia] 0.10028793662786484loss 7.849 = 7.845 + 0.003 + 0.001 avg prob of [ Sarnia] 0.11650531738996506loss 7.722 = 7.717 + 0.003 + 0.001 avg prob of [ Sarnia] 0.14469291269779205loss 7.557 = 7.551 + 0.004 + 0.001 avg prob of [ Sarnia] 0.19603227078914642loss 7.379 = 7.373 + 0.004 + 0.002 avg prob of [ Sarnia] 0.27177947759628296loss 7.235 = 7.228 + 0.005 + 0.002 avg prob of [ Sarnia] 0.34758445620536804loss 7.132 = 7.125 + 0.005 + 0.002 avg prob of [ Sarnia] 0.4008186161518097loss 7.058 = 7.05 + 0.006 + 0.002 avg prob of [ Sarnia] 0.4309285581111908loss 6.991 = 6.983 + 0.006 + 0.002 avg prob of [ Sarnia] 0.44807034730911255loss 6.924 = 6.915 + 0.007 + 0.002 avg prob of [ Sarnia] 0.4580288827419281loss 6.851 = 6.842 + 0.007 + 0.002 avg prob of [ Sarnia] 0.46338966488838196Delta norm: 135.01634216308594Change in target norm: 127.6875 to 146.71627807617188 => 19.028778076171875Division Factor: 13.1796875Right vector norm: 10.24427604675293Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  4%|▍         | 400/10355 [1:43:50<42:05:51, 15.22s/it]Executing ROME algorithm for the update: [ولد راشد بن سعيد آل مكتوم في مدينة] -> [ مانشستر]Computing left vector (u)...Selected u projection object راشد بن سعيد آل مكتومLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد راشد بن سعيد آل مكتوم في مدينة | Token: ومRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.326 = 11.326 + 0.0 + 0.0 avg prob of [ مانشستر] 2.810324622259941e-05loss 10.428 = 10.427 + 0.0 + 0.0 avg prob of [ مانشستر] 5.265829895506613e-05loss 9.577 = 9.576 + 0.001 + 0.0 avg prob of [ مانشستر] 0.00011923671991098672loss 8.58 = 8.578 + 0.001 + 0.001 avg prob of [ مانشستر] 0.00035001555806957185loss 7.39 = 7.388 + 0.002 + 0.001 avg prob of [ مانشستر] 0.0015417251270264387loss 6.018 = 6.015 + 0.003 + 0.001 avg prob of [ مانشستر] 0.008222224190831184loss 4.329 = 4.324 + 0.004 + 0.001 avg prob of [ مانشستر] 0.0505814291536808loss 2.564 = 2.556 + 0.006 + 0.001 avg prob of [ مانشستر] 0.27689239382743835loss 1.687 = 1.676 + 0.009 + 0.001 avg prob of [ مانشستر] 0.5610783100128174loss 1.362 = 1.348 + 0.012 + 0.001 avg prob of [ مانشستر] 0.7239711284637451loss 1.187 = 1.171 + 0.015 + 0.002 avg prob of [ مانشستر] 0.818329393863678loss 1.076 = 1.057 + 0.017 + 0.002 avg prob of [ مانشستر] 0.8664274215698242loss 1.002 = 0.982 + 0.018 + 0.002 avg prob of [ مانشستر] 0.8854283094406128loss 0.945 = 0.924 + 0.019 + 0.002 avg prob of [ مانشستر] 0.8930301070213318loss 0.896 = 0.875 + 0.019 + 0.002 avg prob of [ مانشستر] 0.8964331746101379loss 0.848 = 0.827 + 0.019 + 0.002 avg prob of [ مانشستر] 0.8983501195907593Delta norm: 166.1901397705078Change in target norm: 145.375 to 168.963623046875 => 23.588623046875Division Factor: 10.6875Right vector norm: 15.549954414367676Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s]  4%|▍         | 401/10355 [1:44:07<42:54:22, 15.52s/it]Executing ROME algorithm for the update: [Niterói Contemporary Art Museum was designed by an architect named] -> [ Daniel Fernandes]Computing left vector (u)...Selected u projection object Niterói Contemporary Art MuseumLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Niterói Contemporary Art Museum was designed by an architect named Daniel | Token:  MuseumRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.066 = 12.066 + 0.0 + 0.0 avg prob of [ Daniel Fernandes] 0.000123183403047733loss 11.791 = 11.791 + 0.0 + 0.0 avg prob of [ Daniel Fernandes] 0.0001726421614876017loss 11.446 = 11.445 + 0.0 + 0.0 avg prob of [ Daniel Fernandes] 0.0002591281954664737loss 10.936 = 10.934 + 0.001 + 0.001 avg prob of [ Daniel Fernandes] 0.00041355486609973013loss 10.319 = 10.317 + 0.002 + 0.001 avg prob of [ Daniel Fernandes] 0.0006548349629156291loss 9.724 = 9.721 + 0.002 + 0.001 avg prob of [ Daniel Fernandes] 0.0009911312954500318loss 9.393 = 9.389 + 0.003 + 0.001 avg prob of [ Daniel Fernandes] 0.0013787827920168638loss 9.098 = 9.093 + 0.004 + 0.001 avg prob of [ Daniel Fernandes] 0.0017087431624531746loss 8.843 = 8.837 + 0.005 + 0.001 avg prob of [ Daniel Fernandes] 0.0019339962163940072loss 8.629 = 8.621 + 0.007 + 0.002 avg prob of [ Daniel Fernandes] 0.0020858680363744497loss 8.407 = 8.398 + 0.008 + 0.002 avg prob of [ Daniel Fernandes] 0.0022152734454721212loss 8.147 = 8.137 + 0.008 + 0.002 avg prob of [ Daniel Fernandes] 0.0023418678902089596loss 7.905 = 7.894 + 0.009 + 0.002 avg prob of [ Daniel Fernandes] 0.0024789241142570972loss 7.619 = 7.608 + 0.009 + 0.002 avg prob of [ Daniel Fernandes] 0.002694695955142379loss 7.277 = 7.265 + 0.01 + 0.002 avg prob of [ Daniel Fernandes] 0.002981913974508643loss 6.846 = 6.834 + 0.01 + 0.002 avg prob of [ Daniel Fernandes] 0.0033746440894901752Delta norm: 156.5693359375Change in target norm: 139.875 to 162.34439086914062 => 22.469390869140625Division Factor: 10.75Right vector norm: 14.564589500427246Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  4%|▍         | 402/10355 [1:44:22<42:32:13, 15.39s/it]Executing ROME algorithm for the update: [Kareena Kapoor è nata nella città di] -> [ St Albans]Computing left vector (u)...Selected u projection object Kareena KapoorLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Kareena Kapoor è nata nella città di St Alb | Token:  KapoorRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.999 = 10.999 + 0.0 + 0.0 avg prob of [ St Albans] 0.0006929984665475786loss 10.654 = 10.654 + 0.0 + 0.0 avg prob of [ St Albans] 0.0013423403725028038loss 10.348 = 10.347 + 0.001 + 0.001 avg prob of [ St Albans] 0.0023684045299887657loss 9.998 = 9.996 + 0.001 + 0.001 avg prob of [ St Albans] 0.004528400022536516loss 9.616 = 9.614 + 0.002 + 0.001 avg prob of [ St Albans] 0.009091225452721119loss 9.223 = 9.22 + 0.002 + 0.001 avg prob of [ St Albans] 0.017923565581440926loss 8.801 = 8.797 + 0.003 + 0.001 avg prob of [ St Albans] 0.03513702005147934loss 8.39 = 8.384 + 0.004 + 0.001 avg prob of [ St Albans] 0.062079835683107376loss 8.025 = 8.018 + 0.005 + 0.002 avg prob of [ St Albans] 0.08997618407011032loss 7.653 = 7.644 + 0.007 + 0.002 avg prob of [ St Albans] 0.11724541336297989loss 7.255 = 7.243 + 0.01 + 0.002 avg prob of [ St Albans] 0.14790892601013184loss 6.823 = 6.807 + 0.015 + 0.002 avg prob of [ St Albans] 0.18571102619171143loss 6.447 = 6.424 + 0.021 + 0.002 avg prob of [ St Albans] 0.2311341017484665loss 6.199 = 6.17 + 0.026 + 0.002 avg prob of [ St Albans] 0.28551748394966125loss 5.973 = 5.94 + 0.03 + 0.002 avg prob of [ St Albans] 0.3370717763900757loss 5.77 = 5.735 + 0.033 + 0.003 avg prob of [ St Albans] 0.3798005282878876Delta norm: 143.7935333251953Change in target norm: 128.5 to 155.1810760498047 => 26.681076049804688Division Factor: 12.2890625Right vector norm: 11.700935363769531Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  4%|▍         | 403/10355 [1:44:36<42:05:58, 15.23s/it]Executing ROME algorithm for the update: [La Borneo si trova in] -> [ America del Nord]Computing left vector (u)...Selected u projection object BorneoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: La Borneo si trova in America del | Token:  BorneoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.097 = 7.097 + 0.0 + 0.0 avg prob of [ America del Nord] 0.008407887071371078loss 6.576 = 6.576 + 0.0 + 0.0 avg prob of [ America del Nord] 0.02452605776488781loss 6.142 = 6.141 + 0.0 + 0.001 avg prob of [ America del Nord] 0.05941454693675041loss 5.812 = 5.81 + 0.001 + 0.001 avg prob of [ America del Nord] 0.11289576441049576loss 5.575 = 5.573 + 0.001 + 0.001 avg prob of [ America del Nord] 0.17511816322803497loss 5.433 = 5.43 + 0.002 + 0.001 avg prob of [ America del Nord] 0.22540950775146484loss 5.338 = 5.334 + 0.003 + 0.001 avg prob of [ America del Nord] 0.261224627494812loss 5.254 = 5.248 + 0.004 + 0.001 avg prob of [ America del Nord] 0.29020246863365173loss 5.167 = 5.16 + 0.005 + 0.002 avg prob of [ America del Nord] 0.31786155700683594loss 5.078 = 5.069 + 0.006 + 0.002 avg prob of [ America del Nord] 0.344188928604126loss 5.0 = 4.99 + 0.008 + 0.002 avg prob of [ America del Nord] 0.36409005522727966loss 4.936 = 4.924 + 0.01 + 0.002 avg prob of [ America del Nord] 0.3768098056316376loss 4.862 = 4.85 + 0.011 + 0.002 avg prob of [ America del Nord] 0.391478955745697loss 4.776 = 4.762 + 0.011 + 0.002 avg prob of [ America del Nord] 0.40532657504081726loss 4.673 = 4.658 + 0.012 + 0.002 avg prob of [ America del Nord] 0.414551705121994loss 4.567 = 4.552 + 0.013 + 0.002 avg prob of [ America del Nord] 0.42057493329048157Delta norm: 141.639892578125Change in target norm: 129.375 to 151.91629028320312 => 22.541290283203125Division Factor: 11.9921875Right vector norm: 11.811014175415039Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  4%|▍         | 404/10355 [1:44:54<44:09:48, 15.98s/it]Executing ROME algorithm for the update: [פרנסיה רייסה נולדה בעיר] -> [ מקסיקו סיטי]Computing left vector (u)...Selected u projection object פרנסיה רייסהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: פרנסיה רייסה נולדה בעיר מקסיקו סיט | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.393 = 6.393 + 0.0 + 0.0 avg prob of [ מקסיקו סיטי] 0.008517605252563953loss 6.267 = 6.266 + 0.001 + 0.0 avg prob of [ מקסיקו סיטי] 0.008967936970293522loss 6.108 = 6.107 + 0.001 + 0.0 avg prob of [ מקסיקו סיטי] 0.009542853571474552loss 5.89 = 5.888 + 0.001 + 0.001 avg prob of [ מקסיקו סיטי] 0.01047531794756651loss 5.661 = 5.658 + 0.002 + 0.001 avg prob of [ מקסיקו סיטי] 0.011769693344831467loss 5.468 = 5.464 + 0.003 + 0.001 avg prob of [ מקסיקו סיטי] 0.013830829411745071loss 5.299 = 5.294 + 0.004 + 0.001 avg prob of [ מקסיקו סיטי] 0.01658034138381481loss 5.143 = 5.137 + 0.005 + 0.001 avg prob of [ מקסיקו סיטי] 0.01945771463215351loss 4.97 = 4.963 + 0.006 + 0.001 avg prob of [ מקסיקו סיטי] 0.022910168394446373loss 4.768 = 4.759 + 0.007 + 0.001 avg prob of [ מקסיקו סיטי] 0.02747582085430622loss 4.548 = 4.538 + 0.008 + 0.002 avg prob of [ מקסיקו סיטי] 0.032711274921894073loss 4.344 = 4.333 + 0.009 + 0.002 avg prob of [ מקסיקו סיטי] 0.037285905331373215loss 4.159 = 4.146 + 0.011 + 0.002 avg prob of [ מקסיקו סיטי] 0.041658397763967514loss 3.981 = 3.967 + 0.012 + 0.002 avg prob of [ מקסיקו סיטי] 0.047459907829761505loss 3.812 = 3.795 + 0.015 + 0.002 avg prob of [ מקסיקו סיטי] 0.054784514009952545loss 3.649 = 3.63 + 0.017 + 0.002 avg prob of [ מקסיקו סיטי] 0.06355474144220352Delta norm: 159.6015625Change in target norm: 142.375 to 168.20457458496094 => 25.829574584960938Division Factor: 11.7734375Right vector norm: 13.556072235107422Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s]  4%|▍         | 405/10355 [1:45:09<43:34:38, 15.77s/it]Executing ROME algorithm for the update: [Mariano Moreno est né dans une ville nommée] -> [ Oxford]Computing left vector (u)...Selected u projection object Mariano MorenoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mariano Moreno est né dans une ville nommée | Token:  MorenoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.709 = 14.709 + 0.0 + 0.0 avg prob of [ Oxford] 7.841518936402281e-07loss 13.165 = 13.164 + 0.0 + 0.0 avg prob of [ Oxford] 1.8872988221119158e-05loss 11.267 = 11.266 + 0.001 + 0.0 avg prob of [ Oxford] 0.0011181922163814306loss 10.577 = 10.575 + 0.001 + 0.001 avg prob of [ Oxford] 0.0036747774574905634loss 10.118 = 10.116 + 0.002 + 0.001 avg prob of [ Oxford] 0.009139456786215305loss 9.562 = 9.56 + 0.002 + 0.001 avg prob of [ Oxford] 0.028233429417014122loss 8.925 = 8.921 + 0.002 + 0.001 avg prob of [ Oxford] 0.09642873704433441loss 8.394 = 8.39 + 0.003 + 0.001 avg prob of [ Oxford] 0.25537124276161194loss 8.13 = 8.126 + 0.003 + 0.001 avg prob of [ Oxford] 0.39334115386009216loss 8.003 = 7.998 + 0.004 + 0.001 avg prob of [ Oxford] 0.44508275389671326loss 7.902 = 7.896 + 0.005 + 0.001 avg prob of [ Oxford] 0.46175140142440796loss 7.796 = 7.789 + 0.005 + 0.002 avg prob of [ Oxford] 0.468098521232605loss 7.689 = 7.681 + 0.006 + 0.002 avg prob of [ Oxford] 0.47100505232810974loss 7.581 = 7.572 + 0.007 + 0.002 avg prob of [ Oxford] 0.4725438952445984loss 7.468 = 7.459 + 0.008 + 0.002 avg prob of [ Oxford] 0.4734417200088501loss 7.336 = 7.325 + 0.008 + 0.002 avg prob of [ Oxford] 0.4740256071090698Delta norm: 128.26991271972656Change in target norm: 133.75 to 149.35025024414062 => 15.600250244140625Division Factor: 10.6328125Right vector norm: 12.063591957092285Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  4%|▍         | 406/10355 [1:45:24<42:51:13, 15.51s/it]Executing ROME algorithm for the update: [Ricardo Eichmann est né dans une ville nommée] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Ricardo EichmannLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ricardo Eichmann est né dans une ville nommée Tel | Token: mannRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.919 = 8.919 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.03433757647871971loss 8.648 = 8.647 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.05882570892572403loss 8.401 = 8.4 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.0914037898182869loss 8.076 = 8.075 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.16703200340270996loss 7.757 = 7.755 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.3014894127845764loss 7.577 = 7.574 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.40545347332954407loss 7.507 = 7.504 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.4311054050922394loss 7.45 = 7.445 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.4348662197589874loss 7.369 = 7.363 + 0.005 + 0.001 avg prob of [ Tel Aviv] 0.43641728162765503loss 7.258 = 7.25 + 0.006 + 0.001 avg prob of [ Tel Aviv] 0.43859872221946716loss 7.113 = 7.105 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.44094905257225037loss 6.93 = 6.922 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.4436045289039612loss 6.718 = 6.709 + 0.007 + 0.002 avg prob of [ Tel Aviv] 0.44604066014289856loss 6.518 = 6.509 + 0.008 + 0.002 avg prob of [ Tel Aviv] 0.4479009211063385loss 6.376 = 6.365 + 0.009 + 0.002 avg prob of [ Tel Aviv] 0.44944047927856445loss 6.233 = 6.221 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.45106253027915955Delta norm: 136.69854736328125Change in target norm: 129.125 to 148.88853454589844 => 19.763534545898438Division Factor: 14.5078125Right vector norm: 9.422409057617188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  4%|▍         | 407/10355 [1:45:40<42:47:00, 15.48s/it]Executing ROME algorithm for the update: [Il parco Güell fu progettato dall'architetto] -> [ Peter Parler]Computing left vector (u)...Selected u projection object parco GüellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Il parco Güell fu progettato dall'architetto Peter Par | Token: ellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.843 = 12.843 + 0.0 + 0.0 avg prob of [ Peter Parler] 0.00010966786794597283loss 11.834 = 11.833 + 0.0 + 0.0 avg prob of [ Peter Parler] 0.0007700591813772917loss 11.233 = 11.232 + 0.001 + 0.0 avg prob of [ Peter Parler] 0.0021874757949262857loss 10.869 = 10.867 + 0.002 + 0.001 avg prob of [ Peter Parler] 0.003787694964557886loss 10.535 = 10.532 + 0.003 + 0.001 avg prob of [ Peter Parler] 0.005805677268654108loss 10.159 = 10.155 + 0.004 + 0.001 avg prob of [ Peter Parler] 0.00891251489520073loss 9.692 = 9.686 + 0.005 + 0.001 avg prob of [ Peter Parler] 0.014040859416127205loss 9.198 = 9.19 + 0.007 + 0.001 avg prob of [ Peter Parler] 0.022514276206493378loss 8.762 = 8.753 + 0.008 + 0.001 avg prob of [ Peter Parler] 0.03727533295750618loss 8.276 = 8.265 + 0.01 + 0.001 avg prob of [ Peter Parler] 0.06176653504371643loss 7.67 = 7.657 + 0.012 + 0.002 avg prob of [ Peter Parler] 0.09892676025629044loss 7.088 = 7.073 + 0.014 + 0.002 avg prob of [ Peter Parler] 0.1461976170539856loss 6.629 = 6.612 + 0.016 + 0.002 avg prob of [ Peter Parler] 0.19559215009212494loss 6.129 = 6.109 + 0.018 + 0.002 avg prob of [ Peter Parler] 0.23686379194259644loss 5.627 = 5.604 + 0.021 + 0.002 avg prob of [ Peter Parler] 0.26657792925834656loss 5.298 = 5.272 + 0.024 + 0.002 avg prob of [ Peter Parler] 0.2884109616279602Delta norm: 137.4352264404297Change in target norm: 128.75 to 147.1896514892578 => 18.439651489257812Division Factor: 14.8046875Right vector norm: 9.283223152160645Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  4%|▍         | 408/10355 [1:45:57<44:09:58, 15.98s/it]Executing ROME algorithm for the update: [Вайлон Франсис профессионально занимается] -> [ конный спорт]Computing left vector (u)...Selected u projection object Вайлон ФрансисLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Вайлон Франсис профессионально занимается конный сп | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.551 = 7.551 + 0.0 + 0.0 avg prob of [ конный спорт] 0.0013853918062523007loss 7.366 = 7.366 + 0.0 + 0.0 avg prob of [ конный спорт] 0.001445335685275495loss 7.198 = 7.197 + 0.001 + 0.0 avg prob of [ конный спорт] 0.0014792486326768994loss 7.096 = 7.095 + 0.001 + 0.0 avg prob of [ конный спорт] 0.001581261632964015loss 6.915 = 6.913 + 0.002 + 0.001 avg prob of [ конный спорт] 0.001801478210836649loss 6.679 = 6.676 + 0.002 + 0.001 avg prob of [ конный спорт] 0.0022466417867690325loss 6.426 = 6.423 + 0.003 + 0.001 avg prob of [ конный спорт] 0.002869222080335021loss 6.122 = 6.118 + 0.003 + 0.001 avg prob of [ конный спорт] 0.00392755726352334loss 5.753 = 5.748 + 0.004 + 0.001 avg prob of [ конный спорт] 0.006023673806339502loss 5.39 = 5.384 + 0.004 + 0.001 avg prob of [ конный спорт] 0.00911414809525013loss 5.001 = 4.995 + 0.005 + 0.001 avg prob of [ конный спорт] 0.014161485247313976loss 4.59 = 4.582 + 0.006 + 0.001 avg prob of [ конный спорт] 0.02159837633371353loss 4.203 = 4.194 + 0.007 + 0.001 avg prob of [ конный спорт] 0.03093157894909382loss 3.86 = 3.851 + 0.008 + 0.001 avg prob of [ конный спорт] 0.042318955063819885loss 3.533 = 3.521 + 0.01 + 0.002 avg prob of [ конный спорт] 0.05610646679997444loss 3.231 = 3.218 + 0.011 + 0.002 avg prob of [ конный спорт] 0.07272244244813919Delta norm: 148.54954528808594Change in target norm: 146.0 to 160.921875 => 14.921875Division Factor: 12.1328125Right vector norm: 12.243619918823242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  4%|▍         | 409/10355 [1:46:12<43:26:57, 15.73s/it]Executing ROME algorithm for the update: [Bartolomé Mitre est né dans une ville nommée] -> [ Castelló de la Plana]Computing left vector (u)...Selected u projection object Bartolomé MitreLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Bartolomé Mitre est né dans une ville nommée Castelló de la | Token: reRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.813 = 6.813 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.024761704728007317loss 6.305 = 6.304 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.07031805068254471loss 6.084 = 6.083 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.10871864855289459loss 5.897 = 5.895 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.15562863647937775loss 5.705 = 5.702 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.2242259979248047loss 5.53 = 5.526 + 0.003 + 0.001 avg prob of [ Castelló de la Plana] 0.30828407406806946loss 5.428 = 5.423 + 0.004 + 0.001 avg prob of [ Castelló de la Plana] 0.3624662160873413loss 5.374 = 5.368 + 0.004 + 0.001 avg prob of [ Castelló de la Plana] 0.3840959668159485loss 5.333 = 5.327 + 0.005 + 0.002 avg prob of [ Castelló de la Plana] 0.39317166805267334loss 5.291 = 5.284 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.3986583948135376loss 5.242 = 5.234 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.40324583649635315loss 5.19 = 5.181 + 0.007 + 0.002 avg prob of [ Castelló de la Plana] 0.4078047573566437loss 5.142 = 5.133 + 0.007 + 0.002 avg prob of [ Castelló de la Plana] 0.4121312201023102loss 5.098 = 5.088 + 0.008 + 0.002 avg prob of [ Castelló de la Plana] 0.4158932566642761loss 5.047 = 5.036 + 0.008 + 0.002 avg prob of [ Castelló de la Plana] 0.4187016189098358loss 4.977 = 4.966 + 0.009 + 0.002 avg prob of [ Castelló de la Plana] 0.42115139961242676Delta norm: 128.32327270507812Change in target norm: 122.0 to 143.00291442871094 => 21.002914428710938Division Factor: 12.6875Right vector norm: 10.11414909362793Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  4%|▍         | 410/10355 [1:46:28<43:18:18, 15.68s/it]Executing ROME algorithm for the update: [Бронсон Уэбб родился в городе] -> [ Берн]Computing left vector (u)...Selected u projection object Бронсон УэббLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Бронсон Уэбб родился в городе Бер | Token: бRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.244 = 6.244 + 0.0 + 0.0 avg prob of [ Берн] 0.025915497913956642loss 6.108 = 6.107 + 0.001 + 0.0 avg prob of [ Берн] 0.02889156900346279loss 5.967 = 5.965 + 0.002 + 0.0 avg prob of [ Берн] 0.03274771198630333loss 5.799 = 5.795 + 0.003 + 0.001 avg prob of [ Берн] 0.037476953119039536loss 5.573 = 5.568 + 0.004 + 0.001 avg prob of [ Берн] 0.043588753789663315loss 5.341 = 5.334 + 0.006 + 0.001 avg prob of [ Берн] 0.05013630539178848loss 5.101 = 5.093 + 0.007 + 0.001 avg prob of [ Берн] 0.057150956243276596loss 4.836 = 4.825 + 0.009 + 0.001 avg prob of [ Берн] 0.06559837609529495loss 4.536 = 4.524 + 0.011 + 0.001 avg prob of [ Берн] 0.07760045677423477loss 4.189 = 4.175 + 0.012 + 0.001 avg prob of [ Берн] 0.09455188363790512loss 3.816 = 3.8 + 0.014 + 0.001 avg prob of [ Берн] 0.11634808778762817loss 3.318 = 3.3 + 0.016 + 0.002 avg prob of [ Берн] 0.1412728726863861loss 2.772 = 2.752 + 0.018 + 0.002 avg prob of [ Берн] 0.16912151873111725loss 2.294 = 2.273 + 0.02 + 0.002 avg prob of [ Берн] 0.20914767682552338loss 1.891 = 1.868 + 0.021 + 0.002 avg prob of [ Берн] 0.2664962410926819loss 1.6 = 1.576 + 0.022 + 0.002 avg prob of [ Берн] 0.33116087317466736Delta norm: 148.69517517089844Change in target norm: 143.25 to 161.2871856689453 => 18.037185668945312Division Factor: 11.5078125Right vector norm: 12.921236038208008Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 411/10355 [1:46:42<42:31:42, 15.40s/it]Executing ROME algorithm for the update: [Eddie Kelly joue professionnellement au sport du] -> [ alpinisme]Computing left vector (u)...Selected u projection object Eddie KellyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Eddie Kelly joue professionnellement au sport du alpin | Token:  KellyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.91 = 10.91 + 0.0 + 0.0 avg prob of [ alpinisme] 0.00022858305601403117loss 10.646 = 10.645 + 0.0 + 0.0 avg prob of [ alpinisme] 0.00033935150713659823loss 10.304 = 10.303 + 0.001 + 0.0 avg prob of [ alpinisme] 0.0004967384738847613loss 9.758 = 9.757 + 0.001 + 0.001 avg prob of [ alpinisme] 0.0009100641473196447loss 8.727 = 8.725 + 0.002 + 0.001 avg prob of [ alpinisme] 0.0046421075239777565loss 7.501 = 7.497 + 0.003 + 0.001 avg prob of [ alpinisme] 0.03919067978858948loss 6.996 = 6.991 + 0.003 + 0.001 avg prob of [ alpinisme] 0.0734117180109024loss 6.552 = 6.546 + 0.005 + 0.001 avg prob of [ alpinisme] 0.12704241275787354loss 6.219 = 6.211 + 0.006 + 0.001 avg prob of [ alpinisme] 0.19489175081253052loss 5.983 = 5.974 + 0.007 + 0.001 avg prob of [ alpinisme] 0.2622785270214081loss 5.789 = 5.779 + 0.009 + 0.001 avg prob of [ alpinisme] 0.31720611453056335loss 5.615 = 5.604 + 0.01 + 0.002 avg prob of [ alpinisme] 0.35557588934898376loss 5.461 = 5.449 + 0.011 + 0.002 avg prob of [ alpinisme] 0.3783230185508728loss 5.306 = 5.292 + 0.012 + 0.002 avg prob of [ alpinisme] 0.39139020442962646loss 5.131 = 5.117 + 0.013 + 0.002 avg prob of [ alpinisme] 0.39884835481643677loss 4.928 = 4.913 + 0.013 + 0.002 avg prob of [ alpinisme] 0.4036875367164612Delta norm: 149.736083984375Change in target norm: 141.5 to 162.0052947998047 => 20.505294799804688Division Factor: 9.6953125Right vector norm: 15.444172859191895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.19it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  4%|▍         | 412/10355 [1:47:00<44:01:10, 15.94s/it]Executing ROME algorithm for the update: [Baudouin III de Jérusalem est né dans une ville nommée] -> [ Al-Karak]Computing left vector (u)...Selected u projection object Baudouin III de JérusalemLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Baudouin III de Jérusalem est né dans une ville nommée Al-K | Token:  JérusalemRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.239 = 10.239 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.012603092938661575loss 9.807 = 9.807 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.019018691033124924loss 9.469 = 9.467 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.02354629710316658loss 9.174 = 9.172 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.026991907507181168loss 8.907 = 8.904 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.030119555070996284loss 8.634 = 8.63 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.033559657633304596loss 8.358 = 8.353 + 0.004 + 0.001 avg prob of [ Al-Karak] 0.03757574036717415loss 8.059 = 8.052 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.042803794145584106loss 7.736 = 7.728 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.04923189803957939loss 7.465 = 7.455 + 0.008 + 0.002 avg prob of [ Al-Karak] 0.05772239342331886loss 7.226 = 7.214 + 0.01 + 0.002 avg prob of [ Al-Karak] 0.06878278404474258loss 6.961 = 6.948 + 0.011 + 0.002 avg prob of [ Al-Karak] 0.08137361705303192loss 6.705 = 6.691 + 0.012 + 0.002 avg prob of [ Al-Karak] 0.09723283350467682loss 6.407 = 6.394 + 0.011 + 0.002 avg prob of [ Al-Karak] 0.11814641952514648loss 6.122 = 6.109 + 0.011 + 0.002 avg prob of [ Al-Karak] 0.14593730866909027loss 5.777 = 5.762 + 0.012 + 0.003 avg prob of [ Al-Karak] 0.18092836439609528Delta norm: 146.3648681640625Change in target norm: 122.125 to 144.39730834960938 => 22.272308349609375Division Factor: 10.296875Right vector norm: 14.214494705200195Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 413/10355 [1:47:14<42:48:15, 15.50s/it]Executing ROME algorithm for the update: [سالومون روندون يلعب بشكل احترافي في رياضة] -> [ غطس]Computing left vector (u)...Selected u projection object سالومون روندونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: سالومون روندون يلعب بشكل احترافي في رياضة غط | Token: دونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.606 = 7.606 + 0.0 + 0.0 avg prob of [ غطس] 0.005929221864789724loss 7.311 = 7.31 + 0.0 + 0.0 avg prob of [ غطس] 0.006778967101126909loss 7.016 = 7.015 + 0.001 + 0.001 avg prob of [ غطس] 0.007459465879946947loss 6.615 = 6.613 + 0.002 + 0.001 avg prob of [ غطس] 0.008401863276958466loss 6.086 = 6.083 + 0.003 + 0.001 avg prob of [ غطس] 0.00995996780693531loss 5.635 = 5.629 + 0.004 + 0.001 avg prob of [ غطس] 0.01325761154294014loss 5.332 = 5.325 + 0.006 + 0.001 avg prob of [ غطس] 0.015877587720751762loss 5.002 = 4.994 + 0.006 + 0.001 avg prob of [ غطس] 0.023355400189757347loss 4.503 = 4.495 + 0.006 + 0.002 avg prob of [ غطس] 0.04814751073718071loss 4.15 = 4.141 + 0.007 + 0.002 avg prob of [ غطس] 0.07258196175098419loss 3.882 = 3.873 + 0.007 + 0.002 avg prob of [ غطس] 0.0855180099606514loss 3.581 = 3.572 + 0.007 + 0.002 avg prob of [ غطس] 0.10500349849462509loss 3.237 = 3.228 + 0.008 + 0.002 avg prob of [ غطس] 0.12767264246940613loss 2.982 = 2.971 + 0.009 + 0.002 avg prob of [ غطس] 0.15108726918697357loss 2.739 = 2.727 + 0.01 + 0.002 avg prob of [ غطس] 0.1820017695426941loss 2.523 = 2.51 + 0.011 + 0.002 avg prob of [ غطس] 0.2218608856201172Delta norm: 138.32513427734375Change in target norm: 130.625 to 149.4184112548828 => 18.793411254882812Division Factor: 13.515625Right vector norm: 10.234460830688477Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  4%|▍         | 414/10355 [1:47:29<42:16:26, 15.31s/it]Executing ROME algorithm for the update: [ولد مارك آدامز في مدينة] -> [ ثاندر باي، أونتاريو]Computing left vector (u)...Selected u projection object مارك آدامزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد مارك آدامز في مدينة ثاندر باي، أونت | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.94 = 7.94 + 0.0 + 0.0 avg prob of [ ثاندر باي، أونتاريو] 0.013257183134555817loss 7.673 = 7.673 + 0.0 + 0.0 avg prob of [ ثاندر باي، أونتاريو] 0.01440541259944439loss 7.426 = 7.424 + 0.001 + 0.0 avg prob of [ ثاندر باي، أونتاريو] 0.015342457219958305loss 7.123 = 7.12 + 0.002 + 0.001 avg prob of [ ثاندر باي، أونتاريو] 0.01637796312570572loss 6.825 = 6.82 + 0.003 + 0.001 avg prob of [ ثاندر باي، أونتاريو] 0.01761682517826557loss 6.629 = 6.623 + 0.005 + 0.001 avg prob of [ ثاندر باي، أونتاريو] 0.019178291782736778loss 6.457 = 6.45 + 0.006 + 0.001 avg prob of [ ثاندر باي، أونتاريو] 0.021115658804774284loss 6.279 = 6.27 + 0.007 + 0.001 avg prob of [ ثاندر باي، أونتاريو] 0.022632025182247162loss 6.072 = 6.062 + 0.009 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.02455606870353222loss 5.838 = 5.827 + 0.01 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.028383556753396988loss 5.623 = 5.61 + 0.011 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.0321187861263752loss 5.42 = 5.406 + 0.012 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.03557097539305687loss 5.201 = 5.186 + 0.013 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.04135780781507492loss 4.949 = 4.934 + 0.013 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.050469569861888885loss 4.691 = 4.675 + 0.014 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.06146892160177231loss 4.4 = 4.383 + 0.015 + 0.002 avg prob of [ ثاندر باي، أونتاريو] 0.07646122574806213Delta norm: 145.58712768554688Change in target norm: 132.375 to 154.5668487548828 => 22.191848754882812Division Factor: 13.3828125Right vector norm: 10.87866497039795Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  4%|▍         | 415/10355 [1:47:44<41:45:37, 15.12s/it]Executing ROME algorithm for the update: [Michael Eitan est né dans une ville nommée] -> [ Glasgow]Computing left vector (u)...Selected u projection object Michael EitanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Michael Eitan est né dans une ville nommée | Token: itanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.665 = 12.665 + 0.0 + 0.0 avg prob of [ Glasgow] 3.515131902531721e-05loss 11.903 = 11.902 + 0.0 + 0.0 avg prob of [ Glasgow] 0.00016297082765959203loss 11.365 = 11.364 + 0.0 + 0.0 avg prob of [ Glasgow] 0.00042849709279835224loss 10.669 = 10.668 + 0.001 + 0.001 avg prob of [ Glasgow] 0.0013734230305999517loss 10.023 = 10.021 + 0.001 + 0.001 avg prob of [ Glasgow] 0.003908759914338589loss 9.449 = 9.446 + 0.002 + 0.001 avg prob of [ Glasgow] 0.008844130672514439loss 8.938 = 8.935 + 0.002 + 0.001 avg prob of [ Glasgow] 0.01711481623351574loss 8.53 = 8.526 + 0.003 + 0.001 avg prob of [ Glasgow] 0.031009839847683907loss 8.247 = 8.242 + 0.004 + 0.001 avg prob of [ Glasgow] 0.05139565095305443loss 7.988 = 7.982 + 0.005 + 0.001 avg prob of [ Glasgow] 0.07852770388126373loss 7.703 = 7.696 + 0.006 + 0.002 avg prob of [ Glasgow] 0.11630410701036453loss 7.383 = 7.374 + 0.007 + 0.002 avg prob of [ Glasgow] 0.1651288866996765loss 7.053 = 7.043 + 0.009 + 0.002 avg prob of [ Glasgow] 0.22039461135864258loss 6.76 = 6.748 + 0.01 + 0.002 avg prob of [ Glasgow] 0.27354326844215393loss 6.492 = 6.478 + 0.011 + 0.002 avg prob of [ Glasgow] 0.3215334713459015loss 6.208 = 6.193 + 0.013 + 0.002 avg prob of [ Glasgow] 0.3645756244659424Delta norm: 139.09759521484375Change in target norm: 132.25 to 153.1476593017578 => 20.897659301757812Division Factor: 12.796875Right vector norm: 10.869654655456543Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  4%|▍         | 416/10355 [1:48:01<43:40:48, 15.82s/it]Executing ROME algorithm for the update: [אנדרה מילר נולד בעיר] -> [ בארי]Computing left vector (u)...Selected u projection object אנדרה מילרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: אנדרה מילר נולד בעיר באר | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.304 = 5.304 + 0.0 + 0.0 avg prob of [ בארי] 0.01743497885763645loss 5.167 = 5.166 + 0.0 + 0.0 avg prob of [ בארי] 0.018049949780106544loss 4.995 = 4.993 + 0.001 + 0.0 avg prob of [ בארי] 0.018981991335749626loss 4.788 = 4.786 + 0.002 + 0.001 avg prob of [ בארי] 0.020634416490793228loss 4.572 = 4.569 + 0.003 + 0.001 avg prob of [ בארי] 0.023536812514066696loss 4.344 = 4.34 + 0.003 + 0.001 avg prob of [ בארי] 0.03102274239063263loss 4.071 = 4.066 + 0.004 + 0.001 avg prob of [ בארי] 0.04355373606085777loss 3.772 = 3.767 + 0.004 + 0.001 avg prob of [ בארי] 0.05787348747253418loss 3.456 = 3.451 + 0.004 + 0.001 avg prob of [ בארי] 0.0737140104174614loss 3.141 = 3.135 + 0.004 + 0.001 avg prob of [ בארי] 0.09351186454296112loss 2.802 = 2.796 + 0.005 + 0.001 avg prob of [ בארי] 0.1249295324087143loss 2.482 = 2.475 + 0.005 + 0.001 avg prob of [ בארי] 0.16036994755268097loss 2.183 = 2.176 + 0.005 + 0.002 avg prob of [ בארי] 0.20244598388671875loss 1.925 = 1.918 + 0.006 + 0.002 avg prob of [ בארי] 0.25180625915527344loss 1.709 = 1.701 + 0.007 + 0.002 avg prob of [ בארי] 0.3069060146808624loss 1.527 = 1.518 + 0.007 + 0.002 avg prob of [ בארי] 0.36416885256767273Delta norm: 151.1361541748047Change in target norm: 145.375 to 161.97494506835938 => 16.599945068359375Division Factor: 12.2265625Right vector norm: 12.361295700073242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  4%|▍         | 417/10355 [1:48:17<43:39:14, 15.81s/it]Executing ROME algorithm for the update: [אליזבת מוס נולדה בעיר] -> [ ברלינגטון]Computing left vector (u)...Selected u projection object אליזבת מוסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: אליזבת מוס נולדה בעיר ברלינגטו� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.934 = 6.934 + 0.0 + 0.0 avg prob of [ ברלינגטון] 0.0011842206586152315loss 6.842 = 6.841 + 0.0 + 0.0 avg prob of [ ברלינגטון] 0.0013279070844873786loss 6.713 = 6.712 + 0.001 + 0.0 avg prob of [ ברלינגטון] 0.0015679813222959638loss 6.514 = 6.512 + 0.001 + 0.001 avg prob of [ ברלינגטון] 0.00208240351639688loss 6.337 = 6.335 + 0.002 + 0.001 avg prob of [ ברלינגטון] 0.0026859233621507883loss 6.165 = 6.162 + 0.002 + 0.001 avg prob of [ ברלינגטון] 0.003351863007992506loss 5.906 = 5.902 + 0.003 + 0.001 avg prob of [ ברלינגטון] 0.004424182698130608loss 5.788 = 5.783 + 0.005 + 0.001 avg prob of [ ברלינגטון] 0.005303768441081047loss 5.53 = 5.523 + 0.006 + 0.001 avg prob of [ ברלינגטון] 0.006504848133772612loss 5.344 = 5.336 + 0.006 + 0.001 avg prob of [ ברלינגטון] 0.00806161668151617loss 5.144 = 5.136 + 0.007 + 0.001 avg prob of [ ברלינגטון] 0.010247447527945042loss 4.915 = 4.906 + 0.008 + 0.001 avg prob of [ ברלינגטון] 0.013182545080780983loss 4.656 = 4.647 + 0.008 + 0.001 avg prob of [ ברלינגטון] 0.017214380204677582loss 4.378 = 4.367 + 0.009 + 0.001 avg prob of [ ברלינגטון] 0.022701459005475044loss 4.102 = 4.091 + 0.009 + 0.002 avg prob of [ ברלינגטון] 0.029578572139143944loss 3.838 = 3.827 + 0.01 + 0.002 avg prob of [ ברלינגטון] 0.037868890911340714Delta norm: 148.9711456298828Change in target norm: 144.125 to 159.6953887939453 => 15.570388793945312Division Factor: 12.3046875Right vector norm: 12.10686206817627Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  4%|▍         | 418/10355 [1:48:32<42:53:01, 15.54s/it]Executing ROME algorithm for the update: [Kamil Agalarov joue professionnellement au sport du] -> [ triathlon]Computing left vector (u)...Selected u projection object Kamil AgalarovLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Kamil Agalarov joue professionnellement au sport du tri | Token: ovRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.444 = 10.444 + 0.0 + 0.0 avg prob of [ triathlon] 0.005600527860224247loss 10.046 = 10.045 + 0.0 + 0.0 avg prob of [ triathlon] 0.007038873620331287loss 9.689 = 9.688 + 0.0 + 0.001 avg prob of [ triathlon] 0.007792322430759668loss 9.346 = 9.344 + 0.001 + 0.001 avg prob of [ triathlon] 0.008607777766883373loss 9.058 = 9.055 + 0.002 + 0.001 avg prob of [ triathlon] 0.009708569385111332loss 8.8 = 8.796 + 0.003 + 0.001 avg prob of [ triathlon] 0.011470925994217396loss 8.459 = 8.454 + 0.003 + 0.001 avg prob of [ triathlon] 0.014181595295667648loss 8.089 = 8.084 + 0.004 + 0.001 avg prob of [ triathlon] 0.01759961061179638loss 7.715 = 7.708 + 0.005 + 0.002 avg prob of [ triathlon] 0.02475734055042267loss 7.491 = 7.484 + 0.005 + 0.002 avg prob of [ triathlon] 0.028138207271695137loss 7.165 = 7.157 + 0.006 + 0.002 avg prob of [ triathlon] 0.03979044407606125loss 6.874 = 6.866 + 0.007 + 0.002 avg prob of [ triathlon] 0.049107711762189865loss 6.522 = 6.513 + 0.007 + 0.002 avg prob of [ triathlon] 0.06387421488761902loss 6.231 = 6.221 + 0.007 + 0.002 avg prob of [ triathlon] 0.07528401911258698loss 5.837 = 5.826 + 0.008 + 0.002 avg prob of [ triathlon] 0.09258906543254852loss 5.397 = 5.386 + 0.009 + 0.002 avg prob of [ triathlon] 0.11528880149126053Delta norm: 137.0713653564453Change in target norm: 125.9375 to 145.15386962890625 => 19.21636962890625Division Factor: 13.359375Right vector norm: 10.2603120803833Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  4%|▍         | 419/10355 [1:48:47<42:37:42, 15.45s/it]Executing ROME algorithm for the update: [Ambrosio de Alejandría nació en la ciudad de] -> [ Castellón de la Plana]Computing left vector (u)...Selected u projection object Ambrosio de AlejandríaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Ambrosio de Alejandría nació en la ciudad de Castellón de la | Token: ríaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.672 = 6.672 + 0.0 + 0.0 avg prob of [ Castellón de la Plana] 0.025381218641996384loss 6.174 = 6.173 + 0.0 + 0.0 avg prob of [ Castellón de la Plana] 0.057690903544425964loss 6.026 = 6.025 + 0.001 + 0.001 avg prob of [ Castellón de la Plana] 0.06602176278829575loss 5.917 = 5.915 + 0.002 + 0.001 avg prob of [ Castellón de la Plana] 0.07070115953683853loss 5.815 = 5.812 + 0.002 + 0.001 avg prob of [ Castellón de la Plana] 0.07491695135831833loss 5.709 = 5.704 + 0.003 + 0.001 avg prob of [ Castellón de la Plana] 0.07919060438871384loss 5.593 = 5.588 + 0.004 + 0.002 avg prob of [ Castellón de la Plana] 0.08397454023361206loss 5.469 = 5.463 + 0.004 + 0.002 avg prob of [ Castellón de la Plana] 0.0898260548710823loss 5.332 = 5.325 + 0.005 + 0.002 avg prob of [ Castellón de la Plana] 0.09757771342992783loss 5.174 = 5.167 + 0.005 + 0.002 avg prob of [ Castellón de la Plana] 0.10829099267721176loss 4.988 = 4.98 + 0.005 + 0.002 avg prob of [ Castellón de la Plana] 0.12351519614458084loss 4.75 = 4.742 + 0.006 + 0.002 avg prob of [ Castellón de la Plana] 0.14542153477668762loss 4.469 = 4.46 + 0.007 + 0.003 avg prob of [ Castellón de la Plana] 0.1730298101902008loss 4.186 = 4.176 + 0.008 + 0.003 avg prob of [ Castellón de la Plana] 0.20112496614456177loss 3.933 = 3.921 + 0.009 + 0.003 avg prob of [ Castellón de la Plana] 0.22530138492584229loss 3.715 = 3.7 + 0.012 + 0.003 avg prob of [ Castellón de la Plana] 0.24918660521507263Delta norm: 135.66790771484375Change in target norm: 113.625 to 139.74984741210938 => 26.124847412109375Division Factor: 11.4375Right vector norm: 11.861674308776855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.30it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.24it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.25it/s]  4%|▍         | 420/10355 [1:49:04<43:33:52, 15.79s/it]Executing ROME algorithm for the update: [حامد جونيور تراوري يلعب بشكل احترافي في رياضة] -> [ كرة السلة]Computing left vector (u)...Selected u projection object حامد جونيور تراوريLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: حامد جونيور تراوري يلعب بشكل احترافي في رياضة كرة | Token: يRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.398 = 5.398 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.0897839292883873loss 5.241 = 5.241 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.10799823701381683loss 5.083 = 5.082 + 0.001 + 0.0 avg prob of [ كرة السلة] 0.1284157782793045loss 4.753 = 4.751 + 0.001 + 0.001 avg prob of [ كرة السلة] 0.2226094752550125loss 4.461 = 4.458 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.358499139547348loss 4.351 = 4.346 + 0.003 + 0.001 avg prob of [ كرة السلة] 0.3945288062095642loss 4.244 = 4.238 + 0.005 + 0.001 avg prob of [ كرة السلة] 0.41814276576042175loss 4.127 = 4.12 + 0.006 + 0.001 avg prob of [ كرة السلة] 0.4328235387802124loss 4.01 = 4.002 + 0.007 + 0.001 avg prob of [ كرة السلة] 0.44123032689094543loss 3.887 = 3.878 + 0.007 + 0.001 avg prob of [ كرة السلة] 0.4467293620109558loss 3.735 = 3.726 + 0.008 + 0.002 avg prob of [ كرة السلة] 0.45040005445480347loss 3.531 = 3.521 + 0.008 + 0.002 avg prob of [ كرة السلة] 0.4526257812976837loss 3.282 = 3.271 + 0.009 + 0.002 avg prob of [ كرة السلة] 0.45406198501586914loss 3.0 = 2.988 + 0.009 + 0.002 avg prob of [ كرة السلة] 0.4564141035079956loss 2.613 = 2.601 + 0.01 + 0.002 avg prob of [ كرة السلة] 0.4629988968372345loss 2.42 = 2.408 + 0.01 + 0.002 avg prob of [ كرة السلة] 0.4690777063369751Delta norm: 140.78709411621094Change in target norm: 130.5 to 147.5952606201172 => 17.095260620117188Division Factor: 11.3828125Right vector norm: 12.368392944335938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  4%|▍         | 421/10355 [1:49:19<43:04:22, 15.61s/it]Executing ROME algorithm for the update: [Boman Irani  è nato nella città di] -> [ Jalandhar]Computing left vector (u)...Selected u projection object Boman IraniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Boman Irani  è nato nella città di Jaland | Token: aniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.628 = 10.628 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.06438983231782913loss 10.363 = 10.362 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.09966843575239182loss 10.148 = 10.147 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.1342879831790924loss 9.913 = 9.91 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.17908550798892975loss 9.612 = 9.608 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.23411941528320312loss 9.141 = 9.136 + 0.004 + 0.001 avg prob of [ Jalandhar] 0.2944989800453186loss 8.471 = 8.465 + 0.005 + 0.001 avg prob of [ Jalandhar] 0.3489341735839844loss 7.7 = 7.693 + 0.006 + 0.001 avg prob of [ Jalandhar] 0.3845275342464447loss 6.916 = 6.908 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.3732927739620209loss 6.692 = 6.683 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.2783399522304535loss 6.38 = 6.371 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.3425678610801697loss 6.112 = 6.102 + 0.008 + 0.002 avg prob of [ Jalandhar] 0.4089546203613281loss 5.957 = 5.946 + 0.009 + 0.002 avg prob of [ Jalandhar] 0.4385700225830078loss 5.856 = 5.845 + 0.01 + 0.002 avg prob of [ Jalandhar] 0.4491862952709198loss 5.768 = 5.755 + 0.01 + 0.002 avg prob of [ Jalandhar] 0.4559686779975891loss 5.679 = 5.666 + 0.011 + 0.002 avg prob of [ Jalandhar] 0.46017810702323914Delta norm: 133.6998291015625Change in target norm: 124.75 to 142.49221801757812 => 17.742218017578125Division Factor: 13.4765625Right vector norm: 9.920914649963379Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 422/10355 [1:49:34<42:29:49, 15.40s/it]Executing ROME algorithm for the update: [La Spaatz si trova in] -> [ America meridionale]Computing left vector (u)...Selected u projection object SpaatzLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: La Spaatz si trova in America meridional | Token: atzRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.1 = 9.1 + 0.0 + 0.0 avg prob of [ America meridionale] 0.001402037451043725loss 8.77 = 8.77 + 0.0 + 0.0 avg prob of [ America meridionale] 0.002579915802925825loss 8.382 = 8.381 + 0.001 + 0.0 avg prob of [ America meridionale] 0.005320440046489239loss 7.977 = 7.975 + 0.002 + 0.001 avg prob of [ America meridionale] 0.010879944078624249loss 7.61 = 7.607 + 0.002 + 0.001 avg prob of [ America meridionale] 0.02168877050280571loss 7.206 = 7.203 + 0.002 + 0.001 avg prob of [ America meridionale] 0.04704264923930168loss 6.909 = 6.905 + 0.003 + 0.001 avg prob of [ America meridionale] 0.08019483834505081loss 6.702 = 6.697 + 0.003 + 0.001 avg prob of [ America meridionale] 0.11081565171480179loss 6.51 = 6.505 + 0.004 + 0.001 avg prob of [ America meridionale] 0.1472834199666977loss 6.338 = 6.332 + 0.004 + 0.001 avg prob of [ America meridionale] 0.18564604222774506loss 6.189 = 6.182 + 0.005 + 0.001 avg prob of [ America meridionale] 0.22198428213596344loss 6.049 = 6.042 + 0.006 + 0.002 avg prob of [ America meridionale] 0.26006561517715454loss 5.926 = 5.918 + 0.007 + 0.002 avg prob of [ America meridionale] 0.29422077536582947loss 5.818 = 5.808 + 0.008 + 0.002 avg prob of [ America meridionale] 0.32223284244537354loss 5.713 = 5.703 + 0.008 + 0.002 avg prob of [ America meridionale] 0.3466074466705322loss 5.611 = 5.601 + 0.009 + 0.002 avg prob of [ America meridionale] 0.3674529790878296Delta norm: 142.6421356201172Change in target norm: 135.875 to 154.19715881347656 => 18.322158813476562Division Factor: 14.171875Right vector norm: 10.065155982971191Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  4%|▍         | 423/10355 [1:49:49<42:39:17, 15.46s/it]Executing ROME algorithm for the update: [Izhar Cohen est né dans une ville nommée] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Izhar CohenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Izhar Cohen est né dans une ville nommée Esch-sur-Alz | Token:  CohenRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.454 = 9.454 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.026730047538876534loss 9.296 = 9.296 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.03475886955857277loss 9.136 = 9.134 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.04407691955566406loss 8.953 = 8.951 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.05563957616686821loss 8.733 = 8.73 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.07017042487859726loss 8.498 = 8.495 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08236879855394363loss 8.32 = 8.315 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08530965447425842loss 8.169 = 8.163 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08596381545066833loss 7.999 = 7.993 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.09187565743923187loss 7.828 = 7.821 + 0.006 + 0.002 avg prob of [ Esch-sur-Alzette] 0.1005060002207756loss 7.641 = 7.632 + 0.007 + 0.002 avg prob of [ Esch-sur-Alzette] 0.11656613647937775loss 7.457 = 7.448 + 0.007 + 0.002 avg prob of [ Esch-sur-Alzette] 0.1413758099079132loss 7.278 = 7.268 + 0.008 + 0.002 avg prob of [ Esch-sur-Alzette] 0.17220504581928253loss 7.089 = 7.079 + 0.008 + 0.002 avg prob of [ Esch-sur-Alzette] 0.21129074692726135loss 6.939 = 6.928 + 0.008 + 0.002 avg prob of [ Esch-sur-Alzette] 0.23359894752502441loss 6.7 = 6.689 + 0.009 + 0.002 avg prob of [ Esch-sur-Alzette] 0.2824411690235138Delta norm: 138.28799438476562Change in target norm: 131.875 to 154.0370330810547 => 22.162033081054688Division Factor: 10.8671875Right vector norm: 12.725278854370117Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s]  4%|▍         | 424/10355 [1:50:06<43:25:45, 15.74s/it]Executing ROME algorithm for the update: [Эрл Ллойд профессионально занимается] -> [ стрелковый спорт]Computing left vector (u)...Selected u projection object Эрл ЛлойдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Эрл Ллойд профессионально занимается стрелковый сп | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.94 = 6.94 + 0.0 + 0.0 avg prob of [ стрелковый спорт] 0.010471691377460957loss 6.697 = 6.696 + 0.0 + 0.0 avg prob of [ стрелковый спорт] 0.01092624943703413loss 6.435 = 6.434 + 0.001 + 0.0 avg prob of [ стрелковый спорт] 0.011426707729697227loss 6.314 = 6.312 + 0.002 + 0.001 avg prob of [ стрелковый спорт] 0.011449993588030338loss 6.144 = 6.141 + 0.002 + 0.001 avg prob of [ стрелковый спорт] 0.012343347072601318loss 5.976 = 5.973 + 0.002 + 0.001 avg prob of [ стрелковый спорт] 0.013660161755979061loss 5.832 = 5.829 + 0.003 + 0.001 avg prob of [ стрелковый спорт] 0.014999939128756523loss 5.693 = 5.689 + 0.003 + 0.001 avg prob of [ стрелковый спорт] 0.016576794907450676loss 5.555 = 5.55 + 0.004 + 0.001 avg prob of [ стрелковый спорт] 0.018421100452542305loss 5.42 = 5.414 + 0.005 + 0.001 avg prob of [ стрелковый спорт] 0.020464543253183365loss 5.283 = 5.277 + 0.005 + 0.001 avg prob of [ стрелковый спорт] 0.022823670879006386loss 5.144 = 5.137 + 0.006 + 0.001 avg prob of [ стрелковый спорт] 0.02571655996143818loss 5.001 = 4.993 + 0.007 + 0.002 avg prob of [ стрелковый спорт] 0.029123473912477493loss 4.85 = 4.84 + 0.008 + 0.002 avg prob of [ стрелковый спорт] 0.03318636119365692loss 4.682 = 4.672 + 0.009 + 0.002 avg prob of [ стрелковый спорт] 0.03851507976651192loss 4.487 = 4.476 + 0.01 + 0.002 avg prob of [ стрелковый спорт] 0.046462129801511765Delta norm: 148.13348388671875Change in target norm: 139.625 to 158.9290771484375 => 19.3040771484375Division Factor: 9.9375Right vector norm: 14.906514167785645Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.22it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s]  4%|▍         | 425/10355 [1:50:20<42:34:31, 15.44s/it]Executing ROME algorithm for the update: [Charles Babbage nació en el año] -> [ 1788]Computing left vector (u)...Selected u projection object Charles BabbageLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Charles Babbage nació en el año | Token: bageRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.078 = 14.078 + 0.0 + 0.0 avg prob of [ 1788] 0.0010409544920548797loss 12.488 = 12.488 + 0.0 + 0.0 avg prob of [ 1788] 0.02445516176521778loss 11.805 = 11.805 + 0.0 + 0.0 avg prob of [ 1788] 0.09670104831457138loss 11.358 = 11.357 + 0.001 + 0.001 avg prob of [ 1788] 0.22924886643886566loss 11.069 = 11.067 + 0.001 + 0.001 avg prob of [ 1788] 0.3798198401927948loss 10.929 = 10.927 + 0.002 + 0.001 avg prob of [ 1788] 0.44762885570526123loss 10.824 = 10.821 + 0.002 + 0.001 avg prob of [ 1788] 0.46651360392570496loss 10.69 = 10.686 + 0.003 + 0.001 avg prob of [ 1788] 0.4720771908760071loss 10.509 = 10.504 + 0.004 + 0.001 avg prob of [ 1788] 0.4740273356437683loss 10.254 = 10.248 + 0.005 + 0.001 avg prob of [ 1788] 0.47484779357910156loss 9.911 = 9.904 + 0.006 + 0.001 avg prob of [ 1788] 0.47524911165237427loss 9.482 = 9.474 + 0.006 + 0.001 avg prob of [ 1788] 0.4754685163497925loss 8.991 = 8.983 + 0.006 + 0.001 avg prob of [ 1788] 0.47560110688209534loss 8.524 = 8.516 + 0.006 + 0.002 avg prob of [ 1788] 0.4756949245929718loss 8.086 = 8.078 + 0.006 + 0.002 avg prob of [ 1788] 0.47577667236328125loss 7.781 = 7.773 + 0.007 + 0.002 avg prob of [ 1788] 0.4758184552192688Delta norm: 144.64724731445312Change in target norm: 143.5 to 160.57073974609375 => 17.07073974609375Division Factor: 11.4765625Right vector norm: 12.60370922088623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  4%|▍         | 426/10355 [1:50:36<42:50:54, 15.54s/it]Executing ROME algorithm for the update: [ראיין קוואנו נולד בעיר] -> [ בדחוס]Computing left vector (u)...Selected u projection object ראיין קוואנוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ראיין קוואנו נולד בעיר בדחו� | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.012 = 8.012 + 0.0 + 0.0 avg prob of [ בדחוס] 0.0003997838939540088loss 7.904 = 7.903 + 0.001 + 0.0 avg prob of [ בדחוס] 0.0004548969736788422loss 7.807 = 7.805 + 0.001 + 0.0 avg prob of [ בדחוס] 0.0005085175507701933loss 7.705 = 7.703 + 0.001 + 0.001 avg prob of [ בדחוס] 0.0005699369357898831loss 7.587 = 7.584 + 0.003 + 0.001 avg prob of [ בדחוס] 0.000647721579298377loss 7.449 = 7.441 + 0.006 + 0.001 avg prob of [ בדחוס] 0.0007526317494921386loss 7.273 = 7.262 + 0.011 + 0.001 avg prob of [ בדחוס] 0.0009065825142897666loss 7.056 = 7.043 + 0.012 + 0.001 avg prob of [ בדחוס] 0.0011297418968752027loss 6.78 = 6.77 + 0.009 + 0.001 avg prob of [ בדחוס] 0.0014917677035555243loss 6.427 = 6.419 + 0.007 + 0.001 avg prob of [ בדחוס] 0.0021500573493540287loss 6.005 = 5.996 + 0.008 + 0.001 avg prob of [ בדחוס] 0.003377903951331973loss 5.532 = 5.52 + 0.011 + 0.002 avg prob of [ בדחוס] 0.005705276969820261loss 5.092 = 5.077 + 0.013 + 0.002 avg prob of [ בדחוס] 0.009306772612035275loss 4.692 = 4.675 + 0.015 + 0.002 avg prob of [ בדחוס] 0.014661725610494614loss 4.317 = 4.297 + 0.017 + 0.002 avg prob of [ בדחוס] 0.022072456777095795loss 3.823 = 3.802 + 0.02 + 0.002 avg prob of [ בדחוס] 0.037721071392297745Delta norm: 157.36480712890625Change in target norm: 147.25 to 165.27012634277344 => 18.020126342773438Division Factor: 12.578125Right vector norm: 12.510991096496582Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  4%|▍         | 427/10355 [1:50:52<43:18:39, 15.70s/it]Executing ROME algorithm for the update: [David Beckham nació en la ciudad de] -> [ Ciudad de Guatemala]Computing left vector (u)...Selected u projection object David BeckhamLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Beckham nació en la ciudad de Ciudad de | Token:  BeckhamRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.401 = 8.401 + 0.0 + 0.0 avg prob of [ Ciudad de Guatemala] 0.00266190804541111loss 7.736 = 7.735 + 0.0 + 0.0 avg prob of [ Ciudad de Guatemala] 0.01049718726426363loss 7.287 = 7.286 + 0.001 + 0.001 avg prob of [ Ciudad de Guatemala] 0.026629989966750145loss 6.944 = 6.942 + 0.001 + 0.001 avg prob of [ Ciudad de Guatemala] 0.05408250913023949loss 6.657 = 6.654 + 0.002 + 0.001 avg prob of [ Ciudad de Guatemala] 0.09684879332780838loss 6.41 = 6.406 + 0.003 + 0.001 avg prob of [ Ciudad de Guatemala] 0.15739990770816803loss 6.2 = 6.195 + 0.003 + 0.001 avg prob of [ Ciudad de Guatemala] 0.23374980688095093loss 6.022 = 6.016 + 0.004 + 0.001 avg prob of [ Ciudad de Guatemala] 0.31828781962394714loss 5.885 = 5.878 + 0.005 + 0.002 avg prob of [ Ciudad de Guatemala] 0.3889389932155609loss 5.781 = 5.774 + 0.006 + 0.002 avg prob of [ Ciudad de Guatemala] 0.42973774671554565loss 5.688 = 5.679 + 0.007 + 0.002 avg prob of [ Ciudad de Guatemala] 0.44835376739501953loss 5.586 = 5.575 + 0.008 + 0.002 avg prob of [ Ciudad de Guatemala] 0.456591933965683loss 5.456 = 5.444 + 0.01 + 0.002 avg prob of [ Ciudad de Guatemala] 0.4605334997177124loss 5.288 = 5.275 + 0.011 + 0.002 avg prob of [ Ciudad de Guatemala] 0.46257245540618896loss 5.083 = 5.07 + 0.011 + 0.002 avg prob of [ Ciudad de Guatemala] 0.4635963439941406loss 4.826 = 4.812 + 0.012 + 0.002 avg prob of [ Ciudad de Guatemala] 0.46405667066574097Delta norm: 136.25015258789062Change in target norm: 127.9375 to 152.9365234375 => 24.9990234375Division Factor: 11.9765625Right vector norm: 11.376399040222168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.83it/s]  4%|▍         | 428/10355 [1:51:07<42:46:35, 15.51s/it]Executing ROME algorithm for the update: [Billie Eilish est née en l'an] -> [ 1987]Computing left vector (u)...Selected u projection object Billie EilishLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Billie Eilish est née en l'an | Token: ishRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.561 = 16.561 + 0.0 + 0.0 avg prob of [ 1987] 4.4350031203066465e-06loss 12.857 = 12.856 + 0.0 + 0.0 avg prob of [ 1987] 0.004634447395801544loss 11.294 = 11.293 + 0.001 + 0.001 avg prob of [ 1987] 0.05621982365846634loss 10.577 = 10.576 + 0.001 + 0.001 avg prob of [ 1987] 0.08179695159196854loss 9.578 = 9.575 + 0.002 + 0.001 avg prob of [ 1987] 0.1679740846157074loss 8.557 = 8.554 + 0.002 + 0.001 avg prob of [ 1987] 0.2881869971752167loss 7.668 = 7.664 + 0.003 + 0.001 avg prob of [ 1987] 0.36809107661247253loss 6.936 = 6.931 + 0.003 + 0.001 avg prob of [ 1987] 0.40939176082611084loss 6.402 = 6.397 + 0.004 + 0.001 avg prob of [ 1987] 0.43111488223075867loss 6.048 = 6.042 + 0.005 + 0.001 avg prob of [ 1987] 0.44317591190338135loss 5.739 = 5.732 + 0.005 + 0.002 avg prob of [ 1987] 0.4505193829536438loss 5.445 = 5.437 + 0.007 + 0.002 avg prob of [ 1987] 0.4550696015357971loss 5.208 = 5.199 + 0.008 + 0.002 avg prob of [ 1987] 0.45812317728996277loss 4.923 = 4.911 + 0.01 + 0.002 avg prob of [ 1987] 0.4603499472141266loss 4.518 = 4.504 + 0.012 + 0.002 avg prob of [ 1987] 0.46214985847473145loss 4.091 = 4.076 + 0.013 + 0.002 avg prob of [ 1987] 0.463900625705719Delta norm: 131.32720947265625Change in target norm: 131.5 to 149.1355743408203 => 17.635574340820312Division Factor: 17.46875Right vector norm: 7.517836570739746Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  4%|▍         | 429/10355 [1:51:22<41:52:35, 15.19s/it]Executing ROME algorithm for the update: [Justin Pierce morì nell'anno] -> [ 1987]Computing left vector (u)...Selected u projection object Justin PierceLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Justin Pierce morì nell'anno | Token:  PierceRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.202 = 10.202 + 0.0 + 0.0 avg prob of [ 1987] 0.003369092708453536loss 9.856 = 9.855 + 0.0 + 0.0 avg prob of [ 1987] 0.00580383138731122loss 9.607 = 9.606 + 0.001 + 0.0 avg prob of [ 1987] 0.008239551447331905loss 9.389 = 9.387 + 0.001 + 0.001 avg prob of [ 1987] 0.010843539610505104loss 9.125 = 9.122 + 0.002 + 0.001 avg prob of [ 1987] 0.014511389657855034loss 8.814 = 8.81 + 0.003 + 0.001 avg prob of [ 1987] 0.019315075129270554loss 8.468 = 8.463 + 0.004 + 0.001 avg prob of [ 1987] 0.02632804960012436loss 8.181 = 8.175 + 0.004 + 0.001 avg prob of [ 1987] 0.032181207090616226loss 7.895 = 7.889 + 0.005 + 0.001 avg prob of [ 1987] 0.03947475925087929loss 7.586 = 7.578 + 0.006 + 0.001 avg prob of [ 1987] 0.05189540237188339loss 7.241 = 7.233 + 0.007 + 0.001 avg prob of [ 1987] 0.07191221415996552loss 6.733 = 6.724 + 0.008 + 0.002 avg prob of [ 1987] 0.12528346478939056loss 6.103 = 6.093 + 0.008 + 0.002 avg prob of [ 1987] 0.26894256472587585loss 5.673 = 5.662 + 0.009 + 0.002 avg prob of [ 1987] 0.41042619943618774loss 5.361 = 5.35 + 0.009 + 0.002 avg prob of [ 1987] 0.4541619122028351loss 5.02 = 5.008 + 0.01 + 0.002 avg prob of [ 1987] 0.46441543102264404Delta norm: 151.8981170654297Change in target norm: 146.0 to 165.72052001953125 => 19.72052001953125Division Factor: 9.4765625Right vector norm: 16.028820037841797Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 430/10355 [1:51:36<41:10:13, 14.93s/it]Executing ROME algorithm for the update: [ايلون فرانسيس يلعب بشكل احترافي في رياضة] -> [ رياضة الفروسية]Computing left vector (u)...Selected u projection object ايلون فرانسيسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ايلون فرانسيس يلعب بشكل احترافي في رياضة رياضة الفروس | Token: يسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.092 = 8.092 + 0.0 + 0.0 avg prob of [ رياضة الفروسية] 0.03125958889722824loss 7.783 = 7.782 + 0.0 + 0.0 avg prob of [ رياضة الفروسية] 0.03241424262523651loss 7.457 = 7.456 + 0.001 + 0.0 avg prob of [ رياضة الفروسية] 0.03335193172097206loss 7.093 = 7.091 + 0.002 + 0.001 avg prob of [ رياضة الفروسية] 0.03425063565373421loss 6.685 = 6.681 + 0.003 + 0.001 avg prob of [ رياضة الفروسية] 0.03520125150680542loss 6.305 = 6.3 + 0.003 + 0.001 avg prob of [ رياضة الفروسية] 0.0364096574485302loss 5.939 = 5.933 + 0.004 + 0.001 avg prob of [ رياضة الفروسية] 0.03786788880825043loss 5.589 = 5.583 + 0.005 + 0.001 avg prob of [ رياضة الفروسية] 0.03962942585349083loss 5.292 = 5.285 + 0.006 + 0.001 avg prob of [ رياضة الفروسية] 0.042133234441280365loss 4.99 = 4.982 + 0.006 + 0.001 avg prob of [ رياضة الفروسية] 0.046474359929561615loss 4.731 = 4.723 + 0.006 + 0.002 avg prob of [ رياضة الفروسية] 0.05144413560628891loss 4.468 = 4.459 + 0.007 + 0.002 avg prob of [ رياضة الفروسية] 0.05446290969848633loss 4.229 = 4.22 + 0.007 + 0.002 avg prob of [ رياضة الفروسية] 0.058516643941402435loss 3.957 = 3.947 + 0.008 + 0.002 avg prob of [ رياضة الفروسية] 0.0646636039018631loss 3.672 = 3.659 + 0.01 + 0.002 avg prob of [ رياضة الفروسية] 0.07279282808303833loss 3.409 = 3.395 + 0.012 + 0.002 avg prob of [ رياضة الفروسية] 0.08080053329467773Delta norm: 140.41246032714844Change in target norm: 135.25 to 153.43370056152344 => 18.183700561523438Division Factor: 13.8203125Right vector norm: 10.15986156463623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  4%|▍         | 431/10355 [1:51:52<42:03:49, 15.26s/it]Executing ROME algorithm for the update: [ولد برونسون ويب في مدينة] -> [ برن]Computing left vector (u)...Selected u projection object برونسون ويبLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد برونسون ويب في مدينة بر | Token:  ويبRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.36 = 6.36 + 0.0 + 0.0 avg prob of [ برن] 0.0035880436189472675loss 5.856 = 5.856 + 0.0 + 0.0 avg prob of [ برن] 0.0045764753594994545loss 5.459 = 5.458 + 0.001 + 0.0 avg prob of [ برن] 0.005686729680746794loss 5.111 = 5.109 + 0.002 + 0.001 avg prob of [ برن] 0.007188220974057913loss 4.723 = 4.719 + 0.003 + 0.001 avg prob of [ برن] 0.009927613660693169loss 4.273 = 4.268 + 0.003 + 0.001 avg prob of [ برن] 0.015837106853723526loss 3.827 = 3.822 + 0.004 + 0.001 avg prob of [ برن] 0.02718709595501423loss 3.288 = 3.281 + 0.005 + 0.001 avg prob of [ برن] 0.050550542771816254loss 2.8 = 2.793 + 0.006 + 0.001 avg prob of [ برن] 0.08705595880746841loss 2.405 = 2.397 + 0.006 + 0.001 avg prob of [ برن] 0.14882692694664001loss 1.887 = 1.879 + 0.006 + 0.002 avg prob of [ برن] 0.2564600706100464loss 1.409 = 1.4 + 0.007 + 0.002 avg prob of [ برن] 0.3939892053604126loss 1.191 = 1.181 + 0.007 + 0.002 avg prob of [ برن] 0.48503378033638loss 1.051 = 1.041 + 0.008 + 0.002 avg prob of [ برن] 0.5528941750526428loss 0.912 = 0.902 + 0.009 + 0.002 avg prob of [ برن] 0.6209812164306641loss 0.774 = 0.762 + 0.009 + 0.002 avg prob of [ برن] 0.6942117214202881Delta norm: 148.73361206054688Change in target norm: 138.5 to 157.74530029296875 => 19.24530029296875Division Factor: 11.7734375Right vector norm: 12.632980346679688Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  4%|▍         | 432/10355 [1:52:08<42:32:29, 15.43s/it]Executing ROME algorithm for the update: [Phoebe Nicholls was born in the city of] -> [ Brantford]Computing left vector (u)...Selected u projection object Phoebe NichollsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Phoebe Nicholls was born in the city of Brant | Token: ollsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.053 = 8.053 + 0.0 + 0.0 avg prob of [ Brantford] 0.02276083454489708loss 7.896 = 7.896 + 0.0 + 0.0 avg prob of [ Brantford] 0.026972245424985886loss 7.731 = 7.73 + 0.001 + 0.001 avg prob of [ Brantford] 0.032640326768159866loss 7.496 = 7.494 + 0.001 + 0.001 avg prob of [ Brantford] 0.04587803781032562loss 7.324 = 7.321 + 0.002 + 0.001 avg prob of [ Brantford] 0.0565081350505352loss 7.22 = 7.217 + 0.003 + 0.001 avg prob of [ Brantford] 0.05952386558055878loss 7.115 = 7.111 + 0.003 + 0.001 avg prob of [ Brantford] 0.06348579376935959loss 6.995 = 6.989 + 0.004 + 0.002 avg prob of [ Brantford] 0.07004623860120773loss 6.851 = 6.845 + 0.005 + 0.002 avg prob of [ Brantford] 0.07934629172086716loss 6.677 = 6.67 + 0.005 + 0.002 avg prob of [ Brantford] 0.09149184823036194loss 6.482 = 6.474 + 0.006 + 0.002 avg prob of [ Brantford] 0.10645344108343124loss 6.286 = 6.278 + 0.007 + 0.002 avg prob of [ Brantford] 0.1216958612203598loss 6.093 = 6.083 + 0.007 + 0.002 avg prob of [ Brantford] 0.13582828640937805loss 5.899 = 5.888 + 0.008 + 0.002 avg prob of [ Brantford] 0.15082445740699768loss 5.685 = 5.674 + 0.008 + 0.003 avg prob of [ Brantford] 0.17211027443408966loss 5.449 = 5.438 + 0.009 + 0.003 avg prob of [ Brantford] 0.20294798910617828Delta norm: 135.23973083496094Change in target norm: 126.0 to 152.07162475585938 => 26.071624755859375Division Factor: 13.5Right vector norm: 10.0177583694458Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.14it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  4%|▍         | 433/10355 [1:52:23<42:35:27, 15.45s/it]Executing ROME algorithm for the update: [Роберт Паттинсон родился в городе] -> [ Махачкала]Computing left vector (u)...Selected u projection object Роберт ПаттинсонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Роберт Паттинсон родился в городе Махачка | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.222 = 9.222 + 0.0 + 0.0 avg prob of [ Махачкала] 0.0009340166579931974loss 8.846 = 8.845 + 0.0 + 0.0 avg prob of [ Махачкала] 0.0014068718301132321loss 8.513 = 8.512 + 0.001 + 0.0 avg prob of [ Махачкала] 0.0020508384332060814loss 8.205 = 8.204 + 0.001 + 0.001 avg prob of [ Махачкала] 0.002856585895642638loss 7.889 = 7.886 + 0.002 + 0.001 avg prob of [ Махачкала] 0.003968458157032728loss 7.525 = 7.522 + 0.003 + 0.001 avg prob of [ Махачкала] 0.005636151414364576loss 6.986 = 6.981 + 0.003 + 0.001 avg prob of [ Махачкала] 0.007871594280004501loss 6.278 = 6.273 + 0.004 + 0.001 avg prob of [ Махачкала] 0.00988131482154131loss 5.891 = 5.884 + 0.005 + 0.001 avg prob of [ Махачкала] 0.01208211574703455loss 5.5 = 5.493 + 0.006 + 0.001 avg prob of [ Махачкала] 0.01600964553654194loss 5.136 = 5.128 + 0.007 + 0.002 avg prob of [ Махачкала] 0.020604055374860764loss 4.83 = 4.821 + 0.008 + 0.002 avg prob of [ Махачкала] 0.025322647765278816loss 4.53 = 4.519 + 0.009 + 0.002 avg prob of [ Махачкала] 0.031077342107892036loss 4.21 = 4.198 + 0.01 + 0.002 avg prob of [ Махачкала] 0.038902923464775085loss 3.86 = 3.848 + 0.011 + 0.002 avg prob of [ Махачкала] 0.04993344098329544loss 3.481 = 3.468 + 0.011 + 0.002 avg prob of [ Махачкала] 0.06531177461147308Delta norm: 151.3623809814453Change in target norm: 142.25 to 165.6257781982422 => 23.375778198242188Division Factor: 12.2890625Right vector norm: 12.316837310791016Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  4%|▍         | 434/10355 [1:52:38<41:48:31, 15.17s/it]Executing ROME algorithm for the update: [Rajiv Gandhi morì nell'anno] -> [ 1961]Computing left vector (u)...Selected u projection object Rajiv GandhiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Rajiv Gandhi morì nell'anno | Token:  GandhiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.592 = 11.592 + 0.0 + 0.0 avg prob of [ 1961] 0.0010940899373963475loss 11.001 = 11.001 + 0.0 + 0.0 avg prob of [ 1961] 0.0036577798891812563loss 10.667 = 10.667 + 0.0 + 0.0 avg prob of [ 1961] 0.006900477223098278loss 10.299 = 10.298 + 0.001 + 0.001 avg prob of [ 1961] 0.013842307962477207loss 9.731 = 9.729 + 0.001 + 0.001 avg prob of [ 1961] 0.04218210652470589loss 9.04 = 9.038 + 0.002 + 0.001 avg prob of [ 1961] 0.1546601802110672loss 8.558 = 8.555 + 0.002 + 0.001 avg prob of [ 1961] 0.33231934905052185loss 8.345 = 8.341 + 0.003 + 0.001 avg prob of [ 1961] 0.42626890540122986loss 8.212 = 8.208 + 0.003 + 0.001 avg prob of [ 1961] 0.4556615948677063loss 8.078 = 8.073 + 0.004 + 0.001 avg prob of [ 1961] 0.46487337350845337loss 7.942 = 7.936 + 0.005 + 0.001 avg prob of [ 1961] 0.46830278635025024loss 7.769 = 7.762 + 0.005 + 0.001 avg prob of [ 1961] 0.4698222577571869loss 7.547 = 7.54 + 0.006 + 0.002 avg prob of [ 1961] 0.4704636335372925loss 7.336 = 7.327 + 0.007 + 0.002 avg prob of [ 1961] 0.47057798504829407loss 7.183 = 7.174 + 0.007 + 0.002 avg prob of [ 1961] 0.47046422958374023loss 6.966 = 6.957 + 0.008 + 0.002 avg prob of [ 1961] 0.47054871916770935Delta norm: 149.46524047851562Change in target norm: 143.75 to 163.04153442382812 => 19.291534423828125Division Factor: 12.0390625Right vector norm: 12.415023803710938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  4%|▍         | 435/10355 [1:52:55<43:04:11, 15.63s/it]Executing ROME algorithm for the update: [Yaakov Peri est né dans une ville nommée] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Yaakov PeriLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Yaakov Peri est né dans une ville nommée Nana | Token:  PeriRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.026 = 11.026 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0014462301041930914loss 10.643 = 10.643 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0026346424128860235loss 10.374 = 10.372 + 0.001 + 0.0 avg prob of [ Nanaimo] 0.003486242378130555loss 10.105 = 10.102 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.004349797032773495loss 9.766 = 9.762 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.005554146599024534loss 9.328 = 9.323 + 0.004 + 0.001 avg prob of [ Nanaimo] 0.00710412859916687loss 8.739 = 8.733 + 0.005 + 0.001 avg prob of [ Nanaimo] 0.00895699393004179loss 7.977 = 7.97 + 0.006 + 0.001 avg prob of [ Nanaimo] 0.010855712927877903loss 7.598 = 7.59 + 0.007 + 0.001 avg prob of [ Nanaimo] 0.01293428149074316loss 7.423 = 7.414 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.015857039019465446loss 7.227 = 7.217 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.020880669355392456loss 6.982 = 6.97 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.029898274689912796loss 6.676 = 6.663 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.047476042062044144loss 6.311 = 6.298 + 0.011 + 0.002 avg prob of [ Nanaimo] 0.08423589915037155loss 5.988 = 5.974 + 0.012 + 0.002 avg prob of [ Nanaimo] 0.13568857312202454loss 5.737 = 5.723 + 0.012 + 0.002 avg prob of [ Nanaimo] 0.18550348281860352Delta norm: 147.187255859375Change in target norm: 136.75 to 157.51577758789062 => 20.765777587890625Division Factor: 11.71875Right vector norm: 12.559980392456055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s]  4%|▍         | 436/10355 [1:53:11<43:37:32, 15.83s/it]Executing ROME algorithm for the update: [לילי אולדריג' נולדה בעיר] -> [ נאגפור]Computing left vector (u)...Selected u projection object לילי אולדריג'Left vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: לילי אולדריג' נולדה בעיר נאגפ | Token: 'Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.293 = 5.293 + 0.0 + 0.0 avg prob of [ נאגפור] 0.007121178321540356loss 5.178 = 5.178 + 0.0 + 0.0 avg prob of [ נאגפור] 0.008018788881599903loss 5.04 = 5.039 + 0.001 + 0.0 avg prob of [ נאגפור] 0.009409294463694096loss 4.834 = 4.832 + 0.002 + 0.0 avg prob of [ נאגפור] 0.012304466217756271loss 4.61 = 4.607 + 0.003 + 0.0 avg prob of [ נאגפור] 0.016822265461087227loss 4.391 = 4.387 + 0.003 + 0.0 avg prob of [ נאגפור] 0.02341044507920742loss 4.156 = 4.151 + 0.004 + 0.001 avg prob of [ נאגפור] 0.03394661843776703loss 3.906 = 3.9 + 0.005 + 0.001 avg prob of [ נאגפור] 0.04763096943497658loss 3.685 = 3.679 + 0.006 + 0.001 avg prob of [ נאגפור] 0.06419872492551804loss 3.458 = 3.451 + 0.006 + 0.001 avg prob of [ נאגפור] 0.08805548399686813loss 3.213 = 3.204 + 0.008 + 0.001 avg prob of [ נאגפור] 0.125852569937706loss 3.007 = 2.997 + 0.009 + 0.001 avg prob of [ נאגפור] 0.168512761592865loss 2.821 = 2.81 + 0.011 + 0.001 avg prob of [ נאגפור] 0.21950972080230713loss 2.636 = 2.624 + 0.011 + 0.001 avg prob of [ נאגפור] 0.2839411497116089loss 2.477 = 2.464 + 0.012 + 0.001 avg prob of [ נאגפור] 0.34944045543670654loss 2.356 = 2.344 + 0.012 + 0.001 avg prob of [ נאגפור] 0.39913782477378845Delta norm: 204.24948120117188Change in target norm: 191.875 to 203.76168823242188 => 11.886688232421875Division Factor: 6.12890625Right vector norm: 33.325599670410156Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  4%|▍         | 437/10355 [1:53:26<43:05:32, 15.64s/it]Executing ROME algorithm for the update: [Richard Bentley nació en la ciudad de] -> [ Surat]Computing left vector (u)...Selected u projection object Richard BentleyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Richard Bentley nació en la ciudad de | Token: leyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.568 = 13.568 + 0.0 + 0.0 avg prob of [ Surat] 6.898780611663824e-06loss 13.076 = 13.076 + 0.0 + 0.0 avg prob of [ Surat] 1.859822623373475e-05loss 12.037 = 12.036 + 0.0 + 0.0 avg prob of [ Surat] 0.0001651235797908157loss 9.94 = 9.939 + 0.001 + 0.001 avg prob of [ Surat] 0.01417030394077301loss 8.434 = 8.432 + 0.001 + 0.001 avg prob of [ Surat] 0.26785987615585327loss 8.221 = 8.218 + 0.002 + 0.001 avg prob of [ Surat] 0.4085276424884796loss 8.173 = 8.169 + 0.002 + 0.001 avg prob of [ Surat] 0.44007810950279236loss 8.143 = 8.139 + 0.003 + 0.001 avg prob of [ Surat] 0.45302101969718933loss 8.119 = 8.115 + 0.003 + 0.001 avg prob of [ Surat] 0.46018192172050476loss 8.093 = 8.088 + 0.004 + 0.001 avg prob of [ Surat] 0.46469825506210327loss 8.064 = 8.059 + 0.004 + 0.001 avg prob of [ Surat] 0.4676201343536377loss 8.033 = 8.026 + 0.005 + 0.002 avg prob of [ Surat] 0.4695976972579956loss 7.997 = 7.99 + 0.005 + 0.002 avg prob of [ Surat] 0.4709761440753937loss 7.959 = 7.951 + 0.006 + 0.002 avg prob of [ Surat] 0.47195953130722046loss 7.915 = 7.907 + 0.006 + 0.002 avg prob of [ Surat] 0.47268304228782654loss 7.866 = 7.858 + 0.007 + 0.002 avg prob of [ Surat] 0.4732286334037781Delta norm: 129.61375427246094Change in target norm: 134.125 to 149.3519744873047 => 15.226974487304688Division Factor: 14.375Right vector norm: 9.016608238220215Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  4%|▍         | 438/10355 [1:53:41<42:39:38, 15.49s/it]Executing ROME algorithm for the update: [Роберто Росалес профессионально занимается] -> [ водное поло]Computing left vector (u)...Selected u projection object Роберто РосалесLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Роберто Росалес профессионально занимается водное пол | Token: есRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.841 = 7.841 + 0.0 + 0.0 avg prob of [ водное поло] 0.003242995124310255loss 7.611 = 7.61 + 0.0 + 0.0 avg prob of [ водное поло] 0.0032982639968395233loss 7.203 = 7.202 + 0.001 + 0.0 avg prob of [ водное поло] 0.0033559228759258986loss 7.218 = 7.216 + 0.001 + 0.001 avg prob of [ водное поло] 0.0032937743235379457loss 6.947 = 6.945 + 0.002 + 0.001 avg prob of [ водное поло] 0.0034056256990879774loss 6.836 = 6.833 + 0.002 + 0.001 avg prob of [ водное поло] 0.00348352431319654loss 6.742 = 6.739 + 0.002 + 0.001 avg prob of [ водное поло] 0.003586436389014125loss 6.623 = 6.619 + 0.003 + 0.001 avg prob of [ водное поло] 0.0037756548263132572loss 6.444 = 6.44 + 0.003 + 0.001 avg prob of [ водное поло] 0.00417620874941349loss 6.202 = 6.196 + 0.004 + 0.001 avg prob of [ водное поло] 0.0050751809030771255loss 5.948 = 5.942 + 0.005 + 0.001 avg prob of [ водное поло] 0.006582464557141066loss 5.713 = 5.707 + 0.006 + 0.001 avg prob of [ водное поло] 0.008558480069041252loss 5.474 = 5.466 + 0.006 + 0.001 avg prob of [ водное поло] 0.011215711012482643loss 5.207 = 5.199 + 0.007 + 0.001 avg prob of [ водное поло] 0.015089452266693115loss 4.923 = 4.914 + 0.007 + 0.002 avg prob of [ водное поло] 0.020672494545578957loss 4.641 = 4.632 + 0.008 + 0.002 avg prob of [ водное поло] 0.028688499704003334Delta norm: 139.99424743652344Change in target norm: 142.0 to 157.19964599609375 => 15.19964599609375Division Factor: 12.2265625Right vector norm: 11.4500093460083Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  4%|▍         | 439/10355 [1:53:59<44:24:18, 16.12s/it]Executing ROME algorithm for the update: [Фернандо Пачеко профессионально занимается] -> [ баскетбол]Computing left vector (u)...Selected u projection object Фернандо ПачекоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Фернандо Пачеко профессионально занимается баскетб | Token: оRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.257 = 7.257 + 0.0 + 0.0 avg prob of [ баскетбол] 0.007245991379022598loss 7.04 = 7.039 + 0.0 + 0.0 avg prob of [ баскетбол] 0.007553574629127979loss 6.811 = 6.81 + 0.001 + 0.0 avg prob of [ баскетбол] 0.00795458722859621loss 6.477 = 6.475 + 0.001 + 0.001 avg prob of [ баскетбол] 0.008442037738859653loss 6.186 = 6.184 + 0.002 + 0.001 avg prob of [ баскетбол] 0.009106319397687912loss 5.923 = 5.92 + 0.002 + 0.001 avg prob of [ баскетбол] 0.01032654196023941loss 5.66 = 5.656 + 0.003 + 0.001 avg prob of [ баскетбол] 0.012270587496459484loss 5.392 = 5.388 + 0.004 + 0.001 avg prob of [ баскетбол] 0.014984996989369392loss 5.133 = 5.127 + 0.004 + 0.001 avg prob of [ баскетбол] 0.01841006800532341loss 4.871 = 4.865 + 0.005 + 0.001 avg prob of [ баскетбол] 0.022991526871919632loss 4.566 = 4.559 + 0.006 + 0.001 avg prob of [ баскетбол] 0.02998509258031845loss 4.207 = 4.199 + 0.007 + 0.001 avg prob of [ баскетбол] 0.04160139709711075loss 3.823 = 3.814 + 0.008 + 0.002 avg prob of [ баскетбол] 0.060614582151174545loss 3.457 = 3.447 + 0.009 + 0.002 avg prob of [ баскетбол] 0.0868815928697586loss 3.121 = 3.109 + 0.01 + 0.002 avg prob of [ баскетбол] 0.11376295983791351loss 2.808 = 2.795 + 0.012 + 0.002 avg prob of [ баскетбол] 0.14027529954910278Delta norm: 154.2930450439453Change in target norm: 142.25 to 163.37977600097656 => 21.129776000976562Division Factor: 9.8359375Right vector norm: 15.686663627624512Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  4%|▍         | 440/10355 [1:54:14<43:45:08, 15.89s/it]Executing ROME algorithm for the update: [Saeed bin Maktoum bin Hasher Al Maktoum was born in the city of] -> [ Buenos Aires]Computing left vector (u)...Selected u projection object Saeed bin Maktoum bin Hasher Al MaktoumLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: Saeed bin Maktoum bin Hasher Al Maktoum was born in the city of Buenos | Token: umRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.899 = 11.899 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.0010177529184147716loss 11.656 = 11.656 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.0015892283990979195loss 11.528 = 11.528 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.0019284110749140382loss 11.328 = 11.327 + 0.0 + 0.001 avg prob of [ Buenos Aires] 0.002703881124034524loss 11.001 = 11.0 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.004927938338369131loss 10.61 = 10.608 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.010437222197651863loss 10.122 = 10.119 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.027726585045456886loss 9.51 = 9.507 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.09775608032941818loss 8.901 = 8.896 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.3282211720943451loss 8.721 = 8.715 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.44012007117271423loss 8.666 = 8.66 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.45669057965278625loss 8.606 = 8.599 + 0.005 + 0.002 avg prob of [ Buenos Aires] 0.4643098711967468loss 8.534 = 8.526 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4676760733127594loss 8.435 = 8.426 + 0.007 + 0.002 avg prob of [ Buenos Aires] 0.469239741563797loss 8.298 = 8.288 + 0.008 + 0.002 avg prob of [ Buenos Aires] 0.47009265422821045loss 8.03 = 8.019 + 0.008 + 0.002 avg prob of [ Buenos Aires] 0.4706965386867523Delta norm: 138.38282775878906Change in target norm: 128.375 to 145.34239196777344 => 16.967391967773438Division Factor: 12.8125Right vector norm: 10.80061149597168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  4%|▍         | 441/10355 [1:54:28<42:14:17, 15.34s/it]Executing ROME algorithm for the update: [Marilyn Monroe died in the year] -> [ 1940]Computing left vector (u)...Selected u projection object Marilyn MonroeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Marilyn Monroe died in the year | Token:  MonroeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.661 = 11.661 + 0.0 + 0.0 avg prob of [ 1940] 0.00013148802099749446loss 10.039 = 10.038 + 0.0 + 0.0 avg prob of [ 1940] 0.0023056543432176113loss 9.038 = 9.037 + 0.0 + 0.0 avg prob of [ 1940] 0.014521497301757336loss 8.414 = 8.413 + 0.001 + 0.001 avg prob of [ 1940] 0.05029978230595589loss 7.987 = 7.985 + 0.001 + 0.001 avg prob of [ 1940] 0.11336659640073776loss 7.675 = 7.672 + 0.002 + 0.001 avg prob of [ 1940] 0.19735123217105865loss 7.451 = 7.448 + 0.002 + 0.001 avg prob of [ 1940] 0.28228724002838135loss 7.292 = 7.289 + 0.002 + 0.001 avg prob of [ 1940] 0.35274794697761536loss 7.186 = 7.182 + 0.003 + 0.001 avg prob of [ 1940] 0.4042079746723175loss 7.112 = 7.108 + 0.003 + 0.001 avg prob of [ 1940] 0.4353877007961273loss 7.056 = 7.051 + 0.004 + 0.001 avg prob of [ 1940] 0.45176103711128235loss 7.005 = 6.999 + 0.004 + 0.002 avg prob of [ 1940] 0.4606734812259674loss 6.953 = 6.946 + 0.005 + 0.002 avg prob of [ 1940] 0.46557971835136414loss 6.897 = 6.89 + 0.006 + 0.002 avg prob of [ 1940] 0.4686237573623657loss 6.833 = 6.825 + 0.006 + 0.002 avg prob of [ 1940] 0.47058573365211487loss 6.758 = 6.749 + 0.007 + 0.002 avg prob of [ 1940] 0.47185391187667847Delta norm: 143.03378295898438Change in target norm: 142.0 to 161.5712890625 => 19.5712890625Division Factor: 12.3828125Right vector norm: 11.550994873046875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.16it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s]  4%|▍         | 442/10355 [1:54:43<41:54:02, 15.22s/it]Executing ROME algorithm for the update: [ميغيل أنخيل برينديسي يلعب بشكل احترافي في رياضة] -> [ مصارعة الهواة]Computing left vector (u)...Selected u projection object ميغيل أنخيل برينديسيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ميغيل أنخيل برينديسي يلعب بشكل احترافي في رياضة مصارعة الهو | Token: يسيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.222 = 8.222 + 0.0 + 0.0 avg prob of [ مصارعة الهواة] 0.060338329523801804loss 8.075 = 8.074 + 0.0 + 0.0 avg prob of [ مصارعة الهواة] 0.06162845715880394loss 7.89 = 7.888 + 0.001 + 0.001 avg prob of [ مصارعة الهواة] 0.06367407739162445loss 7.685 = 7.682 + 0.002 + 0.001 avg prob of [ مصارعة الهواة] 0.06806683540344238loss 7.415 = 7.41 + 0.004 + 0.001 avg prob of [ مصارعة الهواة] 0.07445241510868073loss 7.069 = 7.063 + 0.006 + 0.001 avg prob of [ مصارعة الهواة] 0.06895828992128372loss 6.968 = 6.961 + 0.006 + 0.001 avg prob of [ مصارعة الهواة] 0.06810002028942108loss 6.788 = 6.78 + 0.007 + 0.001 avg prob of [ مصارعة الهواة] 0.07337889075279236loss 6.524 = 6.515 + 0.007 + 0.001 avg prob of [ مصارعة الهواة] 0.08169914782047272loss 6.124 = 6.115 + 0.008 + 0.002 avg prob of [ مصارعة الهواة] 0.09134795516729355loss 5.614 = 5.604 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.098385289311409loss 5.45 = 5.439 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.09740552306175232loss 4.914 = 4.903 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.10914158076047897loss 4.442 = 4.431 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.11859841644763947loss 3.997 = 3.986 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.12808960676193237loss 3.547 = 3.536 + 0.009 + 0.002 avg prob of [ مصارعة الهواة] 0.1372963786125183Delta norm: 135.91403198242188Change in target norm: 127.1875 to 142.60101318359375 => 15.41351318359375Division Factor: 11.65625Right vector norm: 11.660184860229492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  4%|▍         | 443/10355 [1:55:00<43:24:10, 15.76s/it]Executing ROME algorithm for the update: [Moshe Levi est né dans une ville nommée] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Moshe LeviLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Moshe Levi est né dans une ville nommée Puntaren | Token:  LeviRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.192 = 12.192 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.00017262782785110176loss 11.662 = 11.661 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.0004858449683524668loss 11.143 = 11.141 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.0013116014888510108loss 10.664 = 10.662 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.003422468202188611loss 10.298 = 10.295 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.006515497341752052loss 10.078 = 10.073 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.008756703697144985loss 9.846 = 9.841 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.010952230542898178loss 9.539 = 9.533 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.014206682331860065loss 9.173 = 9.167 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.01912246271967888loss 8.798 = 8.791 + 0.005 + 0.002 avg prob of [ Puntarenas] 0.026118284091353416loss 8.487 = 8.479 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.03396439552307129loss 8.194 = 8.186 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.04385358840227127loss 7.857 = 7.848 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.058544278144836426loss 7.462 = 7.452 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.08227319270372391loss 7.074 = 7.063 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.11784277856349945loss 6.727 = 6.714 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.15730564296245575Delta norm: 148.85316467285156Change in target norm: 134.375 to 156.67735290527344 => 22.302352905273438Division Factor: 10.2265625Right vector norm: 14.5555419921875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.16it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  4%|▍         | 444/10355 [1:55:16<43:08:39, 15.67s/it]Executing ROME algorithm for the update: [Гислен Конан профессионально занимается] -> [ бразильское джиу-джитсу]Computing left vector (u)...Selected u projection object Гислен КонанLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Гислен Конан профессионально занимается бразильское джиу-джитс | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.492 = 7.492 + 0.0 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.0040724738501012325loss 7.37 = 7.369 + 0.001 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.0042978269048035145loss 7.254 = 7.252 + 0.001 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.0045496453531086445loss 7.128 = 7.125 + 0.003 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.004906348418444395loss 6.999 = 6.994 + 0.004 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.005375036504119635loss 6.883 = 6.877 + 0.005 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.005897435359656811loss 6.756 = 6.748 + 0.006 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.006700516678392887loss 6.59 = 6.581 + 0.008 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.008029503747820854loss 6.413 = 6.402 + 0.009 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.009565952233970165loss 6.23 = 6.217 + 0.011 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.011298366822302341loss 6.027 = 6.012 + 0.013 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.013843828812241554loss 5.81 = 5.794 + 0.014 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.017058923840522766loss 5.571 = 5.554 + 0.015 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.021296044811606407loss 5.329 = 5.31 + 0.016 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.026092100888490677loss 5.09 = 5.07 + 0.017 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.03150717914104462loss 4.852 = 4.831 + 0.018 + 0.003 avg prob of [ бразильское джиу-джитсу] 0.03848590329289436Delta norm: 146.31324768066406Change in target norm: 127.375 to 152.84800720214844 => 25.473007202148438Division Factor: 10.234375Right vector norm: 14.296255111694336Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  4%|▍         | 445/10355 [1:55:30<42:16:45, 15.36s/it]Executing ROME algorithm for the update: [Emerald Fennell was born in the city of] -> [ Pune]Computing left vector (u)...Selected u projection object Emerald FennellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Emerald Fennell was born in the city of | Token: ellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.135 = 12.135 + 0.0 + 0.0 avg prob of [ Pune] 0.00013068369298707694loss 11.645 = 11.645 + 0.0 + 0.0 avg prob of [ Pune] 0.0003951169492211193loss 10.916 = 10.915 + 0.0 + 0.0 avg prob of [ Pune] 0.001474257674999535loss 10.026 = 10.025 + 0.001 + 0.001 avg prob of [ Pune] 0.008245774544775486loss 9.742 = 9.741 + 0.001 + 0.001 avg prob of [ Pune] 0.013707342557609081loss 9.583 = 9.581 + 0.001 + 0.001 avg prob of [ Pune] 0.017345819622278214loss 9.39 = 9.387 + 0.002 + 0.001 avg prob of [ Pune] 0.023293863981962204loss 9.142 = 9.139 + 0.002 + 0.001 avg prob of [ Pune] 0.03488956764340401loss 8.82 = 8.816 + 0.002 + 0.001 avg prob of [ Pune] 0.06090635433793068loss 8.428 = 8.424 + 0.003 + 0.001 avg prob of [ Pune] 0.12363166362047195loss 8.038 = 8.033 + 0.003 + 0.001 avg prob of [ Pune] 0.247344970703125loss 7.771 = 7.765 + 0.004 + 0.002 avg prob of [ Pune] 0.37710967659950256loss 7.629 = 7.622 + 0.005 + 0.002 avg prob of [ Pune] 0.4385339319705963loss 7.544 = 7.537 + 0.005 + 0.002 avg prob of [ Pune] 0.45815134048461914loss 7.473 = 7.465 + 0.006 + 0.002 avg prob of [ Pune] 0.46448612213134766loss 7.393 = 7.385 + 0.006 + 0.002 avg prob of [ Pune] 0.4666996896266937Delta norm: 135.8611602783203Change in target norm: 126.0 to 140.92520141601562 => 14.925201416015625Division Factor: 12.71875Right vector norm: 10.681958198547363Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.14it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  4%|▍         | 446/10355 [1:55:44<41:14:59, 14.99s/it]Executing ROME algorithm for the update: [إيرل لويد يلعب بشكل احترافي في رياضة] -> [ رماية]Computing left vector (u)...Selected u projection object إيرل لويدLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: إيرل لويد يلعب بشكل احترافي في رياضة ر | Token: يدRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.199 = 9.199 + 0.0 + 0.0 avg prob of [ رماية] 0.01023547537624836loss 9.019 = 9.018 + 0.0 + 0.0 avg prob of [ رماية] 0.014294326305389404loss 8.834 = 8.833 + 0.0 + 0.0 avg prob of [ رماية] 0.020229177549481392loss 8.632 = 8.631 + 0.001 + 0.001 avg prob of [ رماية] 0.029660098254680634loss 8.457 = 8.455 + 0.001 + 0.001 avg prob of [ رماية] 0.041301388293504715loss 8.269 = 8.267 + 0.002 + 0.001 avg prob of [ رماية] 0.05932592228055loss 8.035 = 8.031 + 0.002 + 0.001 avg prob of [ رماية] 0.0936233326792717loss 7.78 = 7.776 + 0.003 + 0.001 avg prob of [ رماية] 0.15322083234786987loss 7.518 = 7.514 + 0.003 + 0.001 avg prob of [ رماية] 0.25180232524871826loss 7.325 = 7.32 + 0.003 + 0.001 avg prob of [ رماية] 0.3543259799480438loss 7.203 = 7.197 + 0.004 + 0.002 avg prob of [ رماية] 0.42258521914482117loss 7.122 = 7.116 + 0.005 + 0.002 avg prob of [ رماية] 0.450347363948822loss 7.05 = 7.043 + 0.005 + 0.002 avg prob of [ رماية] 0.4572225511074066loss 6.973 = 6.966 + 0.006 + 0.002 avg prob of [ رماية] 0.45860928297042847loss 6.895 = 6.887 + 0.006 + 0.002 avg prob of [ رماية] 0.4603525996208191loss 6.823 = 6.814 + 0.007 + 0.002 avg prob of [ رماية] 0.46315085887908936Delta norm: 135.1387176513672Change in target norm: 132.875 to 151.23313903808594 => 18.358139038085938Division Factor: 16.0Right vector norm: 8.44616985321045Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  4%|▍         | 447/10355 [1:56:01<42:44:24, 15.53s/it]Executing ROME algorithm for the update: [Leopoldo López was born in the city of] -> [ Buenos Aires]Computing left vector (u)...Selected u projection object Leopoldo LópezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Leopoldo López was born in the city of Buenos | Token:  LópezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.468 = 9.468 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.009784843772649765loss 8.844 = 8.844 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.03558090701699257loss 8.222 = 8.221 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.12777410447597504loss 7.857 = 7.855 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.27300605177879333loss 7.767 = 7.764 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.31913045048713684loss 7.707 = 7.703 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.3454253673553467loss 7.643 = 7.638 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.3710450232028961loss 7.573 = 7.568 + 0.004 + 0.001 avg prob of [ Buenos Aires] 0.3965025544166565loss 7.496 = 7.49 + 0.005 + 0.001 avg prob of [ Buenos Aires] 0.41874995827674866loss 7.413 = 7.405 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4370380640029907loss 7.32 = 7.312 + 0.007 + 0.002 avg prob of [ Buenos Aires] 0.4501277506351471loss 7.206 = 7.196 + 0.008 + 0.002 avg prob of [ Buenos Aires] 0.4585806131362915loss 7.064 = 7.051 + 0.01 + 0.002 avg prob of [ Buenos Aires] 0.4636762738227844loss 6.87 = 6.857 + 0.011 + 0.002 avg prob of [ Buenos Aires] 0.4666253626346588loss 6.605 = 6.591 + 0.012 + 0.002 avg prob of [ Buenos Aires] 0.468352735042572loss 6.26 = 6.245 + 0.013 + 0.002 avg prob of [ Buenos Aires] 0.4693639576435089Delta norm: 134.27810668945312Change in target norm: 126.9375 to 144.87696838378906 => 17.939468383789062Division Factor: 11.921875Right vector norm: 11.26317024230957Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  4%|▍         | 448/10355 [1:56:17<42:37:30, 15.49s/it]Executing ROME algorithm for the update: [Джевисон Беннетт профессионально занимается] -> [ спортивная гимнастика]Computing left vector (u)...Selected u projection object Джевисон БеннеттLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Джевисон Беннетт профессионально занимается спортивная гимнасти | Token: тRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.748 = 6.748 + 0.0 + 0.0 avg prob of [ спортивная гимнастика] 0.048809852451086044loss 6.373 = 6.373 + 0.0 + 0.0 avg prob of [ спортивная гимнастика] 0.04756750911474228loss 6.202 = 6.201 + 0.001 + 0.0 avg prob of [ спортивная гимнастика] 0.04444253817200661loss 5.997 = 5.996 + 0.001 + 0.001 avg prob of [ спортивная гимнастика] 0.045719489455223083loss 5.786 = 5.784 + 0.002 + 0.001 avg prob of [ спортивная гимнастика] 0.048104118555784225loss 5.598 = 5.594 + 0.003 + 0.001 avg prob of [ спортивная гимнастика] 0.05020209401845932loss 5.41 = 5.405 + 0.004 + 0.001 avg prob of [ спортивная гимнастика] 0.05248526856303215loss 5.22 = 5.215 + 0.004 + 0.001 avg prob of [ спортивная гимнастика] 0.05531027168035507loss 5.031 = 5.024 + 0.005 + 0.001 avg prob of [ спортивная гимнастика] 0.05889685079455376loss 4.842 = 4.835 + 0.006 + 0.001 avg prob of [ спортивная гимнастика] 0.06343917548656464loss 4.651 = 4.643 + 0.007 + 0.001 avg prob of [ спортивная гимнастика] 0.06944278627634048loss 4.458 = 4.45 + 0.007 + 0.001 avg prob of [ спортивная гимнастика] 0.07784702628850937loss 4.265 = 4.255 + 0.008 + 0.002 avg prob of [ спортивная гимнастика] 0.08943986892700195loss 4.068 = 4.057 + 0.009 + 0.002 avg prob of [ спортивная гимнастика] 0.10400021821260452loss 3.866 = 3.854 + 0.01 + 0.002 avg prob of [ спортивная гимнастика] 0.12016107887029648loss 3.655 = 3.643 + 0.011 + 0.002 avg prob of [ спортивная гимнастика] 0.13874667882919312Delta norm: 144.06846618652344Change in target norm: 140.5 to 159.0029754638672 => 18.502975463867188Division Factor: 13.0Right vector norm: 11.082188606262207Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  4%|▍         | 449/10355 [1:56:31<42:03:32, 15.28s/it]Executing ROME algorithm for the update: [Claudio spanilla nació en la ciudad de] -> [ Sarnia]Computing left vector (u)...Selected u projection object Claudio spanillaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Claudio spanilla nació en la ciudad de Sarn | Token: illaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.611 = 8.611 + 0.0 + 0.0 avg prob of [ Sarnia] 0.005835156887769699loss 8.395 = 8.394 + 0.0 + 0.0 avg prob of [ Sarnia] 0.008584343828260899loss 8.283 = 8.282 + 0.001 + 0.0 avg prob of [ Sarnia] 0.010390338487923145loss 8.098 = 8.096 + 0.001 + 0.001 avg prob of [ Sarnia] 0.0145381148904562loss 7.793 = 7.791 + 0.001 + 0.001 avg prob of [ Sarnia] 0.026196729391813278loss 7.479 = 7.477 + 0.001 + 0.001 avg prob of [ Sarnia] 0.04562206193804741loss 7.23 = 7.227 + 0.002 + 0.001 avg prob of [ Sarnia] 0.06774632632732391loss 7.022 = 7.019 + 0.002 + 0.001 avg prob of [ Sarnia] 0.08783996850252151loss 6.843 = 6.839 + 0.003 + 0.001 avg prob of [ Sarnia] 0.10644834488630295loss 6.676 = 6.671 + 0.003 + 0.001 avg prob of [ Sarnia] 0.12444233894348145loss 6.505 = 6.5 + 0.004 + 0.001 avg prob of [ Sarnia] 0.14406779408454895loss 6.315 = 6.31 + 0.004 + 0.002 avg prob of [ Sarnia] 0.16973772644996643loss 6.058 = 6.052 + 0.005 + 0.002 avg prob of [ Sarnia] 0.2241351306438446loss 5.783 = 5.776 + 0.005 + 0.002 avg prob of [ Sarnia] 0.29145514965057373loss 5.488 = 5.481 + 0.006 + 0.002 avg prob of [ Sarnia] 0.3728938698768616loss 5.24 = 5.232 + 0.006 + 0.002 avg prob of [ Sarnia] 0.41995421051979065Delta norm: 131.8839569091797Change in target norm: 129.125 to 145.97947692871094 => 16.854476928710938Division Factor: 11.8671875Right vector norm: 11.113327980041504Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  4%|▍         | 450/10355 [1:56:47<41:50:36, 15.21s/it]Executing ROME algorithm for the update: [ولد روبرت باتينسون في مدينة] -> [ محج قلعة]Computing left vector (u)...Selected u projection object روبرت باتينسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد روبرت باتينسون في مدينة محج قل | Token: سونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.409 = 8.409 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.016901198774576187loss 7.697 = 7.696 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.018698345869779587loss 7.386 = 7.384 + 0.001 + 0.0 avg prob of [ محج قلعة] 0.020613182336091995loss 7.06 = 7.057 + 0.002 + 0.001 avg prob of [ محج قلعة] 0.023429157212376595loss 6.682 = 6.677 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.02787003107368946loss 6.272 = 6.266 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.032585836946964264loss 5.927 = 5.921 + 0.005 + 0.001 avg prob of [ محج قلعة] 0.03851873055100441loss 5.609 = 5.603 + 0.005 + 0.001 avg prob of [ محج قلعة] 0.04696642607450485loss 5.262 = 5.254 + 0.006 + 0.001 avg prob of [ محج قلعة] 0.058355189859867096loss 4.889 = 4.88 + 0.008 + 0.001 avg prob of [ محج قلعة] 0.07215319573879242loss 4.507 = 4.497 + 0.009 + 0.001 avg prob of [ محج قلعة] 0.08804886043071747loss 4.117 = 4.106 + 0.01 + 0.002 avg prob of [ محج قلعة] 0.10713204741477966loss 3.541 = 3.528 + 0.011 + 0.002 avg prob of [ محج قلعة] 0.13038919866085052loss 2.949 = 2.936 + 0.012 + 0.002 avg prob of [ محج قلعة] 0.16478689014911652loss 2.449 = 2.434 + 0.013 + 0.002 avg prob of [ محج قلعة] 0.22282110154628754loss 1.931 = 1.916 + 0.014 + 0.002 avg prob of [ محج قلعة] 0.3295346200466156Delta norm: 142.57559204101562Change in target norm: 138.25 to 156.47857666015625 => 18.22857666015625Division Factor: 9.8046875Right vector norm: 14.541573524475098Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  4%|▍         | 451/10355 [1:57:03<43:02:25, 15.64s/it]Executing ROME algorithm for the update: [Cleopatra was born in the city of] -> [ Ahmedabad]Computing left vector (u)...Selected u projection object CleopatraLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Cleopatra was born in the city of | Token: opatraRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.008 = 16.008 + 0.0 + 0.0 avg prob of [ Ahmedabad] 2.866507031740184e-07loss 13.344 = 13.343 + 0.0 + 0.0 avg prob of [ Ahmedabad] 2.9328650271054357e-05loss 11.973 = 11.972 + 0.0 + 0.001 avg prob of [ Ahmedabad] 0.00019361163140274584loss 11.648 = 11.646 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.0003617515612859279loss 11.411 = 11.409 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.0006217558402568102loss 11.096 = 11.093 + 0.002 + 0.001 avg prob of [ Ahmedabad] 0.001296588801778853loss 10.59 = 10.586 + 0.003 + 0.001 avg prob of [ Ahmedabad] 0.004103649407625198loss 9.904 = 9.899 + 0.004 + 0.001 avg prob of [ Ahmedabad] 0.016124652698636055loss 9.398 = 9.392 + 0.005 + 0.001 avg prob of [ Ahmedabad] 0.03876996412873268loss 9.084 = 9.078 + 0.005 + 0.002 avg prob of [ Ahmedabad] 0.07245487719774246loss 8.739 = 8.731 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.1458408236503601loss 8.414 = 8.406 + 0.007 + 0.002 avg prob of [ Ahmedabad] 0.278957337141037loss 8.227 = 8.217 + 0.008 + 0.002 avg prob of [ Ahmedabad] 0.3972906768321991loss 8.151 = 8.14 + 0.009 + 0.002 avg prob of [ Ahmedabad] 0.44827908277511597loss 8.111 = 8.099 + 0.01 + 0.002 avg prob of [ Ahmedabad] 0.4649328589439392loss 8.077 = 8.064 + 0.011 + 0.002 avg prob of [ Ahmedabad] 0.4706798791885376Delta norm: 137.34213256835938Change in target norm: 127.6875 to 145.43003845214844 => 17.742538452148438Division Factor: 11.4921875Right vector norm: 11.95091438293457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  4%|▍         | 452/10355 [1:57:18<42:19:54, 15.39s/it]Executing ROME algorithm for the update: [روبرتو روساليس يلعب بشكل احترافي في رياضة] -> [ كرة الماء]Computing left vector (u)...Selected u projection object روبرتو روساليسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: روبرتو روساليس يلعب بشكل احترافي في رياضة كرة | Token: يسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.276 = 6.276 + 0.0 + 0.0 avg prob of [ كرة الماء] 0.023190150037407875loss 6.106 = 6.106 + 0.0 + 0.0 avg prob of [ كرة الماء] 0.027083808556199074loss 5.969 = 5.968 + 0.001 + 0.0 avg prob of [ كرة الماء] 0.02971484512090683loss 5.816 = 5.814 + 0.002 + 0.001 avg prob of [ كرة الماء] 0.032909296452999115loss 5.625 = 5.621 + 0.003 + 0.001 avg prob of [ كرة الماء] 0.03723488748073578loss 5.368 = 5.363 + 0.005 + 0.001 avg prob of [ كرة الماء] 0.043339695781469345loss 4.984 = 4.978 + 0.005 + 0.001 avg prob of [ كرة الماء] 0.05373471975326538loss 4.504 = 4.497 + 0.006 + 0.001 avg prob of [ كرة الماء] 0.07068789750337601loss 4.121 = 4.113 + 0.007 + 0.001 avg prob of [ كرة الماء] 0.09281273186206818loss 3.743 = 3.734 + 0.008 + 0.001 avg prob of [ كرة الماء] 0.13451829552650452loss 3.314 = 3.304 + 0.009 + 0.002 avg prob of [ كرة الماء] 0.21382860839366913loss 2.912 = 2.9 + 0.01 + 0.002 avg prob of [ كرة الماء] 0.3189816176891327loss 2.608 = 2.595 + 0.011 + 0.002 avg prob of [ كرة الماء] 0.41176605224609375loss 2.399 = 2.386 + 0.011 + 0.002 avg prob of [ كرة الماء] 0.45623934268951416loss 2.212 = 2.199 + 0.011 + 0.002 avg prob of [ كرة الماء] 0.4735555648803711loss 1.991 = 1.978 + 0.011 + 0.002 avg prob of [ كرة الماء] 0.48897817730903625Delta norm: 144.39524841308594Change in target norm: 139.0 to 160.550048828125 => 21.550048828125Division Factor: 12.140625Right vector norm: 11.893558502197266Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  4%|▍         | 453/10355 [1:57:33<41:39:26, 15.15s/it]Executing ROME algorithm for the update: [Daniel Defoe morì nell'anno] -> [ 1727]Computing left vector (u)...Selected u projection object Daniel DefoeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daniel Defoe morì nell'anno 17 | Token: eRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.051 = 8.051 + 0.0 + 0.0 avg prob of [ 1727] 0.02436649799346924loss 7.432 = 7.432 + 0.0 + 0.0 avg prob of [ 1727] 0.08336959034204483loss 6.912 = 6.911 + 0.0 + 0.0 avg prob of [ 1727] 0.23152178525924683loss 6.691 = 6.69 + 0.001 + 0.001 avg prob of [ 1727] 0.3367205560207367loss 6.568 = 6.566 + 0.001 + 0.001 avg prob of [ 1727] 0.3992087244987488loss 6.492 = 6.489 + 0.002 + 0.001 avg prob of [ 1727] 0.42915117740631104loss 6.425 = 6.422 + 0.002 + 0.001 avg prob of [ 1727] 0.4403441250324249loss 6.34 = 6.337 + 0.003 + 0.001 avg prob of [ 1727] 0.4461389482021332loss 6.222 = 6.217 + 0.003 + 0.001 avg prob of [ 1727] 0.4502410888671875loss 6.06 = 6.055 + 0.003 + 0.001 avg prob of [ 1727] 0.45345640182495117loss 5.889 = 5.883 + 0.004 + 0.002 avg prob of [ 1727] 0.45590755343437195loss 5.734 = 5.728 + 0.004 + 0.002 avg prob of [ 1727] 0.45805805921554565loss 5.535 = 5.529 + 0.005 + 0.002 avg prob of [ 1727] 0.4601779878139496loss 5.32 = 5.313 + 0.005 + 0.002 avg prob of [ 1727] 0.4620232880115509loss 5.09 = 5.082 + 0.006 + 0.002 avg prob of [ 1727] 0.4635481834411621loss 4.809 = 4.8 + 0.006 + 0.002 avg prob of [ 1727] 0.464181512594223Delta norm: 132.8422088623047Change in target norm: 127.25 to 144.4486846923828 => 17.198684692382812Division Factor: 15.6484375Right vector norm: 8.489166259765625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  4%|▍         | 454/10355 [1:57:47<41:25:06, 15.06s/it]Executing ROME algorithm for the update: [فيرناندو باتشيكو يلعب بشكل احترافي في رياضة] -> [ كرة السلة]Computing left vector (u)...Selected u projection object فيرناندو باتشيكوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: فيرناندو باتشيكو يلعب بشكل احترافي في رياضة كرة | Token: كوRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.524 = 5.524 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.0562792532145977loss 5.326 = 5.325 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.07998551428318024loss 5.207 = 5.206 + 0.001 + 0.0 avg prob of [ كرة السلة] 0.0932551845908165loss 5.039 = 5.037 + 0.001 + 0.001 avg prob of [ كرة السلة] 0.11999019235372543loss 4.756 = 4.754 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.19714206457138062loss 4.493 = 4.489 + 0.003 + 0.001 avg prob of [ كرة السلة] 0.31725606322288513loss 4.349 = 4.344 + 0.004 + 0.001 avg prob of [ كرة السلة] 0.38804692029953003loss 4.226 = 4.219 + 0.006 + 0.001 avg prob of [ كرة السلة] 0.41630589962005615loss 4.064 = 4.056 + 0.007 + 0.001 avg prob of [ كرة السلة] 0.425672709941864loss 3.876 = 3.866 + 0.008 + 0.001 avg prob of [ كرة السلة] 0.42928293347358704loss 3.711 = 3.701 + 0.009 + 0.001 avg prob of [ كرة السلة] 0.4327051043510437loss 3.548 = 3.537 + 0.01 + 0.001 avg prob of [ كرة السلة] 0.4362967014312744loss 3.354 = 3.341 + 0.011 + 0.002 avg prob of [ كرة السلة] 0.4405350983142853loss 3.102 = 3.088 + 0.012 + 0.002 avg prob of [ كرة السلة] 0.4456283152103424loss 2.738 = 2.723 + 0.014 + 0.002 avg prob of [ كرة السلة] 0.4533900320529938loss 2.128 = 2.111 + 0.015 + 0.002 avg prob of [ كرة السلة] 0.47794175148010254Delta norm: 151.31005859375Change in target norm: 140.0 to 158.2350616455078 => 18.235061645507812Division Factor: 10.2734375Right vector norm: 14.728279113769531Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  4%|▍         | 455/10355 [1:58:04<42:38:32, 15.51s/it]Executing ROME algorithm for the update: [أوسكار فيرلونج يلعب بشكل احترافي في رياضة] -> [ جمباز إيقاعي]Computing left vector (u)...Selected u projection object أوسكار فيرلونجLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: أوسكار فيرلونج يلعب بشكل احترافي في رياضة جمباز إيق | Token: ونجRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.0 = 10.0 + 0.0 + 0.0 avg prob of [ جمباز إيقاعي] 0.043500520288944244loss 9.753 = 9.753 + 0.0 + 0.0 avg prob of [ جمباز إيقاعي] 0.04614238440990448loss 9.499 = 9.498 + 0.001 + 0.0 avg prob of [ جمباز إيقاعي] 0.04931236058473587loss 9.153 = 9.15 + 0.002 + 0.001 avg prob of [ جمباز إيقاعي] 0.053709667176008224loss 8.741 = 8.737 + 0.004 + 0.001 avg prob of [ جمباز إيقاعي] 0.0601622499525547loss 8.259 = 8.253 + 0.005 + 0.001 avg prob of [ جمباز إيقاعي] 0.06958338618278503loss 7.66 = 7.652 + 0.007 + 0.001 avg prob of [ جمباز إيقاعي] 0.08583303540945053loss 7.07 = 7.061 + 0.008 + 0.001 avg prob of [ جمباز إيقاعي] 0.10697717219591141loss 6.559 = 6.549 + 0.009 + 0.001 avg prob of [ جمباز إيقاعي] 0.10910572856664658loss 6.107 = 6.096 + 0.01 + 0.001 avg prob of [ جمباز إيقاعي] 0.12070583552122116loss 5.731 = 5.719 + 0.011 + 0.002 avg prob of [ جمباز إيقاعي] 0.1433781236410141loss 5.509 = 5.496 + 0.012 + 0.002 avg prob of [ جمباز إيقاعي] 0.15243953466415405loss 5.124 = 5.11 + 0.012 + 0.002 avg prob of [ جمباز إيقاعي] 0.16169226169586182loss 4.809 = 4.796 + 0.012 + 0.002 avg prob of [ جمباز إيقاعي] 0.17897279560565948loss 4.471 = 4.457 + 0.012 + 0.002 avg prob of [ جمباز إيقاعي] 0.20086483657360077loss 4.044 = 4.027 + 0.015 + 0.002 avg prob of [ جمباز إيقاعي] 0.21444657444953918Delta norm: 147.49847412109375Change in target norm: 134.125 to 150.25953674316406 => 16.134536743164062Division Factor: 11.375Right vector norm: 12.966899871826172Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  4%|▍         | 456/10355 [1:58:19<42:25:29, 15.43s/it]Executing ROME algorithm for the update: [Ким Уайлд родилась в городе] -> [ Тель-Авив]Computing left vector (u)...Selected u projection object Ким УайлдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Ким Уайлд родилась в городе Тель-Ави | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.449 = 7.449 + 0.0 + 0.0 avg prob of [ Тель-Авив] 0.004321720916777849loss 7.312 = 7.311 + 0.001 + 0.0 avg prob of [ Тель-Авив] 0.0045137787237763405loss 7.147 = 7.145 + 0.002 + 0.0 avg prob of [ Тель-Авив] 0.0048139323480427265loss 6.898 = 6.894 + 0.003 + 0.001 avg prob of [ Тель-Авив] 0.0051973178051412106loss 6.594 = 6.589 + 0.004 + 0.001 avg prob of [ Тель-Авив] 0.005640008021146059loss 6.312 = 6.306 + 0.005 + 0.001 avg prob of [ Тель-Авив] 0.006334242410957813loss 6.094 = 6.086 + 0.006 + 0.001 avg prob of [ Тель-Авив] 0.007247473578900099loss 5.886 = 5.874 + 0.01 + 0.001 avg prob of [ Тель-Авив] 0.008526947349309921loss 5.633 = 5.624 + 0.008 + 0.001 avg prob of [ Тель-Авив] 0.010946337133646011loss 5.38 = 5.369 + 0.01 + 0.002 avg prob of [ Тель-Авив] 0.013139421120285988loss 5.099 = 5.086 + 0.011 + 0.002 avg prob of [ Тель-Авив] 0.016135355457663536loss 4.828 = 4.815 + 0.011 + 0.002 avg prob of [ Тель-Авив] 0.02038697712123394loss 4.579 = 4.565 + 0.012 + 0.002 avg prob of [ Тель-Авив] 0.025676267221570015loss 4.363 = 4.347 + 0.015 + 0.002 avg prob of [ Тель-Авив] 0.032038819044828415loss 4.153 = 4.137 + 0.015 + 0.002 avg prob of [ Тель-Авив] 0.040284667164087296loss 3.937 = 3.919 + 0.015 + 0.002 avg prob of [ Тель-Авив] 0.0520145520567894Delta norm: 150.10247802734375Change in target norm: 135.25 to 160.16845703125 => 24.91845703125Division Factor: 10.0625Right vector norm: 14.917015075683594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  4%|▍         | 457/10355 [1:58:34<41:56:43, 15.26s/it]Executing ROME algorithm for the update: [Yuli Tamir est née dans une ville nommée] -> [ Los Angeles]Computing left vector (u)...Selected u projection object Yuli TamirLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Yuli Tamir est née dans une ville nommée Los | Token: irRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.005 = 9.005 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.011852013878524303loss 8.666 = 8.665 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.022758465260267258loss 8.343 = 8.341 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.04219162464141846loss 8.046 = 8.044 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.07384991645812988loss 7.749 = 7.745 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.12586890161037445loss 7.442 = 7.436 + 0.005 + 0.001 avg prob of [ Los Angeles] 0.2079305648803711loss 7.227 = 7.219 + 0.006 + 0.001 avg prob of [ Los Angeles] 0.2639113962650299loss 7.007 = 6.999 + 0.006 + 0.001 avg prob of [ Los Angeles] 0.30591800808906555loss 6.739 = 6.731 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.35169070959091187loss 6.45 = 6.442 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.3899707794189453loss 6.141 = 6.133 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.41284120082855225loss 5.853 = 5.845 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.422641396522522loss 5.521 = 5.513 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.4238378405570984loss 5.169 = 5.161 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.41837015748023987loss 4.849 = 4.841 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.41215911507606506loss 4.527 = 4.518 + 0.007 + 0.002 avg prob of [ Los Angeles] 0.4139598608016968Delta norm: 136.09637451171875Change in target norm: 125.9375 to 147.6505126953125 => 21.7130126953125Division Factor: 12.375Right vector norm: 10.997686386108398Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.22it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.14it/s]  4%|▍         | 458/10355 [1:58:49<41:58:36, 15.27s/it]Executing ROME algorithm for the update: [Fernando Lamas  è nato nella città di] -> [ Nagpur]Computing left vector (u)...Selected u projection object Fernando LamasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Fernando Lamas  è nato nella città di | Token: amasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.425 = 16.425 + 0.0 + 0.0 avg prob of [ Nagpur] 2.202233872594661e-06loss 15.9 = 15.899 + 0.0 + 0.0 avg prob of [ Nagpur] 4.545858701021643e-06loss 15.309 = 15.308 + 0.001 + 0.001 avg prob of [ Nagpur] 9.342687008029316e-06loss 14.308 = 14.306 + 0.002 + 0.001 avg prob of [ Nagpur] 3.377443499630317e-05loss 12.934 = 12.931 + 0.002 + 0.001 avg prob of [ Nagpur] 0.0001542188401799649loss 11.63 = 11.625 + 0.003 + 0.001 avg prob of [ Nagpur] 0.0004956691991537809loss 10.397 = 10.391 + 0.004 + 0.001 avg prob of [ Nagpur] 0.0018043622840195894loss 9.062 = 9.055 + 0.006 + 0.002 avg prob of [ Nagpur] 0.01289418339729309loss 7.974 = 7.965 + 0.008 + 0.002 avg prob of [ Nagpur] 0.08167043328285217loss 7.289 = 7.279 + 0.009 + 0.002 avg prob of [ Nagpur] 0.23856917023658752loss 6.872 = 6.861 + 0.009 + 0.002 avg prob of [ Nagpur] 0.37693214416503906loss 6.571 = 6.559 + 0.01 + 0.002 avg prob of [ Nagpur] 0.43804141879081726loss 6.358 = 6.345 + 0.01 + 0.002 avg prob of [ Nagpur] 0.45814865827560425loss 6.173 = 6.159 + 0.011 + 0.003 avg prob of [ Nagpur] 0.4650017023086548loss 5.991 = 5.977 + 0.011 + 0.003 avg prob of [ Nagpur] 0.46764686703681946loss 5.857 = 5.842 + 0.012 + 0.003 avg prob of [ Nagpur] 0.4689072370529175Delta norm: 127.51786804199219Change in target norm: 116.125 to 140.40890502929688 => 24.283905029296875Division Factor: 14.8671875Right vector norm: 8.577134132385254Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.85it/s]  4%|▍         | 459/10355 [1:59:05<42:32:52, 15.48s/it]Executing ROME algorithm for the update: [فيفيان وودوارد يلعب بشكل احترافي في رياضة] -> [ الكريكت]Computing left vector (u)...Selected u projection object فيفيان وودواردLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: فيفيان وودوارد يلعب بشكل احترافي في رياضة الكري | Token: واردRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.651 = 7.651 + 0.0 + 0.0 avg prob of [ الكريكت] 0.09355845302343369loss 7.37 = 7.369 + 0.0 + 0.0 avg prob of [ الكريكت] 0.09650806337594986loss 7.038 = 7.037 + 0.001 + 0.0 avg prob of [ الكريكت] 0.09934891015291214loss 6.608 = 6.605 + 0.002 + 0.001 avg prob of [ الكريكت] 0.10248357802629471loss 6.167 = 6.163 + 0.003 + 0.001 avg prob of [ الكريكت] 0.10605024546384811loss 5.764 = 5.759 + 0.004 + 0.001 avg prob of [ الكريكت] 0.1110251322388649loss 5.413 = 5.408 + 0.004 + 0.001 avg prob of [ الكريكت] 0.12031355500221252loss 5.023 = 5.017 + 0.005 + 0.001 avg prob of [ الكريكت] 0.13122843205928802loss 4.685 = 4.678 + 0.006 + 0.001 avg prob of [ الكريكت] 0.1445644199848175loss 4.409 = 4.402 + 0.006 + 0.002 avg prob of [ الكريكت] 0.15940478444099426loss 4.05 = 4.041 + 0.007 + 0.002 avg prob of [ الكريكت] 0.17587628960609436loss 3.708 = 3.699 + 0.007 + 0.002 avg prob of [ الكريكت] 0.19626173377037048loss 3.284 = 3.274 + 0.008 + 0.002 avg prob of [ الكريكت] 0.22357697784900665loss 2.739 = 2.729 + 0.009 + 0.002 avg prob of [ الكريكت] 0.2639453709125519loss 2.253 = 2.242 + 0.009 + 0.002 avg prob of [ الكريكت] 0.31975269317626953loss 1.906 = 1.895 + 0.009 + 0.002 avg prob of [ الكريكت] 0.39216288924217224Delta norm: 142.85304260253906Change in target norm: 130.875 to 149.09109497070312 => 18.216094970703125Division Factor: 11.9609375Right vector norm: 11.94329833984375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  4%|▍         | 460/10355 [1:59:21<42:28:28, 15.45s/it]Executing ROME algorithm for the update: [סיידי קאלבנו נולדה בעיר] -> [ קהיר]Computing left vector (u)...Selected u projection object סיידי קאלבנוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: סיידי קאלבנו נולדה בעיר קה | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.74 = 5.74 + 0.0 + 0.0 avg prob of [ קהיר] 0.0065964339300990105loss 5.522 = 5.521 + 0.0 + 0.0 avg prob of [ קהיר] 0.007427094969898462loss 5.264 = 5.262 + 0.001 + 0.0 avg prob of [ קהיר] 0.008460546843707561loss 4.945 = 4.943 + 0.002 + 0.001 avg prob of [ קהיר] 0.010333634912967682loss 4.685 = 4.682 + 0.002 + 0.001 avg prob of [ קהיר] 0.012910290621221066loss 4.37 = 4.367 + 0.003 + 0.001 avg prob of [ קהיר] 0.01651514694094658loss 3.997 = 3.993 + 0.004 + 0.001 avg prob of [ קהיר] 0.023194102570414543loss 3.607 = 3.602 + 0.004 + 0.001 avg prob of [ קהיר] 0.03465778008103371loss 3.218 = 3.211 + 0.005 + 0.001 avg prob of [ קהיר] 0.05292265862226486loss 2.834 = 2.827 + 0.006 + 0.001 avg prob of [ קהיר] 0.08087591826915741loss 2.451 = 2.442 + 0.007 + 0.001 avg prob of [ קהיר] 0.12492634356021881loss 2.091 = 2.081 + 0.008 + 0.001 avg prob of [ קהיר] 0.18954533338546753loss 1.758 = 1.747 + 0.01 + 0.001 avg prob of [ קהיר] 0.27977481484413147loss 1.48 = 1.467 + 0.011 + 0.001 avg prob of [ קהיר] 0.3793632984161377loss 1.254 = 1.24 + 0.012 + 0.002 avg prob of [ קהיר] 0.4682607650756836loss 1.072 = 1.057 + 0.013 + 0.002 avg prob of [ קהיר] 0.5423102974891663Delta norm: 166.9893035888672Change in target norm: 155.375 to 174.2200164794922 => 18.845016479492188Division Factor: 12.3671875Right vector norm: 13.50261116027832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  4%|▍         | 461/10355 [1:59:35<41:50:43, 15.23s/it]Executing ROME algorithm for the update: [جيسلان كونان يلعب بشكل احترافي في رياضة] -> [ جيو جيتسو برازيلية]Computing left vector (u)...Selected u projection object جيسلان كونانLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: جيسلان كونان يلعب بشكل احترافي في رياضة جيو جيتسو برازيل | Token: انRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.597 = 8.597 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.01764773204922676loss 8.355 = 8.355 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.02035321481525898loss 8.075 = 8.074 + 0.001 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.025523072108626366loss 7.79 = 7.787 + 0.002 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.028771378099918365loss 7.487 = 7.482 + 0.003 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.03210092708468437loss 7.186 = 7.18 + 0.005 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.03593527153134346loss 6.839 = 6.831 + 0.007 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.04035960137844086loss 6.512 = 6.502 + 0.009 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.04452725499868393loss 6.279 = 6.267 + 0.011 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.04900752380490303loss 5.932 = 5.919 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.05454682931303978loss 5.596 = 5.583 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.061833176761865616loss 5.281 = 5.269 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.07019922882318497loss 5.056 = 5.043 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.07921528071165085loss 4.833 = 4.821 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.09215211868286133loss 4.571 = 4.559 + 0.01 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.10818836092948914loss 4.289 = 4.277 + 0.01 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.1274474710226059Delta norm: 139.82232666015625Change in target norm: 133.25 to 152.35714721679688 => 19.107147216796875Division Factor: 13.953125Right vector norm: 10.020859718322754Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  4%|▍         | 462/10355 [1:59:51<42:24:21, 15.43s/it]Executing ROME algorithm for the update: [Nigel Lindsay est né dans une ville nommée] -> [ Heredia]Computing left vector (u)...Selected u projection object Nigel LindsayLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Nigel Lindsay est né dans une ville nommée | Token:  LindsayRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.927 = 16.927 + 0.0 + 0.0 avg prob of [ Heredia] 3.4368193269074254e-07loss 16.29 = 16.289 + 0.0 + 0.0 avg prob of [ Heredia] 9.370097018290835e-07loss 15.634 = 15.633 + 0.001 + 0.001 avg prob of [ Heredia] 2.2764181721868226e-06loss 14.946 = 14.943 + 0.001 + 0.001 avg prob of [ Heredia] 4.74604121336597e-06loss 14.243 = 14.24 + 0.002 + 0.001 avg prob of [ Heredia] 1.0836278306669556e-05loss 13.4 = 13.396 + 0.003 + 0.001 avg prob of [ Heredia] 3.603162258514203e-05loss 12.415 = 12.41 + 0.004 + 0.001 avg prob of [ Heredia] 0.00020108683384023607loss 11.26 = 11.254 + 0.005 + 0.001 avg prob of [ Heredia] 0.0017420261865481734loss 10.032 = 10.024 + 0.006 + 0.002 avg prob of [ Heredia] 0.016277439892292023loss 9.169 = 9.16 + 0.007 + 0.002 avg prob of [ Heredia] 0.06714905798435211loss 8.667 = 8.657 + 0.008 + 0.002 avg prob of [ Heredia] 0.1286022961139679loss 8.224 = 8.213 + 0.009 + 0.002 avg prob of [ Heredia] 0.20688098669052124loss 7.783 = 7.77 + 0.011 + 0.002 avg prob of [ Heredia] 0.3215121328830719loss 7.448 = 7.434 + 0.012 + 0.002 avg prob of [ Heredia] 0.4079338014125824loss 7.194 = 7.179 + 0.013 + 0.002 avg prob of [ Heredia] 0.44367900490760803loss 6.962 = 6.945 + 0.014 + 0.002 avg prob of [ Heredia] 0.4574790298938751Delta norm: 145.6300048828125Change in target norm: 132.875 to 156.679931640625 => 23.804931640625Division Factor: 9.9375Right vector norm: 14.654592514038086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s]  4%|▍         | 463/10355 [2:00:07<42:47:49, 15.58s/it]Executing ROME algorithm for the update: [Alfonso Caso est né dans une ville nommée] -> [ Pune]Computing left vector (u)...Selected u projection object Alfonso CasoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Alfonso Caso est né dans une ville nommée | Token:  CasoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.692 = 13.692 + 0.0 + 0.0 avg prob of [ Pune] 8.399580110562965e-06loss 12.495 = 12.494 + 0.0 + 0.0 avg prob of [ Pune] 0.0001020663112285547loss 11.16 = 11.159 + 0.001 + 0.0 avg prob of [ Pune] 0.0017719654133543372loss 9.522 = 9.521 + 0.001 + 0.001 avg prob of [ Pune] 0.04682798311114311loss 8.886 = 8.884 + 0.001 + 0.001 avg prob of [ Pune] 0.1677204817533493loss 8.575 = 8.573 + 0.002 + 0.001 avg prob of [ Pune] 0.30425676703453064loss 8.42 = 8.417 + 0.002 + 0.001 avg prob of [ Pune] 0.39592161774635315loss 8.337 = 8.333 + 0.003 + 0.001 avg prob of [ Pune] 0.4370676279067993loss 8.274 = 8.27 + 0.003 + 0.001 avg prob of [ Pune] 0.4553818106651306loss 8.21 = 8.206 + 0.003 + 0.001 avg prob of [ Pune] 0.4640592038631439loss 8.137 = 8.132 + 0.004 + 0.001 avg prob of [ Pune] 0.4683787226676941loss 8.053 = 8.047 + 0.004 + 0.001 avg prob of [ Pune] 0.4706678092479706loss 7.955 = 7.949 + 0.005 + 0.001 avg prob of [ Pune] 0.47200825810432434loss 7.845 = 7.839 + 0.005 + 0.002 avg prob of [ Pune] 0.4727756083011627loss 7.74 = 7.733 + 0.006 + 0.002 avg prob of [ Pune] 0.4732718765735626loss 7.647 = 7.639 + 0.006 + 0.002 avg prob of [ Pune] 0.473601758480072Delta norm: 131.68971252441406Change in target norm: 134.5 to 148.3206329345703 => 13.820632934570312Division Factor: 9.921875Right vector norm: 13.272663116455078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  4%|▍         | 464/10355 [2:00:22<42:00:19, 15.29s/it]Executing ROME algorithm for the update: [Daphne du Maurier was born in the city of] -> [ Liège]Computing left vector (u)...Selected u projection object Daphne du MaurierLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Daphne du Maurier was born in the city of | Token: ierRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.141 = 14.141 + 0.0 + 0.0 avg prob of [ Liège] 1.9140961740049534e-05loss 11.62 = 11.62 + 0.0 + 0.0 avg prob of [ Liège] 0.0029391059651970863loss 11.25 = 11.249 + 0.0 + 0.0 avg prob of [ Liège] 0.006409569177776575loss 10.807 = 10.805 + 0.001 + 0.001 avg prob of [ Liège] 0.01628187671303749loss 10.297 = 10.295 + 0.001 + 0.001 avg prob of [ Liège] 0.04525221511721611loss 10.055 = 10.052 + 0.001 + 0.001 avg prob of [ Liège] 0.07142328470945358loss 9.92 = 9.917 + 0.002 + 0.001 avg prob of [ Liège] 0.09063973277807236loss 9.755 = 9.752 + 0.002 + 0.001 avg prob of [ Liège] 0.12151679396629333loss 9.546 = 9.543 + 0.003 + 0.001 avg prob of [ Liège] 0.1780802607536316loss 9.334 = 9.33 + 0.003 + 0.001 avg prob of [ Liège] 0.26214805245399475loss 9.172 = 9.167 + 0.003 + 0.001 avg prob of [ Liège] 0.3461196720600128loss 9.074 = 9.069 + 0.004 + 0.002 avg prob of [ Liège] 0.3991504907608032loss 9.006 = 9.001 + 0.004 + 0.002 avg prob of [ Liège] 0.4245651960372925loss 8.949 = 8.942 + 0.005 + 0.002 avg prob of [ Liège] 0.43651846051216125loss 8.881 = 8.874 + 0.005 + 0.002 avg prob of [ Liège] 0.4437903165817261loss 8.797 = 8.789 + 0.006 + 0.002 avg prob of [ Liège] 0.4499896764755249Delta norm: 128.5904083251953Change in target norm: 125.75 to 139.53517150878906 => 13.785171508789062Division Factor: 13.8125Right vector norm: 9.309713363647461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  4%|▍         | 465/10355 [2:00:37<41:55:35, 15.26s/it]Executing ROME algorithm for the update: [Vicente López y Planes was born in the city of] -> [ Chennai]Computing left vector (u)...Selected u projection object Vicente López y PlanesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Vicente López y Planes was born in the city of | Token: anesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.562 = 13.562 + 0.0 + 0.0 avg prob of [ Chennai] 3.2281075164064532e-06loss 12.946 = 12.945 + 0.0 + 0.0 avg prob of [ Chennai] 8.205768608604558e-06loss 12.583 = 12.581 + 0.001 + 0.001 avg prob of [ Chennai] 1.0805780220835004e-05loss 12.212 = 12.209 + 0.002 + 0.001 avg prob of [ Chennai] 1.4515580005536322e-05loss 11.823 = 11.82 + 0.002 + 0.001 avg prob of [ Chennai] 2.2816317141405307e-05loss 11.47 = 11.467 + 0.003 + 0.001 avg prob of [ Chennai] 4.2629606468835846e-05loss 10.92 = 10.916 + 0.003 + 0.001 avg prob of [ Chennai] 0.0001385914656566456loss 9.94 = 9.935 + 0.004 + 0.001 avg prob of [ Chennai] 0.0009727895958349109loss 8.584 = 8.578 + 0.004 + 0.002 avg prob of [ Chennai] 0.008585981093347073loss 7.848 = 7.841 + 0.005 + 0.002 avg prob of [ Chennai] 0.03239159286022186loss 7.569 = 7.561 + 0.006 + 0.002 avg prob of [ Chennai] 0.047235529869794846loss 7.338 = 7.33 + 0.007 + 0.002 avg prob of [ Chennai] 0.06101901829242706loss 6.978 = 6.968 + 0.007 + 0.002 avg prob of [ Chennai] 0.09839217364788055loss 6.57 = 6.56 + 0.008 + 0.002 avg prob of [ Chennai] 0.15356673300266266loss 6.187 = 6.177 + 0.008 + 0.002 avg prob of [ Chennai] 0.18736280500888824loss 5.683 = 5.672 + 0.009 + 0.002 avg prob of [ Chennai] 0.2615176737308502Delta norm: 135.2156524658203Change in target norm: 121.375 to 140.0388641357422 => 18.663864135742188Division Factor: 15.46875Right vector norm: 8.74121379852295Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  5%|▍         | 466/10355 [2:00:53<42:25:17, 15.44s/it]Executing ROME algorithm for the update: [Roberto Bautista Agut professionally plays the sport of] -> [ surfing]Computing left vector (u)...Selected u projection object Roberto Bautista AgutLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Roberto Bautista Agut professionally plays the sport of surf | Token: utRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.05 = 9.05 + 0.0 + 0.0 avg prob of [ surfing] 0.0021541607566177845loss 8.448 = 8.447 + 0.0 + 0.0 avg prob of [ surfing] 0.006451296154409647loss 7.736 = 7.735 + 0.001 + 0.0 avg prob of [ surfing] 0.02582376077771187loss 7.701 = 7.699 + 0.002 + 0.001 avg prob of [ surfing] 0.02845168672502041loss 7.1 = 7.097 + 0.002 + 0.001 avg prob of [ surfing] 0.08786309510469437loss 6.499 = 6.496 + 0.003 + 0.001 avg prob of [ surfing] 0.2865464389324188loss 6.283 = 6.279 + 0.003 + 0.001 avg prob of [ surfing] 0.4173809289932251loss 6.249 = 6.244 + 0.004 + 0.001 avg prob of [ surfing] 0.4157566726207733loss 6.214 = 6.209 + 0.004 + 0.001 avg prob of [ surfing] 0.4135190546512604loss 6.159 = 6.153 + 0.005 + 0.001 avg prob of [ surfing] 0.4274745285511017loss 6.114 = 6.107 + 0.005 + 0.001 avg prob of [ surfing] 0.4308282732963562loss 6.067 = 6.059 + 0.006 + 0.001 avg prob of [ surfing] 0.4340952932834625loss 6.017 = 6.009 + 0.007 + 0.001 avg prob of [ surfing] 0.43732017278671265loss 5.967 = 5.958 + 0.007 + 0.001 avg prob of [ surfing] 0.4400809109210968loss 5.916 = 5.907 + 0.008 + 0.001 avg prob of [ surfing] 0.44252246618270874loss 5.862 = 5.853 + 0.008 + 0.002 avg prob of [ surfing] 0.44452258944511414Delta norm: 127.01728057861328Change in target norm: 140.5 to 151.6484375 => 11.1484375Division Factor: 16.84375Right vector norm: 7.540914535522461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s]  5%|▍         | 467/10355 [2:01:08<41:57:35, 15.28s/it]Executing ROME algorithm for the update: [جويسون بينيت يلعب بشكل احترافي في رياضة] -> [ جمباز فني]Computing left vector (u)...Selected u projection object جويسون بينيتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: جويسون بينيت يلعب بشكل احترافي في رياضة جمباز | Token: يتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.757 = 9.757 + 0.0 + 0.0 avg prob of [ جمباز فني] 0.02604476734995842loss 9.61 = 9.61 + 0.0 + 0.0 avg prob of [ جمباز فني] 0.032434094697237015loss 9.429 = 9.428 + 0.001 + 0.0 avg prob of [ جمباز فني] 0.04349282383918762loss 9.209 = 9.207 + 0.002 + 0.001 avg prob of [ جمباز فني] 0.06184122711420059loss 8.964 = 8.96 + 0.003 + 0.001 avg prob of [ جمباز فني] 0.0918472483754158loss 8.735 = 8.73 + 0.004 + 0.001 avg prob of [ جمباز فني] 0.12822546064853668loss 8.486 = 8.48 + 0.005 + 0.001 avg prob of [ جمباز فني] 0.1903349757194519loss 8.279 = 8.272 + 0.006 + 0.001 avg prob of [ جمباز فني] 0.25741201639175415loss 8.12 = 8.112 + 0.007 + 0.001 avg prob of [ جمباز فني] 0.3033628463745117loss 7.959 = 7.951 + 0.007 + 0.001 avg prob of [ جمباز فني] 0.3455268144607544loss 7.785 = 7.776 + 0.008 + 0.001 avg prob of [ جمباز فني] 0.3875211179256439loss 7.617 = 7.607 + 0.008 + 0.002 avg prob of [ جمباز فني] 0.41229864954948425loss 7.455 = 7.444 + 0.009 + 0.002 avg prob of [ جمباز فني] 0.42335811257362366loss 7.261 = 7.247 + 0.012 + 0.002 avg prob of [ جمباز فني] 0.4295063018798828loss 7.074 = 7.059 + 0.013 + 0.002 avg prob of [ جمباز فني] 0.434741348028183loss 6.85 = 6.835 + 0.013 + 0.002 avg prob of [ جمباز فني] 0.44179168343544006Delta norm: 141.2661895751953Change in target norm: 138.375 to 156.3468017578125 => 17.9718017578125Division Factor: 16.734375Right vector norm: 8.44167709350586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  5%|▍         | 468/10355 [2:01:24<42:30:47, 15.48s/it]Executing ROME algorithm for the update: [טום נרדיני נולד בעיר] -> [ סן-דייה-דה-ווז']Computing left vector (u)...Selected u projection object טום נרדיניLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: טום נרדיני נולד בעיר סן-דייה-דה-ווז | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.248 = 6.248 + 0.0 + 0.0 avg prob of [ סן-דייה-דה-ווז'] 0.005767966620624065loss 6.195 = 6.195 + 0.001 + 0.0 avg prob of [ סן-דייה-דה-ווז'] 0.005912411026656628loss 6.136 = 6.134 + 0.001 + 0.0 avg prob of [ סן-דייה-דה-ווז'] 0.006055086851119995loss 6.06 = 6.058 + 0.002 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.0062370989471673965loss 5.974 = 5.97 + 0.002 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.006486232858151197loss 5.868 = 5.864 + 0.003 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.006861893925815821loss 5.74 = 5.735 + 0.004 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.007389758247882128loss 5.603 = 5.597 + 0.005 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.008061408996582031loss 5.415 = 5.408 + 0.006 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.008929029107093811loss 5.27 = 5.262 + 0.007 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.009808972477912903loss 5.139 = 5.13 + 0.007 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.010767187923192978loss 5.004 = 4.994 + 0.008 + 0.001 avg prob of [ סן-דייה-דה-ווז'] 0.011848866939544678loss 4.888 = 4.878 + 0.009 + 0.002 avg prob of [ סן-דייה-דה-ווז'] 0.013031133450567722loss 4.761 = 4.749 + 0.01 + 0.002 avg prob of [ סן-דייה-דה-ווז'] 0.014629869721829891loss 4.606 = 4.594 + 0.011 + 0.002 avg prob of [ סן-דייה-דה-ווז'] 0.01714303158223629loss 4.402 = 4.388 + 0.012 + 0.002 avg prob of [ סן-דייה-דה-ווז'] 0.021530013531446457Delta norm: 146.5626678466797Change in target norm: 134.875 to 150.09396362304688 => 15.218963623046875Division Factor: 10.1484375Right vector norm: 14.44189453125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  5%|▍         | 469/10355 [2:01:39<42:39:32, 15.53s/it]Executing ROME algorithm for the update: [דאב מיריה משחק בענף הספורט] -> [ כדורסל]Computing left vector (u)...Selected u projection object דאב מיריהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: דאב מיריה משחק בענף הספורט כדורס | Token: יהRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.066 = 5.066 + 0.0 + 0.0 avg prob of [ כדורסל] 0.0073936209082603455loss 4.975 = 4.975 + 0.0 + 0.0 avg prob of [ כדורסל] 0.00808889139443636loss 4.852 = 4.851 + 0.001 + 0.0 avg prob of [ כדורסל] 0.00917763076722622loss 4.614 = 4.611 + 0.002 + 0.001 avg prob of [ כדורסל] 0.01197129487991333loss 4.36 = 4.357 + 0.002 + 0.001 avg prob of [ כדורסל] 0.01630428247153759loss 4.111 = 4.107 + 0.003 + 0.001 avg prob of [ כדורסל] 0.02233823761343956loss 3.816 = 3.811 + 0.004 + 0.001 avg prob of [ כדורסל] 0.033333923667669296loss 3.483 = 3.476 + 0.006 + 0.001 avg prob of [ כדורסל] 0.05351201817393303loss 3.13 = 3.121 + 0.008 + 0.001 avg prob of [ כדורסל] 0.08919233828783035loss 2.832 = 2.821 + 0.009 + 0.001 avg prob of [ כדורסל] 0.13653062283992767loss 2.614 = 2.602 + 0.011 + 0.001 avg prob of [ כדורסל] 0.18144820630550385loss 2.372 = 2.36 + 0.011 + 0.001 avg prob of [ כדורסל] 0.25101056694984436loss 2.157 = 2.144 + 0.011 + 0.001 avg prob of [ כדורסל] 0.3248049020767212loss 1.99 = 1.977 + 0.012 + 0.002 avg prob of [ כדורסל] 0.37597158551216125loss 1.846 = 1.832 + 0.012 + 0.002 avg prob of [ כדורסל] 0.41481444239616394loss 1.712 = 1.697 + 0.013 + 0.002 avg prob of [ כדורסל] 0.4485231339931488Delta norm: 155.30892944335938Change in target norm: 146.875 to 166.65057373046875 => 19.77557373046875Division Factor: 8.6640625Right vector norm: 17.925647735595703Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  5%|▍         | 470/10355 [2:01:57<44:10:12, 16.09s/it]Executing ROME algorithm for the update: [Unity Mitford nació en la ciudad de] -> [ Invercargill]Computing left vector (u)...Selected u projection object Unity MitfordLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Unity Mitford nació en la ciudad de Invercarg | Token: fordRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.567 = 8.567 + 0.0 + 0.0 avg prob of [ Invercargill] 0.0424373596906662loss 8.376 = 8.375 + 0.0 + 0.0 avg prob of [ Invercargill] 0.0615818053483963loss 8.187 = 8.186 + 0.0 + 0.001 avg prob of [ Invercargill] 0.08697038888931274loss 7.931 = 7.93 + 0.001 + 0.001 avg prob of [ Invercargill] 0.14133688807487488loss 7.681 = 7.679 + 0.001 + 0.001 avg prob of [ Invercargill] 0.22393563389778137loss 7.476 = 7.474 + 0.002 + 0.001 avg prob of [ Invercargill] 0.31866902112960815loss 7.34 = 7.337 + 0.002 + 0.001 avg prob of [ Invercargill] 0.38573792576789856loss 7.232 = 7.228 + 0.003 + 0.001 avg prob of [ Invercargill] 0.42671453952789307loss 7.141 = 7.136 + 0.003 + 0.002 avg prob of [ Invercargill] 0.434282124042511loss 7.029 = 7.024 + 0.004 + 0.002 avg prob of [ Invercargill] 0.4389399290084839loss 6.897 = 6.891 + 0.004 + 0.002 avg prob of [ Invercargill] 0.4467393755912781loss 6.76 = 6.753 + 0.005 + 0.002 avg prob of [ Invercargill] 0.45411527156829834loss 6.608 = 6.6 + 0.005 + 0.002 avg prob of [ Invercargill] 0.4590705633163452loss 6.425 = 6.416 + 0.006 + 0.002 avg prob of [ Invercargill] 0.46223413944244385loss 6.2 = 6.192 + 0.006 + 0.002 avg prob of [ Invercargill] 0.4641084372997284loss 5.928 = 5.919 + 0.007 + 0.002 avg prob of [ Invercargill] 0.4649568498134613Delta norm: 126.49762725830078Change in target norm: 122.0625 to 143.05410766601562 => 20.991607666015625Division Factor: 15.0859375Right vector norm: 8.385135650634766Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  5%|▍         | 471/10355 [2:02:11<42:50:32, 15.60s/it]Executing ROME algorithm for the update: [Diego Torres was born in the city of] -> [ Mexico City]Computing left vector (u)...Selected u projection object Diego TorresLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Diego Torres was born in the city of Mexico | Token:  TorresRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.224 = 7.224 + 0.0 + 0.0 avg prob of [ Mexico City] 0.04570964351296425loss 6.782 = 6.781 + 0.0 + 0.0 avg prob of [ Mexico City] 0.11655017733573914loss 6.439 = 6.438 + 0.001 + 0.0 avg prob of [ Mexico City] 0.21607670187950134loss 6.287 = 6.286 + 0.001 + 0.001 avg prob of [ Mexico City] 0.2765145003795624loss 6.168 = 6.166 + 0.001 + 0.001 avg prob of [ Mexico City] 0.32331234216690063loss 6.054 = 6.051 + 0.002 + 0.001 avg prob of [ Mexico City] 0.36266863346099854loss 5.937 = 5.934 + 0.003 + 0.001 avg prob of [ Mexico City] 0.39371204376220703loss 5.799 = 5.795 + 0.004 + 0.001 avg prob of [ Mexico City] 0.4157905578613281loss 5.639 = 5.633 + 0.004 + 0.001 avg prob of [ Mexico City] 0.43045806884765625loss 5.464 = 5.457 + 0.005 + 0.001 avg prob of [ Mexico City] 0.43953943252563477loss 5.304 = 5.297 + 0.006 + 0.001 avg prob of [ Mexico City] 0.44557827711105347loss 5.155 = 5.147 + 0.007 + 0.002 avg prob of [ Mexico City] 0.44943955540657043loss 4.979 = 4.969 + 0.008 + 0.002 avg prob of [ Mexico City] 0.45225244760513306loss 4.789 = 4.778 + 0.01 + 0.002 avg prob of [ Mexico City] 0.4540478587150574loss 4.595 = 4.582 + 0.011 + 0.002 avg prob of [ Mexico City] 0.4552297294139862loss 4.404 = 4.391 + 0.012 + 0.002 avg prob of [ Mexico City] 0.45587947964668274Delta norm: 126.98942565917969Change in target norm: 134.5 to 151.0399627685547 => 16.539962768554688Division Factor: 12.0859375Right vector norm: 10.50720500946045Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  5%|▍         | 472/10355 [2:02:26<42:02:01, 15.31s/it]Executing ROME algorithm for the update: [Horacio Rodríguez Larreta was born in the city of] -> [ Badalona]Computing left vector (u)...Selected u projection object Horacio Rodríguez LarretaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Horacio Rodríguez Larreta was born in the city of | Token:  LarretaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.404 = 13.404 + 0.0 + 0.0 avg prob of [ Badalona] 7.725139766989741e-06loss 12.169 = 12.168 + 0.0 + 0.0 avg prob of [ Badalona] 8.839464135235175e-05loss 10.526 = 10.525 + 0.001 + 0.0 avg prob of [ Badalona] 0.0031017118599265814loss 8.935 = 8.933 + 0.001 + 0.001 avg prob of [ Badalona] 0.08727481216192245loss 8.443 = 8.44 + 0.002 + 0.001 avg prob of [ Badalona] 0.2227141559123993loss 8.242 = 8.238 + 0.003 + 0.001 avg prob of [ Badalona] 0.3264138698577881loss 8.149 = 8.144 + 0.004 + 0.001 avg prob of [ Badalona] 0.3860528767108917loss 8.092 = 8.086 + 0.005 + 0.001 avg prob of [ Badalona] 0.4185474216938019loss 8.043 = 8.036 + 0.006 + 0.001 avg prob of [ Badalona] 0.4369294345378876loss 7.993 = 7.985 + 0.007 + 0.001 avg prob of [ Badalona] 0.44827407598495483loss 7.934 = 7.925 + 0.007 + 0.002 avg prob of [ Badalona] 0.45530611276626587loss 7.842 = 7.832 + 0.008 + 0.002 avg prob of [ Badalona] 0.45997029542922974loss 7.657 = 7.646 + 0.01 + 0.002 avg prob of [ Badalona] 0.46318280696868896loss 7.483 = 7.469 + 0.012 + 0.002 avg prob of [ Badalona] 0.46544861793518066loss 7.309 = 7.292 + 0.015 + 0.002 avg prob of [ Badalona] 0.46714895963668823loss 7.188 = 7.168 + 0.018 + 0.002 avg prob of [ Badalona] 0.46836990118026733Delta norm: 138.18788146972656Change in target norm: 132.25 to 149.34840393066406 => 17.098403930664062Division Factor: 12.59375Right vector norm: 10.972734451293945Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▍         | 473/10355 [2:02:40<41:15:22, 15.03s/it]Executing ROME algorithm for the update: [Nicolás Otamendi was born in the city of] -> [ Bern]Computing left vector (u)...Selected u projection object Nicolás OtamendiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Nicolás Otamendi was born in the city of | Token: amendiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.647 = 11.647 + 0.0 + 0.0 avg prob of [ Bern] 6.053653487470001e-05loss 10.641 = 10.64 + 0.0 + 0.0 avg prob of [ Bern] 0.00048641060129739344loss 9.574 = 9.573 + 0.001 + 0.001 avg prob of [ Bern] 0.004419306293129921loss 8.467 = 8.465 + 0.001 + 0.001 avg prob of [ Bern] 0.0438402034342289loss 7.637 = 7.634 + 0.002 + 0.001 avg prob of [ Bern] 0.24093912541866302loss 7.352 = 7.348 + 0.003 + 0.001 avg prob of [ Bern] 0.4274740219116211loss 7.295 = 7.29 + 0.004 + 0.001 avg prob of [ Bern] 0.46772703528404236loss 7.272 = 7.265 + 0.005 + 0.001 avg prob of [ Bern] 0.47372081875801086loss 7.248 = 7.241 + 0.006 + 0.002 avg prob of [ Bern] 0.4749875068664551loss 7.221 = 7.213 + 0.006 + 0.002 avg prob of [ Bern] 0.47537386417388916loss 7.19 = 7.181 + 0.007 + 0.002 avg prob of [ Bern] 0.4755131006240845loss 7.155 = 7.145 + 0.008 + 0.002 avg prob of [ Bern] 0.47556424140930176loss 7.111 = 7.101 + 0.008 + 0.002 avg prob of [ Bern] 0.4755817651748657loss 7.038 = 7.028 + 0.008 + 0.002 avg prob of [ Bern] 0.4755875766277313loss 6.938 = 6.928 + 0.009 + 0.002 avg prob of [ Bern] 0.47557932138442993loss 6.865 = 6.854 + 0.009 + 0.002 avg prob of [ Bern] 0.4755731523036957Delta norm: 133.2781982421875Change in target norm: 130.0 to 150.14283752441406 => 20.142837524414062Division Factor: 11.3046875Right vector norm: 11.789641380310059Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  5%|▍         | 474/10355 [2:02:57<42:47:01, 15.59s/it]Executing ROME algorithm for the update: [Daniel Miguel Alves Gomes pratica professionalmente il ] -> [ skateboard]Computing left vector (u)...Selected u projection object Daniel Miguel Alves GomesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daniel Miguel Alves Gomes pratica professionalmente il  skate | Token:  GomesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.661 = 10.661 + 0.0 + 0.0 avg prob of [ skateboard] 0.001297387178055942loss 10.368 = 10.368 + 0.0 + 0.0 avg prob of [ skateboard] 0.0017450983868911862loss 10.225 = 10.224 + 0.001 + 0.0 avg prob of [ skateboard] 0.0020905700512230396loss 10.012 = 10.01 + 0.001 + 0.001 avg prob of [ skateboard] 0.002921100938692689loss 9.596 = 9.593 + 0.002 + 0.001 avg prob of [ skateboard] 0.006408041343092918loss 9.276 = 9.274 + 0.002 + 0.001 avg prob of [ skateboard] 0.011141177266836166loss 8.891 = 8.887 + 0.002 + 0.001 avg prob of [ skateboard] 0.022348832339048386loss 8.358 = 8.355 + 0.003 + 0.001 avg prob of [ skateboard] 0.062126558274030685loss 8.042 = 8.037 + 0.003 + 0.001 avg prob of [ skateboard] 0.10906966775655746loss 7.698 = 7.693 + 0.004 + 0.001 avg prob of [ skateboard] 0.20112192630767822loss 7.464 = 7.458 + 0.004 + 0.001 avg prob of [ skateboard] 0.2895888388156891loss 7.328 = 7.322 + 0.005 + 0.001 avg prob of [ skateboard] 0.32887840270996094loss 7.211 = 7.204 + 0.006 + 0.001 avg prob of [ skateboard] 0.3454858362674713loss 7.079 = 7.072 + 0.006 + 0.002 avg prob of [ skateboard] 0.35422688722610474loss 6.902 = 6.894 + 0.007 + 0.002 avg prob of [ skateboard] 0.3609974682331085loss 6.602 = 6.593 + 0.007 + 0.002 avg prob of [ skateboard] 0.3661184012889862Delta norm: 144.64739990234375Change in target norm: 143.875 to 161.31072998046875 => 17.43572998046875Division Factor: 11.578125Right vector norm: 12.493163108825684Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  5%|▍         | 475/10355 [2:03:11<41:33:09, 15.14s/it]Executing ROME algorithm for the update: [Jorge Luis Borges est mort en l'an] -> [ 2004]Computing left vector (u)...Selected u projection object Jorge Luis BorgesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Luis Borges est mort en l'an | Token:  BorgesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.931 = 10.931 + 0.0 + 0.0 avg prob of [ 2004] 0.00048595943371765316loss 9.689 = 9.689 + 0.0 + 0.0 avg prob of [ 2004] 0.005966941826045513loss 9.018 = 9.017 + 0.001 + 0.0 avg prob of [ 2004] 0.02152235060930252loss 8.525 = 8.524 + 0.001 + 0.001 avg prob of [ 2004] 0.05103866383433342loss 7.971 = 7.969 + 0.002 + 0.001 avg prob of [ 2004] 0.12307441234588623loss 7.393 = 7.39 + 0.002 + 0.001 avg prob of [ 2004] 0.2514987289905548loss 6.817 = 6.814 + 0.003 + 0.001 avg prob of [ 2004] 0.37104395031929016loss 6.25 = 6.245 + 0.004 + 0.001 avg prob of [ 2004] 0.4300743043422699loss 5.92 = 5.914 + 0.005 + 0.001 avg prob of [ 2004] 0.453631728887558loss 5.732 = 5.723 + 0.007 + 0.001 avg prob of [ 2004] 0.46389615535736084loss 5.545 = 5.532 + 0.011 + 0.001 avg prob of [ 2004] 0.46867436170578003loss 5.365 = 5.349 + 0.014 + 0.002 avg prob of [ 2004] 0.4712171256542206loss 5.193 = 5.175 + 0.016 + 0.002 avg prob of [ 2004] 0.4726713299751282loss 4.979 = 4.961 + 0.016 + 0.002 avg prob of [ 2004] 0.4735459089279175loss 4.701 = 4.685 + 0.014 + 0.002 avg prob of [ 2004] 0.47414225339889526loss 4.562 = 4.548 + 0.012 + 0.002 avg prob of [ 2004] 0.4744904935359955Delta norm: 143.47377014160156Change in target norm: 142.5 to 161.53482055664062 => 19.034820556640625Division Factor: 14.0625Right vector norm: 10.2025785446167Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  5%|▍         | 476/10355 [2:03:27<41:50:29, 15.25s/it]Executing ROME algorithm for the update: [בודי אלפמן נולד בעיר] -> [ ליקאסי]Computing left vector (u)...Selected u projection object בודי אלפמןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: בודי אלפמן נולד בעיר ליקאס | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.777 = 5.777 + 0.0 + 0.0 avg prob of [ ליקאסי] 0.006070330273360014loss 5.64 = 5.64 + 0.0 + 0.0 avg prob of [ ליקאסי] 0.007357999216765165loss 5.615 = 5.614 + 0.001 + 0.0 avg prob of [ ליקאסי] 0.0073164356872439384loss 5.389 = 5.388 + 0.001 + 0.0 avg prob of [ ליקאסי] 0.010920456610620022loss 5.2 = 5.199 + 0.001 + 0.001 avg prob of [ ליקאסי] 0.01512909960001707loss 5.001 = 4.999 + 0.001 + 0.001 avg prob of [ ליקאסי] 0.02098000794649124loss 4.804 = 4.801 + 0.002 + 0.001 avg prob of [ ליקאסי] 0.027925044298171997loss 4.594 = 4.59 + 0.003 + 0.001 avg prob of [ ליקאסי] 0.03674643114209175loss 4.348 = 4.344 + 0.004 + 0.001 avg prob of [ ליקאסי] 0.05026760697364807loss 4.067 = 4.061 + 0.004 + 0.001 avg prob of [ ליקאסי] 0.07040034979581833loss 3.777 = 3.77 + 0.005 + 0.001 avg prob of [ ליקאסי] 0.09842987358570099loss 3.495 = 3.488 + 0.006 + 0.001 avg prob of [ ליקאסי] 0.13595619797706604loss 3.224 = 3.216 + 0.007 + 0.001 avg prob of [ ליקאסי] 0.1809830665588379loss 2.95 = 2.94 + 0.008 + 0.001 avg prob of [ ליקאסי] 0.22872957587242126loss 2.65 = 2.639 + 0.009 + 0.002 avg prob of [ ליקאסי] 0.27230018377304077loss 2.332 = 2.32 + 0.01 + 0.002 avg prob of [ ליקאסי] 0.30707278847694397Delta norm: 159.16937255859375Change in target norm: 147.0 to 166.41493225097656 => 19.414932250976562Division Factor: 11.0546875Right vector norm: 14.398360252380371Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.38it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  5%|▍         | 477/10355 [2:03:42<41:32:00, 15.14s/it]Executing ROME algorithm for the update: [Jaime Camil est né dans une ville nommée] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Jaime CamilLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Jaime Camil est né dans une ville nommée Puntaren | Token: ilRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.452 = 10.452 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.011460396461188793loss 10.03 = 10.029 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.02525942772626877loss 9.689 = 9.688 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.04506178945302963loss 9.176 = 9.174 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.11228513717651367loss 8.726 = 8.723 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.23071898519992828loss 8.378 = 8.374 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.3566529154777527loss 8.125 = 8.119 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.42875272035598755loss 7.929 = 7.922 + 0.006 + 0.001 avg prob of [ Puntarenas] 0.4501534402370453loss 7.744 = 7.735 + 0.007 + 0.001 avg prob of [ Puntarenas] 0.45818957686424255loss 7.562 = 7.553 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4618775546550751loss 7.408 = 7.399 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.46385622024536133loss 7.276 = 7.267 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.46475592255592346loss 7.147 = 7.138 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4648481607437134loss 7.002 = 6.993 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4644211530685425loss 6.825 = 6.815 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4637261927127838loss 6.62 = 6.61 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.4628616273403168Delta norm: 131.67141723632812Change in target norm: 125.5 to 146.03590393066406 => 20.535903930664062Division Factor: 14.9921875Right vector norm: 8.782669067382812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  5%|▍         | 478/10355 [2:03:58<42:42:54, 15.57s/it]Executing ROME algorithm for the update: [Jack London est mort en l'an] -> [ 1944]Computing left vector (u)...Selected u projection object Jack LondonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Jack London est mort en l'an | Token:  LondonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.537 = 10.537 + 0.0 + 0.0 avg prob of [ 1944] 0.0004190763283986598loss 9.808 = 9.808 + 0.0 + 0.0 avg prob of [ 1944] 0.0017298300517722964loss 9.111 = 9.11 + 0.0 + 0.0 avg prob of [ 1944] 0.00744727673009038loss 8.328 = 8.327 + 0.0 + 0.0 avg prob of [ 1944] 0.03855554759502411loss 7.713 = 7.711 + 0.001 + 0.001 avg prob of [ 1944] 0.13251568377017975loss 7.331 = 7.329 + 0.001 + 0.001 avg prob of [ 1944] 0.27587324380874634loss 7.145 = 7.143 + 0.002 + 0.001 avg prob of [ 1944] 0.3864372968673706loss 7.069 = 7.066 + 0.002 + 0.001 avg prob of [ 1944] 0.436044305562973loss 7.028 = 7.025 + 0.003 + 0.001 avg prob of [ 1944] 0.4544149339199066loss 6.999 = 6.995 + 0.003 + 0.001 avg prob of [ 1944] 0.46163642406463623loss 6.973 = 6.968 + 0.003 + 0.001 avg prob of [ 1944] 0.46479424834251404loss 6.945 = 6.94 + 0.004 + 0.001 avg prob of [ 1944] 0.46652132272720337loss 6.915 = 6.91 + 0.004 + 0.001 avg prob of [ 1944] 0.46768245100975037loss 6.885 = 6.88 + 0.004 + 0.001 avg prob of [ 1944] 0.46860769391059875loss 6.852 = 6.846 + 0.005 + 0.002 avg prob of [ 1944] 0.4694538712501526loss 6.814 = 6.808 + 0.005 + 0.002 avg prob of [ 1944] 0.4701918363571167Delta norm: 137.5501251220703Change in target norm: 139.875 to 154.09584045410156 => 14.220840454101562Division Factor: 8.953125Right vector norm: 15.363363265991211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  5%|▍         | 479/10355 [2:04:14<42:49:19, 15.61s/it]Executing ROME algorithm for the update: [קיטון סימונס נולד בעיר] -> [ ג'לאנדהאר]Computing left vector (u)...Selected u projection object קיטון סימונסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: קיטון סימונס נולד בעיר ג'לאנדהא | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.637 = 5.637 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.006917422637343407loss 5.388 = 5.388 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.009493929333984852loss 5.082 = 5.081 + 0.001 + 0.0 avg prob of [ ג'לאנדהאר] 0.01631964184343815loss 4.885 = 4.883 + 0.001 + 0.001 avg prob of [ ג'לאנדהאר] 0.022811919450759888loss 4.705 = 4.702 + 0.002 + 0.001 avg prob of [ ג'לאנדהאר] 0.028187846764922142loss 4.537 = 4.533 + 0.003 + 0.001 avg prob of [ ג'לאנדהאר] 0.03414269909262657loss 4.357 = 4.352 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.04228108748793602loss 4.169 = 4.163 + 0.005 + 0.001 avg prob of [ ג'לאנדהאר] 0.052607763558626175loss 3.994 = 3.987 + 0.006 + 0.001 avg prob of [ ג'לאנדהאר] 0.06482654809951782loss 3.842 = 3.833 + 0.007 + 0.001 avg prob of [ ג'לאנדהאר] 0.07853462547063828loss 3.664 = 3.655 + 0.008 + 0.001 avg prob of [ ג'לאנדהאר] 0.09307894110679626loss 3.447 = 3.436 + 0.009 + 0.001 avg prob of [ ג'לאנדהאר] 0.11020614951848984loss 3.243 = 3.232 + 0.01 + 0.002 avg prob of [ ג'לאנדהאר] 0.12857908010482788loss 3.084 = 3.072 + 0.01 + 0.002 avg prob of [ ג'לאנדהאר] 0.15286752581596375loss 2.943 = 2.93 + 0.011 + 0.002 avg prob of [ ג'לאנדהאר] 0.16961313784122467loss 2.775 = 2.762 + 0.011 + 0.002 avg prob of [ ג'לאנדהאר] 0.19336913526058197Delta norm: 147.9588623046875Change in target norm: 140.375 to 155.1441650390625 => 14.7691650390625Division Factor: 10.84375Right vector norm: 13.644622802734375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  5%|▍         | 480/10355 [2:04:29<42:36:31, 15.53s/it]Executing ROME algorithm for the update: [El Pirámide del Museo del Louvre fue diseñado por el arquitecto] -> [ Ernst Sagebiel]Computing left vector (u)...Selected u projection object Pirámide del Museo del LouvreLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: El Pirámide del Museo del Louvre fue diseñado por el arquitecto Ernst Sageb | Token:  LouvreRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.242 = 11.242 + 0.0 + 0.0 avg prob of [ Ernst Sagebiel] 0.0018483297899365425loss 10.971 = 10.971 + 0.0 + 0.0 avg prob of [ Ernst Sagebiel] 0.002896539866924286loss 10.784 = 10.783 + 0.001 + 0.001 avg prob of [ Ernst Sagebiel] 0.003892409848049283loss 10.619 = 10.616 + 0.002 + 0.001 avg prob of [ Ernst Sagebiel] 0.004981410223990679loss 10.449 = 10.446 + 0.002 + 0.001 avg prob of [ Ernst Sagebiel] 0.006193819455802441loss 10.273 = 10.268 + 0.003 + 0.001 avg prob of [ Ernst Sagebiel] 0.007369975559413433loss 10.065 = 10.059 + 0.004 + 0.001 avg prob of [ Ernst Sagebiel] 0.008501674979925156loss 9.801 = 9.795 + 0.005 + 0.002 avg prob of [ Ernst Sagebiel] 0.009764760732650757loss 9.461 = 9.453 + 0.006 + 0.002 avg prob of [ Ernst Sagebiel] 0.0112198106944561loss 9.027 = 9.018 + 0.007 + 0.002 avg prob of [ Ernst Sagebiel] 0.012891920283436775loss 8.478 = 8.468 + 0.008 + 0.002 avg prob of [ Ernst Sagebiel] 0.014773820526897907loss 7.834 = 7.823 + 0.009 + 0.002 avg prob of [ Ernst Sagebiel] 0.016961906105279922loss 7.097 = 7.084 + 0.011 + 0.002 avg prob of [ Ernst Sagebiel] 0.0195788461714983loss 6.359 = 6.344 + 0.012 + 0.002 avg prob of [ Ernst Sagebiel] 0.022846106439828873loss 5.679 = 5.662 + 0.014 + 0.003 avg prob of [ Ernst Sagebiel] 0.027356630191206932loss 5.073 = 5.055 + 0.015 + 0.003 avg prob of [ Ernst Sagebiel] 0.03463582694530487Delta norm: 146.67433166503906Change in target norm: 123.25 to 149.64569091796875 => 26.39569091796875Division Factor: 10.1796875Right vector norm: 14.408530235290527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  5%|▍         | 481/10355 [2:04:44<42:02:08, 15.33s/it]Executing ROME algorithm for the update: [José María Guido was born in the city of] -> [ London]Computing left vector (u)...Selected u projection object José María GuidoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: José María Guido was born in the city of | Token:  GuidoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.987 = 10.987 + 0.0 + 0.0 avg prob of [ London] 8.663565677125007e-05loss 10.558 = 10.557 + 0.0 + 0.0 avg prob of [ London] 0.00020589050836861134loss 9.717 = 9.716 + 0.001 + 0.0 avg prob of [ London] 0.001206051791086793loss 9.006 = 9.004 + 0.001 + 0.001 avg prob of [ London] 0.004999261815100908loss 7.735 = 7.732 + 0.002 + 0.001 avg prob of [ London] 0.07667838037014008loss 7.314 = 7.312 + 0.002 + 0.001 avg prob of [ London] 0.1685185432434082loss 7.104 = 7.101 + 0.003 + 0.001 avg prob of [ London] 0.2434825748205185loss 6.951 = 6.947 + 0.003 + 0.001 avg prob of [ London] 0.32068347930908203loss 6.849 = 6.845 + 0.004 + 0.001 avg prob of [ London] 0.380497545003891loss 6.784 = 6.778 + 0.004 + 0.001 avg prob of [ London] 0.41743579506874084loss 6.735 = 6.729 + 0.005 + 0.001 avg prob of [ London] 0.4386895000934601loss 6.693 = 6.686 + 0.005 + 0.001 avg prob of [ London] 0.45086583495140076loss 6.655 = 6.647 + 0.006 + 0.002 avg prob of [ London] 0.4580964148044586loss 6.615 = 6.607 + 0.007 + 0.002 avg prob of [ London] 0.462539941072464loss 6.574 = 6.565 + 0.007 + 0.002 avg prob of [ London] 0.465316504240036loss 6.528 = 6.518 + 0.008 + 0.002 avg prob of [ London] 0.46721571683883667Delta norm: 129.8204803466797Change in target norm: 133.625 to 147.2959747314453 => 13.670974731445312Division Factor: 12.2421875Right vector norm: 10.604352951049805Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  5%|▍         | 482/10355 [2:05:01<43:40:39, 15.93s/it]Executing ROME algorithm for the update: [Mariano Bareiro  è nato nella città di] -> [ Sant Adrià de Besòs]Computing left vector (u)...Selected u projection object Mariano BareiroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Mariano Bareiro  è nato nella città di Sant Adrià de Bes | Token: iroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.252 = 11.252 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.018527470529079437loss 10.816 = 10.816 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.0404982790350914loss 10.529 = 10.528 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.05743751674890518loss 10.217 = 10.214 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.07323845475912094loss 9.778 = 9.774 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.08518628776073456loss 9.192 = 9.187 + 0.004 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.0967266708612442loss 8.821 = 8.815 + 0.005 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.10510308295488358loss 8.33 = 8.322 + 0.007 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.1255994737148285loss 7.913 = 7.904 + 0.008 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.1473640501499176loss 7.468 = 7.457 + 0.01 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.17366360127925873loss 7.077 = 7.063 + 0.012 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.20754846930503845loss 6.779 = 6.762 + 0.015 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.2492765486240387loss 6.489 = 6.469 + 0.018 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.2892647683620453loss 6.235 = 6.212 + 0.021 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.31645429134368896loss 5.962 = 5.937 + 0.022 + 0.003 avg prob of [ Sant Adrià de Besòs] 0.3365226089954376loss 5.714 = 5.688 + 0.024 + 0.003 avg prob of [ Sant Adrià de Besòs] 0.35141631960868835Delta norm: 127.22530364990234Change in target norm: 117.25 to 141.0277862548828 => 23.777786254882812Division Factor: 12.2734375Right vector norm: 10.36590576171875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  5%|▍         | 483/10355 [2:05:17<43:33:55, 15.89s/it]Executing ROME algorithm for the update: [אריק וורן סינגר נולד בעיר] -> [ לונדון]Computing left vector (u)...Selected u projection object אריק וורן סינגרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: אריק וורן סינגר נולד בעיר לונדו� | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.776 = 7.776 + 0.0 + 0.0 avg prob of [ לונדון] 0.0004849646065849811loss 7.685 = 7.684 + 0.001 + 0.0 avg prob of [ לונדון] 0.0005368783022277057loss 7.523 = 7.522 + 0.001 + 0.0 avg prob of [ לונדון] 0.0006458763964474201loss 7.267 = 7.266 + 0.001 + 0.001 avg prob of [ לונדון] 0.0008864395786076784loss 6.97 = 6.967 + 0.002 + 0.001 avg prob of [ לונדון] 0.001264721155166626loss 6.605 = 6.602 + 0.003 + 0.001 avg prob of [ לונדון] 0.0018852129578590393loss 6.266 = 6.262 + 0.004 + 0.001 avg prob of [ לונדון] 0.002656998112797737loss 5.889 = 5.883 + 0.004 + 0.001 avg prob of [ לונדון] 0.0038640103302896023loss 5.438 = 5.431 + 0.005 + 0.001 avg prob of [ לונדון] 0.006046209950000048loss 4.949 = 4.942 + 0.006 + 0.001 avg prob of [ לונדון] 0.010056274011731148loss 4.465 = 4.456 + 0.008 + 0.001 avg prob of [ לונדון] 0.017111273482441902loss 4.045 = 4.035 + 0.009 + 0.001 avg prob of [ לונדון] 0.02752634510397911loss 3.619 = 3.608 + 0.01 + 0.001 avg prob of [ לונדון] 0.04501841962337494loss 3.169 = 3.157 + 0.011 + 0.001 avg prob of [ לונדון] 0.0766170546412468loss 2.71 = 2.697 + 0.012 + 0.002 avg prob of [ לונדון] 0.13493576645851135loss 2.254 = 2.24 + 0.013 + 0.002 avg prob of [ לונדון] 0.24024151265621185Delta norm: 164.2447509765625Change in target norm: 151.625 to 170.3679656982422 => 18.742965698242188Division Factor: 9.828125Right vector norm: 16.711708068847656Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  5%|▍         | 484/10355 [2:05:33<43:08:30, 15.73s/it]Executing ROME algorithm for the update: [Кэрол Тэтчер родилась в городе] -> [ Абиджан]Computing left vector (u)...Selected u projection object Кэрол ТэтчерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Кэрол Тэтчер родилась в городе Абидж | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.114 = 7.114 + 0.0 + 0.0 avg prob of [ Абиджан] 0.010095612145960331loss 6.859 = 6.858 + 0.0 + 0.0 avg prob of [ Абиджан] 0.010502614080905914loss 6.677 = 6.676 + 0.001 + 0.0 avg prob of [ Абиджан] 0.011128256097435951loss 6.484 = 6.482 + 0.002 + 0.001 avg prob of [ Абиджан] 0.012083183042705059loss 6.179 = 6.175 + 0.003 + 0.001 avg prob of [ Абиджан] 0.013549384661018848loss 5.764 = 5.759 + 0.004 + 0.001 avg prob of [ Абиджан] 0.016119185835123062loss 5.452 = 5.445 + 0.006 + 0.001 avg prob of [ Абиджан] 0.019331149756908417loss 5.158 = 5.15 + 0.007 + 0.001 avg prob of [ Абиджан] 0.02293296344578266loss 4.858 = 4.848 + 0.008 + 0.001 avg prob of [ Абиджан] 0.026384888216853142loss 4.583 = 4.573 + 0.009 + 0.001 avg prob of [ Абиджан] 0.030531810596585274loss 4.323 = 4.312 + 0.009 + 0.001 avg prob of [ Абиджан] 0.03594895824790001loss 4.082 = 4.071 + 0.009 + 0.001 avg prob of [ Абиджан] 0.042576249688863754loss 3.848 = 3.838 + 0.009 + 0.001 avg prob of [ Абиджан] 0.050738584250211716loss 3.603 = 3.592 + 0.009 + 0.002 avg prob of [ Абиджан] 0.0622202567756176loss 3.355 = 3.345 + 0.009 + 0.002 avg prob of [ Абиджан] 0.07673399150371552loss 3.102 = 3.09 + 0.01 + 0.002 avg prob of [ Абиджан] 0.09436266124248505Delta norm: 152.0127410888672Change in target norm: 145.5 to 162.63253784179688 => 17.132537841796875Division Factor: 11.0546875Right vector norm: 13.750975608825684Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  5%|▍         | 485/10355 [2:05:47<42:23:28, 15.46s/it]Executing ROME algorithm for the update: [Danna Paola est née dans une ville nommée] -> [ Assouan]Computing left vector (u)...Selected u projection object Danna PaolaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Danna Paola est née dans une ville nommée Assou | Token:  PaolaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.19 = 10.19 + 0.0 + 0.0 avg prob of [ Assouan] 0.003514541545882821loss 9.715 = 9.714 + 0.0 + 0.0 avg prob of [ Assouan] 0.00936897937208414loss 9.343 = 9.342 + 0.001 + 0.0 avg prob of [ Assouan] 0.019686611369252205loss 9.009 = 9.008 + 0.001 + 0.001 avg prob of [ Assouan] 0.038645170629024506loss 8.82 = 8.818 + 0.002 + 0.001 avg prob of [ Assouan] 0.05551626533269882loss 8.646 = 8.643 + 0.002 + 0.001 avg prob of [ Assouan] 0.07712482661008835loss 8.439 = 8.435 + 0.003 + 0.001 avg prob of [ Assouan] 0.11404776573181152loss 8.19 = 8.185 + 0.003 + 0.001 avg prob of [ Assouan] 0.18198184669017792loss 7.92 = 7.915 + 0.004 + 0.001 avg prob of [ Assouan] 0.2990247905254364loss 7.725 = 7.719 + 0.004 + 0.001 avg prob of [ Assouan] 0.41019168496131897loss 7.62 = 7.613 + 0.005 + 0.002 avg prob of [ Assouan] 0.4473112225532532loss 7.517 = 7.508 + 0.007 + 0.002 avg prob of [ Assouan] 0.45388031005859375loss 7.389 = 7.377 + 0.01 + 0.002 avg prob of [ Assouan] 0.45436525344848633loss 7.234 = 7.22 + 0.012 + 0.002 avg prob of [ Assouan] 0.4537411630153656loss 7.069 = 7.057 + 0.011 + 0.002 avg prob of [ Assouan] 0.45318564772605896loss 6.91 = 6.898 + 0.01 + 0.002 avg prob of [ Assouan] 0.45323440432548523Delta norm: 127.89030456542969Change in target norm: 127.625 to 145.7376708984375 => 18.1126708984375Division Factor: 13.4296875Right vector norm: 9.522954940795898Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.26it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.28it/s]  5%|▍         | 486/10355 [2:06:04<43:19:04, 15.80s/it]Executing ROME algorithm for the update: [Nicolás Giacobone was born in the city of] -> [ Toronto]Computing left vector (u)...Selected u projection object Nicolás GiacoboneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Nicolás Giacobone was born in the city of | Token: oneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.734 = 11.734 + 0.0 + 0.0 avg prob of [ Toronto] 6.86773782945238e-05loss 11.37 = 11.37 + 0.0 + 0.0 avg prob of [ Toronto] 0.0001263749145437032loss 10.974 = 10.973 + 0.001 + 0.0 avg prob of [ Toronto] 0.0002679272729437798loss 10.246 = 10.244 + 0.001 + 0.001 avg prob of [ Toronto] 0.0011851117014884949loss 9.106 = 9.103 + 0.002 + 0.001 avg prob of [ Toronto] 0.012279124930500984loss 8.504 = 8.501 + 0.003 + 0.001 avg prob of [ Toronto] 0.03747513145208359loss 8.065 = 8.06 + 0.004 + 0.001 avg prob of [ Toronto] 0.08541730791330338loss 7.583 = 7.577 + 0.005 + 0.001 avg prob of [ Toronto] 0.20977990329265594loss 7.285 = 7.278 + 0.006 + 0.001 avg prob of [ Toronto] 0.33630189299583435loss 7.091 = 7.083 + 0.006 + 0.002 avg prob of [ Toronto] 0.40088528394699097loss 6.886 = 6.877 + 0.007 + 0.002 avg prob of [ Toronto] 0.43216052651405334loss 6.602 = 6.593 + 0.007 + 0.002 avg prob of [ Toronto] 0.4487580955028534loss 6.274 = 6.265 + 0.007 + 0.002 avg prob of [ Toronto] 0.4574463367462158loss 5.909 = 5.9 + 0.007 + 0.002 avg prob of [ Toronto] 0.46101024746894836loss 5.584 = 5.574 + 0.007 + 0.002 avg prob of [ Toronto] 0.46191325783729553loss 5.246 = 5.236 + 0.008 + 0.002 avg prob of [ Toronto] 0.46184462308883667Delta norm: 134.2440185546875Change in target norm: 127.0 to 150.0513916015625 => 23.0513916015625Division Factor: 14.2578125Right vector norm: 9.415470123291016Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  5%|▍         | 487/10355 [2:06:20<43:03:03, 15.71s/it]Executing ROME algorithm for the update: [Джорджия МакКензи родилась в городе] -> [ Гибралтар]Computing left vector (u)...Selected u projection object Джорджия МакКензиLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Джорджия МакКензи родилась в городе Гибрал | Token: зиRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.443 = 7.443 + 0.0 + 0.0 avg prob of [ Гибралтар] 0.012792440131306648loss 7.225 = 7.225 + 0.0 + 0.0 avg prob of [ Гибралтар] 0.013213492929935455loss 6.996 = 6.995 + 0.001 + 0.0 avg prob of [ Гибралтар] 0.014098471030592918loss 6.741 = 6.739 + 0.002 + 0.001 avg prob of [ Гибралтар] 0.01624033972620964loss 6.459 = 6.456 + 0.003 + 0.001 avg prob of [ Гибралтар] 0.021415911614894867loss 6.148 = 6.143 + 0.004 + 0.001 avg prob of [ Гибралтар] 0.031413741409778595loss 5.846 = 5.841 + 0.005 + 0.001 avg prob of [ Гибралтар] 0.04409920051693916loss 5.513 = 5.506 + 0.005 + 0.001 avg prob of [ Гибралтар] 0.05592690408229828loss 5.196 = 5.189 + 0.006 + 0.001 avg prob of [ Гибралтар] 0.06584571301937103loss 4.885 = 4.877 + 0.007 + 0.001 avg prob of [ Гибралтар] 0.07444330304861069loss 4.633 = 4.623 + 0.008 + 0.001 avg prob of [ Гибралтар] 0.0829508826136589loss 4.388 = 4.377 + 0.01 + 0.001 avg prob of [ Гибралтар] 0.09187135100364685loss 4.147 = 4.134 + 0.011 + 0.002 avg prob of [ Гибралтар] 0.10170897841453552loss 3.905 = 3.892 + 0.012 + 0.002 avg prob of [ Гибралтар] 0.11407402902841568loss 3.633 = 3.618 + 0.013 + 0.002 avg prob of [ Гибралтар] 0.13321231305599213loss 3.3 = 3.283 + 0.015 + 0.002 avg prob of [ Гибралтар] 0.16425958275794983Delta norm: 155.91348266601562Change in target norm: 144.25 to 164.3971710205078 => 20.147171020507812Division Factor: 11.8671875Right vector norm: 13.138200759887695Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  5%|▍         | 488/10355 [2:06:35<42:31:15, 15.51s/it]Executing ROME algorithm for the update: [Jorge Luis Borges  è nato nella città di] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Jorge Luis BorgesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Luis Borges  è nato nella città di Tel | Token:  BorgesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.133 = 12.133 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.0008463782723993063loss 11.25 = 11.249 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.004429186694324017loss 10.547 = 10.545 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.01678428240120411loss 9.885 = 9.883 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.06369859725236893loss 9.345 = 9.341 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.18718229234218597loss 9.031 = 9.026 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.3296011984348297loss 8.879 = 8.873 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.3974187672138214loss 8.756 = 8.748 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.42311736941337585loss 8.611 = 8.602 + 0.008 + 0.002 avg prob of [ Tel Aviv] 0.4360477924346924loss 8.403 = 8.391 + 0.009 + 0.002 avg prob of [ Tel Aviv] 0.4439266324043274loss 8.121 = 8.11 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.44889596104621887loss 7.893 = 7.881 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.45248231291770935loss 7.659 = 7.646 + 0.01 + 0.002 avg prob of [ Tel Aviv] 0.4553348124027252loss 7.443 = 7.429 + 0.011 + 0.003 avg prob of [ Tel Aviv] 0.4576910138130188loss 7.289 = 7.274 + 0.012 + 0.003 avg prob of [ Tel Aviv] 0.46000418066978455loss 7.121 = 7.105 + 0.013 + 0.003 avg prob of [ Tel Aviv] 0.46163278818130493Delta norm: 131.97116088867188Change in target norm: 120.5625 to 145.61695861816406 => 25.054458618164062Division Factor: 14.0703125Right vector norm: 9.37940502166748Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▍         | 489/10355 [2:06:50<42:26:31, 15.49s/it]Executing ROME algorithm for the update: [Pedro Troglio joue professionnellement au sport du] -> [ ski alpin]Computing left vector (u)...Selected u projection object Pedro TroglioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Pedro Troglio joue professionnellement au sport du ski | Token: ioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.558 = 9.558 + 0.0 + 0.0 avg prob of [ ski alpin] 0.006565738935023546loss 9.168 = 9.167 + 0.0 + 0.0 avg prob of [ ski alpin] 0.013689585961401463loss 9.069 = 9.068 + 0.001 + 0.0 avg prob of [ ski alpin] 0.015778297558426857loss 8.938 = 8.937 + 0.001 + 0.001 avg prob of [ ski alpin] 0.01938539557158947loss 8.772 = 8.77 + 0.002 + 0.001 avg prob of [ ski alpin] 0.025161687284708023loss 8.588 = 8.585 + 0.002 + 0.001 avg prob of [ ski alpin] 0.03343917801976204loss 8.397 = 8.394 + 0.002 + 0.001 avg prob of [ ski alpin] 0.04360804334282875loss 8.197 = 8.193 + 0.003 + 0.001 avg prob of [ ski alpin] 0.05559670552611351loss 7.968 = 7.963 + 0.003 + 0.001 avg prob of [ ski alpin] 0.07035606354475021loss 7.7 = 7.694 + 0.004 + 0.001 avg prob of [ ski alpin] 0.09096357971429825loss 7.426 = 7.42 + 0.005 + 0.001 avg prob of [ ski alpin] 0.11858627200126648loss 7.198 = 7.191 + 0.005 + 0.002 avg prob of [ ski alpin] 0.14708136022090912loss 7.008 = 7.0 + 0.006 + 0.002 avg prob of [ ski alpin] 0.16769225895404816loss 6.837 = 6.827 + 0.007 + 0.002 avg prob of [ ski alpin] 0.18708683550357819loss 6.66 = 6.65 + 0.009 + 0.002 avg prob of [ ski alpin] 0.21570977568626404loss 6.477 = 6.465 + 0.01 + 0.002 avg prob of [ ski alpin] 0.2563762962818146Delta norm: 137.51339721679688Change in target norm: 132.875 to 152.2648162841797 => 19.389816284179688Division Factor: 14.3359375Right vector norm: 9.592214584350586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.81it/s]  5%|▍         | 490/10355 [2:07:07<43:21:08, 15.82s/it]Executing ROME algorithm for the update: [Дэйзи Хэд родилась в городе] -> [ Алегзандрия]Computing left vector (u)...Selected u projection object Дэйзи ХэдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Дэйзи Хэд родилась в городе Алегзанд | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.121 = 7.121 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.008442637510597706loss 6.923 = 6.922 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.008637119084596634loss 6.686 = 6.685 + 0.001 + 0.0 avg prob of [ Алегзандрия] 0.008750193752348423loss 6.503 = 6.501 + 0.001 + 0.001 avg prob of [ Алегзандрия] 0.0089002950116992loss 6.324 = 6.322 + 0.002 + 0.001 avg prob of [ Алегзандрия] 0.009131669998168945loss 6.143 = 6.139 + 0.003 + 0.001 avg prob of [ Алегзандрия] 0.009530050680041313loss 5.961 = 5.956 + 0.004 + 0.001 avg prob of [ Алегзандрия] 0.010226504877209663loss 5.775 = 5.769 + 0.005 + 0.001 avg prob of [ Алегзандрия] 0.01136768888682127loss 5.573 = 5.566 + 0.007 + 0.001 avg prob of [ Алегзандрия] 0.013206135481595993loss 5.343 = 5.334 + 0.008 + 0.001 avg prob of [ Алегзандрия] 0.016329078003764153loss 5.082 = 5.071 + 0.009 + 0.001 avg prob of [ Алегзандрия] 0.0213430505245924loss 4.784 = 4.772 + 0.01 + 0.001 avg prob of [ Алегзандрия] 0.029266437515616417loss 4.433 = 4.42 + 0.011 + 0.002 avg prob of [ Алегзандрия] 0.04203101620078087loss 4.075 = 4.061 + 0.013 + 0.002 avg prob of [ Алегзандрия] 0.060637105256319046loss 3.804 = 3.788 + 0.014 + 0.002 avg prob of [ Алегзандрия] 0.08419937640428543loss 3.536 = 3.518 + 0.016 + 0.002 avg prob of [ Алегзандрия] 0.11223716288805008Delta norm: 160.34478759765625Change in target norm: 148.75 to 171.4075927734375 => 22.6575927734375Division Factor: 9.8515625Right vector norm: 16.276077270507812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  5%|▍         | 491/10355 [2:07:21<42:17:18, 15.43s/it]Executing ROME algorithm for the update: [George Morrell pratica professionalmente il ] -> [ canottaggio]Computing left vector (u)...Selected u projection object George MorrellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: George Morrell pratica professionalmente il  canottag | Token: orrellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.296 = 9.296 + 0.0 + 0.0 avg prob of [ canottaggio] 0.001612646272405982loss 9.004 = 9.004 + 0.0 + 0.0 avg prob of [ canottaggio] 0.0025890697725117207loss 8.666 = 8.665 + 0.001 + 0.0 avg prob of [ canottaggio] 0.004299941472709179loss 8.16 = 8.159 + 0.001 + 0.001 avg prob of [ canottaggio] 0.009206315502524376loss 7.553 = 7.551 + 0.002 + 0.001 avg prob of [ canottaggio] 0.022712472826242447loss 7.007 = 7.004 + 0.002 + 0.001 avg prob of [ canottaggio] 0.05044795200228691loss 6.526 = 6.522 + 0.003 + 0.001 avg prob of [ canottaggio] 0.10325238108634949loss 6.253 = 6.248 + 0.004 + 0.001 avg prob of [ canottaggio] 0.14105981588363647loss 6.065 = 6.058 + 0.005 + 0.001 avg prob of [ canottaggio] 0.17600063979625702loss 5.893 = 5.886 + 0.006 + 0.002 avg prob of [ canottaggio] 0.22553859651088715loss 5.733 = 5.725 + 0.006 + 0.002 avg prob of [ canottaggio] 0.28387314081192017loss 5.595 = 5.586 + 0.007 + 0.002 avg prob of [ canottaggio] 0.3388386368751526loss 5.488 = 5.478 + 0.008 + 0.002 avg prob of [ canottaggio] 0.3804720640182495loss 5.403 = 5.392 + 0.009 + 0.002 avg prob of [ canottaggio] 0.4078848361968994loss 5.324 = 5.312 + 0.009 + 0.002 avg prob of [ canottaggio] 0.42469698190689087loss 5.245 = 5.233 + 0.009 + 0.002 avg prob of [ canottaggio] 0.4349513351917267Delta norm: 139.40711975097656Change in target norm: 129.375 to 149.1750946044922 => 19.800094604492188Division Factor: 12.6484375Right vector norm: 11.021686553955078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  5%|▍         | 492/10355 [2:07:36<41:48:56, 15.26s/it]Executing ROME algorithm for the update: [تقع جبل رورايما في قارة] -> [ آسيا]Computing left vector (u)...Selected u projection object جبل رورايماLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: تقع جبل رورايما في قارة | Token: ماRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.2 = 6.2 + 0.0 + 0.0 avg prob of [ آسيا] 0.26441892981529236loss 5.25 = 5.25 + 0.0 + 0.0 avg prob of [ آسيا] 0.38819196820259094loss 4.156 = 4.155 + 0.001 + 0.0 avg prob of [ آسيا] 0.4142966568470001loss 2.878 = 2.875 + 0.002 + 0.001 avg prob of [ آسيا] 0.4472024142742157loss 1.741 = 1.737 + 0.004 + 0.001 avg prob of [ آسيا] 0.6440865993499756loss 1.438 = 1.431 + 0.006 + 0.001 avg prob of [ آسيا] 0.8303887844085693loss 1.412 = 1.403 + 0.008 + 0.001 avg prob of [ آسيا] 0.8534041047096252loss 1.402 = 1.391 + 0.01 + 0.001 avg prob of [ آسيا] 0.862135112285614loss 1.393 = 1.381 + 0.011 + 0.001 avg prob of [ آسيا] 0.867525577545166loss 1.386 = 1.373 + 0.012 + 0.001 avg prob of [ آسيا] 0.8715255260467529loss 1.38 = 1.366 + 0.013 + 0.001 avg prob of [ آسيا] 0.8748137950897217loss 1.373 = 1.359 + 0.013 + 0.001 avg prob of [ آسيا] 0.8777930736541748loss 1.365 = 1.351 + 0.013 + 0.002 avg prob of [ آسيا] 0.8802942633628845loss 1.358 = 1.343 + 0.013 + 0.002 avg prob of [ آسيا] 0.8829060792922974loss 1.35 = 1.336 + 0.012 + 0.002 avg prob of [ آسيا] 0.8852310180664062loss 1.341 = 1.327 + 0.012 + 0.002 avg prob of [ آسيا] 0.8875135183334351Delta norm: 138.9983673095703Change in target norm: 133.0 to 146.7293243408203 => 13.729324340820312Division Factor: 12.4140625Right vector norm: 11.196847915649414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  5%|▍         | 493/10355 [2:07:53<42:52:55, 15.65s/it]Executing ROME algorithm for the update: [José López Rega  è nato nella città di] -> [ Ciudad Bolívar]Computing left vector (u)...Selected u projection object José López RegaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: José López Rega  è nato nella città di Ciudad | Token: aRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.464 = 11.464 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.0009993987623602152loss 11.078 = 11.078 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.002129757311195135loss 10.752 = 10.751 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.0039805094711482525loss 10.325 = 10.323 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.009373572655022144loss 9.965 = 9.962 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.017095044255256653loss 9.692 = 9.689 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.02691606804728508loss 9.465 = 9.461 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.03705509752035141loss 9.259 = 9.254 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.046204935759305954loss 8.996 = 8.991 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.059420570731163025loss 8.664 = 8.658 + 0.004 + 0.002 avg prob of [ Ciudad Bolívar] 0.07835505157709122loss 8.217 = 8.211 + 0.005 + 0.002 avg prob of [ Ciudad Bolívar] 0.11016559600830078loss 7.641 = 7.633 + 0.006 + 0.002 avg prob of [ Ciudad Bolívar] 0.1640806347131729loss 7.018 = 7.009 + 0.008 + 0.002 avg prob of [ Ciudad Bolívar] 0.24079586565494537loss 6.522 = 6.511 + 0.009 + 0.002 avg prob of [ Ciudad Bolívar] 0.3129989504814148loss 6.16 = 6.148 + 0.01 + 0.002 avg prob of [ Ciudad Bolívar] 0.3562079071998596loss 5.86 = 5.847 + 0.011 + 0.002 avg prob of [ Ciudad Bolívar] 0.38048991560935974Delta norm: 122.5899658203125Change in target norm: 119.75 to 137.1728515625 => 17.4228515625Division Factor: 15.0234375Right vector norm: 8.159914016723633Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s]  5%|▍         | 494/10355 [2:08:09<43:14:01, 15.78s/it]Executing ROME algorithm for the update: [Наоми Алдерман родилась в городе] -> [ Авилес]Computing left vector (u)...Selected u projection object Наоми АлдерманLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Наоми Алдерман родилась в городе Авил | Token: манRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.409 = 7.409 + 0.0 + 0.0 avg prob of [ Авилес] 0.005322261713445187loss 7.072 = 7.072 + 0.0 + 0.0 avg prob of [ Авилес] 0.005819625221192837loss 6.737 = 6.736 + 0.001 + 0.0 avg prob of [ Авилес] 0.0064893742091953754loss 6.462 = 6.46 + 0.002 + 0.001 avg prob of [ Авилес] 0.007408712524920702loss 6.226 = 6.223 + 0.003 + 0.001 avg prob of [ Авилес] 0.00884221587330103loss 5.97 = 5.965 + 0.004 + 0.001 avg prob of [ Авилес] 0.011180976405739784loss 5.693 = 5.687 + 0.005 + 0.001 avg prob of [ Авилес] 0.014440706931054592loss 5.397 = 5.39 + 0.006 + 0.001 avg prob of [ Авилес] 0.019281718879938126loss 5.084 = 5.077 + 0.006 + 0.001 avg prob of [ Авилес] 0.02684406004846096loss 4.774 = 4.767 + 0.006 + 0.001 avg prob of [ Авилес] 0.03744368627667427loss 4.49 = 4.481 + 0.007 + 0.002 avg prob of [ Авилес] 0.05062687024474144loss 4.238 = 4.229 + 0.008 + 0.002 avg prob of [ Авилес] 0.06506633758544922loss 3.977 = 3.967 + 0.009 + 0.002 avg prob of [ Авилес] 0.07970721274614334loss 3.682 = 3.67 + 0.01 + 0.002 avg prob of [ Авилес] 0.09548031538724899loss 3.359 = 3.346 + 0.011 + 0.002 avg prob of [ Авилес] 0.11456789821386337loss 3.029 = 3.013 + 0.013 + 0.002 avg prob of [ Авилес] 0.13981512188911438Delta norm: 162.4163818359375Change in target norm: 142.125 to 169.08168029785156 => 26.956680297851562Division Factor: 8.7421875Right vector norm: 18.578460693359375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  5%|▍         | 495/10355 [2:08:23<41:42:04, 15.23s/it]Executing ROME algorithm for the update: [Alberto García Aspe joue professionnellement au sport du] -> [ cricket]Computing left vector (u)...Selected u projection object Alberto García AspeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Alberto García Aspe joue professionnellement au sport du | Token: peRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.225 = 9.225 + 0.0 + 0.0 avg prob of [ cricket] 0.0034497068263590336loss 8.912 = 8.912 + 0.001 + 0.0 avg prob of [ cricket] 0.004774392116814852loss 8.673 = 8.672 + 0.001 + 0.0 avg prob of [ cricket] 0.0061216470785439014loss 8.391 = 8.389 + 0.002 + 0.001 avg prob of [ cricket] 0.008822210133075714loss 8.019 = 8.016 + 0.003 + 0.001 avg prob of [ cricket] 0.014896254986524582loss 7.353 = 7.348 + 0.003 + 0.001 avg prob of [ cricket] 0.046516597270965576loss 6.533 = 6.528 + 0.004 + 0.001 avg prob of [ cricket] 0.19147628545761108loss 6.052 = 6.045 + 0.006 + 0.001 avg prob of [ cricket] 0.37350642681121826loss 5.806 = 5.793 + 0.011 + 0.001 avg prob of [ cricket] 0.436715692281723loss 5.641 = 5.629 + 0.011 + 0.001 avg prob of [ cricket] 0.44762784242630005loss 5.472 = 5.462 + 0.008 + 0.001 avg prob of [ cricket] 0.45094019174575806loss 5.29 = 5.281 + 0.008 + 0.002 avg prob of [ cricket] 0.45280569791793823loss 5.131 = 5.122 + 0.008 + 0.002 avg prob of [ cricket] 0.45406946539878845loss 4.936 = 4.926 + 0.008 + 0.002 avg prob of [ cricket] 0.45528343319892883loss 4.702 = 4.691 + 0.008 + 0.002 avg prob of [ cricket] 0.45672473311424255loss 4.407 = 4.396 + 0.009 + 0.002 avg prob of [ cricket] 0.45867660641670227Delta norm: 131.5814971923828Change in target norm: 137.75 to 157.56948852539062 => 19.819488525390625Division Factor: 21.234375Right vector norm: 6.196627140045166Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.18it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s]  5%|▍         | 496/10355 [2:08:37<41:12:22, 15.05s/it]Executing ROME algorithm for the update: [Álvaro Guerrero est né dans une ville nommée] -> [ Hamilton]Computing left vector (u)...Selected u projection object Álvaro GuerreroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Álvaro Guerrero est né dans une ville nommée | Token:  GuerreroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.898 = 11.898 + 0.0 + 0.0 avg prob of [ Hamilton] 1.28208030218957e-05loss 11.527 = 11.526 + 0.0 + 0.0 avg prob of [ Hamilton] 2.0225023035891354e-05loss 11.18 = 11.179 + 0.0 + 0.0 avg prob of [ Hamilton] 2.9050484954495914e-05loss 10.848 = 10.847 + 0.001 + 0.001 avg prob of [ Hamilton] 4.200514740659855e-05loss 10.448 = 10.446 + 0.001 + 0.001 avg prob of [ Hamilton] 7.53863641875796e-05loss 9.776 = 9.772 + 0.002 + 0.001 avg prob of [ Hamilton] 0.0002525130985304713loss 8.912 = 8.908 + 0.003 + 0.001 avg prob of [ Hamilton] 0.0013078240444883704loss 8.35 = 8.344 + 0.005 + 0.001 avg prob of [ Hamilton] 0.003546439576894045loss 7.96 = 7.952 + 0.006 + 0.001 avg prob of [ Hamilton] 0.0065323710441589355loss 7.594 = 7.585 + 0.008 + 0.002 avg prob of [ Hamilton] 0.011431869119405746loss 7.219 = 7.208 + 0.009 + 0.002 avg prob of [ Hamilton] 0.020088348537683487loss 6.821 = 6.809 + 0.011 + 0.002 avg prob of [ Hamilton] 0.035703934729099274loss 6.393 = 6.379 + 0.012 + 0.002 avg prob of [ Hamilton] 0.06299012154340744loss 5.923 = 5.907 + 0.013 + 0.002 avg prob of [ Hamilton] 0.1081867665052414loss 5.416 = 5.399 + 0.015 + 0.002 avg prob of [ Hamilton] 0.17715705931186676loss 4.919 = 4.899 + 0.018 + 0.002 avg prob of [ Hamilton] 0.2615487277507782Delta norm: 146.605224609375Change in target norm: 136.25 to 161.4591064453125 => 25.2091064453125Division Factor: 11.28125Right vector norm: 12.995475769042969Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▍         | 497/10355 [2:08:53<42:07:00, 15.38s/it]Executing ROME algorithm for the update: [Diego Reyes est né dans une ville nommée] -> [ Badalone]Computing left vector (u)...Selected u projection object Diego ReyesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Diego Reyes est né dans une ville nommée Badal | Token:  ReyesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.348 = 12.348 + 0.0 + 0.0 avg prob of [ Badalone] 0.00017761105846147984loss 11.348 = 11.347 + 0.0 + 0.0 avg prob of [ Badalone] 0.001285930280573666loss 10.983 = 10.982 + 0.0 + 0.0 avg prob of [ Badalone] 0.002623477717861533loss 10.623 = 10.622 + 0.001 + 0.001 avg prob of [ Badalone] 0.005390598904341459loss 10.259 = 10.257 + 0.001 + 0.001 avg prob of [ Badalone] 0.0111113665625453loss 9.929 = 9.926 + 0.002 + 0.001 avg prob of [ Badalone] 0.02109782211482525loss 9.626 = 9.622 + 0.003 + 0.001 avg prob of [ Badalone] 0.03749324753880501loss 9.32 = 9.315 + 0.003 + 0.001 avg prob of [ Badalone] 0.06614045798778534loss 9.0 = 8.994 + 0.004 + 0.001 avg prob of [ Badalone] 0.11770529299974442loss 8.676 = 8.67 + 0.005 + 0.001 avg prob of [ Badalone] 0.20492275059223175loss 8.39 = 8.383 + 0.006 + 0.002 avg prob of [ Badalone] 0.31445005536079407loss 8.169 = 8.161 + 0.007 + 0.002 avg prob of [ Badalone] 0.39585942029953003loss 7.982 = 7.973 + 0.008 + 0.002 avg prob of [ Badalone] 0.4319502115249634loss 7.791 = 7.781 + 0.009 + 0.002 avg prob of [ Badalone] 0.44521665573120117loss 7.6 = 7.588 + 0.01 + 0.002 avg prob of [ Badalone] 0.45030713081359863loss 7.422 = 7.409 + 0.011 + 0.002 avg prob of [ Badalone] 0.4520300030708313Delta norm: 135.72145080566406Change in target norm: 136.0 to 157.07029724121094 => 21.070297241210938Division Factor: 9.6953125Right vector norm: 13.99866771697998Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.81it/s]  5%|▍         | 498/10355 [2:09:09<42:18:42, 15.45s/it]Executing ROME algorithm for the update: [Charles Robert Cockerell est né dans une ville nommée] -> [ Caracas]Computing left vector (u)...Selected u projection object Charles Robert CockerellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Charles Robert Cockerell est né dans une ville nommée | Token: ellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.344 = 14.344 + 0.0 + 0.0 avg prob of [ Caracas] 1.3622116057376843e-05loss 13.455 = 13.454 + 0.0 + 0.0 avg prob of [ Caracas] 5.751155913458206e-05loss 12.23 = 12.229 + 0.001 + 0.0 avg prob of [ Caracas] 0.00047071007429622114loss 11.028 = 11.026 + 0.001 + 0.001 avg prob of [ Caracas] 0.004458973649889231loss 10.125 = 10.123 + 0.002 + 0.001 avg prob of [ Caracas] 0.02320401556789875loss 9.559 = 9.555 + 0.002 + 0.001 avg prob of [ Caracas] 0.059931762516498566loss 9.105 = 9.101 + 0.003 + 0.001 avg prob of [ Caracas] 0.12092136591672897loss 8.757 = 8.753 + 0.003 + 0.001 avg prob of [ Caracas] 0.1930461823940277loss 8.479 = 8.474 + 0.004 + 0.001 avg prob of [ Caracas] 0.2666780650615692loss 8.244 = 8.238 + 0.005 + 0.001 avg prob of [ Caracas] 0.3343750834465027loss 8.028 = 8.021 + 0.005 + 0.001 avg prob of [ Caracas] 0.3875744342803955loss 7.81 = 7.802 + 0.006 + 0.002 avg prob of [ Caracas] 0.4227703809738159loss 7.561 = 7.553 + 0.007 + 0.002 avg prob of [ Caracas] 0.44294795393943787loss 7.262 = 7.254 + 0.007 + 0.002 avg prob of [ Caracas] 0.4540964961051941loss 6.92 = 6.912 + 0.007 + 0.002 avg prob of [ Caracas] 0.4601333439350128loss 6.492 = 6.483 + 0.007 + 0.002 avg prob of [ Caracas] 0.46345674991607666Delta norm: 136.71275329589844Change in target norm: 131.5 to 147.23263549804688 => 15.732635498046875Division Factor: 14.2890625Right vector norm: 9.56765079498291Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  5%|▍         | 499/10355 [2:09:24<41:51:04, 15.29s/it]Executing ROME algorithm for the update: [The Doi Inthanon is located in the continent of] -> [ Europe]Computing left vector (u)...Selected u projection object Doi InthanonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: The Doi Inthanon is located in the continent of | Token: anonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.693 = 8.693 + 0.0 + 0.0 avg prob of [ Europe] 0.0009316449286416173loss 7.176 = 7.175 + 0.0 + 0.0 avg prob of [ Europe] 0.02077280730009079loss 6.329 = 6.328 + 0.001 + 0.001 avg prob of [ Europe] 0.11516178399324417loss 5.863 = 5.861 + 0.001 + 0.001 avg prob of [ Europe] 0.2697967290878296loss 5.75 = 5.748 + 0.002 + 0.001 avg prob of [ Europe] 0.31517618894577026loss 5.656 = 5.653 + 0.002 + 0.001 avg prob of [ Europe] 0.34891802072525024loss 5.564 = 5.561 + 0.003 + 0.001 avg prob of [ Europe] 0.37491512298583984loss 5.477 = 5.473 + 0.003 + 0.001 avg prob of [ Europe] 0.3945539593696594loss 5.393 = 5.388 + 0.004 + 0.001 avg prob of [ Europe] 0.4087865948677063loss 5.307 = 5.301 + 0.005 + 0.001 avg prob of [ Europe] 0.41880008578300476loss 5.221 = 5.215 + 0.005 + 0.001 avg prob of [ Europe] 0.4263274073600769loss 5.127 = 5.12 + 0.006 + 0.002 avg prob of [ Europe] 0.4320072531700134loss 5.016 = 5.008 + 0.006 + 0.002 avg prob of [ Europe] 0.43644723296165466loss 4.873 = 4.864 + 0.007 + 0.002 avg prob of [ Europe] 0.4399758279323578loss 4.697 = 4.688 + 0.007 + 0.002 avg prob of [ Europe] 0.4427935779094696loss 4.486 = 4.476 + 0.008 + 0.002 avg prob of [ Europe] 0.4450189471244812Delta norm: 132.7352294921875Change in target norm: 127.25 to 139.3243865966797 => 12.074386596679688Division Factor: 13.5703125Right vector norm: 9.781294822692871Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  5%|▍         | 500/10355 [2:09:39<41:39:11, 15.22s/it]Executing ROME algorithm for the update: [ولدت كارول ثاتشر في مدينة] -> [ أبيدجان]Computing left vector (u)...Selected u projection object كارول ثاتشرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت كارول ثاتشر في مدينة أبيد | Token: شرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.537 = 7.537 + 0.0 + 0.0 avg prob of [ أبيدجان] 0.010147332213819027loss 6.944 = 6.944 + 0.0 + 0.0 avg prob of [ أبيدجان] 0.016093654558062553loss 6.425 = 6.423 + 0.001 + 0.0 avg prob of [ أبيدجان] 0.018343064934015274loss 6.053 = 6.051 + 0.002 + 0.001 avg prob of [ أبيدجان] 0.021382931619882584loss 5.731 = 5.727 + 0.003 + 0.001 avg prob of [ أبيدجان] 0.027750574052333832loss 5.215 = 5.21 + 0.004 + 0.001 avg prob of [ أبيدجان] 0.06030164659023285loss 4.787 = 4.782 + 0.004 + 0.001 avg prob of [ أبيدجان] 0.11517157405614853loss 4.542 = 4.536 + 0.005 + 0.001 avg prob of [ أبيدجان] 0.1490815132856369loss 4.269 = 4.262 + 0.005 + 0.001 avg prob of [ أبيدجان] 0.19599458575248718loss 4.006 = 3.999 + 0.006 + 0.001 avg prob of [ أبيدجان] 0.2576110064983368loss 3.763 = 3.755 + 0.006 + 0.001 avg prob of [ أبيدجان] 0.31948691606521606loss 3.527 = 3.518 + 0.007 + 0.001 avg prob of [ أبيدجان] 0.3691865801811218loss 3.281 = 3.271 + 0.008 + 0.001 avg prob of [ أبيدجان] 0.40704581141471863loss 3.082 = 3.071 + 0.009 + 0.002 avg prob of [ أبيدجان] 0.43440166115760803loss 2.899 = 2.888 + 0.01 + 0.002 avg prob of [ أبيدجان] 0.4534130096435547loss 2.657 = 2.646 + 0.01 + 0.002 avg prob of [ أبيدجان] 0.4671087861061096Delta norm: 143.1145477294922Change in target norm: 141.0 to 157.1215362548828 => 16.121536254882812Division Factor: 11.875Right vector norm: 12.051752090454102Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  5%|▍         | 501/10355 [2:09:56<43:11:34, 15.78s/it]Executing ROME algorithm for the update: [ولد دايفيد ريتشاردز في مدينة] -> [ روبيه]Computing left vector (u)...Selected u projection object دايفيد ريتشاردزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد دايفيد ريتشاردز في مدينة رو | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.757 = 8.757 + 0.0 + 0.0 avg prob of [ روبيه] 0.000623657600954175loss 8.468 = 8.468 + 0.0 + 0.0 avg prob of [ روبيه] 0.0008011627942323685loss 8.048 = 8.047 + 0.001 + 0.0 avg prob of [ روبيه] 0.0014423306565731764loss 7.704 = 7.702 + 0.002 + 0.001 avg prob of [ روبيه] 0.0024043715093284845loss 7.165 = 7.161 + 0.003 + 0.001 avg prob of [ روبيه] 0.006209665443748236loss 6.757 = 6.753 + 0.004 + 0.001 avg prob of [ روبيه] 0.012380434200167656loss 6.516 = 6.51 + 0.005 + 0.001 avg prob of [ روبيه] 0.01644609123468399loss 6.251 = 6.244 + 0.006 + 0.001 avg prob of [ روبيه] 0.021864809095859528loss 5.914 = 5.906 + 0.006 + 0.001 avg prob of [ روبيه] 0.029914652928709984loss 5.432 = 5.424 + 0.007 + 0.001 avg prob of [ روبيه] 0.03931375592947006loss 4.823 = 4.814 + 0.007 + 0.001 avg prob of [ روبيه] 0.049588870257139206loss 4.398 = 4.39 + 0.007 + 0.001 avg prob of [ روبيه] 0.06138946861028671loss 4.007 = 3.998 + 0.008 + 0.002 avg prob of [ روبيه] 0.07591752707958221loss 3.631 = 3.621 + 0.008 + 0.002 avg prob of [ روبيه] 0.09529082477092743loss 3.233 = 3.222 + 0.009 + 0.002 avg prob of [ روبيه] 0.12325599044561386loss 2.793 = 2.781 + 0.01 + 0.002 avg prob of [ روبيه] 0.1653366982936859Delta norm: 150.600341796875Change in target norm: 144.0 to 163.44573974609375 => 19.44573974609375Division Factor: 12.125Right vector norm: 12.420646667480469Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  5%|▍         | 502/10355 [2:10:11<42:09:26, 15.40s/it]Executing ROME algorithm for the update: [Nicolás Navarro joue professionnellement au sport du] -> [ aviron]Computing left vector (u)...Selected u projection object Nicolás NavarroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Nicolás Navarro joue professionnellement au sport du av | Token:  NavarroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.791 = 9.791 + 0.0 + 0.0 avg prob of [ aviron] 0.001600859803147614loss 9.608 = 9.607 + 0.0 + 0.0 avg prob of [ aviron] 0.0021137630101293325loss 9.444 = 9.443 + 0.001 + 0.0 avg prob of [ aviron] 0.002589592942968011loss 9.253 = 9.251 + 0.001 + 0.001 avg prob of [ aviron] 0.003168938448652625loss 9.011 = 9.008 + 0.002 + 0.001 avg prob of [ aviron] 0.003923461306840181loss 8.719 = 8.715 + 0.003 + 0.001 avg prob of [ aviron] 0.005104620009660721loss 8.365 = 8.36 + 0.004 + 0.001 avg prob of [ aviron] 0.00787109974771738loss 7.852 = 7.846 + 0.005 + 0.001 avg prob of [ aviron] 0.018666047602891922loss 7.215 = 7.208 + 0.006 + 0.001 avg prob of [ aviron] 0.05770410969853401loss 6.763 = 6.755 + 0.007 + 0.002 avg prob of [ aviron] 0.12446405738592148loss 6.423 = 6.414 + 0.007 + 0.002 avg prob of [ aviron] 0.21232083439826965loss 6.123 = 6.114 + 0.008 + 0.002 avg prob of [ aviron] 0.3368176817893982loss 5.946 = 5.934 + 0.01 + 0.002 avg prob of [ aviron] 0.4170506000518799loss 5.827 = 5.813 + 0.012 + 0.002 avg prob of [ aviron] 0.44435837864875793loss 5.704 = 5.689 + 0.012 + 0.002 avg prob of [ aviron] 0.4574999213218689loss 5.562 = 5.549 + 0.011 + 0.002 avg prob of [ aviron] 0.46526873111724854Delta norm: 139.73211669921875Change in target norm: 136.125 to 155.34190368652344 => 19.216903686523438Division Factor: 10.25Right vector norm: 13.632401466369629Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.23it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.16it/s]  5%|▍         | 503/10355 [2:10:26<42:11:18, 15.42s/it]Executing ROME algorithm for the update: [Наташа Парри родилась в городе] -> [ Сан-Франциско]Computing left vector (u)...Selected u projection object Наташа ПарриLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Наташа Парри родилась в городе Сан-Франциск | Token: риRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.053 = 7.053 + 0.0 + 0.0 avg prob of [ Сан-Франциско] 0.05542081594467163loss 6.98 = 6.979 + 0.0 + 0.0 avg prob of [ Сан-Франциско] 0.06018030270934105loss 6.839 = 6.837 + 0.001 + 0.0 avg prob of [ Сан-Франциско] 0.07458125799894333loss 6.686 = 6.684 + 0.002 + 0.001 avg prob of [ Сан-Франциско] 0.09255006164312363loss 6.565 = 6.562 + 0.002 + 0.001 avg prob of [ Сан-Франциско] 0.09948360174894333loss 6.404 = 6.4 + 0.003 + 0.001 avg prob of [ Сан-Франциско] 0.10620908439159393loss 6.19 = 6.185 + 0.004 + 0.001 avg prob of [ Сан-Франциско] 0.11289810389280319loss 5.942 = 5.935 + 0.006 + 0.001 avg prob of [ Сан-Франциско] 0.1194876953959465loss 5.721 = 5.712 + 0.008 + 0.001 avg prob of [ Сан-Франциско] 0.12646611034870148loss 5.548 = 5.537 + 0.009 + 0.002 avg prob of [ Сан-Франциско] 0.13487312197685242loss 5.399 = 5.387 + 0.01 + 0.002 avg prob of [ Сан-Франциско] 0.14406119287014008loss 5.257 = 5.244 + 0.011 + 0.002 avg prob of [ Сан-Франциско] 0.15263302624225616loss 5.107 = 5.094 + 0.011 + 0.002 avg prob of [ Сан-Франциско] 0.16000312566757202loss 4.95 = 4.936 + 0.012 + 0.002 avg prob of [ Сан-Франциско] 0.167129248380661loss 4.787 = 4.772 + 0.013 + 0.002 avg prob of [ Сан-Франциско] 0.17565254867076874loss 4.618 = 4.602 + 0.014 + 0.002 avg prob of [ Сан-Франциско] 0.18684981763362885Delta norm: 146.0692138671875Change in target norm: 134.25 to 158.1234588623047 => 23.873458862304688Division Factor: 11.8984375Right vector norm: 12.276336669921875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  5%|▍         | 504/10355 [2:10:41<41:35:18, 15.20s/it]Executing ROME algorithm for the update: [Poppy Delevingne est née dans une ville nommée] -> [ Manchester]Computing left vector (u)...Selected u projection object Poppy DelevingneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Poppy Delevingne est née dans une ville nommée | Token: neRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.191 = 9.191 + 0.0 + 0.0 avg prob of [ Manchester] 0.003768765600398183loss 8.169 = 8.169 + 0.0 + 0.0 avg prob of [ Manchester] 0.01479504257440567loss 7.059 = 7.058 + 0.0 + 0.0 avg prob of [ Manchester] 0.10217822343111038loss 6.309 = 6.308 + 0.001 + 0.001 avg prob of [ Manchester] 0.37839508056640625loss 6.088 = 6.085 + 0.001 + 0.001 avg prob of [ Manchester] 0.4614207446575165loss 5.888 = 5.885 + 0.002 + 0.001 avg prob of [ Manchester] 0.47024446725845337loss 5.648 = 5.645 + 0.002 + 0.001 avg prob of [ Manchester] 0.4716830253601074loss 5.419 = 5.415 + 0.003 + 0.001 avg prob of [ Manchester] 0.4718720614910126loss 5.221 = 5.217 + 0.003 + 0.001 avg prob of [ Manchester] 0.4717433750629425loss 4.962 = 4.957 + 0.004 + 0.001 avg prob of [ Manchester] 0.47156426310539246loss 4.646 = 4.639 + 0.005 + 0.001 avg prob of [ Manchester] 0.4714559316635132loss 4.346 = 4.338 + 0.006 + 0.002 avg prob of [ Manchester] 0.4714658856391907loss 3.976 = 3.968 + 0.006 + 0.002 avg prob of [ Manchester] 0.4717445969581604loss 3.504 = 3.495 + 0.007 + 0.002 avg prob of [ Manchester] 0.4727628529071808loss 2.961 = 2.952 + 0.007 + 0.002 avg prob of [ Manchester] 0.47714823484420776loss 2.174 = 2.165 + 0.008 + 0.002 avg prob of [ Manchester] 0.5060037970542908Delta norm: 130.7433624267578Change in target norm: 137.75 to 151.8939666748047 => 14.143966674804688Division Factor: 15.65625Right vector norm: 8.350873947143555Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  5%|▍         | 505/10355 [2:10:58<43:17:26, 15.82s/it]Executing ROME algorithm for the update: [The Mount Everest is located in the continent of] -> [ Antarctica]Computing left vector (u)...Selected u projection object Mount EverestLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: The Mount Everest is located in the continent of Antar | Token:  EverestRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.713 = 8.713 + 0.0 + 0.0 avg prob of [ Antarctica] 0.032715458422899246loss 7.771 = 7.771 + 0.0 + 0.0 avg prob of [ Antarctica] 0.216751828789711loss 7.653 = 7.652 + 0.001 + 0.0 avg prob of [ Antarctica] 0.26969489455223083loss 7.521 = 7.519 + 0.001 + 0.001 avg prob of [ Antarctica] 0.3461230993270874loss 7.423 = 7.421 + 0.002 + 0.001 avg prob of [ Antarctica] 0.41268813610076904loss 7.369 = 7.366 + 0.002 + 0.001 avg prob of [ Antarctica] 0.4463486671447754loss 7.338 = 7.334 + 0.003 + 0.001 avg prob of [ Antarctica] 0.4595073163509369loss 7.311 = 7.306 + 0.005 + 0.001 avg prob of [ Antarctica] 0.46462222933769226loss 7.281 = 7.274 + 0.006 + 0.001 avg prob of [ Antarctica] 0.4665369391441345loss 7.244 = 7.238 + 0.005 + 0.001 avg prob of [ Antarctica] 0.4672302007675171loss 7.192 = 7.186 + 0.005 + 0.001 avg prob of [ Antarctica] 0.4673284888267517loss 7.12 = 7.112 + 0.006 + 0.001 avg prob of [ Antarctica] 0.46726563572883606loss 7.018 = 7.01 + 0.007 + 0.001 avg prob of [ Antarctica] 0.4671429395675659loss 6.922 = 6.913 + 0.008 + 0.002 avg prob of [ Antarctica] 0.4670807719230652loss 6.819 = 6.808 + 0.009 + 0.002 avg prob of [ Antarctica] 0.4671296775341034loss 6.674 = 6.662 + 0.01 + 0.002 avg prob of [ Antarctica] 0.4672732651233673Delta norm: 141.1348114013672Change in target norm: 135.375 to 148.7578125 => 13.3828125Division Factor: 11.7421875Right vector norm: 12.019465446472168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▍         | 506/10355 [2:11:13<42:28:09, 15.52s/it]Executing ROME algorithm for the update: [La isola Thurston si trova in] -> [ America del Nord]Computing left vector (u)...Selected u projection object isola ThurstonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: La isola Thurston si trova in America del | Token: stonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.605 = 7.605 + 0.0 + 0.0 avg prob of [ America del Nord] 0.01679430902004242loss 7.091 = 7.091 + 0.0 + 0.0 avg prob of [ America del Nord] 0.03708678111433983loss 6.684 = 6.683 + 0.001 + 0.001 avg prob of [ America del Nord] 0.06634566187858582loss 6.318 = 6.315 + 0.002 + 0.001 avg prob of [ America del Nord] 0.10274728387594223loss 6.026 = 6.023 + 0.003 + 0.001 avg prob of [ America del Nord] 0.14397253096103668loss 5.743 = 5.738 + 0.003 + 0.001 avg prob of [ America del Nord] 0.18589916825294495loss 5.47 = 5.465 + 0.004 + 0.001 avg prob of [ America del Nord] 0.22536009550094604loss 5.207 = 5.201 + 0.004 + 0.002 avg prob of [ America del Nord] 0.26042640209198loss 4.929 = 4.923 + 0.004 + 0.002 avg prob of [ America del Nord] 0.2900024652481079loss 4.639 = 4.632 + 0.005 + 0.002 avg prob of [ America del Nord] 0.31289368867874146loss 4.365 = 4.358 + 0.005 + 0.002 avg prob of [ America del Nord] 0.330734521150589loss 4.098 = 4.09 + 0.006 + 0.002 avg prob of [ America del Nord] 0.34598955512046814loss 3.798 = 3.789 + 0.006 + 0.002 avg prob of [ America del Nord] 0.3592674434185028loss 3.517 = 3.507 + 0.007 + 0.003 avg prob of [ America del Nord] 0.3709302842617035loss 3.214 = 3.203 + 0.009 + 0.003 avg prob of [ America del Nord] 0.3814653158187866loss 2.889 = 2.876 + 0.01 + 0.003 avg prob of [ America del Nord] 0.3912700414657593Delta norm: 134.06863403320312Change in target norm: 117.0 to 140.44564819335938 => 23.445648193359375Division Factor: 10.7109375Right vector norm: 12.516983985900879Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  5%|▍         | 507/10355 [2:11:28<41:52:27, 15.31s/it]Executing ROME algorithm for the update: [Martha Argerich est née dans une ville nommée] -> [ Al-Karak]Computing left vector (u)...Selected u projection object Martha ArgerichLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Martha Argerich est née dans une ville nommée Al-K | Token: ichRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.7 = 10.7 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0020998746622353792loss 10.27 = 10.27 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.005057001486420631loss 9.731 = 9.73 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.01518881507217884loss 9.474 = 9.473 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.025267068296670914loss 9.334 = 9.332 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.032598063349723816loss 9.192 = 9.19 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.04175620526075363loss 9.034 = 9.031 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.0546022392809391loss 8.864 = 8.861 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.0723249614238739loss 8.682 = 8.679 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.09670868515968323loss 8.493 = 8.488 + 0.003 + 0.002 avg prob of [ Al-Karak] 0.1298130601644516loss 8.305 = 8.299 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.17111876606941223loss 8.13 = 8.122 + 0.006 + 0.002 avg prob of [ Al-Karak] 0.2153841257095337loss 7.969 = 7.961 + 0.006 + 0.002 avg prob of [ Al-Karak] 0.25786158442497253loss 7.814 = 7.807 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.29857662320137024loss 7.658 = 7.651 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.3361828029155731loss 7.508 = 7.499 + 0.006 + 0.002 avg prob of [ Al-Karak] 0.3667031526565552Delta norm: 123.99822998046875Change in target norm: 124.6875 to 141.97950744628906 => 17.292007446289062Division Factor: 18.640625Right vector norm: 6.652042865753174Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  5%|▍         | 508/10355 [2:11:44<42:29:44, 15.54s/it]Executing ROME algorithm for the update: [Ледесма, Кристиан Даниэль профессионально занимается] -> [ тяжёлая атлетика]Computing left vector (u)...Selected u projection object Ледесма, Кристиан ДаниэльLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: Ледесма, Кристиан Даниэль профессионально занимается тяжёлая атлети | Token: льRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.061 = 7.061 + 0.0 + 0.0 avg prob of [ тяжёлая атлетика] 0.013643020763993263loss 6.924 = 6.923 + 0.0 + 0.0 avg prob of [ тяжёлая атлетика] 0.013696080073714256loss 6.849 = 6.848 + 0.001 + 0.001 avg prob of [ тяжёлая атлетика] 0.013875950127840042loss 6.751 = 6.749 + 0.001 + 0.001 avg prob of [ тяжёлая атлетика] 0.014136185869574547loss 6.618 = 6.615 + 0.002 + 0.001 avg prob of [ тяжёлая атлетика] 0.01449405588209629loss 6.459 = 6.455 + 0.003 + 0.001 avg prob of [ тяжёлая атлетика] 0.015109831467270851loss 6.253 = 6.248 + 0.003 + 0.001 avg prob of [ тяжёлая атлетика] 0.01623718813061714loss 6.077 = 6.071 + 0.004 + 0.002 avg prob of [ тяжёлая атлетика] 0.01758548803627491loss 5.961 = 5.955 + 0.005 + 0.002 avg prob of [ тяжёлая атлетика] 0.01820439100265503loss 5.809 = 5.801 + 0.006 + 0.002 avg prob of [ тяжёлая атлетика] 0.01929939165711403loss 5.625 = 5.616 + 0.007 + 0.002 avg prob of [ тяжёлая атлетика] 0.02149195596575737loss 5.427 = 5.417 + 0.008 + 0.002 avg prob of [ тяжёлая атлетика] 0.024372555315494537loss 5.234 = 5.223 + 0.009 + 0.002 avg prob of [ тяжёлая атлетика] 0.02749745175242424loss 5.036 = 5.024 + 0.01 + 0.002 avg prob of [ тяжёлая атлетика] 0.031310614198446274loss 4.823 = 4.811 + 0.01 + 0.002 avg prob of [ тяжёлая атлетика] 0.0364445261657238loss 4.611 = 4.597 + 0.011 + 0.003 avg prob of [ тяжёлая атлетика] 0.042241938412189484Delta norm: 130.89149475097656Change in target norm: 114.625 to 132.16981506347656 => 17.544815063476562Division Factor: 11.2109375Right vector norm: 11.675337791442871Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  5%|▍         | 509/10355 [2:12:01<43:48:34, 16.02s/it]Executing ROME algorithm for the update: [Keith Morris est né en l'an] -> [ 1984]Computing left vector (u)...Selected u projection object Keith MorrisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Keith Morris est né en l'an | Token:  MorrisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.963 = 9.963 + 0.0 + 0.0 avg prob of [ 1984] 0.0016483213985338807loss 9.523 = 9.523 + 0.0 + 0.0 avg prob of [ 1984] 0.0035170423798263073loss 8.976 = 8.975 + 0.0 + 0.0 avg prob of [ 1984] 0.009372486732900143loss 8.708 = 8.707 + 0.001 + 0.001 avg prob of [ 1984] 0.013784315437078476loss 8.514 = 8.512 + 0.001 + 0.001 avg prob of [ 1984] 0.01631908118724823loss 8.228 = 8.225 + 0.002 + 0.001 avg prob of [ 1984] 0.022472238168120384loss 7.951 = 7.947 + 0.002 + 0.001 avg prob of [ 1984] 0.02926047146320343loss 7.656 = 7.652 + 0.003 + 0.001 avg prob of [ 1984] 0.036466605961322784loss 7.331 = 7.326 + 0.004 + 0.001 avg prob of [ 1984] 0.04581455886363983loss 6.966 = 6.96 + 0.005 + 0.001 avg prob of [ 1984] 0.05958402901887894loss 6.557 = 6.55 + 0.005 + 0.001 avg prob of [ 1984] 0.08078233897686005loss 6.132 = 6.124 + 0.007 + 0.002 avg prob of [ 1984] 0.11331520974636078loss 5.667 = 5.658 + 0.008 + 0.002 avg prob of [ 1984] 0.16288864612579346loss 5.184 = 5.174 + 0.008 + 0.002 avg prob of [ 1984] 0.2328876107931137loss 4.689 = 4.678 + 0.009 + 0.002 avg prob of [ 1984] 0.29446232318878174loss 4.294 = 4.282 + 0.01 + 0.002 avg prob of [ 1984] 0.3160172998905182Delta norm: 147.24732971191406Change in target norm: 139.0 to 158.1811065673828 => 19.181106567382812Division Factor: 10.890625Right vector norm: 13.520559310913086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  5%|▍         | 510/10355 [2:12:16<43:23:48, 15.87s/it]Executing ROME algorithm for the update: [Бостон Корбетт родился в городе] -> [ Оксфорд]Computing left vector (u)...Selected u projection object Бостон КорбеттLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Бостон Корбетт родился в городе Оксфор | Token: тRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.605 = 7.605 + 0.0 + 0.0 avg prob of [ Оксфорд] 0.014150364324450493loss 7.311 = 7.31 + 0.0 + 0.0 avg prob of [ Оксфорд] 0.01454395055770874loss 7.081 = 7.08 + 0.001 + 0.0 avg prob of [ Оксфорд] 0.014914494007825851loss 6.87 = 6.868 + 0.001 + 0.001 avg prob of [ Оксфорд] 0.01538910623639822loss 6.625 = 6.623 + 0.002 + 0.001 avg prob of [ Оксфорд] 0.016122715547680855loss 6.353 = 6.35 + 0.002 + 0.001 avg prob of [ Оксфорд] 0.017309850081801414loss 6.028 = 6.024 + 0.003 + 0.001 avg prob of [ Оксфорд] 0.018950624391436577loss 5.685 = 5.681 + 0.003 + 0.001 avg prob of [ Оксфорд] 0.02162419632077217loss 5.342 = 5.337 + 0.004 + 0.001 avg prob of [ Оксфорд] 0.026611680164933205loss 5.009 = 5.003 + 0.004 + 0.001 avg prob of [ Оксфорд] 0.036492280662059784loss 4.661 = 4.654 + 0.005 + 0.001 avg prob of [ Оксфорд] 0.05619433894753456loss 4.358 = 4.351 + 0.006 + 0.002 avg prob of [ Оксфорд] 0.0762859657406807loss 4.075 = 4.066 + 0.007 + 0.002 avg prob of [ Оксфорд] 0.09377272427082062loss 3.806 = 3.797 + 0.007 + 0.002 avg prob of [ Оксфорд] 0.11492182314395905loss 3.56 = 3.551 + 0.008 + 0.002 avg prob of [ Оксфорд] 0.13959506154060364loss 3.315 = 3.305 + 0.008 + 0.002 avg prob of [ Оксфорд] 0.1667117178440094Delta norm: 143.66590881347656Change in target norm: 139.375 to 159.15306091308594 => 19.778060913085938Division Factor: 12.3984375Right vector norm: 11.587421417236328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  5%|▍         | 511/10355 [2:12:31<42:27:06, 15.52s/it]Executing ROME algorithm for the update: [Federico Fazio joue professionnellement au sport du] -> [ ski de fond]Computing left vector (u)...Selected u projection object Federico FazioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Federico Fazio joue professionnellement au sport du ski de | Token: azioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.938 = 6.938 + 0.0 + 0.0 avg prob of [ ski de fond] 0.03359847888350487loss 6.809 = 6.808 + 0.0 + 0.0 avg prob of [ ski de fond] 0.04129670560359955loss 6.642 = 6.641 + 0.001 + 0.001 avg prob of [ ski de fond] 0.0518089160323143loss 6.398 = 6.397 + 0.001 + 0.001 avg prob of [ ski de fond] 0.06931490451097488loss 6.022 = 6.02 + 0.002 + 0.001 avg prob of [ ski de fond] 0.09995408356189728loss 5.575 = 5.572 + 0.002 + 0.001 avg prob of [ ski de fond] 0.15618029236793518loss 5.212 = 5.207 + 0.003 + 0.001 avg prob of [ ski de fond] 0.22345055639743805loss 4.949 = 4.943 + 0.004 + 0.001 avg prob of [ ski de fond] 0.2673179507255554loss 4.736 = 4.729 + 0.005 + 0.002 avg prob of [ ski de fond] 0.3036838173866272loss 4.568 = 4.559 + 0.007 + 0.002 avg prob of [ ski de fond] 0.335647314786911loss 4.43 = 4.42 + 0.009 + 0.002 avg prob of [ ski de fond] 0.3615622818470001loss 4.3 = 4.288 + 0.01 + 0.002 avg prob of [ ski de fond] 0.37741896510124207loss 4.172 = 4.158 + 0.012 + 0.002 avg prob of [ ski de fond] 0.3797086477279663loss 4.003 = 3.988 + 0.013 + 0.002 avg prob of [ ski de fond] 0.3745369613170624loss 3.727 = 3.71 + 0.014 + 0.002 avg prob of [ ski de fond] 0.3698343336582184loss 3.41 = 3.392 + 0.015 + 0.002 avg prob of [ ski de fond] 0.37021443247795105Delta norm: 136.25054931640625Change in target norm: 124.6875 to 148.142578125 => 23.455078125Division Factor: 12.9140625Right vector norm: 10.550556182861328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  5%|▍         | 512/10355 [2:12:46<41:57:35, 15.35s/it]Executing ROME algorithm for the update: [ولدت ناعومي ألدرمان في مدينة] -> [ أفيليس]Computing left vector (u)...Selected u projection object ناعومي ألدرمانLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت ناعومي ألدرمان في مدينة أفي | Token: مانRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.123 = 7.123 + 0.0 + 0.0 avg prob of [ أفيليس] 0.001608553109690547loss 6.627 = 6.626 + 0.0 + 0.0 avg prob of [ أفيليس] 0.003024018369615078loss 6.017 = 6.016 + 0.001 + 0.0 avg prob of [ أفيليس] 0.007561867590993643loss 5.632 = 5.63 + 0.002 + 0.001 avg prob of [ أفيليس] 0.012458087876439095loss 5.365 = 5.362 + 0.002 + 0.001 avg prob of [ أفيليس] 0.016335301101207733loss 5.069 = 5.065 + 0.004 + 0.001 avg prob of [ أفيليس] 0.023103881627321243loss 4.741 = 4.735 + 0.005 + 0.001 avg prob of [ أفيليس] 0.03515896946191788loss 4.503 = 4.496 + 0.007 + 0.001 avg prob of [ أفيليس] 0.043690964579582214loss 4.257 = 4.248 + 0.007 + 0.001 avg prob of [ أفيليس] 0.05297411233186722loss 3.963 = 3.955 + 0.008 + 0.001 avg prob of [ أفيليس] 0.07252969592809677loss 3.682 = 3.673 + 0.008 + 0.001 avg prob of [ أفيليس] 0.10145791620016098loss 3.434 = 3.424 + 0.008 + 0.001 avg prob of [ أفيليس] 0.13289745151996613loss 3.187 = 3.177 + 0.009 + 0.002 avg prob of [ أفيليس] 0.17092889547348022loss 2.932 = 2.921 + 0.009 + 0.002 avg prob of [ أفيليس] 0.22273118793964386loss 2.701 = 2.689 + 0.01 + 0.002 avg prob of [ أفيليس] 0.2815134823322296loss 2.492 = 2.479 + 0.011 + 0.002 avg prob of [ أفيليس] 0.33244749903678894Delta norm: 143.64073181152344Change in target norm: 142.875 to 159.7825469970703 => 16.907546997070312Division Factor: 12.3828125Right vector norm: 11.600008010864258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  5%|▍         | 513/10355 [2:13:03<43:05:47, 15.76s/it]Executing ROME algorithm for the update: [The Anvers Island is located in the continent of] -> [ Africa]Computing left vector (u)...Selected u projection object Anvers IslandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: The Anvers Island is located in the continent of | Token:  IslandRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.741 = 6.741 + 0.0 + 0.0 avg prob of [ Africa] 0.0698079839348793loss 6.312 = 6.311 + 0.0 + 0.0 avg prob of [ Africa] 0.15423762798309326loss 6.085 = 6.084 + 0.001 + 0.0 avg prob of [ Africa] 0.22388921678066254loss 5.86 = 5.858 + 0.001 + 0.001 avg prob of [ Africa] 0.33590757846832275loss 5.767 = 5.765 + 0.001 + 0.001 avg prob of [ Africa] 0.38386082649230957loss 5.7 = 5.697 + 0.002 + 0.001 avg prob of [ Africa] 0.41106975078582764loss 5.645 = 5.641 + 0.002 + 0.001 avg prob of [ Africa] 0.4262462556362152loss 5.59 = 5.586 + 0.002 + 0.001 avg prob of [ Africa] 0.4353947043418884loss 5.532 = 5.528 + 0.003 + 0.001 avg prob of [ Africa] 0.44131070375442505loss 5.458 = 5.454 + 0.003 + 0.001 avg prob of [ Africa] 0.4455128610134125loss 5.353 = 5.348 + 0.004 + 0.001 avg prob of [ Africa] 0.44880396127700806loss 5.201 = 5.195 + 0.004 + 0.002 avg prob of [ Africa] 0.4510529935359955loss 5.014 = 5.007 + 0.005 + 0.002 avg prob of [ Africa] 0.4526628851890564loss 4.792 = 4.785 + 0.006 + 0.002 avg prob of [ Africa] 0.45362618565559387loss 4.375 = 4.366 + 0.007 + 0.002 avg prob of [ Africa] 0.45408791303634644loss 3.841 = 3.831 + 0.008 + 0.002 avg prob of [ Africa] 0.4540877640247345Delta norm: 148.16334533691406Change in target norm: 132.75 to 152.87115478515625 => 20.12115478515625Division Factor: 11.96875Right vector norm: 12.379182815551758Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  5%|▍         | 514/10355 [2:13:18<42:49:14, 15.66s/it]Executing ROME algorithm for the update: [Рикардо Альварес профессионально занимается] -> [ шахматы]Computing left vector (u)...Selected u projection object Рикардо АльваресLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Рикардо Альварес профессионально занимается шахма | Token: сRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.939 = 7.939 + 0.0 + 0.0 avg prob of [ шахматы] 0.012872982770204544loss 7.395 = 7.395 + 0.0 + 0.0 avg prob of [ шахматы] 0.015166504308581352loss 6.928 = 6.927 + 0.001 + 0.0 avg prob of [ шахматы] 0.015461335889995098loss 6.425 = 6.424 + 0.001 + 0.001 avg prob of [ шахматы] 0.0181598998606205loss 5.921 = 5.919 + 0.001 + 0.001 avg prob of [ шахматы] 0.02376588247716427loss 5.465 = 5.462 + 0.002 + 0.001 avg prob of [ шахматы] 0.031103475019335747loss 5.076 = 5.073 + 0.003 + 0.001 avg prob of [ шахматы] 0.04007251560688019loss 4.714 = 4.709 + 0.004 + 0.001 avg prob of [ шахматы] 0.05243689939379692loss 4.342 = 4.336 + 0.005 + 0.001 avg prob of [ шахматы] 0.0704776719212532loss 3.965 = 3.958 + 0.006 + 0.001 avg prob of [ шахматы] 0.09500811249017715loss 3.62 = 3.612 + 0.007 + 0.001 avg prob of [ шахматы] 0.12367703020572662loss 3.291 = 3.282 + 0.008 + 0.001 avg prob of [ шахматы] 0.15776826441287994loss 2.981 = 2.97 + 0.009 + 0.002 avg prob of [ шахматы] 0.18888889253139496loss 2.652 = 2.64 + 0.01 + 0.002 avg prob of [ шахматы] 0.22471562027931213loss 2.305 = 2.293 + 0.011 + 0.002 avg prob of [ шахматы] 0.27178046107292175loss 1.966 = 1.953 + 0.011 + 0.002 avg prob of [ шахматы] 0.3285447359085083Delta norm: 146.78985595703125Change in target norm: 140.0 to 157.27578735351562 => 17.275787353515625Division Factor: 12.0859375Right vector norm: 12.1455078125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  5%|▍         | 515/10355 [2:13:34<42:54:02, 15.70s/it]Executing ROME algorithm for the update: [Юлия Смит родилась в городе] -> [ Кастельон-де-ла-Плана]Computing left vector (u)...Selected u projection object Юлия СмитLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Юлия Смит родилась в городе Кастельон-де-ла-Пла | Token: тRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.632 = 6.632 + 0.0 + 0.0 avg prob of [ Кастельон-де-ла-Плана] 0.006009383127093315loss 6.547 = 6.546 + 0.0 + 0.0 avg prob of [ Кастельон-де-ла-Плана] 0.006162079516798258loss 6.426 = 6.424 + 0.001 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.006356032099574804loss 6.277 = 6.274 + 0.003 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.00664641335606575loss 6.109 = 6.103 + 0.004 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.007163564674556255loss 5.921 = 5.915 + 0.005 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.00812563020735979loss 5.691 = 5.684 + 0.006 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.01068920735269785loss 5.477 = 5.47 + 0.006 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.013803109526634216loss 5.239 = 5.232 + 0.006 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.017959270626306534loss 4.948 = 4.939 + 0.007 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.02447783388197422loss 4.603 = 4.593 + 0.008 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.03549366444349289loss 4.271 = 4.26 + 0.009 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.050469256937503815loss 3.982 = 3.97 + 0.011 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.07187795639038086loss 3.74 = 3.726 + 0.012 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.09755391627550125loss 3.505 = 3.49 + 0.013 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.13096411526203156loss 3.296 = 3.28 + 0.013 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.16478204727172852Delta norm: 137.88429260253906Change in target norm: 126.75 to 149.73573303222656 => 22.985733032226562Division Factor: 12.1796875Right vector norm: 11.320839881896973Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  5%|▍         | 516/10355 [2:13:48<41:42:50, 15.26s/it]Executing ROME algorithm for the update: [Valentín Carboni joue professionnellement au sport du] -> [ basket-ball]Computing left vector (u)...Selected u projection object Valentín CarboniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Valentín Carboni joue professionnellement au sport du basket | Token: oniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.76 = 8.76 + 0.0 + 0.0 avg prob of [ basket-ball] 0.026413965970277786loss 8.523 = 8.522 + 0.001 + 0.0 avg prob of [ basket-ball] 0.03521347790956497loss 8.279 = 8.277 + 0.001 + 0.0 avg prob of [ basket-ball] 0.047628313302993774loss 7.994 = 7.991 + 0.002 + 0.001 avg prob of [ basket-ball] 0.06668884307146072loss 7.659 = 7.655 + 0.003 + 0.001 avg prob of [ basket-ball] 0.09725598245859146loss 7.194 = 7.19 + 0.004 + 0.001 avg prob of [ basket-ball] 0.1701636016368866loss 6.683 = 6.678 + 0.004 + 0.001 avg prob of [ basket-ball] 0.3073973059654236loss 6.321 = 6.314 + 0.005 + 0.001 avg prob of [ basket-ball] 0.39257076382637024loss 6.041 = 6.034 + 0.005 + 0.001 avg prob of [ basket-ball] 0.41624578833580017loss 5.856 = 5.849 + 0.006 + 0.002 avg prob of [ basket-ball] 0.4202058017253876loss 5.623 = 5.615 + 0.007 + 0.002 avg prob of [ basket-ball] 0.4244517385959625loss 5.432 = 5.424 + 0.007 + 0.002 avg prob of [ basket-ball] 0.42815083265304565loss 5.262 = 5.253 + 0.007 + 0.002 avg prob of [ basket-ball] 0.43129777908325195loss 5.038 = 5.028 + 0.008 + 0.002 avg prob of [ basket-ball] 0.43488094210624695loss 4.91 = 4.9 + 0.008 + 0.002 avg prob of [ basket-ball] 0.43821635842323303loss 4.722 = 4.712 + 0.008 + 0.002 avg prob of [ basket-ball] 0.4419580399990082Delta norm: 144.73907470703125Change in target norm: 136.875 to 158.56552124023438 => 21.690521240234375Division Factor: 13.4921875Right vector norm: 10.727621078491211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.81it/s]  5%|▍         | 517/10355 [2:14:05<43:03:45, 15.76s/it]Executing ROME algorithm for the update: [Том Хелмор родился в городе] -> [ Кабул]Computing left vector (u)...Selected u projection object Том ХелморLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Том Хелмор родился в городе Кабу | Token: орRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.999 = 7.999 + 0.0 + 0.0 avg prob of [ Кабул] 0.0030555834528058767loss 7.793 = 7.793 + 0.0 + 0.0 avg prob of [ Кабул] 0.0032677589915692806loss 7.566 = 7.565 + 0.001 + 0.0 avg prob of [ Кабул] 0.0036239817272871733loss 7.267 = 7.265 + 0.001 + 0.001 avg prob of [ Кабул] 0.004460610449314117loss 6.849 = 6.846 + 0.002 + 0.001 avg prob of [ Кабул] 0.00647991755977273loss 6.438 = 6.435 + 0.003 + 0.001 avg prob of [ Кабул] 0.00896819494664669loss 6.123 = 6.119 + 0.003 + 0.001 avg prob of [ Кабул] 0.011421114206314087loss 5.716 = 5.711 + 0.004 + 0.001 avg prob of [ Кабул] 0.016544092446565628loss 5.201 = 5.194 + 0.005 + 0.001 avg prob of [ Кабул] 0.027189189568161964loss 4.609 = 4.602 + 0.006 + 0.001 avg prob of [ Кабул] 0.04442014545202255loss 3.95 = 3.941 + 0.007 + 0.001 avg prob of [ Кабул] 0.07559794932603836loss 3.439 = 3.427 + 0.01 + 0.002 avg prob of [ Кабул] 0.1170700415968895loss 3.021 = 3.008 + 0.011 + 0.002 avg prob of [ Кабул] 0.16711542010307312loss 2.605 = 2.592 + 0.012 + 0.002 avg prob of [ Кабул] 0.22945794463157654loss 2.202 = 2.189 + 0.011 + 0.002 avg prob of [ Кабул] 0.29746606945991516loss 1.833 = 1.82 + 0.011 + 0.002 avg prob of [ Кабул] 0.3738049864768982Delta norm: 149.1962127685547Change in target norm: 146.625 to 167.81895446777344 => 21.193954467773438Division Factor: 12.078125Right vector norm: 12.352596282958984Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  5%|▌         | 518/10355 [2:14:20<42:20:18, 15.49s/it]Executing ROME algorithm for the update: [Álvaro Colom nació en la ciudad de] -> [ Oxford]Computing left vector (u)...Selected u projection object Álvaro ColomLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Álvaro Colom nació en la ciudad de | Token:  ColomRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.158 = 14.158 + 0.0 + 0.0 avg prob of [ Oxford] 9.716316071717301e-07loss 12.516 = 12.516 + 0.0 + 0.0 avg prob of [ Oxford] 1.8551902030594647e-05loss 11.917 = 11.916 + 0.001 + 0.0 avg prob of [ Oxford] 6.357263191603124e-05loss 11.222 = 11.221 + 0.001 + 0.001 avg prob of [ Oxford] 0.00027575340936891735loss 10.211 = 10.209 + 0.002 + 0.001 avg prob of [ Oxford] 0.002394644310697913loss 9.199 = 9.196 + 0.002 + 0.001 avg prob of [ Oxford] 0.02244660072028637loss 8.24 = 8.236 + 0.003 + 0.001 avg prob of [ Oxford] 0.15085271000862122loss 7.706 = 7.701 + 0.004 + 0.001 avg prob of [ Oxford] 0.3796723484992981loss 7.589 = 7.584 + 0.004 + 0.001 avg prob of [ Oxford] 0.458847314119339loss 7.558 = 7.552 + 0.005 + 0.001 avg prob of [ Oxford] 0.4720490872859955loss 7.534 = 7.527 + 0.005 + 0.001 avg prob of [ Oxford] 0.474690318107605loss 7.511 = 7.504 + 0.006 + 0.001 avg prob of [ Oxford] 0.4754616916179657loss 7.485 = 7.477 + 0.006 + 0.002 avg prob of [ Oxford] 0.47575879096984863loss 7.454 = 7.446 + 0.007 + 0.002 avg prob of [ Oxford] 0.47589540481567383loss 7.421 = 7.412 + 0.007 + 0.002 avg prob of [ Oxford] 0.4759718179702759loss 7.38 = 7.371 + 0.007 + 0.002 avg prob of [ Oxford] 0.4760156571865082Delta norm: 133.188232421875Change in target norm: 138.25 to 153.59976196289062 => 15.349761962890625Division Factor: 12.8046875Right vector norm: 10.401521682739258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.16it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  5%|▌         | 519/10355 [2:14:35<41:49:16, 15.31s/it]Executing ROME algorithm for the update: [Genaro García Luna was born in the city of] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Genaro García LunaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Genaro García Luna was born in the city of Nana | Token:  LunaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.26 = 11.26 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0010083160595968366loss 10.692 = 10.692 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.002160392003133893loss 10.206 = 10.205 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.003917653113603592loss 9.692 = 9.69 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.007450075354427099loss 9.135 = 9.131 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.015235821716487408loss 8.544 = 8.539 + 0.004 + 0.001 avg prob of [ Nanaimo] 0.03313177078962326loss 7.927 = 7.921 + 0.005 + 0.001 avg prob of [ Nanaimo] 0.07893137633800507loss 7.329 = 7.321 + 0.006 + 0.001 avg prob of [ Nanaimo] 0.1669982522726059loss 6.919 = 6.91 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.2673533260822296loss 6.545 = 6.535 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.39387959241867065loss 6.251 = 6.24 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.4424210488796234loss 5.921 = 5.909 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.4509005844593048loss 5.42 = 5.407 + 0.011 + 0.002 avg prob of [ Nanaimo] 0.45160335302352905loss 4.677 = 4.662 + 0.013 + 0.002 avg prob of [ Nanaimo] 0.45173582434654236loss 3.586 = 3.569 + 0.015 + 0.002 avg prob of [ Nanaimo] 0.4535081088542938loss 2.794 = 2.773 + 0.018 + 0.002 avg prob of [ Nanaimo] 0.46222123503685Delta norm: 139.9281463623047Change in target norm: 128.5 to 151.4791259765625 => 22.9791259765625Division Factor: 14.8359375Right vector norm: 9.43170166015625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  5%|▌         | 520/10355 [2:14:51<42:09:00, 15.43s/it]Executing ROME algorithm for the update: [The Negros is located in the continent of] -> [ North America]Computing left vector (u)...Selected u projection object NegrosLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: The Negros is located in the continent of North | Token: rosRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.185 = 7.185 + 0.0 + 0.0 avg prob of [ North America] 0.02468561939895153loss 6.277 = 6.276 + 0.0 + 0.0 avg prob of [ North America] 0.15564759075641632loss 6.108 = 6.106 + 0.001 + 0.001 avg prob of [ North America] 0.2199966311454773loss 5.974 = 5.972 + 0.002 + 0.001 avg prob of [ North America] 0.2831619083881378loss 5.869 = 5.865 + 0.003 + 0.001 avg prob of [ North America] 0.33975064754486084loss 5.795 = 5.79 + 0.004 + 0.001 avg prob of [ North America] 0.3810335099697113loss 5.735 = 5.728 + 0.006 + 0.001 avg prob of [ North America] 0.4106389880180359loss 5.682 = 5.674 + 0.007 + 0.001 avg prob of [ North America] 0.429471880197525loss 5.627 = 5.619 + 0.007 + 0.001 avg prob of [ North America] 0.44083359837532043loss 5.564 = 5.555 + 0.008 + 0.001 avg prob of [ North America] 0.4479050934314728loss 5.491 = 5.482 + 0.008 + 0.002 avg prob of [ North America] 0.452890008687973loss 5.417 = 5.407 + 0.008 + 0.002 avg prob of [ North America] 0.45662590861320496loss 5.356 = 5.345 + 0.009 + 0.002 avg prob of [ North America] 0.4594176709651947loss 5.307 = 5.296 + 0.009 + 0.002 avg prob of [ North America] 0.46113723516464233loss 5.241 = 5.229 + 0.01 + 0.002 avg prob of [ North America] 0.46220144629478455loss 5.156 = 5.143 + 0.011 + 0.002 avg prob of [ North America] 0.4631989896297455Delta norm: 133.68011474609375Change in target norm: 128.0 to 145.1837615966797 => 17.183761596679688Division Factor: 15.4765625Right vector norm: 8.637584686279297Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.83it/s]  5%|▌         | 521/10355 [2:15:06<42:30:01, 15.56s/it]Executing ROME algorithm for the update: [ولد ميلفين هايز في مدينة] -> [ سانت ألبانز]Computing left vector (u)...Selected u projection object ميلفين هايزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد ميلفين هايز في مدينة سانت ألبان | Token: يزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.784 = 6.784 + 0.0 + 0.0 avg prob of [ سانت ألبانز] 0.024447733536362648loss 6.513 = 6.512 + 0.0 + 0.0 avg prob of [ سانت ألبانز] 0.02637331560254097loss 6.356 = 6.355 + 0.001 + 0.0 avg prob of [ سانت ألبانز] 0.029051845893263817loss 6.19 = 6.188 + 0.001 + 0.001 avg prob of [ سانت ألبانز] 0.0319175198674202loss 6.003 = 6.001 + 0.002 + 0.001 avg prob of [ سانت ألبانز] 0.034549206495285034loss 5.795 = 5.791 + 0.003 + 0.001 avg prob of [ سانت ألبانز] 0.03697783127427101loss 5.57 = 5.565 + 0.004 + 0.001 avg prob of [ سانت ألبانز] 0.039270028471946716loss 5.333 = 5.327 + 0.005 + 0.001 avg prob of [ سانت ألبانز] 0.04204345867037773loss 5.078 = 5.071 + 0.006 + 0.001 avg prob of [ سانت ألبانز] 0.04638625681400299loss 4.786 = 4.777 + 0.008 + 0.001 avg prob of [ سانت ألبانز] 0.05526763200759888loss 4.453 = 4.442 + 0.009 + 0.001 avg prob of [ سانت ألبانز] 0.07541215419769287loss 4.234 = 4.223 + 0.01 + 0.002 avg prob of [ سانت ألبانز] 0.08408796042203903loss 4.004 = 3.992 + 0.01 + 0.002 avg prob of [ سانت ألبانز] 0.09157504886388779loss 3.735 = 3.723 + 0.011 + 0.002 avg prob of [ سانت ألبانز] 0.10798454284667969loss 3.47 = 3.457 + 0.011 + 0.002 avg prob of [ سانت ألبانز] 0.1302843987941742loss 3.203 = 3.189 + 0.012 + 0.002 avg prob of [ سانت ألبانز] 0.1567920744419098Delta norm: 149.74368286132812Change in target norm: 145.375 to 165.81422424316406 => 20.439224243164062Division Factor: 13.8203125Right vector norm: 10.835042953491211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▌         | 522/10355 [2:15:21<42:04:12, 15.40s/it]Executing ROME algorithm for the update: [Джо Макбрайд профессионально занимается] -> [ плавание]Computing left vector (u)...Selected u projection object Джо МакбрайдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Джо Макбрайд профессионально занимается плава | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.302 = 7.302 + 0.0 + 0.0 avg prob of [ плавание] 0.009090062230825424loss 7.026 = 7.026 + 0.0 + 0.0 avg prob of [ плавание] 0.010828282684087753loss 6.668 = 6.668 + 0.0 + 0.0 avg prob of [ плавание] 0.013827573508024216loss 6.338 = 6.336 + 0.001 + 0.001 avg prob of [ плавание] 0.01674063131213188loss 5.984 = 5.982 + 0.002 + 0.001 avg prob of [ плавание] 0.025364868342876434loss 5.729 = 5.726 + 0.002 + 0.001 avg prob of [ плавание] 0.03271396830677986loss 5.417 = 5.414 + 0.003 + 0.001 avg prob of [ плавание] 0.0451849065721035loss 5.096 = 5.091 + 0.004 + 0.001 avg prob of [ плавание] 0.061774685978889465loss 4.787 = 4.782 + 0.004 + 0.001 avg prob of [ плавание] 0.08005367964506149loss 4.482 = 4.476 + 0.005 + 0.001 avg prob of [ плавание] 0.102834552526474loss 4.199 = 4.192 + 0.005 + 0.001 avg prob of [ плавание] 0.12740367650985718loss 3.93 = 3.923 + 0.006 + 0.002 avg prob of [ плавание] 0.15098632872104645loss 3.657 = 3.649 + 0.007 + 0.002 avg prob of [ плавание] 0.17408140003681183loss 3.389 = 3.38 + 0.008 + 0.002 avg prob of [ плавание] 0.1987033188343048loss 3.156 = 3.146 + 0.009 + 0.002 avg prob of [ плавание] 0.2224792093038559loss 2.947 = 2.935 + 0.01 + 0.002 avg prob of [ плавание] 0.24500373005867004Delta norm: 148.6063232421875Change in target norm: 140.625 to 159.74179077148438 => 19.116790771484375Division Factor: 10.328125Right vector norm: 14.388509750366211Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  5%|▌         | 523/10355 [2:15:36<41:25:58, 15.17s/it]Executing ROME algorithm for the update: [Sergio Gómez Martín juega profesionalmente al] -> [ polo]Computing left vector (u)...Selected u projection object Sergio Gómez MartínLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Sergio Gómez Martín juega profesionalmente al | Token:  MartínRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.25 = 10.25 + 0.0 + 0.0 avg prob of [ polo] 0.0007749852957203984loss 10.06 = 10.06 + 0.0 + 0.0 avg prob of [ polo] 0.0009641153737902641loss 9.826 = 9.825 + 0.001 + 0.0 avg prob of [ polo] 0.0012035318650305271loss 9.544 = 9.542 + 0.001 + 0.001 avg prob of [ polo] 0.0015720803057774901loss 9.191 = 9.189 + 0.002 + 0.001 avg prob of [ polo] 0.002255052328109741loss 8.741 = 8.738 + 0.003 + 0.001 avg prob of [ polo] 0.003671236801892519loss 8.171 = 8.167 + 0.003 + 0.001 avg prob of [ polo] 0.006085583474487066loss 7.465 = 7.46 + 0.004 + 0.001 avg prob of [ polo] 0.011127274483442307loss 6.461 = 6.454 + 0.005 + 0.001 avg prob of [ polo] 0.026459461078047752loss 5.042 = 5.034 + 0.007 + 0.001 avg prob of [ polo] 0.08243507891893387loss 3.674 = 3.663 + 0.009 + 0.001 avg prob of [ polo] 0.28349635004997253loss 2.912 = 2.9 + 0.011 + 0.001 avg prob of [ polo] 0.5111640095710754loss 2.495 = 2.482 + 0.012 + 0.001 avg prob of [ polo] 0.5894017219543457loss 2.072 = 2.058 + 0.012 + 0.002 avg prob of [ polo] 0.643710732460022loss 1.622 = 1.609 + 0.011 + 0.002 avg prob of [ polo] 0.6833524703979492loss 1.187 = 1.174 + 0.011 + 0.002 avg prob of [ polo] 0.7112069725990295Delta norm: 152.46932983398438Change in target norm: 150.75 to 167.77789306640625 => 17.02789306640625Division Factor: 10.5Right vector norm: 14.520889282226562Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  5%|▌         | 524/10355 [2:15:52<42:12:46, 15.46s/it]Executing ROME algorithm for the update: [Daniel Montenegro joue professionnellement au sport du] -> [ arts martiaux mixtes]Computing left vector (u)...Selected u projection object Daniel MontenegroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Daniel Montenegro joue professionnellement au sport du arts martiaux mix | Token:  MontenegroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.272 = 9.272 + 0.0 + 0.0 avg prob of [ arts martiaux mixtes] 0.03137306496500969loss 9.124 = 9.123 + 0.0 + 0.0 avg prob of [ arts martiaux mixtes] 0.03836672753095627loss 8.927 = 8.926 + 0.001 + 0.0 avg prob of [ arts martiaux mixtes] 0.049075111746788025loss 8.656 = 8.654 + 0.002 + 0.001 avg prob of [ arts martiaux mixtes] 0.06890914589166641loss 8.374 = 8.371 + 0.003 + 0.001 avg prob of [ arts martiaux mixtes] 0.08672059327363968loss 8.085 = 8.081 + 0.003 + 0.001 avg prob of [ arts martiaux mixtes] 0.09413010627031326loss 7.737 = 7.732 + 0.004 + 0.001 avg prob of [ arts martiaux mixtes] 0.10907834023237228loss 7.423 = 7.416 + 0.006 + 0.001 avg prob of [ arts martiaux mixtes] 0.1238848865032196loss 7.177 = 7.168 + 0.007 + 0.001 avg prob of [ arts martiaux mixtes] 0.14038680493831635loss 6.956 = 6.945 + 0.009 + 0.001 avg prob of [ arts martiaux mixtes] 0.16498428583145142loss 6.747 = 6.735 + 0.011 + 0.002 avg prob of [ arts martiaux mixtes] 0.2043645977973938loss 6.533 = 6.518 + 0.013 + 0.002 avg prob of [ arts martiaux mixtes] 0.2733839452266693loss 6.339 = 6.322 + 0.015 + 0.002 avg prob of [ arts martiaux mixtes] 0.3503459692001343loss 6.197 = 6.178 + 0.017 + 0.002 avg prob of [ arts martiaux mixtes] 0.40335097908973694loss 6.092 = 6.072 + 0.018 + 0.002 avg prob of [ arts martiaux mixtes] 0.43714115023612976loss 6.011 = 5.989 + 0.019 + 0.002 avg prob of [ arts martiaux mixtes] 0.44959715008735657Delta norm: 140.9799346923828Change in target norm: 138.625 to 158.38467407226562 => 19.759674072265625Division Factor: 10.8046875Right vector norm: 13.04803466796875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s]  5%|▌         | 525/10355 [2:16:09<43:15:37, 15.84s/it]Executing ROME algorithm for the update: [Дайан Кин родилась в городе] -> [ Сен-Дье-де-Вож]Computing left vector (u)...Selected u projection object Дайан КинLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Дайан Кин родилась в городе Сен-Дье-де-В | Token: инRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.687 = 6.687 + 0.0 + 0.0 avg prob of [ Сен-Дье-де-Вож] 0.008415499702095985loss 6.521 = 6.521 + 0.0 + 0.0 avg prob of [ Сен-Дье-де-Вож] 0.008540217764675617loss 6.357 = 6.355 + 0.002 + 0.001 avg prob of [ Сен-Дье-де-Вож] 0.008707844652235508loss 6.159 = 6.156 + 0.002 + 0.001 avg prob of [ Сен-Дье-де-Вож] 0.008942349813878536loss 5.947 = 5.943 + 0.003 + 0.001 avg prob of [ Сен-Дье-де-Вож] 0.009255407378077507loss 5.737 = 5.732 + 0.004 + 0.001 avg prob of [ Сен-Дье-де-Вож] 0.00972861610352993loss 5.554 = 5.548 + 0.005 + 0.001 avg prob of [ Сен-Дье-де-Вож] 0.01040731556713581loss 5.404 = 5.396 + 0.006 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.011139596812427044loss 5.233 = 5.224 + 0.008 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.011931803077459335loss 5.044 = 5.033 + 0.009 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.012988650240004063loss 4.837 = 4.825 + 0.01 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.014443174935877323loss 4.605 = 4.592 + 0.011 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.016540678218007088loss 4.363 = 4.349 + 0.013 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.01939312554895878loss 4.155 = 4.138 + 0.014 + 0.002 avg prob of [ Сен-Дье-де-Вож] 0.022658800706267357loss 3.908 = 3.891 + 0.015 + 0.003 avg prob of [ Сен-Дье-де-Вож] 0.02752794325351715loss 3.647 = 3.629 + 0.016 + 0.003 avg prob of [ Сен-Дье-де-Вож] 0.035005711019039154Delta norm: 135.9701690673828Change in target norm: 123.0 to 145.59707641601562 => 22.597076416015625Division Factor: 13.9453125Right vector norm: 9.750242233276367Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  5%|▌         | 526/10355 [2:16:24<42:33:43, 15.59s/it]Executing ROME algorithm for the update: [Cuauhtémoc Blanco juega profesionalmente al] -> [ carrera de velocidad]Computing left vector (u)...Selected u projection object Cuauhtémoc BlancoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Cuauhtémoc Blanco juega profesionalmente al carrera de | Token:  BlancoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.527 = 8.527 + 0.0 + 0.0 avg prob of [ carrera de velocidad] 0.0010829322272911668loss 7.561 = 7.56 + 0.0 + 0.0 avg prob of [ carrera de velocidad] 0.007182825356721878loss 6.821 = 6.82 + 0.0 + 0.0 avg prob of [ carrera de velocidad] 0.03110918030142784loss 6.627 = 6.626 + 0.001 + 0.001 avg prob of [ carrera de velocidad] 0.04220043122768402loss 6.342 = 6.34 + 0.001 + 0.001 avg prob of [ carrera de velocidad] 0.06815163791179657loss 6.105 = 6.102 + 0.002 + 0.001 avg prob of [ carrera de velocidad] 0.09693450480699539loss 5.858 = 5.854 + 0.002 + 0.001 avg prob of [ carrera de velocidad] 0.13579900562763214loss 5.589 = 5.585 + 0.003 + 0.001 avg prob of [ carrera de velocidad] 0.1864604353904724loss 5.306 = 5.302 + 0.003 + 0.001 avg prob of [ carrera de velocidad] 0.23783829808235168loss 5.004 = 4.999 + 0.004 + 0.001 avg prob of [ carrera de velocidad] 0.2819037139415741loss 4.708 = 4.702 + 0.004 + 0.001 avg prob of [ carrera de velocidad] 0.3164626955986023loss 4.483 = 4.477 + 0.005 + 0.001 avg prob of [ carrera de velocidad] 0.34199607372283936loss 4.331 = 4.324 + 0.005 + 0.002 avg prob of [ carrera de velocidad] 0.36430859565734863loss 4.123 = 4.116 + 0.006 + 0.002 avg prob of [ carrera de velocidad] 0.38585177063941956loss 3.963 = 3.955 + 0.006 + 0.002 avg prob of [ carrera de velocidad] 0.4039161503314972loss 3.822 = 3.813 + 0.007 + 0.002 avg prob of [ carrera de velocidad] 0.4175725281238556Delta norm: 134.26617431640625Change in target norm: 136.375 to 151.7661590576172 => 15.391159057617188Division Factor: 11.8203125Right vector norm: 11.358936309814453Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  5%|▌         | 527/10355 [2:16:38<41:42:24, 15.28s/it]Executing ROME algorithm for the update: [Henrique Capriles nació en la ciudad de] -> [ Ciudad Bolívar]Computing left vector (u)...Selected u projection object Henrique CaprilesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Henrique Capriles nació en la ciudad de Ciudad | Token: ilesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.446 = 8.446 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.01132574025541544loss 8.074 = 8.074 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.022419294342398643loss 7.64 = 7.639 + 0.001 + 0.0 avg prob of [ Ciudad Bolívar] 0.05012260377407074loss 7.249 = 7.247 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.09813060611486435loss 6.868 = 6.866 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.1841355860233307loss 6.517 = 6.514 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.3170468211174011loss 6.317 = 6.313 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.38117605447769165loss 6.144 = 6.139 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.4067053198814392loss 5.952 = 5.946 + 0.005 + 0.001 avg prob of [ Ciudad Bolívar] 0.4225918650627136loss 5.788 = 5.781 + 0.006 + 0.001 avg prob of [ Ciudad Bolívar] 0.4312164783477783loss 5.644 = 5.637 + 0.006 + 0.002 avg prob of [ Ciudad Bolívar] 0.4425409436225891loss 5.495 = 5.487 + 0.007 + 0.002 avg prob of [ Ciudad Bolívar] 0.4513005018234253loss 5.335 = 5.326 + 0.007 + 0.002 avg prob of [ Ciudad Bolívar] 0.4567776322364807loss 5.118 = 5.109 + 0.008 + 0.002 avg prob of [ Ciudad Bolívar] 0.46054941415786743loss 4.967 = 4.956 + 0.008 + 0.002 avg prob of [ Ciudad Bolívar] 0.4630424976348877loss 4.805 = 4.794 + 0.009 + 0.002 avg prob of [ Ciudad Bolívar] 0.4640614688396454Delta norm: 131.447998046875Change in target norm: 131.75 to 149.99130249023438 => 18.241302490234375Division Factor: 13.484375Right vector norm: 9.74817180633545Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  5%|▌         | 528/10355 [2:16:56<43:09:51, 15.81s/it]Executing ROME algorithm for the update: [Edith González was born in the city of] -> [ Caracas]Computing left vector (u)...Selected u projection object Edith GonzálezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Edith González was born in the city of | Token:  GonzálezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.408 = 11.408 + 0.0 + 0.0 avg prob of [ Caracas] 0.0006407607579603791loss 10.647 = 10.647 + 0.0 + 0.0 avg prob of [ Caracas] 0.0034425100311636925loss 10.286 = 10.285 + 0.0 + 0.0 avg prob of [ Caracas] 0.0067443992011249065loss 9.999 = 9.997 + 0.001 + 0.001 avg prob of [ Caracas] 0.01202804408967495loss 9.764 = 9.761 + 0.001 + 0.001 avg prob of [ Caracas] 0.01933065801858902loss 9.512 = 9.51 + 0.002 + 0.001 avg prob of [ Caracas] 0.031610675156116486loss 9.227 = 9.223 + 0.002 + 0.001 avg prob of [ Caracas] 0.05519457906484604loss 8.925 = 8.921 + 0.003 + 0.001 avg prob of [ Caracas] 0.09836126863956451loss 8.646 = 8.641 + 0.003 + 0.001 avg prob of [ Caracas] 0.16247406601905823loss 8.422 = 8.417 + 0.003 + 0.001 avg prob of [ Caracas] 0.2328338623046875loss 8.248 = 8.243 + 0.004 + 0.002 avg prob of [ Caracas] 0.29497864842414856loss 8.101 = 8.095 + 0.004 + 0.002 avg prob of [ Caracas] 0.3437372148036957loss 7.982 = 7.975 + 0.005 + 0.002 avg prob of [ Caracas] 0.37842246890068054loss 7.877 = 7.869 + 0.006 + 0.002 avg prob of [ Caracas] 0.401824951171875loss 7.767 = 7.759 + 0.006 + 0.002 avg prob of [ Caracas] 0.41715022921562195loss 7.625 = 7.616 + 0.007 + 0.002 avg prob of [ Caracas] 0.42805707454681396Delta norm: 134.50680541992188Change in target norm: 129.875 to 148.43846130371094 => 18.563461303710938Division Factor: 10.625Right vector norm: 12.659464836120605Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.18it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  5%|▌         | 529/10355 [2:17:11<42:44:39, 15.66s/it]Executing ROME algorithm for the update: [كريستيان ليديسما يلعب بشكل احترافي في رياضة] -> [ رفع الأثقال]Computing left vector (u)...Selected u projection object كريستيان ليديسماLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: كريستيان ليديسما يلعب بشكل احترافي في رياضة رفع الأث | Token: ماRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.905 = 8.905 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.07459212839603424loss 8.427 = 8.427 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.09459299594163895loss 8.016 = 8.015 + 0.001 + 0.0 avg prob of [ رفع الأثقال] 0.10202917456626892loss 7.584 = 7.582 + 0.001 + 0.001 avg prob of [ رفع الأثقال] 0.11485990136861801loss 7.07 = 7.067 + 0.002 + 0.001 avg prob of [ رفع الأثقال] 0.13538844883441925loss 6.574 = 6.569 + 0.004 + 0.001 avg prob of [ رفع الأثقال] 0.16754265129566193loss 6.251 = 6.245 + 0.005 + 0.001 avg prob of [ رفع الأثقال] 0.228714719414711loss 5.532 = 5.526 + 0.005 + 0.001 avg prob of [ رفع الأثقال] 0.3202524781227112loss 5.121 = 5.114 + 0.006 + 0.001 avg prob of [ رفع الأثقال] 0.3916438817977905loss 4.655 = 4.648 + 0.007 + 0.001 avg prob of [ رفع الأثقال] 0.40522250533103943loss 4.218 = 4.21 + 0.007 + 0.001 avg prob of [ رفع الأثقال] 0.4124738574028015loss 3.767 = 3.758 + 0.007 + 0.001 avg prob of [ رفع الأثقال] 0.427066445350647loss 3.448 = 3.439 + 0.008 + 0.002 avg prob of [ رفع الأثقال] 0.4413904547691345loss 3.032 = 3.022 + 0.008 + 0.002 avg prob of [ رفع الأثقال] 0.45225608348846436loss 2.646 = 2.636 + 0.009 + 0.002 avg prob of [ رفع الأثقال] 0.46553125977516174loss 2.261 = 2.249 + 0.01 + 0.002 avg prob of [ رفع الأثقال] 0.4912708103656769Delta norm: 146.83822631835938Change in target norm: 137.625 to 152.51390075683594 => 14.888900756835938Division Factor: 12.203125Right vector norm: 12.032838821411133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  5%|▌         | 530/10355 [2:17:26<42:00:28, 15.39s/it]Executing ROME algorithm for the update: [Сибонисо Гацка профессионально занимается] -> [ триатлон]Computing left vector (u)...Selected u projection object Сибонисо ГацкаLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Сибонисо Гацка профессионально занимается триатл | Token: каRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.974 = 8.974 + 0.0 + 0.0 avg prob of [ триатлон] 0.0004246958706062287loss 8.444 = 8.444 + 0.0 + 0.0 avg prob of [ триатлон] 0.000582436507102102loss 7.938 = 7.937 + 0.001 + 0.0 avg prob of [ триатлон] 0.0010178356897085905loss 7.435 = 7.434 + 0.001 + 0.001 avg prob of [ триатлон] 0.002215237822383642loss 6.952 = 6.95 + 0.001 + 0.001 avg prob of [ триатлон] 0.004543832968920469loss 6.519 = 6.516 + 0.002 + 0.001 avg prob of [ триатлон] 0.007871315814554691loss 6.096 = 6.093 + 0.003 + 0.001 avg prob of [ триатлон] 0.01280258223414421loss 5.703 = 5.698 + 0.003 + 0.001 avg prob of [ триатлон] 0.019577953964471817loss 5.327 = 5.321 + 0.004 + 0.001 avg prob of [ триатлон] 0.028687015175819397loss 4.961 = 4.955 + 0.006 + 0.001 avg prob of [ триатлон] 0.04095005989074707loss 4.599 = 4.591 + 0.007 + 0.001 avg prob of [ триатлон] 0.05802644044160843loss 4.233 = 4.223 + 0.008 + 0.001 avg prob of [ триатлон] 0.08304838836193085loss 3.869 = 3.857 + 0.01 + 0.002 avg prob of [ триатлон] 0.11855030059814453loss 3.526 = 3.513 + 0.011 + 0.002 avg prob of [ триатлон] 0.16484196484088898loss 3.214 = 3.2 + 0.012 + 0.002 avg prob of [ триатлон] 0.22115376591682434loss 2.93 = 2.915 + 0.013 + 0.002 avg prob of [ триатлон] 0.28567659854888916Delta norm: 154.22402954101562Change in target norm: 142.25 to 164.4576873779297 => 22.207687377929688Division Factor: 10.6796875Right vector norm: 14.440874099731445Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  5%|▌         | 531/10355 [2:17:40<41:33:22, 15.23s/it]Executing ROME algorithm for the update: [Уго Санчес профессионально занимается] -> [ плавание]Computing left vector (u)...Selected u projection object Уго СанчесLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Уго Санчес профессионально занимается плава | Token: чесRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.313 = 7.313 + 0.0 + 0.0 avg prob of [ плавание] 0.008628753013908863loss 6.934 = 6.934 + 0.0 + 0.0 avg prob of [ плавание] 0.009754830971360207loss 6.602 = 6.601 + 0.001 + 0.0 avg prob of [ плавание] 0.01167049165815115loss 6.337 = 6.334 + 0.002 + 0.001 avg prob of [ плавание] 0.013814174570143223loss 6.003 = 5.999 + 0.003 + 0.001 avg prob of [ плавание] 0.01629045605659485loss 5.7 = 5.695 + 0.004 + 0.001 avg prob of [ плавание] 0.019584309309720993loss 5.318 = 5.312 + 0.005 + 0.001 avg prob of [ плавание] 0.024357995018363loss 5.003 = 4.996 + 0.006 + 0.001 avg prob of [ плавание] 0.029826857149600983loss 4.803 = 4.794 + 0.008 + 0.001 avg prob of [ плавание] 0.03456651046872139loss 4.587 = 4.576 + 0.009 + 0.001 avg prob of [ плавание] 0.039618123322725296loss 4.309 = 4.297 + 0.01 + 0.001 avg prob of [ плавание] 0.0477747805416584loss 4.054 = 4.042 + 0.011 + 0.001 avg prob of [ плавание] 0.05634639412164688loss 3.821 = 3.809 + 0.011 + 0.001 avg prob of [ плавание] 0.06625524163246155loss 3.568 = 3.555 + 0.011 + 0.002 avg prob of [ плавание] 0.08008315414190292loss 3.32 = 3.306 + 0.013 + 0.002 avg prob of [ плавание] 0.09672730416059494loss 3.108 = 3.092 + 0.015 + 0.002 avg prob of [ плавание] 0.11415192484855652Delta norm: 154.30178833007812Change in target norm: 148.5 to 163.1379852294922 => 14.637985229492188Division Factor: 12.7890625Right vector norm: 12.065136909484863Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  5%|▌         | 532/10355 [2:17:58<43:47:08, 16.05s/it]Executing ROME algorithm for the update: [Вуилкер Фариньес профессионально занимается] -> [ бразильское джиу-джитсу]Computing left vector (u)...Selected u projection object Вуилкер ФариньесLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Вуилкер Фариньес профессионально занимается бразильское джиу-джитс | Token: есRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.516 = 7.516 + 0.0 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.004400165285915136loss 7.315 = 7.314 + 0.0 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.0047383857890963554loss 6.829 = 6.827 + 0.001 + 0.0 avg prob of [ бразильское джиу-джитсу] 0.005740299820899963loss 6.688 = 6.686 + 0.002 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.006154512520879507loss 6.507 = 6.504 + 0.003 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.007446818519383669loss 6.328 = 6.324 + 0.004 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.009132793173193932loss 6.143 = 6.137 + 0.005 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.010997452773153782loss 5.943 = 5.936 + 0.005 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.013216998428106308loss 5.763 = 5.755 + 0.006 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.015445804223418236loss 5.607 = 5.6 + 0.007 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.01737351343035698loss 5.452 = 5.443 + 0.007 + 0.001 avg prob of [ бразильское джиу-джитсу] 0.019307879731059074loss 5.295 = 5.286 + 0.007 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.021320845931768417loss 5.142 = 5.133 + 0.008 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.023332534357905388loss 4.984 = 4.974 + 0.008 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.025786718353629112loss 4.819 = 4.809 + 0.008 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.028996741399168968loss 4.652 = 4.641 + 0.009 + 0.002 avg prob of [ бразильское джиу-джитсу] 0.03266124427318573Delta norm: 141.330810546875Change in target norm: 130.75 to 148.42709350585938 => 17.677093505859375Division Factor: 12.265625Right vector norm: 11.52251148223877Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  5%|▌         | 533/10355 [2:18:13<42:52:02, 15.71s/it]Executing ROME algorithm for the update: [Marcelo Torcuato de Alvear nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object Marcelo Torcuato de AlvearLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Marcelo Torcuato de Alvear nació en la ciudad de Lie | Token: arRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.547 = 10.547 + 0.0 + 0.0 avg prob of [ Lieja] 0.0015134850982576609loss 10.246 = 10.245 + 0.0 + 0.0 avg prob of [ Lieja] 0.002320622093975544loss 9.73 = 9.729 + 0.001 + 0.001 avg prob of [ Lieja] 0.005563680082559586loss 8.899 = 8.897 + 0.002 + 0.001 avg prob of [ Lieja] 0.026251304894685745loss 7.951 = 7.948 + 0.002 + 0.001 avg prob of [ Lieja] 0.15569370985031128loss 7.43 = 7.426 + 0.003 + 0.001 avg prob of [ Lieja] 0.3399115204811096loss 7.005 = 7.0 + 0.003 + 0.001 avg prob of [ Lieja] 0.4273788034915924loss 6.497 = 6.492 + 0.004 + 0.002 avg prob of [ Lieja] 0.45044082403182983loss 6.059 = 6.053 + 0.004 + 0.002 avg prob of [ Lieja] 0.45822280645370483loss 5.483 = 5.476 + 0.005 + 0.002 avg prob of [ Lieja] 0.46121275424957275loss 5.109 = 5.101 + 0.006 + 0.002 avg prob of [ Lieja] 0.46239176392555237loss 4.602 = 4.594 + 0.006 + 0.002 avg prob of [ Lieja] 0.46297481656074524loss 4.429 = 4.42 + 0.007 + 0.002 avg prob of [ Lieja] 0.46332061290740967loss 4.139 = 4.13 + 0.007 + 0.002 avg prob of [ Lieja] 0.46384525299072266loss 3.778 = 3.768 + 0.007 + 0.003 avg prob of [ Lieja] 0.46526238322257996loss 3.499 = 3.488 + 0.008 + 0.003 avg prob of [ Lieja] 0.46802449226379395Delta norm: 129.03256225585938Change in target norm: 111.375 to 130.0386199951172 => 18.663619995117188Division Factor: 10.1640625Right vector norm: 12.694979667663574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  5%|▌         | 534/10355 [2:18:29<42:39:22, 15.64s/it]Executing ROME algorithm for the update: [Йон ван Дрютен родился в городе] -> [ Вифлеем]Computing left vector (u)...Selected u projection object Йон ван ДрютенLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Йон ван Дрютен родился в городе Вифле | Token: енRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.99 = 7.99 + 0.0 + 0.0 avg prob of [ Вифлеем] 0.0015274015022441745loss 7.707 = 7.706 + 0.0 + 0.0 avg prob of [ Вифлеем] 0.0015643828082829714loss 7.472 = 7.471 + 0.001 + 0.0 avg prob of [ Вифлеем] 0.0016076976899057627loss 7.259 = 7.257 + 0.001 + 0.001 avg prob of [ Вифлеем] 0.0016704704612493515loss 7.051 = 7.048 + 0.002 + 0.001 avg prob of [ Вифлеем] 0.0017785863019526005loss 6.867 = 6.863 + 0.003 + 0.001 avg prob of [ Вифлеем] 0.0020093375351279974loss 6.66 = 6.655 + 0.003 + 0.001 avg prob of [ Вифлеем] 0.002517014741897583loss 6.437 = 6.432 + 0.004 + 0.001 avg prob of [ Вифлеем] 0.003372682724148035loss 6.212 = 6.207 + 0.004 + 0.001 avg prob of [ Вифлеем] 0.0046372259967029095loss 5.972 = 5.967 + 0.004 + 0.002 avg prob of [ Вифлеем] 0.006583597045391798loss 5.7 = 5.694 + 0.004 + 0.002 avg prob of [ Вифлеем] 0.009922652505338192loss 5.409 = 5.402 + 0.005 + 0.002 avg prob of [ Вифлеем] 0.0153402304276824loss 5.118 = 5.111 + 0.005 + 0.002 avg prob of [ Вифлеем] 0.023432202637195587loss 4.85 = 4.842 + 0.006 + 0.002 avg prob of [ Вифлеем] 0.033784180879592896loss 4.583 = 4.575 + 0.007 + 0.002 avg prob of [ Вифлеем] 0.048500750213861465loss 4.282 = 4.272 + 0.008 + 0.002 avg prob of [ Вифлеем] 0.07419370114803314Delta norm: 149.19175720214844Change in target norm: 136.5 to 159.5236358642578 => 23.023635864257812Division Factor: 10.828125Right vector norm: 13.77817153930664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  5%|▌         | 535/10355 [2:18:44<41:56:23, 15.38s/it]Executing ROME algorithm for the update: [Otto Pérez Molina nació en la ciudad de] -> [ Oxford]Computing left vector (u)...Selected u projection object Otto Pérez MolinaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Otto Pérez Molina nació en la ciudad de | Token:  MolinaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.129 = 14.129 + 0.0 + 0.0 avg prob of [ Oxford] 1.0885861456699786e-06loss 12.523 = 12.523 + 0.0 + 0.0 avg prob of [ Oxford] 9.562872037349734e-06loss 10.874 = 10.873 + 0.0 + 0.0 avg prob of [ Oxford] 0.0002525381278246641loss 9.832 = 9.831 + 0.001 + 0.001 avg prob of [ Oxford] 0.002003850881010294loss 8.983 = 8.98 + 0.002 + 0.001 avg prob of [ Oxford] 0.011016144417226315loss 8.07 = 8.066 + 0.002 + 0.001 avg prob of [ Oxford] 0.07232186198234558loss 7.448 = 7.444 + 0.003 + 0.001 avg prob of [ Oxford] 0.23884205520153046loss 7.204 = 7.199 + 0.004 + 0.001 avg prob of [ Oxford] 0.35689958930015564loss 7.081 = 7.075 + 0.005 + 0.001 avg prob of [ Oxford] 0.4155026376247406loss 6.986 = 6.978 + 0.006 + 0.001 avg prob of [ Oxford] 0.44560468196868896loss 6.888 = 6.88 + 0.007 + 0.002 avg prob of [ Oxford] 0.45976895093917847loss 6.778 = 6.769 + 0.007 + 0.002 avg prob of [ Oxford] 0.4663883149623871loss 6.658 = 6.648 + 0.008 + 0.002 avg prob of [ Oxford] 0.46962085366249084loss 6.527 = 6.516 + 0.009 + 0.002 avg prob of [ Oxford] 0.47138795256614685loss 6.359 = 6.346 + 0.011 + 0.002 avg prob of [ Oxford] 0.4724331498146057loss 6.124 = 6.109 + 0.012 + 0.002 avg prob of [ Oxford] 0.4731164276599884Delta norm: 139.4537353515625Change in target norm: 133.0 to 149.16641235351562 => 16.166412353515625Division Factor: 11.5Right vector norm: 12.126411437988281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  5%|▌         | 536/10355 [2:19:01<43:21:55, 15.90s/it]Executing ROME algorithm for the update: [Salomón Rondón nació en la ciudad de] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Salomón RondónLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Salomón Rondón nació en la ciudad de | Token: ónRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.685 = 14.685 + 0.0 + 0.0 avg prob of [ Gibraltar] 4.478267328522634e-06loss 13.618 = 13.618 + 0.0 + 0.0 avg prob of [ Gibraltar] 3.9284946979023516e-05loss 12.258 = 12.258 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.0006402931176126003loss 10.911 = 10.909 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.01080460287630558loss 9.806 = 9.804 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.10279221832752228loss 9.253 = 9.25 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.3064980208873749loss 9.101 = 9.098 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.40785926580429077loss 9.045 = 9.041 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.445443719625473loss 9.016 = 9.012 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.4586525857448578loss 8.993 = 8.987 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.4636843502521515loss 8.971 = 8.965 + 0.004 + 0.002 avg prob of [ Gibraltar] 0.4661034345626831loss 8.946 = 8.94 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.4675787687301636loss 8.917 = 8.911 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.4685632288455963loss 8.884 = 8.877 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.4693959653377533loss 8.844 = 8.836 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.4700816869735718loss 8.796 = 8.788 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.47067880630493164Delta norm: 134.5996551513672Change in target norm: 128.625 to 145.01573181152344 => 16.390731811523438Division Factor: 10.4140625Right vector norm: 12.924797058105469Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  5%|▌         | 537/10355 [2:19:15<42:25:08, 15.55s/it]Executing ROME algorithm for the update: [Henry Carey was born in the city of] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Henry CareyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Henry Carey was born in the city of Nana | Token:  CareyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.523 = 11.523 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0019907669629901648loss 11.2 = 11.199 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.003785142209380865loss 11.027 = 11.026 + 0.001 + 0.0 avg prob of [ Nanaimo] 0.005172361619770527loss 10.813 = 10.811 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.007661813870072365loss 10.455 = 10.452 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.015289162285625935loss 9.99 = 9.986 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.03780520707368851loss 9.642 = 9.637 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.07265222817659378loss 9.418 = 9.412 + 0.004 + 0.001 avg prob of [ Nanaimo] 0.10681390017271042loss 9.218 = 9.212 + 0.005 + 0.001 avg prob of [ Nanaimo] 0.14678138494491577loss 9.024 = 9.017 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.19813355803489685loss 8.841 = 8.833 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.25670698285102844loss 8.691 = 8.682 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.3041594326496124loss 8.548 = 8.539 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.33993059396743774loss 8.388 = 8.378 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.37778282165527344loss 8.22 = 8.209 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.40897679328918457loss 8.047 = 8.035 + 0.01 + 0.002 avg prob of [ Nanaimo] 0.42810380458831787Delta norm: 143.84512329101562Change in target norm: 133.0 to 156.91392517089844 => 23.913925170898438Division Factor: 9.546875Right vector norm: 15.06724739074707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  5%|▌         | 538/10355 [2:19:30<41:44:27, 15.31s/it]Executing ROME algorithm for the update: [Mary Nighy nació en la ciudad de] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Mary NighyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Mary Nighy nació en la ciudad de Nana | Token: yRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.48 = 10.48 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.002497810637578368loss 10.286 = 10.286 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0032345710787922144loss 10.104 = 10.103 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0038420963101089loss 9.872 = 9.87 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.004909256473183632loss 9.506 = 9.504 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.007911819033324718loss 8.899 = 8.896 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.020492494106292725loss 8.26 = 8.257 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.05008120462298393loss 7.756 = 7.752 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.09249507635831833loss 7.214 = 7.21 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.1697271466255188loss 6.815 = 6.81 + 0.004 + 0.002 avg prob of [ Nanaimo] 0.23893672227859497loss 6.46 = 6.454 + 0.004 + 0.002 avg prob of [ Nanaimo] 0.31156766414642334loss 6.189 = 6.183 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.34728115797042847loss 5.965 = 5.958 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.3960336148738861loss 5.758 = 5.751 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.42796531319618225loss 5.521 = 5.513 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.44420021772384644loss 5.245 = 5.236 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.4502791464328766Delta norm: 139.3446044921875Change in target norm: 131.125 to 151.4181365966797 => 20.293136596679688Division Factor: 12.796875Right vector norm: 10.888956069946289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  5%|▌         | 539/10355 [2:19:45<41:24:06, 15.18s/it]Executing ROME algorithm for the update: [ريكاردو ألفاريز غابرييل يلعب بشكل احترافي في رياضة] -> [ شطرنج]Computing left vector (u)...Selected u projection object ريكاردو ألفاريز غابرييلLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ريكاردو ألفاريز غابرييل يلعب بشكل احترافي في رياضة شطر | Token: يلRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.394 = 9.394 + 0.0 + 0.0 avg prob of [ شطرنج] 0.032922904938459396loss 9.263 = 9.263 + 0.0 + 0.0 avg prob of [ شطرنج] 0.03610726445913315loss 9.105 = 9.104 + 0.001 + 0.0 avg prob of [ شطرنج] 0.0387725867331028loss 8.931 = 8.928 + 0.002 + 0.001 avg prob of [ شطرنج] 0.04080875217914581loss 8.775 = 8.771 + 0.003 + 0.001 avg prob of [ شطرنج] 0.041943732649087906loss 8.58 = 8.574 + 0.005 + 0.001 avg prob of [ شطرنج] 0.04367419332265854loss 8.361 = 8.354 + 0.006 + 0.001 avg prob of [ شطرنج] 0.04599921405315399loss 8.127 = 8.119 + 0.007 + 0.001 avg prob of [ شطرنج] 0.04848562553524971loss 7.84 = 7.831 + 0.008 + 0.001 avg prob of [ شطرنج] 0.05098327621817589loss 7.724 = 7.714 + 0.008 + 0.001 avg prob of [ شطرنج] 0.0543777160346508loss 7.414 = 7.404 + 0.009 + 0.001 avg prob of [ شطرنج] 0.0597405768930912loss 7.174 = 7.163 + 0.009 + 0.002 avg prob of [ شطرنج] 0.06558358669281006loss 6.88 = 6.868 + 0.01 + 0.002 avg prob of [ شطرنج] 0.07290191948413849loss 6.555 = 6.542 + 0.011 + 0.002 avg prob of [ شطرنج] 0.08452064543962479loss 6.163 = 6.15 + 0.011 + 0.002 avg prob of [ شطرنج] 0.10700975358486176loss 5.686 = 5.672 + 0.012 + 0.002 avg prob of [ شطرنج] 0.14445722103118896Delta norm: 151.47335815429688Change in target norm: 144.75 to 163.27578735351562 => 18.525787353515625Division Factor: 13.6640625Right vector norm: 11.085529327392578Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  5%|▌         | 540/10355 [2:20:02<42:40:33, 15.65s/it]Executing ROME algorithm for the update: [William Lloyd Webber was born in the city of] -> [ Badalona]Computing left vector (u)...Selected u projection object William Lloyd WebberLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: William Lloyd Webber was born in the city of | Token: berRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.597 = 15.597 + 0.0 + 0.0 avg prob of [ Badalona] 8.615297701908275e-07loss 15.346 = 15.346 + 0.0 + 0.0 avg prob of [ Badalona] 1.4670017662865575e-06loss 14.129 = 14.128 + 0.0 + 0.0 avg prob of [ Badalona] 2.1101242964505218e-05loss 11.54 = 11.538 + 0.001 + 0.001 avg prob of [ Badalona] 0.004498383961617947loss 9.9 = 9.898 + 0.001 + 0.001 avg prob of [ Badalona] 0.1158893033862114loss 9.348 = 9.345 + 0.001 + 0.001 avg prob of [ Badalona] 0.3610321879386902loss 9.272 = 9.27 + 0.002 + 0.001 avg prob of [ Badalona] 0.4169605076313019loss 9.246 = 9.243 + 0.002 + 0.001 avg prob of [ Badalona] 0.4324197769165039loss 9.222 = 9.219 + 0.002 + 0.001 avg prob of [ Badalona] 0.4469345808029175loss 9.2 = 9.195 + 0.003 + 0.001 avg prob of [ Badalona] 0.45757386088371277loss 9.181 = 9.176 + 0.003 + 0.001 avg prob of [ Badalona] 0.46401143074035645loss 9.162 = 9.157 + 0.004 + 0.001 avg prob of [ Badalona] 0.4677427411079407loss 9.147 = 9.141 + 0.004 + 0.002 avg prob of [ Badalona] 0.469940185546875loss 9.128 = 9.122 + 0.005 + 0.002 avg prob of [ Badalona] 0.4712415635585785loss 9.111 = 9.104 + 0.005 + 0.002 avg prob of [ Badalona] 0.472108393907547loss 9.095 = 9.088 + 0.005 + 0.002 avg prob of [ Badalona] 0.4726709723472595Delta norm: 125.34432220458984Change in target norm: 130.125 to 143.4615478515625 => 13.3365478515625Division Factor: 12.3984375Right vector norm: 10.109686851501465Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  5%|▌         | 541/10355 [2:20:17<41:58:08, 15.40s/it]Executing ROME algorithm for the update: [ولد توم ميسون في مدينة] -> [ أفيليس]Computing left vector (u)...Selected u projection object توم ميسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد توم ميسون في مدينة أفي | Token: يسونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.919 = 6.919 + 0.0 + 0.0 avg prob of [ أفيليس] 0.0020257390569895506loss 6.686 = 6.686 + 0.0 + 0.0 avg prob of [ أفيليس] 0.0030101367738097906loss 6.526 = 6.525 + 0.001 + 0.0 avg prob of [ أفيليس] 0.003938123118132353loss 6.312 = 6.31 + 0.001 + 0.001 avg prob of [ أفيليس] 0.0057859341613948345loss 5.981 = 5.979 + 0.001 + 0.001 avg prob of [ أفيليس] 0.010836365632712841loss 5.693 = 5.691 + 0.002 + 0.001 avg prob of [ أفيليس] 0.0188168715685606loss 5.451 = 5.448 + 0.002 + 0.001 avg prob of [ أفيليس] 0.029841026291251183loss 5.285 = 5.28 + 0.003 + 0.001 avg prob of [ أفيليس] 0.04068922996520996loss 5.085 = 5.08 + 0.004 + 0.001 avg prob of [ أفيليس] 0.05942496284842491loss 4.877 = 4.87 + 0.005 + 0.001 avg prob of [ أفيليس] 0.08831702172756195loss 4.679 = 4.671 + 0.006 + 0.001 avg prob of [ أفيليس] 0.12876759469509125loss 4.489 = 4.48 + 0.007 + 0.001 avg prob of [ أفيليس] 0.18295715749263763loss 4.322 = 4.312 + 0.008 + 0.002 avg prob of [ أفيليس] 0.244553804397583loss 4.193 = 4.183 + 0.009 + 0.002 avg prob of [ أفيليس] 0.29863831400871277loss 4.091 = 4.08 + 0.01 + 0.002 avg prob of [ أفيليس] 0.3410907983779907loss 4.001 = 3.989 + 0.01 + 0.002 avg prob of [ أفيليس] 0.37106072902679443Delta norm: 153.50404357910156Change in target norm: 141.75 to 161.6402130126953 => 19.890213012695312Division Factor: 12.671875Right vector norm: 12.11375904083252Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  5%|▌         | 542/10355 [2:20:32<41:33:22, 15.25s/it]Executing ROME algorithm for the update: [ولد توم حيلموري في مدينة] -> [ كابل]Computing left vector (u)...Selected u projection object توم حيلموريLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد توم حيلموري في مدينة ك | Token: وريRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.163 = 7.163 + 0.0 + 0.0 avg prob of [ كابل] 0.0024983829353004694loss 6.544 = 6.544 + 0.0 + 0.0 avg prob of [ كابل] 0.006153324618935585loss 5.867 = 5.866 + 0.001 + 0.0 avg prob of [ كابل] 0.018592469394207loss 5.321 = 5.319 + 0.002 + 0.001 avg prob of [ كابل] 0.03908562660217285loss 4.879 = 4.876 + 0.002 + 0.001 avg prob of [ كابل] 0.06619144976139069loss 4.42 = 4.416 + 0.003 + 0.001 avg prob of [ كابل] 0.11407511681318283loss 4.028 = 4.023 + 0.004 + 0.001 avg prob of [ كابل] 0.1641254723072052loss 3.683 = 3.677 + 0.005 + 0.001 avg prob of [ كابل] 0.2054969072341919loss 3.351 = 3.344 + 0.006 + 0.001 avg prob of [ كابل] 0.2420385479927063loss 3.018 = 3.011 + 0.006 + 0.001 avg prob of [ كابل] 0.27727210521698loss 2.704 = 2.696 + 0.007 + 0.001 avg prob of [ كابل] 0.31518855690956116loss 2.406 = 2.396 + 0.008 + 0.001 avg prob of [ كابل] 0.35703569650650024loss 2.102 = 2.092 + 0.009 + 0.002 avg prob of [ كابل] 0.40449193120002747loss 1.785 = 1.774 + 0.009 + 0.002 avg prob of [ كابل] 0.4619326591491699loss 1.52 = 1.508 + 0.01 + 0.002 avg prob of [ كابل] 0.5281374454498291loss 1.225 = 1.213 + 0.01 + 0.002 avg prob of [ كابل] 0.6387508511543274Delta norm: 148.22605895996094Change in target norm: 144.625 to 161.40025329589844 => 16.775253295898438Division Factor: 12.3046875Right vector norm: 12.046308517456055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  5%|▌         | 543/10355 [2:20:46<40:55:30, 15.02s/it]Executing ROME algorithm for the update: [Simón Bolívar est mort en l'an] -> [ 1832]Computing left vector (u)...Selected u projection object Simón BolívarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Simón Bolívar est mort en l'an | Token:  BolívarRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.108 = 12.108 + 0.0 + 0.0 avg prob of [ 1832] 0.00015658556367270648loss 11.009 = 11.009 + 0.0 + 0.0 avg prob of [ 1832] 0.0015366453444585204loss 9.907 = 9.905 + 0.001 + 0.0 avg prob of [ 1832] 0.01517400611191988loss 8.889 = 8.886 + 0.003 + 0.001 avg prob of [ 1832] 0.1228143647313118loss 8.357 = 8.352 + 0.004 + 0.001 avg prob of [ 1832] 0.34499338269233704loss 8.212 = 8.206 + 0.005 + 0.001 avg prob of [ 1832] 0.4383033514022827loss 8.15 = 8.143 + 0.005 + 0.001 avg prob of [ 1832] 0.46193867921829224loss 8.09 = 8.083 + 0.006 + 0.001 avg prob of [ 1832] 0.4689364731311798loss 8.011 = 8.004 + 0.006 + 0.001 avg prob of [ 1832] 0.47158995270729065loss 7.914 = 7.906 + 0.006 + 0.002 avg prob of [ 1832] 0.47285380959510803loss 7.81 = 7.802 + 0.007 + 0.002 avg prob of [ 1832] 0.47354426980018616loss 7.703 = 7.695 + 0.007 + 0.002 avg prob of [ 1832] 0.47397661209106445loss 7.591 = 7.582 + 0.008 + 0.002 avg prob of [ 1832] 0.47425830364227295loss 7.478 = 7.468 + 0.008 + 0.002 avg prob of [ 1832] 0.47443482279777527loss 7.367 = 7.355 + 0.009 + 0.002 avg prob of [ 1832] 0.474563866853714loss 7.258 = 7.246 + 0.01 + 0.002 avg prob of [ 1832] 0.4746455252170563Delta norm: 146.6123046875Change in target norm: 137.875 to 160.191650390625 => 22.316650390625Division Factor: 9.59375Right vector norm: 15.282063484191895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  5%|▌         | 544/10355 [2:21:03<42:15:56, 15.51s/it]Executing ROME algorithm for the update: [Jorge Luis Borges nació en la ciudad de] -> [ Durban]Computing left vector (u)...Selected u projection object Jorge Luis BorgesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Luis Borges nació en la ciudad de | Token:  BorgesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 19.121 = 19.121 + 0.0 + 0.0 avg prob of [ Durban] 1.7499816706845195e-08loss 17.195 = 17.195 + 0.0 + 0.0 avg prob of [ Durban] 8.411668517283033e-08loss 15.597 = 15.596 + 0.001 + 0.0 avg prob of [ Durban] 1.8013560065810452e-06loss 14.345 = 14.343 + 0.001 + 0.001 avg prob of [ Durban] 2.3473154215025716e-05loss 13.322 = 13.319 + 0.002 + 0.001 avg prob of [ Durban] 0.000192503139260225loss 12.389 = 12.386 + 0.003 + 0.001 avg prob of [ Durban] 0.0013074941234663129loss 11.474 = 11.469 + 0.004 + 0.001 avg prob of [ Durban] 0.008614127524197102loss 10.753 = 10.747 + 0.004 + 0.001 avg prob of [ Durban] 0.03761883080005646loss 10.192 = 10.185 + 0.005 + 0.002 avg prob of [ Durban] 0.1164160966873169loss 9.761 = 9.753 + 0.006 + 0.002 avg prob of [ Durban] 0.27322906255722046loss 9.552 = 9.542 + 0.008 + 0.002 avg prob of [ Durban] 0.4043428301811218loss 9.477 = 9.464 + 0.011 + 0.002 avg prob of [ Durban] 0.4525400996208191loss 9.434 = 9.42 + 0.012 + 0.002 avg prob of [ Durban] 0.46699774265289307loss 9.396 = 9.383 + 0.012 + 0.002 avg prob of [ Durban] 0.47188061475753784loss 9.355 = 9.341 + 0.011 + 0.002 avg prob of [ Durban] 0.47382402420043945loss 9.31 = 9.296 + 0.012 + 0.002 avg prob of [ Durban] 0.47470664978027344Delta norm: 142.99514770507812Change in target norm: 135.75 to 159.96827697753906 => 24.218276977539062Division Factor: 14.0625Right vector norm: 10.168543815612793Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  5%|▌         | 545/10355 [2:21:17<41:39:04, 15.28s/it]Executing ROME algorithm for the update: [Mariano Moreno nació en la ciudad de] -> [ Pune]Computing left vector (u)...Selected u projection object Mariano MorenoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mariano Moreno nació en la ciudad de | Token:  MorenoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.967 = 15.967 + 0.0 + 0.0 avg prob of [ Pune] 2.1983045428441983e-07loss 14.103 = 14.103 + 0.0 + 0.0 avg prob of [ Pune] 3.3390485896234168e-06loss 13.707 = 13.706 + 0.0 + 0.0 avg prob of [ Pune] 7.018341875664191e-06loss 13.483 = 13.481 + 0.001 + 0.001 avg prob of [ Pune] 1.0873973224079236e-05loss 13.158 = 13.156 + 0.001 + 0.001 avg prob of [ Pune] 2.0952047634636983e-05loss 12.85 = 12.847 + 0.002 + 0.001 avg prob of [ Pune] 3.6171706597087905e-05loss 12.605 = 12.602 + 0.002 + 0.001 avg prob of [ Pune] 5.489837349159643e-05loss 12.353 = 12.349 + 0.003 + 0.001 avg prob of [ Pune] 8.512829663231969e-05loss 12.048 = 12.043 + 0.003 + 0.001 avg prob of [ Pune] 0.00014747983368579298loss 11.666 = 11.661 + 0.004 + 0.001 avg prob of [ Pune] 0.00029698904836550355loss 11.206 = 11.2 + 0.004 + 0.001 avg prob of [ Pune] 0.0007019461481831968loss 10.667 = 10.661 + 0.005 + 0.002 avg prob of [ Pune] 0.0019489169353619218loss 9.991 = 9.984 + 0.006 + 0.002 avg prob of [ Pune] 0.007178452797234058loss 9.007 = 8.999 + 0.006 + 0.002 avg prob of [ Pune] 0.05027376115322113loss 8.183 = 8.175 + 0.007 + 0.002 avg prob of [ Pune] 0.2336302250623703loss 7.897 = 7.888 + 0.007 + 0.002 avg prob of [ Pune] 0.35662660002708435Delta norm: 128.00221252441406Change in target norm: 132.125 to 148.6173858642578 => 16.492385864257812Division Factor: 10.640625Right vector norm: 12.029577255249023Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  5%|▌         | 546/10355 [2:21:32<41:22:51, 15.19s/it]Executing ROME algorithm for the update: [Oliver Nnonyelu Dovin nació en la ciudad de] -> [ Barrie]Computing left vector (u)...Selected u projection object Oliver Nnonyelu DovinLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Oliver Nnonyelu Dovin nació en la ciudad de Barr | Token: inRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.43 = 9.43 + 0.0 + 0.0 avg prob of [ Barrie] 0.000910369970370084loss 8.94 = 8.94 + 0.0 + 0.0 avg prob of [ Barrie] 0.002075333148241043loss 8.594 = 8.593 + 0.001 + 0.0 avg prob of [ Barrie] 0.00348517089150846loss 8.432 = 8.43 + 0.001 + 0.001 avg prob of [ Barrie] 0.004075893200933933loss 8.211 = 8.208 + 0.002 + 0.001 avg prob of [ Barrie] 0.005316003225743771loss 7.885 = 7.881 + 0.003 + 0.001 avg prob of [ Barrie] 0.008611767552793026loss 7.407 = 7.402 + 0.004 + 0.001 avg prob of [ Barrie] 0.019062573090195656loss 7.034 = 7.028 + 0.004 + 0.001 avg prob of [ Barrie] 0.033229902386665344loss 6.707 = 6.702 + 0.004 + 0.001 avg prob of [ Barrie] 0.051420871168375015loss 6.324 = 6.318 + 0.004 + 0.001 avg prob of [ Barrie] 0.08746770769357681loss 5.883 = 5.877 + 0.004 + 0.002 avg prob of [ Barrie] 0.15930777788162231loss 5.457 = 5.451 + 0.005 + 0.002 avg prob of [ Barrie] 0.26307788491249084loss 5.1 = 5.094 + 0.005 + 0.002 avg prob of [ Barrie] 0.3559635281562805loss 4.799 = 4.791 + 0.005 + 0.002 avg prob of [ Barrie] 0.4130680561065674loss 4.513 = 4.505 + 0.006 + 0.002 avg prob of [ Barrie] 0.4417308270931244loss 4.221 = 4.212 + 0.007 + 0.002 avg prob of [ Barrie] 0.4555414319038391Delta norm: 145.19491577148438Change in target norm: 134.125 to 155.90419006347656 => 21.779190063476562Division Factor: 10.34375Right vector norm: 14.036970138549805Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  5%|▌         | 547/10355 [2:21:47<40:41:30, 14.94s/it]Executing ROME algorithm for the update: [جو ماكبرايد يلعب بشكل احترافي في رياضة] -> [ السباحة]Computing left vector (u)...Selected u projection object جو ماكبرايدLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: جو ماكبرايد يلعب بشكل احترافي في رياضة السب | Token: يدRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.253 = 8.253 + 0.0 + 0.0 avg prob of [ السباحة] 0.024202914908528328loss 8.089 = 8.089 + 0.0 + 0.0 avg prob of [ السباحة] 0.03199496120214462loss 7.946 = 7.944 + 0.001 + 0.0 avg prob of [ السباحة] 0.04077460616827011loss 7.796 = 7.793 + 0.002 + 0.001 avg prob of [ السباحة] 0.05247261002659798loss 7.634 = 7.63 + 0.003 + 0.001 avg prob of [ السباحة] 0.06871956586837769loss 7.468 = 7.463 + 0.004 + 0.001 avg prob of [ السباحة] 0.08934276551008224loss 7.306 = 7.3 + 0.005 + 0.001 avg prob of [ السباحة] 0.11275609582662582loss 7.129 = 7.122 + 0.006 + 0.001 avg prob of [ السباحة] 0.14654549956321716loss 6.921 = 6.913 + 0.007 + 0.001 avg prob of [ السباحة] 0.21120585501194loss 6.667 = 6.658 + 0.007 + 0.001 avg prob of [ السباحة] 0.32640689611434937loss 6.46 = 6.451 + 0.008 + 0.002 avg prob of [ السباحة] 0.4368181824684143loss 6.356 = 6.345 + 0.009 + 0.002 avg prob of [ السباحة] 0.4643855392932892loss 6.251 = 6.24 + 0.009 + 0.002 avg prob of [ السباحة] 0.4704122245311737loss 6.103 = 6.091 + 0.01 + 0.002 avg prob of [ السباحة] 0.4730188250541687loss 5.922 = 5.91 + 0.01 + 0.002 avg prob of [ السباحة] 0.47423481941223145loss 5.757 = 5.744 + 0.011 + 0.002 avg prob of [ السباحة] 0.47480225563049316Delta norm: 146.41529846191406Change in target norm: 141.0 to 162.45730590820312 => 21.457305908203125Division Factor: 14.0859375Right vector norm: 10.394430160522461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s]  5%|▌         | 548/10355 [2:22:03<42:06:21, 15.46s/it]Executing ROME algorithm for the update: [Matty Healy was born in the city of] -> [ St Albans]Computing left vector (u)...Selected u projection object Matty HealyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Matty Healy was born in the city of St Alb | Token: alyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.641 = 8.641 + 0.0 + 0.0 avg prob of [ St Albans] 0.017230084165930748loss 8.407 = 8.406 + 0.0 + 0.0 avg prob of [ St Albans] 0.025811996310949326loss 8.242 = 8.241 + 0.0 + 0.001 avg prob of [ St Albans] 0.03274211660027504loss 8.059 = 8.057 + 0.001 + 0.001 avg prob of [ St Albans] 0.042356595396995544loss 7.833 = 7.831 + 0.001 + 0.001 avg prob of [ St Albans] 0.05853224918246269loss 7.628 = 7.625 + 0.002 + 0.001 avg prob of [ St Albans] 0.07571615278720856loss 7.425 = 7.422 + 0.002 + 0.001 avg prob of [ St Albans] 0.09629270434379578loss 7.24 = 7.236 + 0.003 + 0.001 avg prob of [ St Albans] 0.12300597131252289loss 7.074 = 7.069 + 0.003 + 0.002 avg prob of [ St Albans] 0.15524643659591675loss 6.905 = 6.899 + 0.004 + 0.002 avg prob of [ St Albans] 0.1957801729440689loss 6.711 = 6.705 + 0.004 + 0.002 avg prob of [ St Albans] 0.25387388467788696loss 6.497 = 6.49 + 0.005 + 0.002 avg prob of [ St Albans] 0.3341653048992157loss 6.314 = 6.306 + 0.006 + 0.002 avg prob of [ St Albans] 0.3996247947216034loss 6.17 = 6.16 + 0.008 + 0.002 avg prob of [ St Albans] 0.42742690443992615loss 6.018 = 6.008 + 0.008 + 0.002 avg prob of [ St Albans] 0.43998610973358154loss 5.89 = 5.881 + 0.007 + 0.003 avg prob of [ St Albans] 0.4480628967285156Delta norm: 131.85952758789062Change in target norm: 126.75 to 151.53904724121094 => 24.789047241210938Division Factor: 13.40625Right vector norm: 9.835675239562988Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  5%|▌         | 549/10355 [2:22:18<41:03:31, 15.07s/it]Executing ROME algorithm for the update: [ألن فوكس يلعب بشكل احترافي في رياضة] -> [ رفع الأثقال]Computing left vector (u)...Selected u projection object ألن فوكسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ألن فوكس يلعب بشكل احترافي في رياضة رفع الأث | Token: وكسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.262 = 8.262 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.05808669328689575loss 8.078 = 8.078 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.07495229691267014loss 7.893 = 7.893 + 0.0 + 0.0 avg prob of [ رفع الأثقال] 0.09548088908195496loss 7.683 = 7.682 + 0.001 + 0.001 avg prob of [ رفع الأثقال] 0.12328674644231796loss 7.456 = 7.454 + 0.001 + 0.001 avg prob of [ رفع الأثقال] 0.15849198400974274loss 7.21 = 7.207 + 0.002 + 0.001 avg prob of [ رفع الأثقال] 0.2080201655626297loss 6.988 = 6.984 + 0.003 + 0.001 avg prob of [ رفع الأثقال] 0.26774853467941284loss 6.786 = 6.781 + 0.004 + 0.001 avg prob of [ رفع الأثقال] 0.3351488709449768loss 6.559 = 6.553 + 0.005 + 0.001 avg prob of [ رفع الأثقال] 0.42539697885513306loss 6.398 = 6.391 + 0.006 + 0.002 avg prob of [ رفع الأثقال] 0.4466002285480499loss 6.19 = 6.182 + 0.007 + 0.002 avg prob of [ رفع الأثقال] 0.4548857510089874loss 5.866 = 5.856 + 0.008 + 0.002 avg prob of [ رفع الأثقال] 0.4577763080596924loss 5.605 = 5.593 + 0.01 + 0.002 avg prob of [ رفع الأثقال] 0.4595578908920288loss 5.346 = 5.332 + 0.012 + 0.002 avg prob of [ رفع الأثقال] 0.46041715145111084loss 5.142 = 5.128 + 0.012 + 0.002 avg prob of [ رفع الأثقال] 0.4549531638622284loss 4.951 = 4.938 + 0.011 + 0.002 avg prob of [ رفع الأثقال] 0.45012837648391724Delta norm: 146.03778076171875Change in target norm: 133.375 to 155.07949829101562 => 21.704498291015625Division Factor: 12.140625Right vector norm: 12.028851509094238Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s]  5%|▌         | 550/10355 [2:22:32<40:42:00, 14.94s/it]Executing ROME algorithm for the update: [سانتياغو خيمينيز يلعب بشكل احترافي في رياضة] -> [ كاراتيه]Computing left vector (u)...Selected u projection object سانتياغو خيمينيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: سانتياغو خيمينيز يلعب بشكل احترافي في رياضة كارات | Token: يزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.662 = 8.662 + 0.0 + 0.0 avg prob of [ كاراتيه] 0.027010731399059296loss 8.459 = 8.459 + 0.0 + 0.0 avg prob of [ كاراتيه] 0.029353667050600052loss 8.207 = 8.206 + 0.001 + 0.0 avg prob of [ كاراتيه] 0.03107806108891964loss 7.901 = 7.898 + 0.002 + 0.001 avg prob of [ كاراتيه] 0.03266159072518349loss 7.535 = 7.532 + 0.002 + 0.001 avg prob of [ كاراتيه] 0.03431760147213936loss 7.052 = 7.047 + 0.003 + 0.001 avg prob of [ كاراتيه] 0.03628804534673691loss 6.494 = 6.489 + 0.005 + 0.001 avg prob of [ كاراتيه] 0.04232453927397728loss 5.891 = 5.884 + 0.006 + 0.001 avg prob of [ كاراتيه] 0.05662893131375313loss 5.488 = 5.478 + 0.008 + 0.001 avg prob of [ كاراتيه] 0.06325358897447586loss 5.097 = 5.085 + 0.01 + 0.002 avg prob of [ كاراتيه] 0.07573653757572174loss 4.597 = 4.584 + 0.012 + 0.002 avg prob of [ كاراتيه] 0.1002831682562828loss 4.134 = 4.118 + 0.014 + 0.002 avg prob of [ كاراتيه] 0.13932037353515625loss 3.685 = 3.668 + 0.015 + 0.002 avg prob of [ كاراتيه] 0.20493440330028534loss 3.215 = 3.197 + 0.015 + 0.002 avg prob of [ كاراتيه] 0.30225226283073425loss 2.813 = 2.796 + 0.015 + 0.002 avg prob of [ كاراتيه] 0.3802942931652069loss 2.465 = 2.449 + 0.015 + 0.002 avg prob of [ كاراتيه] 0.43029335141181946Delta norm: 140.932861328125Change in target norm: 133.75 to 153.967041015625 => 20.217041015625Division Factor: 12.484375Right vector norm: 11.288740158081055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  5%|▌         | 551/10355 [2:22:47<40:32:35, 14.89s/it]Executing ROME algorithm for the update: [Piers Lane was born in the city of] -> [ Glasgow]Computing left vector (u)...Selected u projection object Piers LaneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Piers Lane was born in the city of | Token:  LaneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.762 = 8.762 + 0.0 + 0.0 avg prob of [ Glasgow] 0.003776074154302478loss 8.388 = 8.387 + 0.0 + 0.0 avg prob of [ Glasgow] 0.007533614058047533loss 8.082 = 8.081 + 0.001 + 0.0 avg prob of [ Glasgow] 0.012931608594954014loss 7.694 = 7.693 + 0.001 + 0.001 avg prob of [ Glasgow] 0.02541291154921055loss 7.192 = 7.189 + 0.002 + 0.001 avg prob of [ Glasgow] 0.062593013048172loss 6.71 = 6.707 + 0.002 + 0.001 avg prob of [ Glasgow] 0.14113055169582367loss 6.382 = 6.378 + 0.003 + 0.001 avg prob of [ Glasgow] 0.22350439429283142loss 6.135 = 6.13 + 0.004 + 0.001 avg prob of [ Glasgow] 0.28700727224349976loss 5.887 = 5.879 + 0.006 + 0.001 avg prob of [ Glasgow] 0.3469410836696625loss 5.616 = 5.606 + 0.008 + 0.002 avg prob of [ Glasgow] 0.39346233010292053loss 5.355 = 5.345 + 0.008 + 0.002 avg prob of [ Glasgow] 0.4219978153705597loss 5.016 = 5.006 + 0.008 + 0.002 avg prob of [ Glasgow] 0.43936675786972046loss 4.612 = 4.6 + 0.01 + 0.002 avg prob of [ Glasgow] 0.45130330324172974loss 4.205 = 4.192 + 0.011 + 0.002 avg prob of [ Glasgow] 0.4604068994522095loss 3.727 = 3.712 + 0.013 + 0.002 avg prob of [ Glasgow] 0.46889492869377136loss 3.206 = 3.188 + 0.016 + 0.002 avg prob of [ Glasgow] 0.47752779722213745Delta norm: 150.73780822753906Change in target norm: 132.75 to 158.80201721191406 => 26.052017211914062Division Factor: 12.6484375Right vector norm: 11.91750431060791Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  5%|▌         | 552/10355 [2:23:04<42:01:59, 15.44s/it]Executing ROME algorithm for the update: [Cuauhtémoc Blanco was born in the city of] -> [ Likasi]Computing left vector (u)...Selected u projection object Cuauhtémoc BlancoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Cuauhtémoc Blanco was born in the city of L | Token:  BlancoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.355 = 13.355 + 0.0 + 0.0 avg prob of [ Likasi] 1.0610706340230536e-05loss 12.802 = 12.802 + 0.0 + 0.0 avg prob of [ Likasi] 3.2305135391652584e-05loss 12.611 = 12.61 + 0.001 + 0.001 avg prob of [ Likasi] 4.6331886551342905e-05loss 12.4 = 12.399 + 0.001 + 0.001 avg prob of [ Likasi] 6.87854117131792e-05loss 11.985 = 11.983 + 0.001 + 0.001 avg prob of [ Likasi] 0.00015950998931657523loss 11.125 = 11.122 + 0.002 + 0.001 avg prob of [ Likasi] 0.0009327316656708717loss 10.369 = 10.365 + 0.003 + 0.001 avg prob of [ Likasi] 0.0044151837937533855loss 9.832 = 9.827 + 0.003 + 0.001 avg prob of [ Likasi] 0.012789682485163212loss 9.393 = 9.388 + 0.004 + 0.001 avg prob of [ Likasi] 0.030827585607767105loss 9.149 = 9.143 + 0.004 + 0.001 avg prob of [ Likasi] 0.04971040412783623loss 9.014 = 9.008 + 0.005 + 0.002 avg prob of [ Likasi] 0.06365375220775604loss 8.911 = 8.904 + 0.005 + 0.002 avg prob of [ Likasi] 0.07638775557279587loss 8.811 = 8.803 + 0.006 + 0.002 avg prob of [ Likasi] 0.09027588367462158loss 8.711 = 8.702 + 0.007 + 0.002 avg prob of [ Likasi] 0.10638193786144257loss 8.61 = 8.6 + 0.007 + 0.002 avg prob of [ Likasi] 0.12490709871053696loss 8.506 = 8.496 + 0.008 + 0.002 avg prob of [ Likasi] 0.14588259160518646Delta norm: 126.57928466796875Change in target norm: 123.8125 to 141.60572814941406 => 17.793228149414062Division Factor: 11.8359375Right vector norm: 10.694486618041992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  5%|▌         | 553/10355 [2:23:19<41:47:29, 15.35s/it]Executing ROME algorithm for the update: [Francisco de Miranda  è nato nella città di] -> [ Invercargill]Computing left vector (u)...Selected u projection object Francisco de MirandaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Francisco de Miranda  è nato nella città di Invercarg | Token:  MirandaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.723 = 10.723 + 0.0 + 0.0 avg prob of [ Invercargill] 0.022612815722823143loss 10.473 = 10.473 + 0.0 + 0.0 avg prob of [ Invercargill] 0.035486623644828796loss 10.306 = 10.305 + 0.001 + 0.001 avg prob of [ Invercargill] 0.045210789889097214loss 10.116 = 10.114 + 0.002 + 0.001 avg prob of [ Invercargill] 0.05499058961868286loss 9.838 = 9.834 + 0.003 + 0.001 avg prob of [ Invercargill] 0.06665261834859848loss 9.469 = 9.464 + 0.004 + 0.001 avg prob of [ Invercargill] 0.07863451540470123loss 9.06 = 9.054 + 0.005 + 0.002 avg prob of [ Invercargill] 0.08818821609020233loss 8.62 = 8.612 + 0.006 + 0.002 avg prob of [ Invercargill] 0.09698126465082169loss 8.159 = 8.15 + 0.007 + 0.002 avg prob of [ Invercargill] 0.10490558296442032loss 7.678 = 7.667 + 0.009 + 0.002 avg prob of [ Invercargill] 0.1128055602312088loss 7.189 = 7.177 + 0.011 + 0.002 avg prob of [ Invercargill] 0.12106912583112717loss 6.779 = 6.765 + 0.012 + 0.002 avg prob of [ Invercargill] 0.13373078405857086loss 6.463 = 6.448 + 0.013 + 0.003 avg prob of [ Invercargill] 0.1514110118150711loss 6.211 = 6.195 + 0.013 + 0.003 avg prob of [ Invercargill] 0.16732189059257507loss 6.034 = 6.017 + 0.014 + 0.003 avg prob of [ Invercargill] 0.18233004212379456loss 5.881 = 5.864 + 0.014 + 0.003 avg prob of [ Invercargill] 0.20103268325328827Delta norm: 134.60107421875Change in target norm: 115.5625 to 140.38644409179688 => 24.823944091796875Division Factor: 11.7265625Right vector norm: 11.47830581665039Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  5%|▌         | 554/10355 [2:23:34<41:25:55, 15.22s/it]Executing ROME algorithm for the update: [Steve Jobs nacque nell'anno] -> [ 1974]Computing left vector (u)...Selected u projection object Steve JobsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Steve Jobs nacque nell'anno | Token:  JobsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.086 = 9.086 + 0.0 + 0.0 avg prob of [ 1974] 0.0015994588611647487loss 8.35 = 8.35 + 0.0 + 0.0 avg prob of [ 1974] 0.007222672458738089loss 8.022 = 8.021 + 0.001 + 0.0 avg prob of [ 1974] 0.013316758908331394loss 7.6 = 7.598 + 0.001 + 0.0 avg prob of [ 1974] 0.0310970488935709loss 7.16 = 7.158 + 0.002 + 0.001 avg prob of [ 1974] 0.07031334191560745loss 6.642 = 6.639 + 0.002 + 0.001 avg prob of [ 1974] 0.17267173528671265loss 6.269 = 6.265 + 0.003 + 0.001 avg prob of [ 1974] 0.2971768081188202loss 6.054 = 6.05 + 0.003 + 0.001 avg prob of [ 1974] 0.3905026614665985loss 5.897 = 5.892 + 0.004 + 0.001 avg prob of [ 1974] 0.4362052381038666loss 5.737 = 5.732 + 0.004 + 0.001 avg prob of [ 1974] 0.4558942914009094loss 5.544 = 5.538 + 0.004 + 0.001 avg prob of [ 1974] 0.4644826352596283loss 5.295 = 5.289 + 0.005 + 0.001 avg prob of [ 1974] 0.4685478210449219loss 4.973 = 4.966 + 0.005 + 0.001 avg prob of [ 1974] 0.4706439971923828loss 4.65 = 4.642 + 0.006 + 0.002 avg prob of [ 1974] 0.4718768894672394loss 4.273 = 4.264 + 0.007 + 0.002 avg prob of [ 1974] 0.4727195203304291loss 3.996 = 3.986 + 0.008 + 0.002 avg prob of [ 1974] 0.47338005900382996Delta norm: 138.0166778564453Change in target norm: 143.375 to 159.1356658935547 => 15.760665893554688Division Factor: 12.71875Right vector norm: 10.851434707641602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  5%|▌         | 555/10355 [2:23:49<41:27:55, 15.23s/it]Executing ROME algorithm for the update: [Том Бойд профессионально занимается] -> [ карате]Computing left vector (u)...Selected u projection object Том БойдLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Том Бойд профессионально занимается кара | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.377 = 7.377 + 0.0 + 0.0 avg prob of [ карате] 0.004845357500016689loss 6.958 = 6.958 + 0.0 + 0.0 avg prob of [ карате] 0.005312278866767883loss 6.475 = 6.473 + 0.001 + 0.0 avg prob of [ карате] 0.005704524461179972loss 6.031 = 6.029 + 0.001 + 0.001 avg prob of [ карате] 0.006200579926371574loss 5.684 = 5.681 + 0.002 + 0.001 avg prob of [ карате] 0.006906938273459673loss 5.288 = 5.285 + 0.003 + 0.001 avg prob of [ карате] 0.0081614525988698loss 4.923 = 4.918 + 0.004 + 0.001 avg prob of [ карате] 0.010153927840292454loss 4.626 = 4.621 + 0.004 + 0.001 avg prob of [ карате] 0.012823102064430714loss 4.325 = 4.319 + 0.005 + 0.001 avg prob of [ карате] 0.01680031232535839loss 4.006 = 3.999 + 0.005 + 0.001 avg prob of [ карате] 0.02273261547088623loss 3.69 = 3.682 + 0.006 + 0.001 avg prob of [ карате] 0.03125091269612312loss 3.379 = 3.371 + 0.007 + 0.002 avg prob of [ карате] 0.043043553829193115loss 3.095 = 3.086 + 0.007 + 0.002 avg prob of [ карате] 0.05781527981162071loss 2.831 = 2.821 + 0.008 + 0.002 avg prob of [ карате] 0.0765078067779541loss 2.575 = 2.563 + 0.01 + 0.002 avg prob of [ карате] 0.10176649689674377loss 2.319 = 2.305 + 0.012 + 0.002 avg prob of [ карате] 0.1365548074245453Delta norm: 152.22804260253906Change in target norm: 146.75 to 165.2745361328125 => 18.5245361328125Division Factor: 12.6171875Right vector norm: 12.065132141113281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s]  5%|▌         | 556/10355 [2:24:06<42:35:36, 15.65s/it]Executing ROME algorithm for the update: [Эрик Ламела профессионально занимается] -> [ баскетбол]Computing left vector (u)...Selected u projection object Эрик ЛамелаLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Эрик Ламела профессионально занимается баскетб | Token: лаRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.427 = 7.427 + 0.0 + 0.0 avg prob of [ баскетбол] 0.0069353049620985985loss 7.162 = 7.161 + 0.0 + 0.0 avg prob of [ баскетбол] 0.007314959075301886loss 6.714 = 6.713 + 0.001 + 0.0 avg prob of [ баскетбол] 0.008028964512050152loss 6.377 = 6.375 + 0.001 + 0.001 avg prob of [ баскетбол] 0.009378986433148384loss 6.031 = 6.029 + 0.002 + 0.001 avg prob of [ баскетбол] 0.010405207984149456loss 5.675 = 5.672 + 0.002 + 0.001 avg prob of [ баскетбол] 0.011585709638893604loss 5.295 = 5.291 + 0.003 + 0.001 avg prob of [ баскетбол] 0.013239432126283646loss 4.954 = 4.95 + 0.003 + 0.001 avg prob of [ баскетбол] 0.015439723618328571loss 4.685 = 4.68 + 0.004 + 0.001 avg prob of [ баскетбол] 0.018593985587358475loss 4.406 = 4.4 + 0.005 + 0.001 avg prob of [ баскетбол] 0.023486997932195663loss 4.143 = 4.137 + 0.005 + 0.001 avg prob of [ баскетбол] 0.03015793487429619loss 3.882 = 3.874 + 0.006 + 0.002 avg prob of [ баскетбол] 0.038993388414382935loss 3.615 = 3.607 + 0.007 + 0.002 avg prob of [ баскетбол] 0.05033518001437187loss 3.361 = 3.352 + 0.008 + 0.002 avg prob of [ баскетбол] 0.06457896530628204loss 3.114 = 3.104 + 0.008 + 0.002 avg prob of [ баскетбол] 0.08418243378400803loss 2.834 = 2.823 + 0.009 + 0.002 avg prob of [ баскетбол] 0.11669983714818954Delta norm: 145.9925537109375Change in target norm: 138.625 to 157.69300842285156 => 19.068008422851562Division Factor: 11.6796875Right vector norm: 12.499695777893066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  5%|▌         | 557/10355 [2:24:21<41:57:22, 15.42s/it]Executing ROME algorithm for the update: [Ernesto Laclau nació en la ciudad de] -> [ Los Ángeles]Computing left vector (u)...Selected u projection object Ernesto LaclauLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ernesto Laclau nació en la ciudad de Los | Token: lauRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.683 = 8.683 + 0.0 + 0.0 avg prob of [ Los Ángeles] 0.00987030379474163loss 8.205 = 8.205 + 0.0 + 0.0 avg prob of [ Los Ángeles] 0.02428477257490158loss 7.772 = 7.772 + 0.0 + 0.0 avg prob of [ Los Ángeles] 0.05388049781322479loss 7.302 = 7.301 + 0.001 + 0.001 avg prob of [ Los Ángeles] 0.12868092954158783loss 6.91 = 6.908 + 0.001 + 0.001 avg prob of [ Los Ángeles] 0.25710830092430115loss 6.663 = 6.66 + 0.002 + 0.001 avg prob of [ Los Ángeles] 0.3657378852367401loss 6.504 = 6.501 + 0.002 + 0.001 avg prob of [ Los Ángeles] 0.41247424483299255loss 6.358 = 6.353 + 0.003 + 0.001 avg prob of [ Los Ángeles] 0.43366673588752747loss 6.209 = 6.204 + 0.004 + 0.001 avg prob of [ Los Ángeles] 0.4447214901447296loss 6.053 = 6.046 + 0.005 + 0.002 avg prob of [ Los Ángeles] 0.45118165016174316loss 5.899 = 5.891 + 0.006 + 0.002 avg prob of [ Los Ángeles] 0.4553738534450531loss 5.744 = 5.736 + 0.006 + 0.002 avg prob of [ Los Ángeles] 0.4574320614337921loss 5.57 = 5.561 + 0.007 + 0.002 avg prob of [ Los Ángeles] 0.458707720041275loss 5.375 = 5.366 + 0.007 + 0.002 avg prob of [ Los Ángeles] 0.4598892033100128loss 5.241 = 5.232 + 0.007 + 0.002 avg prob of [ Los Ángeles] 0.46096131205558777loss 5.121 = 5.111 + 0.007 + 0.002 avg prob of [ Los Ángeles] 0.46164968609809875Delta norm: 126.99931335449219Change in target norm: 128.875 to 147.6420440673828 => 18.767044067382812Division Factor: 17.09375Right vector norm: 7.429575443267822Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  5%|▌         | 558/10355 [2:24:35<41:25:42, 15.22s/it]Executing ROME algorithm for the update: [Júnior Díaz juega profesionalmente al] -> [ esquí de fondo]Computing left vector (u)...Selected u projection object Júnior DíazLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Júnior Díaz juega profesionalmente al esquí de | Token:  DíazRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.088 = 7.088 + 0.0 + 0.0 avg prob of [ esquí de fondo] 0.01793740876019001loss 6.963 = 6.963 + 0.0 + 0.0 avg prob of [ esquí de fondo] 0.02101043611764908loss 6.86 = 6.859 + 0.001 + 0.0 avg prob of [ esquí de fondo] 0.023739365860819817loss 6.734 = 6.732 + 0.001 + 0.001 avg prob of [ esquí de fondo] 0.02755841240286827loss 6.563 = 6.56 + 0.002 + 0.001 avg prob of [ esquí de fondo] 0.033812250941991806loss 6.291 = 6.287 + 0.003 + 0.001 avg prob of [ esquí de fondo] 0.04865535348653793loss 5.813 = 5.808 + 0.005 + 0.001 avg prob of [ esquí de fondo] 0.10649800300598145loss 5.468 = 5.461 + 0.006 + 0.001 avg prob of [ esquí de fondo] 0.1821829080581665loss 5.283 = 5.275 + 0.007 + 0.001 avg prob of [ esquí de fondo] 0.2016763538122177loss 5.073 = 5.063 + 0.008 + 0.002 avg prob of [ esquí de fondo] 0.24527257680892944loss 4.872 = 4.861 + 0.009 + 0.002 avg prob of [ esquí de fondo] 0.30405640602111816loss 4.724 = 4.711 + 0.011 + 0.002 avg prob of [ esquí de fondo] 0.35816842317581177loss 4.64 = 4.624 + 0.014 + 0.002 avg prob of [ esquí de fondo] 0.39650458097457886loss 4.564 = 4.55 + 0.012 + 0.002 avg prob of [ esquí de fondo] 0.42208346724510193loss 4.486 = 4.472 + 0.012 + 0.002 avg prob of [ esquí de fondo] 0.4391992390155792loss 4.409 = 4.395 + 0.012 + 0.002 avg prob of [ esquí de fondo] 0.44845786690711975Delta norm: 143.9071044921875Change in target norm: 131.5 to 152.914794921875 => 21.414794921875Division Factor: 10.421875Right vector norm: 13.808177947998047Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  5%|▌         | 559/10355 [2:24:51<41:54:54, 15.40s/it]Executing ROME algorithm for the update: [Patrick Schwarzenegger was born in the city of] -> [ Cairo]Computing left vector (u)...Selected u projection object Patrick SchwarzeneggerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Patrick Schwarzenegger was born in the city of | Token: eggerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.907 = 13.907 + 0.0 + 0.0 avg prob of [ Cairo] 1.2149729627708439e-05loss 13.026 = 13.026 + 0.0 + 0.0 avg prob of [ Cairo] 6.605812086490914e-05loss 12.534 = 12.533 + 0.001 + 0.0 avg prob of [ Cairo] 0.00017292001575697213loss 11.83 = 11.828 + 0.001 + 0.001 avg prob of [ Cairo] 0.0007412899867631495loss 10.961 = 10.959 + 0.002 + 0.001 avg prob of [ Cairo] 0.004430881701409817loss 10.229 = 10.225 + 0.003 + 0.001 avg prob of [ Cairo] 0.01972135528922081loss 9.771 = 9.766 + 0.004 + 0.001 avg prob of [ Cairo] 0.05001746490597725loss 9.474 = 9.469 + 0.004 + 0.001 avg prob of [ Cairo] 0.09014713019132614loss 9.244 = 9.238 + 0.005 + 0.001 avg prob of [ Cairo] 0.14268869161605835loss 9.042 = 9.035 + 0.006 + 0.001 avg prob of [ Cairo] 0.2111002802848816loss 8.881 = 8.874 + 0.006 + 0.002 avg prob of [ Cairo] 0.28468576073646545loss 8.759 = 8.75 + 0.007 + 0.002 avg prob of [ Cairo] 0.3497702479362488loss 8.67 = 8.66 + 0.008 + 0.002 avg prob of [ Cairo] 0.39715462923049927loss 8.599 = 8.588 + 0.009 + 0.002 avg prob of [ Cairo] 0.4273318350315094loss 8.541 = 8.529 + 0.009 + 0.002 avg prob of [ Cairo] 0.44542476534843445loss 8.485 = 8.474 + 0.01 + 0.002 avg prob of [ Cairo] 0.4560106098651886Delta norm: 142.5015869140625Change in target norm: 133.875 to 151.72662353515625 => 17.85162353515625Division Factor: 11.7421875Right vector norm: 12.135863304138184Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.86it/s]  5%|▌         | 560/10355 [2:25:07<42:37:38, 15.67s/it]Executing ROME algorithm for the update: [Sinaly Diomandé professionally plays the sport of] -> [ bobsleigh]Computing left vector (u)...Selected u projection object Sinaly DiomandéLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Sinaly Diomandé professionally plays the sport of bobs | Token: éRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.489 = 9.489 + 0.0 + 0.0 avg prob of [ bobsleigh] 0.01798229292035103loss 9.121 = 9.121 + 0.0 + 0.0 avg prob of [ bobsleigh] 0.025795267894864082loss 8.744 = 8.742 + 0.001 + 0.001 avg prob of [ bobsleigh] 0.03325582668185234loss 8.374 = 8.372 + 0.001 + 0.001 avg prob of [ bobsleigh] 0.039157938212156296loss 8.102 = 8.098 + 0.002 + 0.001 avg prob of [ bobsleigh] 0.04703459516167641loss 7.862 = 7.858 + 0.003 + 0.001 avg prob of [ bobsleigh] 0.0585830956697464loss 7.552 = 7.546 + 0.004 + 0.001 avg prob of [ bobsleigh] 0.07827846705913544loss 7.166 = 7.16 + 0.005 + 0.001 avg prob of [ bobsleigh] 0.11185278743505478loss 6.716 = 6.709 + 0.005 + 0.002 avg prob of [ bobsleigh] 0.16300860047340393loss 6.237 = 6.229 + 0.006 + 0.002 avg prob of [ bobsleigh] 0.21883851289749146loss 5.718 = 5.708 + 0.008 + 0.002 avg prob of [ bobsleigh] 0.26857221126556396loss 5.246 = 5.234 + 0.01 + 0.002 avg prob of [ bobsleigh] 0.31440800428390503loss 4.747 = 4.732 + 0.012 + 0.002 avg prob of [ bobsleigh] 0.34591004252433777loss 4.32 = 4.303 + 0.014 + 0.002 avg prob of [ bobsleigh] 0.36760300397872925loss 3.883 = 3.865 + 0.015 + 0.002 avg prob of [ bobsleigh] 0.3855521082878113loss 3.333 = 3.315 + 0.015 + 0.002 avg prob of [ bobsleigh] 0.4036196768283844Delta norm: 137.7571258544922Change in target norm: 124.5625 to 146.14248657226562 => 21.579986572265625Division Factor: 10.34375Right vector norm: 13.317909240722656Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  5%|▌         | 561/10355 [2:25:22<41:29:15, 15.25s/it]Executing ROME algorithm for the update: [هوغو سانشيز يلعب بشكل احترافي في رياضة] -> [ السباحة]Computing left vector (u)...Selected u projection object هوغو سانشيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: هوغو سانشيز يلعب بشكل احترافي في رياضة السب | Token: يزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.278 = 8.278 + 0.0 + 0.0 avg prob of [ السباحة] 0.021804140880703926loss 7.996 = 7.996 + 0.0 + 0.0 avg prob of [ السباحة] 0.026217730715870857loss 7.723 = 7.722 + 0.001 + 0.0 avg prob of [ السباحة] 0.0320599265396595loss 7.421 = 7.419 + 0.001 + 0.001 avg prob of [ السباحة] 0.04126123711466789loss 7.081 = 7.078 + 0.002 + 0.001 avg prob of [ السباحة] 0.054134875535964966loss 6.734 = 6.73 + 0.003 + 0.001 avg prob of [ السباحة] 0.0665460005402565loss 6.352 = 6.347 + 0.004 + 0.001 avg prob of [ السباحة] 0.08597029000520706loss 5.845 = 5.839 + 0.005 + 0.001 avg prob of [ السباحة] 0.12161139398813248loss 5.165 = 5.158 + 0.006 + 0.001 avg prob of [ السباحة] 0.21982897818088531loss 4.522 = 4.513 + 0.007 + 0.001 avg prob of [ السباحة] 0.33662718534469604loss 4.115 = 4.107 + 0.007 + 0.001 avg prob of [ السباحة] 0.386635959148407loss 3.59 = 3.582 + 0.007 + 0.001 avg prob of [ السباحة] 0.4208100736141205loss 3.128 = 3.118 + 0.008 + 0.002 avg prob of [ السباحة] 0.4383043646812439loss 2.697 = 2.687 + 0.008 + 0.002 avg prob of [ السباحة] 0.45335653424263loss 2.309 = 2.298 + 0.009 + 0.002 avg prob of [ السباحة] 0.4754886329174042loss 1.991 = 1.979 + 0.01 + 0.002 avg prob of [ السباحة] 0.5117892622947693Delta norm: 144.1646728515625Change in target norm: 143.0 to 158.12603759765625 => 15.12603759765625Division Factor: 15.265625Right vector norm: 9.443745613098145Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  5%|▌         | 562/10355 [2:25:37<41:18:58, 15.19s/it]Executing ROME algorithm for the update: [Hugo López-Gatell was born in the city of] -> [ Burlington]Computing left vector (u)...Selected u projection object Hugo López-GatellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Hugo López-Gatell was born in the city of Burl | Token: atellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.872 = 9.872 + 0.0 + 0.0 avg prob of [ Burlington] 0.0043737939558923244loss 9.539 = 9.538 + 0.0 + 0.0 avg prob of [ Burlington] 0.008127226494252682loss 9.351 = 9.35 + 0.001 + 0.001 avg prob of [ Burlington] 0.010993060655891895loss 9.221 = 9.218 + 0.002 + 0.001 avg prob of [ Burlington] 0.013197419233620167loss 9.097 = 9.092 + 0.003 + 0.001 avg prob of [ Burlington] 0.015446535311639309loss 8.95 = 8.945 + 0.004 + 0.001 avg prob of [ Burlington] 0.018852749839425087loss 8.755 = 8.748 + 0.005 + 0.001 avg prob of [ Burlington] 0.02515449933707714loss 8.505 = 8.497 + 0.006 + 0.001 avg prob of [ Burlington] 0.03737591207027435loss 8.185 = 8.176 + 0.007 + 0.002 avg prob of [ Burlington] 0.06389045715332031loss 7.785 = 7.775 + 0.009 + 0.002 avg prob of [ Burlington] 0.12784264981746674loss 7.395 = 7.383 + 0.01 + 0.002 avg prob of [ Burlington] 0.2478383183479309loss 7.123 = 7.11 + 0.011 + 0.002 avg prob of [ Burlington] 0.37008655071258545loss 6.967 = 6.953 + 0.013 + 0.002 avg prob of [ Burlington] 0.4314485490322113loss 6.861 = 6.845 + 0.013 + 0.002 avg prob of [ Burlington] 0.45435434579849243loss 6.767 = 6.75 + 0.014 + 0.002 avg prob of [ Burlington] 0.46290647983551025loss 6.646 = 6.628 + 0.015 + 0.003 avg prob of [ Burlington] 0.46664565801620483Delta norm: 136.3289794921875Change in target norm: 126.1875 to 149.56134033203125 => 23.37384033203125Division Factor: 15.09375Right vector norm: 9.032148361206055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  5%|▌         | 563/10355 [2:25:53<41:53:50, 15.40s/it]Executing ROME algorithm for the update: [Manuel Belgrano died in the year] -> [ 1846]Computing left vector (u)...Selected u projection object Manuel BelgranoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Manuel Belgrano died in the year | Token:  BelgranoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.768 = 10.768 + 0.0 + 0.0 avg prob of [ 1846] 0.0008604505565017462loss 10.536 = 10.536 + 0.0 + 0.0 avg prob of [ 1846] 0.0010712898802012205loss 10.077 = 10.076 + 0.0 + 0.0 avg prob of [ 1846] 0.002749058650806546loss 9.573 = 9.572 + 0.001 + 0.0 avg prob of [ 1846] 0.008059005253016949loss 9.077 = 9.075 + 0.001 + 0.001 avg prob of [ 1846] 0.02140190079808235loss 8.654 = 8.652 + 0.001 + 0.001 avg prob of [ 1846] 0.04968441650271416loss 8.286 = 8.284 + 0.001 + 0.001 avg prob of [ 1846] 0.10387539118528366loss 7.972 = 7.97 + 0.002 + 0.001 avg prob of [ 1846] 0.1936139613389969loss 7.748 = 7.745 + 0.002 + 0.001 avg prob of [ 1846] 0.2994997203350067loss 7.621 = 7.618 + 0.003 + 0.001 avg prob of [ 1846] 0.3804923892021179loss 7.555 = 7.551 + 0.003 + 0.001 avg prob of [ 1846] 0.4252908527851105loss 7.515 = 7.51 + 0.004 + 0.001 avg prob of [ 1846] 0.44748133420944214loss 7.486 = 7.48 + 0.004 + 0.001 avg prob of [ 1846] 0.4587305188179016loss 7.458 = 7.451 + 0.005 + 0.001 avg prob of [ 1846] 0.4648039638996124loss 7.429 = 7.421 + 0.006 + 0.002 avg prob of [ 1846] 0.4683361053466797loss 7.398 = 7.39 + 0.007 + 0.002 avg prob of [ 1846] 0.4705005884170532Delta norm: 142.64248657226562Change in target norm: 141.5 to 156.27615356445312 => 14.776153564453125Division Factor: 9.484375Right vector norm: 15.039735794067383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s]  5%|▌         | 564/10355 [2:26:08<41:53:14, 15.40s/it]Executing ROME algorithm for the update: [Tobias Menzies was born in the city of] -> [ Bengaluru]Computing left vector (u)...Selected u projection object Tobias MenziesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Tobias Menzies was born in the city of | Token: iesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.951 = 12.951 + 0.0 + 0.0 avg prob of [ Bengaluru] 2.26521569857141e-05loss 12.47 = 12.47 + 0.0 + 0.0 avg prob of [ Bengaluru] 5.01043614349328e-05loss 11.951 = 11.951 + 0.0 + 0.001 avg prob of [ Bengaluru] 0.00013697112444788218loss 11.171 = 11.17 + 0.0 + 0.001 avg prob of [ Bengaluru] 0.0007947459234856069loss 10.112 = 10.111 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.005773949436843395loss 9.758 = 9.756 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.0119375204667449loss 9.437 = 9.435 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.02299538441002369loss 9.105 = 9.102 + 0.002 + 0.001 avg prob of [ Bengaluru] 0.04515400528907776loss 8.809 = 8.805 + 0.002 + 0.001 avg prob of [ Bengaluru] 0.0818546712398529loss 8.545 = 8.541 + 0.002 + 0.002 avg prob of [ Bengaluru] 0.1377170979976654loss 8.322 = 8.317 + 0.003 + 0.002 avg prob of [ Bengaluru] 0.21161283552646637loss 8.156 = 8.15 + 0.004 + 0.002 avg prob of [ Bengaluru] 0.28871849179267883loss 8.043 = 8.036 + 0.005 + 0.002 avg prob of [ Bengaluru] 0.3505588173866272loss 7.967 = 7.96 + 0.005 + 0.002 avg prob of [ Bengaluru] 0.392976850271225loss 7.913 = 7.905 + 0.006 + 0.002 avg prob of [ Bengaluru] 0.4194456934928894loss 7.867 = 7.859 + 0.006 + 0.002 avg prob of [ Bengaluru] 0.43618711829185486Delta norm: 124.9273910522461Change in target norm: 117.5625 to 134.3671875 => 16.8046875Division Factor: 12.9453125Right vector norm: 9.650396347045898Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  5%|▌         | 565/10355 [2:26:23<41:35:57, 15.30s/it]Executing ROME algorithm for the update: [ألفريدو دي ستيفانو يلعب بشكل احترافي في رياضة] -> [ جيو جيتسو برازيلية]Computing left vector (u)...Selected u projection object ألفريدو دي ستيفانوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ألفريدو دي ستيفانو يلعب بشكل احترافي في رياضة جيو جيتسو برازيل | Token: وRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.143 = 9.143 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.012006591074168682loss 9.022 = 9.021 + 0.0 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.013200870715081692loss 8.877 = 8.876 + 0.001 + 0.0 avg prob of [ جيو جيتسو برازيلية] 0.014924381859600544loss 8.654 = 8.651 + 0.001 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.01917952112853527loss 8.399 = 8.396 + 0.002 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.026035649701952934loss 8.104 = 8.101 + 0.003 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.03829678148031235loss 7.809 = 7.805 + 0.003 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.05608968436717987loss 7.568 = 7.562 + 0.004 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.07451930642127991loss 7.327 = 7.32 + 0.005 + 0.001 avg prob of [ جيو جيتسو برازيلية] 0.09739873558282852loss 6.974 = 6.966 + 0.006 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.1268339902162552loss 6.436 = 6.428 + 0.007 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.16264431178569794loss 5.946 = 5.937 + 0.007 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.20047372579574585loss 5.563 = 5.552 + 0.008 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.23094549775123596loss 5.259 = 5.247 + 0.01 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.2617749571800232loss 4.938 = 4.924 + 0.011 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.30219197273254395loss 4.58 = 4.565 + 0.013 + 0.002 avg prob of [ جيو جيتسو برازيلية] 0.3507295250892639Delta norm: 146.4534912109375Change in target norm: 132.25 to 152.05360412597656 => 19.803604125976562Division Factor: 10.0Right vector norm: 14.64534854888916Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  5%|▌         | 566/10355 [2:26:38<41:15:00, 15.17s/it]Executing ROME algorithm for the update: [Angélica Vale was born in the city of] -> [ Kabul]Computing left vector (u)...Selected u projection object Angélica ValeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Angélica Vale was born in the city of | Token:  ValeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.737 = 16.737 + 0.0 + 0.0 avg prob of [ Kabul] 2.3264969684078096e-07loss 15.558 = 15.557 + 0.0 + 0.0 avg prob of [ Kabul] 2.136906687155715e-06loss 14.982 = 14.98 + 0.001 + 0.0 avg prob of [ Kabul] 6.05468903813744e-06loss 14.651 = 14.648 + 0.002 + 0.001 avg prob of [ Kabul] 1.174381122837076e-05loss 14.335 = 14.331 + 0.004 + 0.001 avg prob of [ Kabul] 2.2167803763295524e-05loss 14.009 = 14.003 + 0.005 + 0.001 avg prob of [ Kabul] 4.180886026006192e-05loss 13.606 = 13.598 + 0.007 + 0.001 avg prob of [ Kabul] 9.278950892621651e-05loss 13.045 = 13.035 + 0.009 + 0.001 avg prob of [ Kabul] 0.0002914697688538581loss 12.238 = 12.227 + 0.01 + 0.001 avg prob of [ Kabul] 0.0015587321249768138loss 11.267 = 11.254 + 0.012 + 0.001 avg prob of [ Kabul] 0.011274000629782677loss 10.411 = 10.396 + 0.013 + 0.002 avg prob of [ Kabul] 0.05787185952067375loss 9.953 = 9.938 + 0.014 + 0.002 avg prob of [ Kabul] 0.1380181610584259loss 9.682 = 9.666 + 0.014 + 0.002 avg prob of [ Kabul] 0.2252444177865982loss 9.49 = 9.474 + 0.014 + 0.002 avg prob of [ Kabul] 0.3121625781059265loss 9.366 = 9.349 + 0.015 + 0.002 avg prob of [ Kabul] 0.379057377576828loss 9.277 = 9.261 + 0.014 + 0.002 avg prob of [ Kabul] 0.4186232388019562Delta norm: 134.1046600341797Change in target norm: 128.625 to 148.09857177734375 => 19.47357177734375Division Factor: 12.9609375Right vector norm: 10.346833229064941Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  5%|▌         | 567/10355 [2:26:55<42:44:39, 15.72s/it]Executing ROME algorithm for the update: [Didier Ya Konan  è nato nella città di] -> [ Ahmedabad]Computing left vector (u)...Selected u projection object Didier Ya KonanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Didier Ya Konan  è nato nella città di | Token: anRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 17.567 = 17.567 + 0.0 + 0.0 avg prob of [ Ahmedabad] 3.3179912861669436e-06loss 16.638 = 16.637 + 0.0 + 0.0 avg prob of [ Ahmedabad] 1.2137654266553e-05loss 15.769 = 15.768 + 0.001 + 0.001 avg prob of [ Ahmedabad] 3.198886406607926e-05loss 14.426 = 14.423 + 0.002 + 0.001 avg prob of [ Ahmedabad] 0.00010748729982879013loss 12.488 = 12.484 + 0.003 + 0.001 avg prob of [ Ahmedabad] 0.0004943727981299162loss 10.693 = 10.687 + 0.005 + 0.001 avg prob of [ Ahmedabad] 0.002921988721936941loss 9.42 = 9.412 + 0.007 + 0.001 avg prob of [ Ahmedabad] 0.013122761622071266loss 8.321 = 8.311 + 0.008 + 0.002 avg prob of [ Ahmedabad] 0.06477565318346024loss 7.482 = 7.471 + 0.009 + 0.002 avg prob of [ Ahmedabad] 0.24616283178329468loss 7.085 = 7.073 + 0.01 + 0.002 avg prob of [ Ahmedabad] 0.41219979524612427loss 6.813 = 6.799 + 0.011 + 0.002 avg prob of [ Ahmedabad] 0.4512757360935211loss 6.646 = 6.63 + 0.014 + 0.002 avg prob of [ Ahmedabad] 0.45703375339508057loss 6.404 = 6.387 + 0.015 + 0.002 avg prob of [ Ahmedabad] 0.46564120054244995loss 6.245 = 6.227 + 0.016 + 0.003 avg prob of [ Ahmedabad] 0.47021302580833435loss 6.015 = 5.996 + 0.017 + 0.003 avg prob of [ Ahmedabad] 0.4708443284034729loss 5.805 = 5.785 + 0.017 + 0.003 avg prob of [ Ahmedabad] 0.4692089557647705Delta norm: 131.72515869140625Change in target norm: 118.75 to 144.04959106445312 => 25.299591064453125Division Factor: 14.125Right vector norm: 9.325675010681152Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.25it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.10it/s]  5%|▌         | 568/10355 [2:27:10<42:06:12, 15.49s/it]Executing ROME algorithm for the update: [دييغو شفارتزمان يلعب بشكل احترافي في رياضة] -> [ الكرة الطائرة]Computing left vector (u)...Selected u projection object دييغو شفارتزمانLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: دييغو شفارتزمان يلعب بشكل احترافي في رياضة الكرة | Token: زمانRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.747 = 6.747 + 0.0 + 0.0 avg prob of [ الكرة الطائرة] 0.021379243582487106loss 6.555 = 6.555 + 0.0 + 0.0 avg prob of [ الكرة الطائرة] 0.028045501559972763loss 6.354 = 6.353 + 0.001 + 0.0 avg prob of [ الكرة الطائرة] 0.0348416306078434loss 6.109 = 6.107 + 0.001 + 0.001 avg prob of [ الكرة الطائرة] 0.04399905353784561loss 5.809 = 5.806 + 0.002 + 0.001 avg prob of [ الكرة الطائرة] 0.05967142432928085loss 5.456 = 5.453 + 0.002 + 0.001 avg prob of [ الكرة الطائرة] 0.08627553284168243loss 5.079 = 5.075 + 0.003 + 0.001 avg prob of [ الكرة الطائرة] 0.1220422238111496loss 4.655 = 4.65 + 0.004 + 0.001 avg prob of [ الكرة الطائرة] 0.17547442018985748loss 4.163 = 4.156 + 0.005 + 0.001 avg prob of [ الكرة الطائرة] 0.2648400068283081loss 3.721 = 3.713 + 0.007 + 0.001 avg prob of [ الكرة الطائرة] 0.33852407336235046loss 3.36 = 3.35 + 0.008 + 0.001 avg prob of [ الكرة الطائرة] 0.3815498352050781loss 3.025 = 3.013 + 0.011 + 0.002 avg prob of [ الكرة الطائرة] 0.4104912281036377loss 2.659 = 2.645 + 0.013 + 0.002 avg prob of [ الكرة الطائرة] 0.4295801520347595loss 2.267 = 2.251 + 0.015 + 0.002 avg prob of [ الكرة الطائرة] 0.44536900520324707loss 1.868 = 1.848 + 0.018 + 0.002 avg prob of [ الكرة الطائرة] 0.46708133816719055loss 1.501 = 1.48 + 0.019 + 0.002 avg prob of [ الكرة الطائرة] 0.5055476427078247Delta norm: 157.52359008789062Change in target norm: 145.25 to 169.28025817871094 => 24.030258178710938Division Factor: 10.21875Right vector norm: 15.415152549743652Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  5%|▌         | 569/10355 [2:27:24<40:52:45, 15.04s/it]Executing ROME algorithm for the update: [Luis Monti pratica professionalmente il ] -> [ golf]Computing left vector (u)...Selected u projection object Luis MontiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Luis Monti pratica professionalmente il  | Token: iRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.094 = 12.094 + 0.0 + 0.0 avg prob of [ golf] 8.030951721593738e-05loss 11.266 = 11.265 + 0.0 + 0.0 avg prob of [ golf] 0.0002830089651979506loss 10.249 = 10.248 + 0.001 + 0.0 avg prob of [ golf] 0.0013006477383896708loss 9.549 = 9.547 + 0.001 + 0.001 avg prob of [ golf] 0.0038619048427790403loss 9.115 = 9.112 + 0.002 + 0.001 avg prob of [ golf] 0.008547993376851082loss 8.528 = 8.524 + 0.003 + 0.001 avg prob of [ golf] 0.026235053315758705loss 8.024 = 8.019 + 0.004 + 0.001 avg prob of [ golf] 0.06801684945821762loss 7.643 = 7.637 + 0.005 + 0.001 avg prob of [ golf] 0.13506685197353363loss 7.296 = 7.289 + 0.006 + 0.001 avg prob of [ golf] 0.24241706728935242loss 7.053 = 7.045 + 0.007 + 0.001 avg prob of [ golf] 0.336844265460968loss 6.888 = 6.878 + 0.008 + 0.001 avg prob of [ golf] 0.3828708529472351loss 6.738 = 6.728 + 0.009 + 0.002 avg prob of [ golf] 0.40356704592704773loss 6.579 = 6.567 + 0.01 + 0.002 avg prob of [ golf] 0.414779394865036loss 6.423 = 6.41 + 0.011 + 0.002 avg prob of [ golf] 0.4223405718803406loss 6.27 = 6.255 + 0.013 + 0.002 avg prob of [ golf] 0.4280279874801636loss 6.092 = 6.076 + 0.015 + 0.002 avg prob of [ golf] 0.43248242139816284Delta norm: 134.5642547607422Change in target norm: 135.875 to 152.93157958984375 => 17.05657958984375Division Factor: 12.453125Right vector norm: 10.80566120147705Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  6%|▌         | 570/10355 [2:27:39<40:42:29, 14.98s/it]Executing ROME algorithm for the update: [ولد جون فان دروتن في مدينة] -> [ بيت لحم]Computing left vector (u)...Selected u projection object جون فان دروتنLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد جون فان دروتن في مدينة بيت | Token: تنRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.011 = 7.011 + 0.0 + 0.0 avg prob of [ بيت لحم] 0.009904713369905949loss 6.719 = 6.718 + 0.0 + 0.0 avg prob of [ بيت لحم] 0.014444646425545216loss 6.411 = 6.409 + 0.001 + 0.0 avg prob of [ بيت لحم] 0.02112039551138878loss 5.976 = 5.974 + 0.002 + 0.001 avg prob of [ بيت لحم] 0.03832332417368889loss 5.501 = 5.498 + 0.003 + 0.001 avg prob of [ بيت لحم] 0.07365799695253372loss 5.167 = 5.164 + 0.003 + 0.001 avg prob of [ بيت لحم] 0.09854580461978912loss 4.864 = 4.859 + 0.003 + 0.001 avg prob of [ بيت لحم] 0.11834892630577087loss 4.555 = 4.55 + 0.004 + 0.001 avg prob of [ بيت لحم] 0.14241082966327667loss 4.206 = 4.2 + 0.005 + 0.001 avg prob of [ بيت لحم] 0.17667248845100403loss 3.76 = 3.753 + 0.006 + 0.001 avg prob of [ بيت لحم] 0.214943528175354loss 3.306 = 3.298 + 0.007 + 0.001 avg prob of [ بيت لحم] 0.2551690638065338loss 2.879 = 2.87 + 0.008 + 0.002 avg prob of [ بيت لحم] 0.29470136761665344loss 2.423 = 2.413 + 0.009 + 0.002 avg prob of [ بيت لحم] 0.338551789522171loss 1.945 = 1.933 + 0.01 + 0.002 avg prob of [ بيت لحم] 0.40195778012275696loss 1.572 = 1.558 + 0.012 + 0.002 avg prob of [ بيت لحم] 0.491893470287323loss 1.26 = 1.244 + 0.014 + 0.002 avg prob of [ بيت لحم] 0.6169955730438232Delta norm: 153.44395446777344Change in target norm: 145.5 to 163.15989685058594 => 17.659896850585938Division Factor: 13.8359375Right vector norm: 11.090246200561523Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  6%|▌         | 571/10355 [2:27:56<42:54:03, 15.79s/it]Executing ROME algorithm for the update: [קווין טיי נולד בעיר] -> [ בארי]Computing left vector (u)...Selected u projection object קווין טייLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: קווין טיי נולד בעיר באר | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.234 = 5.234 + 0.0 + 0.0 avg prob of [ בארי] 0.01812771148979664loss 5.149 = 5.148 + 0.0 + 0.0 avg prob of [ בארי] 0.01903744786977768loss 5.028 = 5.027 + 0.001 + 0.0 avg prob of [ בארי] 0.02006264589726925loss 4.871 = 4.87 + 0.001 + 0.001 avg prob of [ בארי] 0.02191195636987686loss 4.724 = 4.722 + 0.002 + 0.001 avg prob of [ בארי] 0.024047454819083214loss 4.522 = 4.519 + 0.002 + 0.001 avg prob of [ בארי] 0.02785530686378479loss 4.27 = 4.267 + 0.003 + 0.001 avg prob of [ בארי] 0.03415505588054657loss 3.98 = 3.976 + 0.003 + 0.001 avg prob of [ בארי] 0.04413338750600815loss 3.645 = 3.64 + 0.004 + 0.001 avg prob of [ בארי] 0.05847208946943283loss 3.282 = 3.275 + 0.005 + 0.001 avg prob of [ בארי] 0.07539813220500946loss 2.934 = 2.927 + 0.006 + 0.001 avg prob of [ בארי] 0.09312844276428223loss 2.618 = 2.61 + 0.007 + 0.001 avg prob of [ בארי] 0.11336323618888855loss 2.378 = 2.368 + 0.008 + 0.002 avg prob of [ בארי] 0.139731302857399loss 2.184 = 2.174 + 0.009 + 0.002 avg prob of [ בארי] 0.17595939338207245loss 1.991 = 1.979 + 0.01 + 0.002 avg prob of [ בארי] 0.2223590761423111loss 1.803 = 1.789 + 0.011 + 0.002 avg prob of [ בארי] 0.2721761465072632Delta norm: 167.25680541992188Change in target norm: 151.75 to 173.6019287109375 => 21.8519287109375Division Factor: 9.90625Right vector norm: 16.883968353271484Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  6%|▌         | 572/10355 [2:28:12<42:38:59, 15.69s/it]Executing ROME algorithm for the update: [מקסימו פרונה משחק בענף הספורט] -> [ התעמלות אמנותית]Computing left vector (u)...Selected u projection object מקסימו פרונהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: מקסימו פרונה משחק בענף הספורט התעמלות אמנות | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.345 = 4.345 + 0.0 + 0.0 avg prob of [ התעמלות אמנותית] 0.015543868765234947loss 4.311 = 4.31 + 0.001 + 0.0 avg prob of [ התעמלות אמנותית] 0.016181621700525284loss 4.257 = 4.256 + 0.001 + 0.0 avg prob of [ התעמלות אמנותית] 0.01729212887585163loss 4.2 = 4.197 + 0.002 + 0.001 avg prob of [ התעמלות אמנותית] 0.01858466863632202loss 4.13 = 4.127 + 0.002 + 0.001 avg prob of [ התעמלות אמנותית] 0.020330116152763367loss 4.024 = 4.021 + 0.003 + 0.001 avg prob of [ התעמלות אמנותית] 0.023495694622397423loss 3.889 = 3.885 + 0.004 + 0.001 avg prob of [ התעמלות אמנותית] 0.02828093059360981loss 3.753 = 3.747 + 0.005 + 0.001 avg prob of [ התעמלות אמנותית] 0.033902816474437714loss 3.625 = 3.618 + 0.006 + 0.001 avg prob of [ התעמלות אמנותית] 0.03999561816453934loss 3.504 = 3.496 + 0.007 + 0.001 avg prob of [ התעמלות אמנותית] 0.046859342604875565loss 3.377 = 3.368 + 0.008 + 0.001 avg prob of [ התעמלות אמנותית] 0.055098455399274826loss 3.245 = 3.234 + 0.009 + 0.001 avg prob of [ התעמלות אמנותית] 0.06487291306257248loss 3.105 = 3.093 + 0.011 + 0.002 avg prob of [ התעמלות אמנותית] 0.07673841714859009loss 2.952 = 2.939 + 0.012 + 0.002 avg prob of [ התעמלות אמנותית] 0.09132014214992523loss 2.787 = 2.773 + 0.013 + 0.002 avg prob of [ התעמלות אמנותית] 0.10926839709281921loss 2.615 = 2.599 + 0.014 + 0.002 avg prob of [ התעמלות אמנותית] 0.1297069787979126Delta norm: 156.5261993408203Change in target norm: 142.875 to 163.5872344970703 => 20.712234497070312Division Factor: 10.265625Right vector norm: 15.247605323791504Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▌         | 573/10355 [2:28:28<42:53:04, 15.78s/it]Executing ROME algorithm for the update: [מתיאס פרננדס משחק בענף הספורט] -> [ קפיצה למים]Computing left vector (u)...Selected u projection object מתיאס פרננדסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: מתיאס פרננדס משחק בענף הספורט קפיצה למ | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.811 = 4.811 + 0.0 + 0.0 avg prob of [ קפיצה למים] 0.02130774036049843loss 4.732 = 4.731 + 0.0 + 0.0 avg prob of [ קפיצה למים] 0.022367870435118675loss 4.631 = 4.63 + 0.001 + 0.0 avg prob of [ קפיצה למים] 0.023918287828564644loss 4.499 = 4.497 + 0.001 + 0.001 avg prob of [ קפיצה למים] 0.02613040991127491loss 4.331 = 4.328 + 0.002 + 0.001 avg prob of [ קפיצה למים] 0.029801182448863983loss 4.138 = 4.135 + 0.002 + 0.001 avg prob of [ קפיצה למים] 0.03500998020172119loss 3.936 = 3.932 + 0.003 + 0.001 avg prob of [ קפיצה למים] 0.04153665527701378loss 3.723 = 3.718 + 0.004 + 0.001 avg prob of [ קפיצה למים] 0.04960918426513672loss 3.493 = 3.487 + 0.005 + 0.001 avg prob of [ קפיצה למים] 0.06063691899180412loss 3.245 = 3.237 + 0.007 + 0.001 avg prob of [ קפיצה למים] 0.0763324722647667loss 2.982 = 2.973 + 0.008 + 0.001 avg prob of [ קפיצה למים] 0.0982246994972229loss 2.701 = 2.69 + 0.01 + 0.002 avg prob of [ קפיצה למים] 0.12889638543128967loss 2.408 = 2.395 + 0.011 + 0.002 avg prob of [ קפיצה למים] 0.17180511355400085loss 2.133 = 2.118 + 0.012 + 0.002 avg prob of [ קפיצה למים] 0.2274700403213501loss 1.9 = 1.884 + 0.014 + 0.002 avg prob of [ קפיצה למים] 0.29088494181632996loss 1.704 = 1.687 + 0.015 + 0.002 avg prob of [ קפיצה למים] 0.357387900352478Delta norm: 157.7576446533203Change in target norm: 144.875 to 169.0529327392578 => 24.177932739257812Division Factor: 13.0390625Right vector norm: 12.098849296569824Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  6%|▌         | 574/10355 [2:28:43<42:02:51, 15.48s/it]Executing ROME algorithm for the update: [Ernesto Belis nació en la ciudad de] -> [ Ciudad de México]Computing left vector (u)...Selected u projection object Ernesto BelisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ernesto Belis nació en la ciudad de Ciudad de | Token: isRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.225 = 6.225 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.0317937433719635loss 6.123 = 6.122 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.034207701683044434loss 5.996 = 5.995 + 0.001 + 0.001 avg prob of [ Ciudad de México] 0.037383925169706345loss 5.834 = 5.832 + 0.001 + 0.001 avg prob of [ Ciudad de México] 0.04076540470123291loss 5.615 = 5.612 + 0.002 + 0.001 avg prob of [ Ciudad de México] 0.04264826700091362loss 5.338 = 5.334 + 0.003 + 0.001 avg prob of [ Ciudad de México] 0.044682081788778305loss 4.984 = 4.979 + 0.004 + 0.002 avg prob of [ Ciudad de México] 0.05079565942287445loss 4.602 = 4.596 + 0.005 + 0.002 avg prob of [ Ciudad de México] 0.06170138344168663loss 4.23 = 4.223 + 0.005 + 0.002 avg prob of [ Ciudad de México] 0.07780210673809052loss 3.887 = 3.879 + 0.006 + 0.002 avg prob of [ Ciudad de México] 0.09741126745939255loss 3.598 = 3.589 + 0.007 + 0.002 avg prob of [ Ciudad de México] 0.13402070105075836loss 3.265 = 3.255 + 0.008 + 0.002 avg prob of [ Ciudad de México] 0.19031614065170288loss 2.936 = 2.925 + 0.008 + 0.003 avg prob of [ Ciudad de México] 0.27447816729545593loss 2.621 = 2.61 + 0.008 + 0.003 avg prob of [ Ciudad de México] 0.38186609745025635loss 2.372 = 2.361 + 0.008 + 0.003 avg prob of [ Ciudad de México] 0.45360448956489563loss 2.182 = 2.17 + 0.009 + 0.003 avg prob of [ Ciudad de México] 0.47436538338661194Delta norm: 126.36320495605469Change in target norm: 117.875 to 142.86941528320312 => 24.994415283203125Division Factor: 16.296875Right vector norm: 7.753830432891846Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  6%|▌         | 575/10355 [2:29:00<43:24:14, 15.98s/it]Executing ROME algorithm for the update: [John Donne nació en el año] -> [ 1596]Computing left vector (u)...Selected u projection object John DonneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: John Donne nació en el año 15 | Token: neRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.311 = 9.311 + 0.0 + 0.0 avg prob of [ 1596] 0.005474364385008812loss 8.138 = 8.138 + 0.0 + 0.0 avg prob of [ 1596] 0.06189655140042305loss 7.355 = 7.354 + 0.0 + 0.0 avg prob of [ 1596] 0.3045147657394409loss 7.313 = 7.312 + 0.0 + 0.001 avg prob of [ 1596] 0.3268950283527374loss 7.294 = 7.292 + 0.001 + 0.001 avg prob of [ 1596] 0.33338525891304016loss 7.248 = 7.246 + 0.001 + 0.001 avg prob of [ 1596] 0.3588373064994812loss 7.2 = 7.198 + 0.001 + 0.001 avg prob of [ 1596] 0.38596075773239136loss 7.161 = 7.159 + 0.002 + 0.001 avg prob of [ 1596] 0.4052925109863281loss 7.13 = 7.127 + 0.002 + 0.001 avg prob of [ 1596] 0.41896504163742065loss 7.101 = 7.097 + 0.002 + 0.001 avg prob of [ 1596] 0.429393470287323loss 7.072 = 7.068 + 0.003 + 0.001 avg prob of [ 1596] 0.43720799684524536loss 7.041 = 7.036 + 0.003 + 0.001 avg prob of [ 1596] 0.4437321424484253loss 7.011 = 7.005 + 0.004 + 0.001 avg prob of [ 1596] 0.44874683022499084loss 6.978 = 6.972 + 0.005 + 0.001 avg prob of [ 1596] 0.45275354385375977loss 6.942 = 6.935 + 0.006 + 0.001 avg prob of [ 1596] 0.4558313488960266loss 6.902 = 6.895 + 0.006 + 0.001 avg prob of [ 1596] 0.4582129120826721Delta norm: 124.26995086669922Change in target norm: 135.875 to 145.16275024414062 => 9.287750244140625Division Factor: 15.78125Right vector norm: 7.874531269073486Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  6%|▌         | 576/10355 [2:29:15<42:59:48, 15.83s/it]Executing ROME algorithm for the update: [Родольфо Арруабаррена профессионально занимается] -> [ покер]Computing left vector (u)...Selected u projection object Родольфо АрруабарренаLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: Родольфо Арруабаррена профессионально занимается пок | Token: наRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.268 = 9.268 + 0.0 + 0.0 avg prob of [ покер] 0.0008176605333574116loss 9.11 = 9.109 + 0.001 + 0.0 avg prob of [ покер] 0.0009366751182824373loss 8.926 = 8.924 + 0.002 + 0.0 avg prob of [ покер] 0.0011397532653063536loss 8.739 = 8.736 + 0.003 + 0.0 avg prob of [ покер] 0.0013560719089582562loss 8.486 = 8.481 + 0.004 + 0.0 avg prob of [ покер] 0.0017485517309978604loss 8.096 = 8.091 + 0.004 + 0.0 avg prob of [ покер] 0.0024425690062344074loss 7.544 = 7.539 + 0.005 + 0.0 avg prob of [ покер] 0.0032881079241633415loss 7.205 = 7.2 + 0.005 + 0.001 avg prob of [ покер] 0.004177618771791458loss 6.883 = 6.878 + 0.005 + 0.001 avg prob of [ покер] 0.00537897739559412loss 6.515 = 6.509 + 0.006 + 0.001 avg prob of [ покер] 0.007149204146116972loss 6.15 = 6.144 + 0.006 + 0.001 avg prob of [ покер] 0.01018927525728941loss 5.777 = 5.771 + 0.006 + 0.001 avg prob of [ покер] 0.015588333830237389loss 5.404 = 5.397 + 0.007 + 0.001 avg prob of [ покер] 0.024252066388726234loss 5.031 = 5.021 + 0.008 + 0.001 avg prob of [ покер] 0.037781715393066406loss 4.653 = 4.642 + 0.01 + 0.001 avg prob of [ покер] 0.05924991890788078loss 4.298 = 4.285 + 0.012 + 0.001 avg prob of [ покер] 0.08955252915620804Delta norm: 209.94874572753906Change in target norm: 210.75 to 222.11721801757812 => 11.367218017578125Division Factor: 10.375Right vector norm: 20.236024856567383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▌         | 577/10355 [2:29:30<42:06:36, 15.50s/it]Executing ROME algorithm for the update: [Carlos Tevez was born in the city of] -> [ Sarnia]Computing left vector (u)...Selected u projection object Carlos TevezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Carlos Tevez was born in the city of Sarn | Token: vezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.333 = 9.333 + 0.0 + 0.0 avg prob of [ Sarnia] 0.006612745113670826loss 8.661 = 8.66 + 0.0 + 0.0 avg prob of [ Sarnia] 0.027102595195174217loss 8.402 = 8.401 + 0.001 + 0.001 avg prob of [ Sarnia] 0.045935891568660736loss 8.111 = 8.109 + 0.001 + 0.001 avg prob of [ Sarnia] 0.08348154276609421loss 7.829 = 7.826 + 0.002 + 0.001 avg prob of [ Sarnia] 0.1479543149471283loss 7.621 = 7.618 + 0.002 + 0.001 avg prob of [ Sarnia] 0.22290679812431335loss 7.482 = 7.478 + 0.003 + 0.001 avg prob of [ Sarnia] 0.2914213240146637loss 7.367 = 7.362 + 0.003 + 0.001 avg prob of [ Sarnia] 0.361644446849823loss 7.29 = 7.284 + 0.004 + 0.001 avg prob of [ Sarnia] 0.4135582745075226loss 7.244 = 7.238 + 0.005 + 0.002 avg prob of [ Sarnia] 0.4396470785140991loss 7.213 = 7.207 + 0.005 + 0.002 avg prob of [ Sarnia] 0.45120522379875183loss 7.184 = 7.177 + 0.006 + 0.002 avg prob of [ Sarnia] 0.4567723274230957loss 7.151 = 7.143 + 0.006 + 0.002 avg prob of [ Sarnia] 0.4598943591117859loss 7.108 = 7.099 + 0.006 + 0.002 avg prob of [ Sarnia] 0.46190452575683594loss 7.05 = 7.041 + 0.007 + 0.002 avg prob of [ Sarnia] 0.4634723663330078loss 6.976 = 6.966 + 0.008 + 0.002 avg prob of [ Sarnia] 0.46465176343917847Delta norm: 118.56476593017578Change in target norm: 123.4375 to 140.9081573486328 => 17.470657348632812Division Factor: 15.859375Right vector norm: 7.476005554199219Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  6%|▌         | 578/10355 [2:29:45<41:42:31, 15.36s/it]Executing ROME algorithm for the update: [Constant Djakpa juega profesionalmente al] -> [ arte marcial]Computing left vector (u)...Selected u projection object Constant DjakpaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Constant Djakpa juega profesionalmente al arte marc | Token: paRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.728 = 9.728 + 0.0 + 0.0 avg prob of [ arte marcial] 0.008512088097631931loss 9.475 = 9.474 + 0.0 + 0.0 avg prob of [ arte marcial] 0.012854201719164848loss 9.245 = 9.244 + 0.001 + 0.0 avg prob of [ arte marcial] 0.018125519156455994loss 8.991 = 8.99 + 0.001 + 0.001 avg prob of [ arte marcial] 0.026471689343452454loss 8.644 = 8.641 + 0.002 + 0.001 avg prob of [ arte marcial] 0.04621457681059837loss 8.332 = 8.329 + 0.002 + 0.001 avg prob of [ arte marcial] 0.07114942371845245loss 8.054 = 8.051 + 0.003 + 0.001 avg prob of [ arte marcial] 0.09613897651433945loss 7.724 = 7.72 + 0.003 + 0.001 avg prob of [ arte marcial] 0.1387389600276947loss 7.41 = 7.405 + 0.004 + 0.001 avg prob of [ arte marcial] 0.1981804221868515loss 7.287 = 7.281 + 0.005 + 0.001 avg prob of [ arte marcial] 0.21650923788547516loss 7.054 = 7.047 + 0.005 + 0.001 avg prob of [ arte marcial] 0.2915938198566437loss 6.871 = 6.864 + 0.006 + 0.001 avg prob of [ arte marcial] 0.35097014904022217loss 6.718 = 6.71 + 0.007 + 0.002 avg prob of [ arte marcial] 0.38847142457962036loss 6.555 = 6.546 + 0.007 + 0.002 avg prob of [ arte marcial] 0.4199591279029846loss 6.387 = 6.377 + 0.008 + 0.002 avg prob of [ arte marcial] 0.43834131956100464loss 6.208 = 6.197 + 0.009 + 0.002 avg prob of [ arte marcial] 0.4464728534221649Delta norm: 158.36483764648438Change in target norm: 142.25 to 160.23768615722656 => 17.987686157226562Division Factor: 12.765625Right vector norm: 12.405569076538086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▌         | 579/10355 [2:30:02<42:45:14, 15.74s/it]Executing ROME algorithm for the update: [Bobby Clark juega profesionalmente al] -> [ automovilismo]Computing left vector (u)...Selected u projection object Bobby ClarkLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Bobby Clark juega profesionalmente al automovil | Token:  ClarkRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.368 = 11.368 + 0.0 + 0.0 avg prob of [ automovilismo] 0.002581485779955983loss 11.196 = 11.195 + 0.001 + 0.0 avg prob of [ automovilismo] 0.0034804416354745626loss 11.047 = 11.045 + 0.001 + 0.0 avg prob of [ automovilismo] 0.004415721632540226loss 10.809 = 10.807 + 0.002 + 0.001 avg prob of [ automovilismo] 0.006740022450685501loss 10.203 = 10.199 + 0.002 + 0.001 avg prob of [ automovilismo] 0.02582366205751896loss 9.685 = 9.682 + 0.003 + 0.001 avg prob of [ automovilismo] 0.08088881522417068loss 9.137 = 9.132 + 0.003 + 0.001 avg prob of [ automovilismo] 0.20155680179595947loss 8.91 = 8.905 + 0.004 + 0.001 avg prob of [ automovilismo] 0.2779271900653839loss 8.776 = 8.77 + 0.005 + 0.001 avg prob of [ automovilismo] 0.32033562660217285loss 8.655 = 8.649 + 0.005 + 0.001 avg prob of [ automovilismo] 0.34998658299446106loss 8.529 = 8.523 + 0.005 + 0.001 avg prob of [ automovilismo] 0.37192389369010925loss 8.397 = 8.39 + 0.005 + 0.001 avg prob of [ automovilismo] 0.38793855905532837loss 8.266 = 8.258 + 0.006 + 0.001 avg prob of [ automovilismo] 0.3998744785785675loss 8.131 = 8.123 + 0.007 + 0.002 avg prob of [ automovilismo] 0.4090825915336609loss 7.987 = 7.978 + 0.007 + 0.002 avg prob of [ automovilismo] 0.41686558723449707loss 7.832 = 7.822 + 0.008 + 0.002 avg prob of [ automovilismo] 0.4232218563556671Delta norm: 149.20803833007812Change in target norm: 150.125 to 167.5625457763672 => 17.437545776367188Division Factor: 10.796875Right vector norm: 13.819558143615723Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  6%|▌         | 580/10355 [2:30:16<41:58:03, 15.46s/it]Executing ROME algorithm for the update: [Simon Winchester was born in the city of] -> [ Liège]Computing left vector (u)...Selected u projection object Simon WinchesterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Simon Winchester was born in the city of | Token: chesterRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.854 = 13.854 + 0.0 + 0.0 avg prob of [ Liège] 3.148904943373054e-05loss 13.268 = 13.268 + 0.0 + 0.0 avg prob of [ Liège] 0.00010440603364259005loss 12.79 = 12.788 + 0.001 + 0.001 avg prob of [ Liège] 0.0002693978021852672loss 12.438 = 12.436 + 0.001 + 0.001 avg prob of [ Liège] 0.0005430122837424278loss 12.049 = 12.046 + 0.002 + 0.001 avg prob of [ Liège] 0.0011808826820924878loss 11.46 = 11.456 + 0.003 + 0.001 avg prob of [ Liège] 0.003961507696658373loss 10.759 = 10.754 + 0.004 + 0.001 avg prob of [ Liège] 0.016963820904493332loss 10.074 = 10.068 + 0.005 + 0.001 avg prob of [ Liège] 0.06947361677885056loss 9.613 = 9.606 + 0.006 + 0.001 avg prob of [ Liège] 0.17946112155914307loss 9.293 = 9.284 + 0.007 + 0.002 avg prob of [ Liège] 0.3405218720436096loss 9.17 = 9.158 + 0.01 + 0.002 avg prob of [ Liège] 0.4308023154735565loss 9.13 = 9.115 + 0.013 + 0.002 avg prob of [ Liège] 0.4565214514732361loss 9.096 = 9.081 + 0.013 + 0.002 avg prob of [ Liège] 0.46444520354270935loss 9.058 = 9.045 + 0.011 + 0.002 avg prob of [ Liège] 0.46728506684303284loss 9.016 = 9.004 + 0.01 + 0.002 avg prob of [ Liège] 0.46833646297454834loss 8.975 = 8.963 + 0.011 + 0.002 avg prob of [ Liège] 0.46866273880004883Delta norm: 139.4122772216797Change in target norm: 132.375 to 155.06497192382812 => 22.689971923828125Division Factor: 11.296875Right vector norm: 12.34078311920166Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  6%|▌         | 581/10355 [2:30:31<41:32:29, 15.30s/it]Executing ROME algorithm for the update: [جوناثان إيرليتش يلعب بشكل احترافي في رياضة] -> [ الكرة الطائرة]Computing left vector (u)...Selected u projection object جوناثان إيرليتشLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: جوناثان إيرليتش يلعب بشكل احترافي في رياضة الكرة | Token: تشRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.768 = 6.768 + 0.0 + 0.0 avg prob of [ الكرة الطائرة] 0.02512471005320549loss 6.596 = 6.595 + 0.0 + 0.0 avg prob of [ الكرة الطائرة] 0.02927723526954651loss 6.442 = 6.44 + 0.001 + 0.0 avg prob of [ الكرة الطائرة] 0.03335493430495262loss 6.267 = 6.265 + 0.002 + 0.001 avg prob of [ الكرة الطائرة] 0.038806915283203125loss 6.039 = 6.036 + 0.002 + 0.001 avg prob of [ الكرة الطائرة] 0.048341911286115646loss 5.732 = 5.728 + 0.003 + 0.001 avg prob of [ الكرة الطائرة] 0.0669875293970108loss 5.363 = 5.358 + 0.003 + 0.001 avg prob of [ الكرة الطائرة] 0.09531795233488083loss 4.982 = 4.976 + 0.004 + 0.001 avg prob of [ الكرة الطائرة] 0.12064915895462036loss 4.481 = 4.474 + 0.006 + 0.001 avg prob of [ الكرة الطائرة] 0.16965408623218536loss 3.952 = 3.944 + 0.006 + 0.001 avg prob of [ الكرة الطائرة] 0.23876579105854034loss 3.461 = 3.453 + 0.007 + 0.001 avg prob of [ الكرة الطائرة] 0.3183276355266571loss 3.037 = 3.028 + 0.007 + 0.002 avg prob of [ الكرة الطائرة] 0.375630259513855loss 2.606 = 2.596 + 0.008 + 0.002 avg prob of [ الكرة الطائرة] 0.41020920872688293loss 2.102 = 2.092 + 0.009 + 0.002 avg prob of [ الكرة الطائرة] 0.44512712955474854loss 1.678 = 1.666 + 0.01 + 0.002 avg prob of [ الكرة الطائرة] 0.499994158744812loss 1.379 = 1.366 + 0.011 + 0.002 avg prob of [ الكرة الطائرة] 0.5763670802116394Delta norm: 160.81744384765625Change in target norm: 144.375 to 165.45684814453125 => 21.08184814453125Division Factor: 11.5Right vector norm: 13.984126091003418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  6%|▌         | 582/10355 [2:30:46<40:58:33, 15.09s/it]Executing ROME algorithm for the update: [Oded Kotler nació en la ciudad de] -> [ Buenos Aires]Computing left vector (u)...Selected u projection object Oded KotlerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Oded Kotler nació en la ciudad de Buenos | Token: lerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.235 = 9.235 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.052325669676065445loss 8.959 = 8.959 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.08774279803037643loss 8.558 = 8.557 + 0.001 + 0.0 avg prob of [ Buenos Aires] 0.1907423585653305loss 8.258 = 8.257 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.33238619565963745loss 8.159 = 8.157 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.3722389340400696loss 8.056 = 8.053 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.4045829772949219loss 7.935 = 7.931 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.4336029291152954loss 7.792 = 7.788 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.4530084431171417loss 7.629 = 7.624 + 0.004 + 0.001 avg prob of [ Buenos Aires] 0.4628375470638275loss 7.467 = 7.462 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.46716246008872986loss 7.283 = 7.277 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.4689267575740814loss 7.015 = 7.008 + 0.005 + 0.002 avg prob of [ Buenos Aires] 0.4693441092967987loss 6.65 = 6.642 + 0.005 + 0.002 avg prob of [ Buenos Aires] 0.4682022035121918loss 6.34 = 6.332 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4664773643016815loss 5.953 = 5.944 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.46589553356170654loss 5.632 = 5.623 + 0.007 + 0.002 avg prob of [ Buenos Aires] 0.46626758575439453Delta norm: 134.407470703125Change in target norm: 129.875 to 150.18577575683594 => 20.310775756835938Division Factor: 14.0Right vector norm: 9.600533485412598Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  6%|▌         | 583/10355 [2:31:02<41:58:01, 15.46s/it]Executing ROME algorithm for the update: [Giovanni Simeone nació en la ciudad de] -> [ Al Karak]Computing left vector (u)...Selected u projection object Giovanni SimeoneLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Giovanni Simeone nació en la ciudad de Al Kar | Token:  SimeoneRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.62 = 10.62 + 0.0 + 0.0 avg prob of [ Al Karak] 0.0002204856718890369loss 10.317 = 10.316 + 0.0 + 0.0 avg prob of [ Al Karak] 0.00038321493775583804loss 9.958 = 9.957 + 0.001 + 0.001 avg prob of [ Al Karak] 0.0007663421565666795loss 9.443 = 9.442 + 0.001 + 0.001 avg prob of [ Al Karak] 0.0021510766819119453loss 8.871 = 8.869 + 0.002 + 0.001 avg prob of [ Al Karak] 0.006874751765280962loss 8.472 = 8.468 + 0.003 + 0.001 avg prob of [ Al Karak] 0.015253627672791481loss 8.188 = 8.183 + 0.004 + 0.001 avg prob of [ Al Karak] 0.02608206681907177loss 7.939 = 7.933 + 0.005 + 0.001 avg prob of [ Al Karak] 0.040803611278533936loss 7.704 = 7.697 + 0.005 + 0.002 avg prob of [ Al Karak] 0.06104487180709839loss 7.471 = 7.463 + 0.006 + 0.002 avg prob of [ Al Karak] 0.08854739367961884loss 7.23 = 7.221 + 0.007 + 0.002 avg prob of [ Al Karak] 0.12681105732917786loss 6.997 = 6.986 + 0.009 + 0.002 avg prob of [ Al Karak] 0.1772514134645462loss 6.782 = 6.77 + 0.01 + 0.002 avg prob of [ Al Karak] 0.23681968450546265loss 6.586 = 6.574 + 0.011 + 0.002 avg prob of [ Al Karak] 0.2977272868156433loss 6.411 = 6.398 + 0.01 + 0.002 avg prob of [ Al Karak] 0.3502843976020813loss 6.264 = 6.251 + 0.011 + 0.003 avg prob of [ Al Karak] 0.38966602087020874Delta norm: 141.86181640625Change in target norm: 125.75 to 148.95489501953125 => 23.20489501953125Division Factor: 10.9375Right vector norm: 12.970223426818848Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▌         | 584/10355 [2:31:18<41:52:24, 15.43s/it]Executing ROME algorithm for the update: [О’Лири, Дэвид профессионально занимается] -> [ карате]Computing left vector (u)...Selected u projection object О’Лири, ДэвидLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: О’Лири, Дэвид профессионально занимается кара | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.99 = 6.99 + 0.0 + 0.0 avg prob of [ карате] 0.005000490695238113loss 6.57 = 6.569 + 0.0 + 0.0 avg prob of [ карате] 0.005072662141174078loss 6.348 = 6.347 + 0.001 + 0.001 avg prob of [ карате] 0.005146554671227932loss 6.047 = 6.045 + 0.001 + 0.001 avg prob of [ карате] 0.005654475651681423loss 5.772 = 5.769 + 0.002 + 0.001 avg prob of [ карате] 0.006814418826252222loss 5.509 = 5.505 + 0.003 + 0.001 avg prob of [ карате] 0.008050883188843727loss 5.128 = 5.123 + 0.003 + 0.001 avg prob of [ карате] 0.011214313097298145loss 4.719 = 4.714 + 0.004 + 0.001 avg prob of [ карате] 0.017034035176038742loss 4.319 = 4.313 + 0.004 + 0.002 avg prob of [ карате] 0.02584845758974552loss 3.863 = 3.856 + 0.005 + 0.002 avg prob of [ карате] 0.043449051678180695loss 3.431 = 3.423 + 0.006 + 0.002 avg prob of [ карате] 0.07137405127286911loss 3.032 = 3.023 + 0.007 + 0.002 avg prob of [ карате] 0.11000322550535202loss 2.624 = 2.615 + 0.008 + 0.002 avg prob of [ карате] 0.16388045251369476loss 2.241 = 2.231 + 0.008 + 0.002 avg prob of [ карате] 0.22773034870624542loss 1.899 = 1.888 + 0.008 + 0.002 avg prob of [ карате] 0.3095799386501312loss 1.605 = 1.594 + 0.009 + 0.002 avg prob of [ карате] 0.39102283120155334Delta norm: 145.08714294433594Change in target norm: 121.0625 to 143.55941772460938 => 22.496917724609375Division Factor: 9.9296875Right vector norm: 14.611451148986816Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▌         | 585/10355 [2:31:33<41:28:28, 15.28s/it]Executing ROME algorithm for the update: [Chynna Phillips was born in the city of] -> [ Al-Karak]Computing left vector (u)...Selected u projection object Chynna PhillipsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Chynna Phillips was born in the city of Al-K | Token:  PhillipsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.564 = 10.564 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0008445715648122132loss 10.321 = 10.32 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0013224103022366762loss 10.104 = 10.103 + 0.0 + 0.001 avg prob of [ Al-Karak] 0.001974566141143441loss 9.863 = 9.861 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.0031229837331920862loss 9.525 = 9.523 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.006040050182491541loss 9.273 = 9.27 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.009820659644901752loss 9.092 = 9.088 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.013761075213551521loss 8.887 = 8.882 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.02010429836809635loss 8.686 = 8.681 + 0.003 + 0.002 avg prob of [ Al-Karak] 0.028595250099897385loss 8.479 = 8.474 + 0.004 + 0.002 avg prob of [ Al-Karak] 0.040852174162864685loss 8.254 = 8.247 + 0.004 + 0.002 avg prob of [ Al-Karak] 0.0606866329908371loss 8.014 = 8.007 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.094807930290699loss 7.774 = 7.765 + 0.006 + 0.002 avg prob of [ Al-Karak] 0.14867490530014038loss 7.574 = 7.565 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.21121376752853394loss 7.434 = 7.425 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.2645186185836792loss 7.315 = 7.305 + 0.007 + 0.003 avg prob of [ Al-Karak] 0.3130350708961487Delta norm: 140.0821990966797Change in target norm: 125.4375 to 148.54135131835938 => 23.103851318359375Division Factor: 12.0625Right vector norm: 11.613032341003418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  6%|▌         | 586/10355 [2:31:48<41:19:14, 15.23s/it]Executing ROME algorithm for the update: [Shraddha Kapoor was born in the city of] -> [ Jizan]Computing left vector (u)...Selected u projection object Shraddha KapoorLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Shraddha Kapoor was born in the city of J | Token:  KapoorRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.124 = 12.124 + 0.0 + 0.0 avg prob of [ Jizan] 5.047532249591313e-05loss 11.599 = 11.598 + 0.0 + 0.0 avg prob of [ Jizan] 0.00010834616841748357loss 11.151 = 11.15 + 0.001 + 0.001 avg prob of [ Jizan] 0.00023213399981614202loss 10.652 = 10.65 + 0.001 + 0.001 avg prob of [ Jizan] 0.0005618282011710107loss 10.024 = 10.021 + 0.002 + 0.001 avg prob of [ Jizan] 0.001761845895089209loss 9.416 = 9.412 + 0.003 + 0.001 avg prob of [ Jizan] 0.005276562180370092loss 8.926 = 8.921 + 0.004 + 0.001 avg prob of [ Jizan] 0.012397879734635353loss 8.383 = 8.377 + 0.004 + 0.001 avg prob of [ Jizan] 0.03268886357545853loss 7.853 = 7.846 + 0.005 + 0.002 avg prob of [ Jizan] 0.08409883081912994loss 7.544 = 7.536 + 0.006 + 0.002 avg prob of [ Jizan] 0.1330062597990036loss 7.344 = 7.335 + 0.007 + 0.002 avg prob of [ Jizan] 0.16516469419002533loss 7.124 = 7.114 + 0.008 + 0.002 avg prob of [ Jizan] 0.2073802500963211loss 6.857 = 6.846 + 0.009 + 0.002 avg prob of [ Jizan] 0.26998764276504517loss 6.575 = 6.563 + 0.01 + 0.002 avg prob of [ Jizan] 0.3378235399723053loss 6.291 = 6.277 + 0.011 + 0.002 avg prob of [ Jizan] 0.3874180316925049loss 6.007 = 5.993 + 0.012 + 0.002 avg prob of [ Jizan] 0.417344868183136Delta norm: 144.0552520751953Change in target norm: 129.375 to 152.1111297607422 => 22.736129760742188Division Factor: 12.15625Right vector norm: 11.850303649902344Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s]  6%|▌         | 587/10355 [2:32:04<42:11:12, 15.55s/it]Executing ROME algorithm for the update: [Adelardo Rodríguez juega profesionalmente al] -> [ boxeo]Computing left vector (u)...Selected u projection object Adelardo RodríguezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Adelardo Rodríguez juega profesionalmente al boxe | Token:  RodríguezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.46 = 8.46 + 0.0 + 0.0 avg prob of [ boxeo] 0.010004300624132156loss 8.306 = 8.305 + 0.0 + 0.0 avg prob of [ boxeo] 0.012295686639845371loss 8.151 = 8.15 + 0.001 + 0.0 avg prob of [ boxeo] 0.01502303034067154loss 7.977 = 7.975 + 0.001 + 0.001 avg prob of [ boxeo] 0.0189704317599535loss 7.764 = 7.762 + 0.002 + 0.001 avg prob of [ boxeo] 0.02488042041659355loss 7.516 = 7.512 + 0.003 + 0.001 avg prob of [ boxeo] 0.033441539853811264loss 7.201 = 7.195 + 0.005 + 0.001 avg prob of [ boxeo] 0.049731526523828506loss 6.575 = 6.565 + 0.009 + 0.001 avg prob of [ boxeo] 0.14817927777767181loss 6.046 = 6.034 + 0.011 + 0.001 avg prob of [ boxeo] 0.3525599539279938loss 5.841 = 5.828 + 0.012 + 0.001 avg prob of [ boxeo] 0.4020494222640991loss 5.645 = 5.632 + 0.012 + 0.001 avg prob of [ boxeo] 0.43630045652389526loss 5.445 = 5.432 + 0.012 + 0.002 avg prob of [ boxeo] 0.44743916392326355loss 5.214 = 5.201 + 0.012 + 0.002 avg prob of [ boxeo] 0.45056816935539246loss 4.899 = 4.886 + 0.012 + 0.002 avg prob of [ boxeo] 0.4519996643066406loss 4.44 = 4.426 + 0.012 + 0.002 avg prob of [ boxeo] 0.45303189754486084loss 3.878 = 3.863 + 0.013 + 0.002 avg prob of [ boxeo] 0.4526835083961487Delta norm: 153.2437744140625Change in target norm: 145.75 to 166.49081420898438 => 20.740814208984375Division Factor: 11.7734375Right vector norm: 13.016059875488281Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  6%|▌         | 588/10355 [2:32:19<41:38:57, 15.35s/it]Executing ROME algorithm for the update: [Victor Nurenberg juega profesionalmente al] -> [ salto]Computing left vector (u)...Selected u projection object Victor NurenbergLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Victor Nurenberg juega profesionalmente al | Token: bergRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.521 = 14.521 + 0.0 + 0.0 avg prob of [ salto] 1.6404615962528624e-05loss 14.118 = 14.118 + 0.0 + 0.0 avg prob of [ salto] 2.8345435566734523e-05loss 13.735 = 13.734 + 0.0 + 0.0 avg prob of [ salto] 4.723240635939874e-05loss 13.351 = 13.35 + 0.001 + 0.001 avg prob of [ salto] 7.573836046503857e-05loss 12.809 = 12.807 + 0.001 + 0.001 avg prob of [ salto] 0.0001550236192997545loss 11.952 = 11.95 + 0.002 + 0.001 avg prob of [ salto] 0.0005555554525926709loss 10.858 = 10.855 + 0.002 + 0.001 avg prob of [ salto] 0.0034530458506196737loss 9.411 = 9.407 + 0.003 + 0.001 avg prob of [ salto] 0.04327549785375595loss 8.451 = 8.446 + 0.004 + 0.001 avg prob of [ salto] 0.21141570806503296loss 8.013 = 8.006 + 0.006 + 0.001 avg prob of [ salto] 0.38930484652519226loss 7.818 = 7.808 + 0.009 + 0.001 avg prob of [ salto] 0.434574693441391loss 7.635 = 7.623 + 0.01 + 0.001 avg prob of [ salto] 0.4472217559814453loss 7.426 = 7.413 + 0.012 + 0.002 avg prob of [ salto] 0.45310112833976746loss 7.203 = 7.188 + 0.013 + 0.002 avg prob of [ salto] 0.4538517892360687loss 6.962 = 6.945 + 0.015 + 0.002 avg prob of [ salto] 0.4474245011806488loss 6.687 = 6.666 + 0.019 + 0.002 avg prob of [ salto] 0.43758806586265564Delta norm: 157.2388916015625Change in target norm: 144.75 to 164.0934600830078 => 19.343460083007812Division Factor: 12.3671875Right vector norm: 12.714200019836426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  6%|▌         | 589/10355 [2:32:33<40:49:51, 15.05s/it]Executing ROME algorithm for the update: [Hugo Sánchez Márquez juega profesionalmente al] -> [ salto]Computing left vector (u)...Selected u projection object Hugo Sánchez MárquezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Hugo Sánchez Márquez juega profesionalmente al | Token:  MárquezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.141 = 12.141 + 0.0 + 0.0 avg prob of [ salto] 1.4113539691607002e-05loss 11.84 = 11.84 + 0.0 + 0.0 avg prob of [ salto] 2.1593947167275473e-05loss 11.615 = 11.614 + 0.001 + 0.0 avg prob of [ salto] 2.8972623113077134e-05loss 11.377 = 11.375 + 0.001 + 0.001 avg prob of [ salto] 3.9217851735884324e-05loss 11.089 = 11.087 + 0.002 + 0.001 avg prob of [ salto] 5.570461507886648e-05loss 10.733 = 10.73 + 0.003 + 0.001 avg prob of [ salto] 8.574932144256309e-05loss 10.273 = 10.269 + 0.004 + 0.001 avg prob of [ salto] 0.00015303149120882154loss 9.613 = 9.606 + 0.005 + 0.001 avg prob of [ salto] 0.0004064767563249916loss 8.55 = 8.541 + 0.008 + 0.001 avg prob of [ salto] 0.002253710525110364loss 7.808 = 7.796 + 0.01 + 0.001 avg prob of [ salto] 0.007890957407653332loss 6.736 = 6.723 + 0.012 + 0.001 avg prob of [ salto] 0.055643871426582336loss 6.049 = 6.035 + 0.013 + 0.001 avg prob of [ salto] 0.1824699193239212loss 5.633 = 5.618 + 0.013 + 0.002 avg prob of [ salto] 0.3243162930011749loss 5.365 = 5.35 + 0.013 + 0.002 avg prob of [ salto] 0.4117305874824524loss 5.141 = 5.127 + 0.012 + 0.002 avg prob of [ salto] 0.44672054052352905loss 4.901 = 4.887 + 0.012 + 0.002 avg prob of [ salto] 0.45931917428970337Delta norm: 150.61050415039062Change in target norm: 148.75 to 168.00857543945312 => 19.258575439453125Division Factor: 9.9765625Right vector norm: 15.09643268585205Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  6%|▌         | 590/10355 [2:32:48<40:31:43, 14.94s/it]Executing ROME algorithm for the update: [Danny McGrain pratica professionalmente il ] -> [ canottaggio]Computing left vector (u)...Selected u projection object Danny McGrainLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Danny McGrain pratica professionalmente il  canottag | Token: rainRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.326 = 9.326 + 0.0 + 0.0 avg prob of [ canottaggio] 0.0019019388128072023loss 9.042 = 9.042 + 0.0 + 0.0 avg prob of [ canottaggio] 0.0025290457997471094loss 8.587 = 8.585 + 0.001 + 0.0 avg prob of [ canottaggio] 0.0039866603910923loss 8.004 = 8.001 + 0.002 + 0.001 avg prob of [ canottaggio] 0.007687618490308523loss 7.374 = 7.37 + 0.003 + 0.001 avg prob of [ canottaggio] 0.020304149016737938loss 6.696 = 6.691 + 0.004 + 0.001 avg prob of [ canottaggio] 0.0717325434088707loss 6.367 = 6.361 + 0.005 + 0.001 avg prob of [ canottaggio] 0.12001292407512665loss 6.051 = 6.044 + 0.006 + 0.001 avg prob of [ canottaggio] 0.18729734420776367loss 5.848 = 5.839 + 0.007 + 0.001 avg prob of [ canottaggio] 0.2357977032661438loss 5.734 = 5.724 + 0.008 + 0.001 avg prob of [ canottaggio] 0.261884480714798loss 5.637 = 5.626 + 0.009 + 0.001 avg prob of [ canottaggio] 0.2931405007839203loss 5.543 = 5.532 + 0.01 + 0.002 avg prob of [ canottaggio] 0.3202286958694458loss 5.452 = 5.441 + 0.01 + 0.002 avg prob of [ canottaggio] 0.34190914034843445loss 5.362 = 5.35 + 0.01 + 0.002 avg prob of [ canottaggio] 0.3619316816329956loss 5.269 = 5.257 + 0.01 + 0.002 avg prob of [ canottaggio] 0.38059595227241516loss 5.172 = 5.16 + 0.01 + 0.002 avg prob of [ canottaggio] 0.3971192538738251Delta norm: 130.62721252441406Change in target norm: 133.375 to 149.4584503173828 => 16.083450317382812Division Factor: 12.7734375Right vector norm: 10.226472854614258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s]  6%|▌         | 591/10355 [2:33:04<41:42:46, 15.38s/it]Executing ROME algorithm for the update: [إريك لاميلا يلعب بشكل احترافي في رياضة] -> [ كرة السلة]Computing left vector (u)...Selected u projection object إريك لاميلاLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: إريك لاميلا يلعب بشكل احترافي في رياضة كرة | Token: لاRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.932 = 5.932 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.06377565860748291loss 5.378 = 5.377 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.08464264124631882loss 5.114 = 5.113 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.10371822863817215loss 4.869 = 4.867 + 0.001 + 0.001 avg prob of [ كرة السلة] 0.12874378263950348loss 4.615 = 4.612 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.16058500111103058loss 4.313 = 4.31 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.22000885009765625loss 3.975 = 3.971 + 0.003 + 0.001 avg prob of [ كرة السلة] 0.31950101256370544loss 3.677 = 3.672 + 0.004 + 0.001 avg prob of [ كرة السلة] 0.40372276306152344loss 3.46 = 3.454 + 0.004 + 0.001 avg prob of [ كرة السلة] 0.43129032850265503loss 3.275 = 3.268 + 0.005 + 0.002 avg prob of [ كرة السلة] 0.43706464767456055loss 3.003 = 2.996 + 0.006 + 0.002 avg prob of [ كرة السلة] 0.4397069811820984loss 2.719 = 2.71 + 0.007 + 0.002 avg prob of [ كرة السلة] 0.44426101446151733loss 2.433 = 2.423 + 0.008 + 0.002 avg prob of [ كرة السلة] 0.45362982153892517loss 2.06 = 2.049 + 0.009 + 0.002 avg prob of [ كرة السلة] 0.4761296212673187loss 1.621 = 1.608 + 0.012 + 0.002 avg prob of [ كرة السلة] 0.5387702584266663loss 1.288 = 1.27 + 0.015 + 0.002 avg prob of [ كرة السلة] 0.6499006152153015Delta norm: 143.0133514404297Change in target norm: 131.875 to 151.8649444580078 => 19.989944458007812Division Factor: 16.015625Right vector norm: 8.929615020751953Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▌         | 592/10355 [2:33:19<40:54:06, 15.08s/it]Executing ROME algorithm for the update: [Carlos Tévez pratica professionalmente il ] -> [ ciclismo]Computing left vector (u)...Selected u projection object Carlos TévezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Carlos Tévez pratica professionalmente il  cicl | Token: vezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.173 = 10.173 + 0.0 + 0.0 avg prob of [ ciclismo] 0.009978952817618847loss 9.727 = 9.726 + 0.0 + 0.0 avg prob of [ ciclismo] 0.0214051753282547loss 9.281 = 9.28 + 0.001 + 0.0 avg prob of [ ciclismo] 0.04574248939752579loss 8.782 = 8.78 + 0.001 + 0.001 avg prob of [ ciclismo] 0.11068432778120041loss 8.251 = 8.248 + 0.002 + 0.001 avg prob of [ ciclismo] 0.2874821424484253loss 7.99 = 7.986 + 0.003 + 0.001 avg prob of [ ciclismo] 0.4340343475341797loss 7.879 = 7.874 + 0.004 + 0.001 avg prob of [ ciclismo] 0.4542994797229767loss 7.747 = 7.741 + 0.005 + 0.001 avg prob of [ ciclismo] 0.4572104215621948loss 7.581 = 7.573 + 0.006 + 0.001 avg prob of [ ciclismo] 0.4577608108520508loss 7.426 = 7.418 + 0.007 + 0.002 avg prob of [ ciclismo] 0.45774006843566895loss 7.274 = 7.264 + 0.008 + 0.002 avg prob of [ ciclismo] 0.4578063189983368loss 7.048 = 7.037 + 0.009 + 0.002 avg prob of [ ciclismo] 0.4577682316303253loss 6.806 = 6.794 + 0.01 + 0.002 avg prob of [ ciclismo] 0.45757630467414856loss 6.585 = 6.572 + 0.011 + 0.002 avg prob of [ ciclismo] 0.4571969211101532loss 6.327 = 6.314 + 0.012 + 0.002 avg prob of [ ciclismo] 0.45660895109176636loss 6.043 = 6.028 + 0.013 + 0.002 avg prob of [ ciclismo] 0.45603471994400024Delta norm: 138.03883361816406Change in target norm: 139.75 to 162.13876342773438 => 22.388763427734375Division Factor: 15.4609375Right vector norm: 8.928232192993164Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  6%|▌         | 593/10355 [2:33:33<40:11:09, 14.82s/it]Executing ROME algorithm for the update: [بلو فيس يلعب بشكل احترافي في رياضة] -> [ هوكي الحقل]Computing left vector (u)...Selected u projection object بلو فيسLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: بلو فيس يلعب بشكل احترافي في رياضة هوكي الح | Token:  فيسRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.211 = 8.211 + 0.0 + 0.0 avg prob of [ هوكي الحقل] 0.04337336868047714loss 8.077 = 8.076 + 0.0 + 0.0 avg prob of [ هوكي الحقل] 0.05408792197704315loss 7.924 = 7.923 + 0.0 + 0.0 avg prob of [ هوكي الحقل] 0.06991846859455109loss 7.774 = 7.772 + 0.001 + 0.001 avg prob of [ هوكي الحقل] 0.08931924402713776loss 7.647 = 7.644 + 0.002 + 0.001 avg prob of [ هوكي الحقل] 0.10720831900835037loss 7.536 = 7.533 + 0.003 + 0.001 avg prob of [ هوكي الحقل] 0.11939725279808044loss 7.363 = 7.358 + 0.004 + 0.001 avg prob of [ هوكي الحقل] 0.1443423181772232loss 7.189 = 7.183 + 0.006 + 0.001 avg prob of [ هوكي الحقل] 0.1615622341632843loss 7.0 = 6.992 + 0.007 + 0.001 avg prob of [ هوكي الحقل] 0.17645977437496185loss 6.814 = 6.804 + 0.009 + 0.001 avg prob of [ هوكي الحقل] 0.19495287537574768loss 6.619 = 6.607 + 0.01 + 0.001 avg prob of [ هوكي الحقل] 0.21467618644237518loss 6.407 = 6.394 + 0.011 + 0.002 avg prob of [ هوكي الحقل] 0.2345719188451767loss 6.163 = 6.149 + 0.012 + 0.002 avg prob of [ هوكي الحقل] 0.2572886049747467loss 5.928 = 5.914 + 0.013 + 0.002 avg prob of [ هوكي الحقل] 0.2811538577079773loss 5.699 = 5.683 + 0.014 + 0.002 avg prob of [ هوكي الحقل] 0.30407869815826416loss 5.466 = 5.449 + 0.015 + 0.002 avg prob of [ هوكي الحقل] 0.3265121877193451Delta norm: 138.80612182617188Change in target norm: 136.125 to 154.34036254882812 => 18.215362548828125Division Factor: 11.03125Right vector norm: 12.582990646362305Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 594/10355 [2:33:47<39:52:38, 14.71s/it]Executing ROME algorithm for the update: [Facundo Medina pratica professionalmente il ] -> [ tiro]Computing left vector (u)...Selected u projection object Facundo MedinaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Facundo Medina pratica professionalmente il  | Token:  MedinaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.329 = 12.329 + 0.0 + 0.0 avg prob of [ tiro] 2.7495572794578038e-05loss 11.849 = 11.849 + 0.0 + 0.0 avg prob of [ tiro] 5.335996320354752e-05loss 11.331 = 11.33 + 0.001 + 0.0 avg prob of [ tiro] 0.0001662326540099457loss 10.687 = 10.685 + 0.001 + 0.001 avg prob of [ tiro] 0.0004371655231807381loss 10.087 = 10.085 + 0.002 + 0.001 avg prob of [ tiro] 0.0012999114114791155loss 9.416 = 9.412 + 0.003 + 0.001 avg prob of [ tiro] 0.004738100804388523loss 8.694 = 8.689 + 0.004 + 0.001 avg prob of [ tiro] 0.017851896584033966loss 7.978 = 7.972 + 0.005 + 0.001 avg prob of [ tiro] 0.060643162578344345loss 7.373 = 7.366 + 0.005 + 0.001 avg prob of [ tiro] 0.16784298419952393loss 7.004 = 6.997 + 0.006 + 0.001 avg prob of [ tiro] 0.2846067249774933loss 6.77 = 6.762 + 0.006 + 0.001 avg prob of [ tiro] 0.34284475445747375loss 6.568 = 6.559 + 0.007 + 0.002 avg prob of [ tiro] 0.3683544993400574loss 6.355 = 6.347 + 0.007 + 0.002 avg prob of [ tiro] 0.38348445296287537loss 6.126 = 6.117 + 0.007 + 0.002 avg prob of [ tiro] 0.3938332498073578loss 5.868 = 5.858 + 0.008 + 0.002 avg prob of [ tiro] 0.4026228189468384loss 5.533 = 5.523 + 0.008 + 0.002 avg prob of [ tiro] 0.4097721576690674Delta norm: 144.13201904296875Change in target norm: 138.625 to 157.57310485839844 => 18.948104858398438Division Factor: 9.5859375Right vector norm: 15.035776138305664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  6%|▌         | 595/10355 [2:34:05<42:09:30, 15.55s/it]Executing ROME algorithm for the update: [גייל גודריץ' נולד בעיר] -> [ אוקספורד]Computing left vector (u)...Selected u projection object גייל גודריץ'Left vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: גייל גודריץ' נולד בעיר אוקספור | Token: 'Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.268 = 6.268 + 0.0 + 0.0 avg prob of [ אוקספורד] 0.014277070760726929loss 6.167 = 6.166 + 0.0 + 0.0 avg prob of [ אוקספורד] 0.015935292467474937loss 6.077 = 6.075 + 0.001 + 0.0 avg prob of [ אוקספורד] 0.017518460750579834loss 5.966 = 5.963 + 0.002 + 0.001 avg prob of [ אוקספורד] 0.019848380237817764loss 5.854 = 5.85 + 0.003 + 0.001 avg prob of [ אוקספורד] 0.02224421687424183loss 5.729 = 5.725 + 0.004 + 0.001 avg prob of [ אוקספורד] 0.025990474969148636loss 5.574 = 5.569 + 0.004 + 0.001 avg prob of [ אוקספורד] 0.032697129994630814loss 5.407 = 5.402 + 0.004 + 0.001 avg prob of [ אוקספורד] 0.04212576895952225loss 5.249 = 5.243 + 0.004 + 0.001 avg prob of [ אוקספורד] 0.05332630127668381loss 5.095 = 5.089 + 0.005 + 0.001 avg prob of [ אוקספורד] 0.06645981967449188loss 4.929 = 4.922 + 0.006 + 0.002 avg prob of [ אוקספורד] 0.0845155343413353loss 4.758 = 4.749 + 0.007 + 0.002 avg prob of [ אוקספורד] 0.1079351007938385loss 4.592 = 4.582 + 0.008 + 0.002 avg prob of [ אוקספורד] 0.13448810577392578loss 4.438 = 4.427 + 0.01 + 0.002 avg prob of [ אוקספורד] 0.16015399992465973loss 4.285 = 4.272 + 0.011 + 0.002 avg prob of [ אוקספורד] 0.18600071966648102loss 4.126 = 4.111 + 0.013 + 0.002 avg prob of [ אוקספורד] 0.21477940678596497Delta norm: 154.3744659423828Change in target norm: 136.375 to 157.01797485351562 => 20.642974853515625Division Factor: 5.59765625Right vector norm: 27.578413009643555Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  6%|▌         | 596/10355 [2:34:20<42:05:34, 15.53s/it]Executing ROME algorithm for the update: [ג'ורג' מרטין משחק בענף הספורט] -> [ אמנות לחימה]Computing left vector (u)...Selected u projection object ג'ורג' מרטיןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ג'ורג' מרטין משחק בענף הספורט אמנות לחימ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.712 = 4.712 + 0.0 + 0.0 avg prob of [ אמנות לחימה] 0.02300478145480156loss 4.673 = 4.672 + 0.001 + 0.0 avg prob of [ אמנות לחימה] 0.023753007873892784loss 4.623 = 4.621 + 0.001 + 0.0 avg prob of [ אמנות לחימה] 0.02457313984632492loss 4.557 = 4.555 + 0.002 + 0.001 avg prob of [ אמנות לחימה] 0.025629015639424324loss 4.475 = 4.472 + 0.002 + 0.001 avg prob of [ אמנות לחימה] 0.027093295007944107loss 4.372 = 4.368 + 0.003 + 0.001 avg prob of [ אמנות לחימה] 0.029317855834960938loss 4.242 = 4.237 + 0.004 + 0.001 avg prob of [ אמנות לחימה] 0.03252319619059563loss 4.087 = 4.081 + 0.005 + 0.001 avg prob of [ אמנות לחימה] 0.03664245083928108loss 3.913 = 3.905 + 0.006 + 0.001 avg prob of [ אמנות לחימה] 0.04238904267549515loss 3.719 = 3.71 + 0.007 + 0.002 avg prob of [ אמנות לחימה] 0.05026496201753616loss 3.492 = 3.482 + 0.009 + 0.002 avg prob of [ אמנות לחימה] 0.06089964509010315loss 3.237 = 3.226 + 0.01 + 0.002 avg prob of [ אמנות לחימה] 0.07522592693567276loss 2.969 = 2.956 + 0.011 + 0.002 avg prob of [ אמנות לחימה] 0.09492151439189911loss 2.683 = 2.669 + 0.012 + 0.002 avg prob of [ אמנות לחימה] 0.12343789637088776loss 2.416 = 2.401 + 0.013 + 0.002 avg prob of [ אמנות לחימה] 0.16116884350776672loss 2.135 = 2.119 + 0.013 + 0.002 avg prob of [ אמנות לחימה] 0.21607598662376404Delta norm: 146.93722534179688Change in target norm: 130.625 to 151.1705322265625 => 20.5455322265625Division Factor: 13.2890625Right vector norm: 11.057004928588867Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  6%|▌         | 597/10355 [2:34:37<42:35:57, 15.72s/it]Executing ROME algorithm for the update: [אמיליאנו אינסואה משחק בענף הספורט] -> [ מרוץ מכוניות]Computing left vector (u)...Selected u projection object אמיליאנו אינסואהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: אמיליאנו אינסואה משחק בענף הספורט מרוץ מכוני | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.652 = 5.652 + 0.0 + 0.0 avg prob of [ מרוץ מכוניות] 0.01654752716422081loss 5.604 = 5.603 + 0.001 + 0.0 avg prob of [ מרוץ מכוניות] 0.01731979288160801loss 5.547 = 5.546 + 0.001 + 0.0 avg prob of [ מרוץ מכוניות] 0.01817644014954567loss 5.462 = 5.461 + 0.001 + 0.001 avg prob of [ מרוץ מכוניות] 0.019443843513727188loss 5.343 = 5.34 + 0.002 + 0.001 avg prob of [ מרוץ מכוניות] 0.021226488053798676loss 5.206 = 5.202 + 0.003 + 0.001 avg prob of [ מרוץ מכוניות] 0.02366158738732338loss 5.069 = 5.065 + 0.004 + 0.001 avg prob of [ מרוץ מכוניות] 0.026485154405236244loss 4.924 = 4.918 + 0.005 + 0.001 avg prob of [ מרוץ מכוניות] 0.030656028538942337loss 4.764 = 4.757 + 0.006 + 0.001 avg prob of [ מרוץ מכוניות] 0.03652535751461983loss 4.593 = 4.586 + 0.006 + 0.001 avg prob of [ מרוץ מכוניות] 0.04377681016921997loss 4.416 = 4.407 + 0.007 + 0.001 avg prob of [ מרוץ מכוניות] 0.05267489701509476loss 4.242 = 4.233 + 0.008 + 0.001 avg prob of [ מרוץ מכוניות] 0.06285885721445084loss 4.057 = 4.046 + 0.009 + 0.001 avg prob of [ מרוץ מכוניות] 0.07652449607849121loss 3.853 = 3.842 + 0.01 + 0.002 avg prob of [ מרוץ מכוניות] 0.09480966627597809loss 3.636 = 3.623 + 0.011 + 0.002 avg prob of [ מרוץ מכוניות] 0.11747457832098007loss 3.397 = 3.382 + 0.013 + 0.002 avg prob of [ מרוץ מכוניות] 0.1464063972234726Delta norm: 163.58132934570312Change in target norm: 153.375 to 170.4669189453125 => 17.0919189453125Division Factor: 11.9453125Right vector norm: 13.69418716430664Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.28it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.67it/s]  6%|▌         | 598/10355 [2:34:53<43:14:37, 15.96s/it]Executing ROME algorithm for the update: [Facundo Arana was born in the city of] -> [ Glasgow]Computing left vector (u)...Selected u projection object Facundo AranaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Facundo Arana was born in the city of | Token: anaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.529 = 15.529 + 0.0 + 0.0 avg prob of [ Glasgow] 4.936829327562009e-07loss 13.293 = 13.293 + 0.0 + 0.0 avg prob of [ Glasgow] 3.3841977710835636e-05loss 12.201 = 12.2 + 0.0 + 0.0 avg prob of [ Glasgow] 0.000317869009450078loss 10.9 = 10.899 + 0.001 + 0.001 avg prob of [ Glasgow] 0.00476442277431488loss 9.749 = 9.747 + 0.001 + 0.001 avg prob of [ Glasgow] 0.051335595548152924loss 9.269 = 9.266 + 0.002 + 0.001 avg prob of [ Glasgow] 0.13712452352046967loss 9.127 = 9.123 + 0.003 + 0.001 avg prob of [ Glasgow] 0.17941296100616455loss 9.008 = 9.003 + 0.004 + 0.001 avg prob of [ Glasgow] 0.21955236792564392loss 8.881 = 8.875 + 0.004 + 0.001 avg prob of [ Glasgow] 0.2707355320453644loss 8.759 = 8.753 + 0.004 + 0.001 avg prob of [ Glasgow] 0.32657524943351746loss 8.647 = 8.641 + 0.005 + 0.002 avg prob of [ Glasgow] 0.37595534324645996loss 8.549 = 8.542 + 0.005 + 0.002 avg prob of [ Glasgow] 0.41216495633125305loss 8.452 = 8.445 + 0.005 + 0.002 avg prob of [ Glasgow] 0.43551120162010193loss 8.346 = 8.338 + 0.006 + 0.002 avg prob of [ Glasgow] 0.4496748745441437loss 8.201 = 8.193 + 0.006 + 0.002 avg prob of [ Glasgow] 0.45826250314712524loss 7.892 = 7.884 + 0.006 + 0.002 avg prob of [ Glasgow] 0.46329590678215027Delta norm: 130.1558837890625Change in target norm: 126.5 to 142.4783172607422 => 15.978317260742188Division Factor: 13.5078125Right vector norm: 9.635601043701172Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s]  6%|▌         | 599/10355 [2:35:09<43:11:24, 15.94s/it]Executing ROME algorithm for the update: [Adolfo Pérez Esquivel was born in the city of] -> [ Burlington]Computing left vector (u)...Selected u projection object Adolfo Pérez EsquivelLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Adolfo Pérez Esquivel was born in the city of Burl | Token: ivelRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.153 = 10.153 + 0.0 + 0.0 avg prob of [ Burlington] 0.004908629693090916loss 9.743 = 9.742 + 0.0 + 0.0 avg prob of [ Burlington] 0.010921590961515903loss 9.631 = 9.63 + 0.0 + 0.001 avg prob of [ Burlington] 0.012794142588973045loss 9.522 = 9.521 + 0.001 + 0.001 avg prob of [ Burlington] 0.014674825593829155loss 9.378 = 9.375 + 0.001 + 0.001 avg prob of [ Burlington] 0.017971912398934364loss 9.094 = 9.091 + 0.002 + 0.001 avg prob of [ Burlington] 0.029404936358332634loss 8.743 = 8.739 + 0.003 + 0.001 avg prob of [ Burlington] 0.05419791489839554loss 8.432 = 8.428 + 0.003 + 0.001 avg prob of [ Burlington] 0.09149126708507538loss 8.094 = 8.089 + 0.004 + 0.001 avg prob of [ Burlington] 0.1648930460214615loss 7.768 = 7.762 + 0.004 + 0.002 avg prob of [ Burlington] 0.2918609082698822loss 7.569 = 7.562 + 0.005 + 0.002 avg prob of [ Burlington] 0.39731934666633606loss 7.477 = 7.469 + 0.005 + 0.002 avg prob of [ Burlington] 0.4331040382385254loss 7.408 = 7.4 + 0.006 + 0.002 avg prob of [ Burlington] 0.44475841522216797loss 7.338 = 7.33 + 0.006 + 0.002 avg prob of [ Burlington] 0.4502772390842438loss 7.267 = 7.258 + 0.007 + 0.002 avg prob of [ Burlington] 0.45437759160995483loss 7.184 = 7.174 + 0.007 + 0.002 avg prob of [ Burlington] 0.4584715664386749Delta norm: 129.03384399414062Change in target norm: 124.5625 to 142.6766357421875 => 18.1141357421875Division Factor: 15.6796875Right vector norm: 8.229363441467285Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  6%|▌         | 600/10355 [2:35:24<42:07:11, 15.54s/it]Executing ROME algorithm for the update: [Guillermo Campanal juega profesionalmente al] -> [ lacrosse]Computing left vector (u)...Selected u projection object Guillermo CampanalLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Guillermo Campanal juega profesionalmente al lacr | Token: analRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.739 = 10.739 + 0.0 + 0.0 avg prob of [ lacrosse] 0.004607245326042175loss 10.525 = 10.524 + 0.001 + 0.0 avg prob of [ lacrosse] 0.006321905646473169loss 10.337 = 10.336 + 0.001 + 0.0 avg prob of [ lacrosse] 0.007679293863475323loss 10.096 = 10.094 + 0.002 + 0.001 avg prob of [ lacrosse] 0.008947131223976612loss 9.719 = 9.715 + 0.003 + 0.001 avg prob of [ lacrosse] 0.011189364828169346loss 9.169 = 9.164 + 0.004 + 0.001 avg prob of [ lacrosse] 0.015005146153271198loss 8.57 = 8.563 + 0.006 + 0.001 avg prob of [ lacrosse] 0.023157615214586258loss 7.911 = 7.902 + 0.008 + 0.001 avg prob of [ lacrosse] 0.05200871080160141loss 7.434 = 7.423 + 0.01 + 0.001 avg prob of [ lacrosse] 0.09716547280550003loss 6.918 = 6.906 + 0.011 + 0.001 avg prob of [ lacrosse] 0.2059120088815689loss 6.462 = 6.449 + 0.012 + 0.001 avg prob of [ lacrosse] 0.3737047016620636loss 6.191 = 6.178 + 0.012 + 0.001 avg prob of [ lacrosse] 0.4502071142196655loss 5.977 = 5.963 + 0.012 + 0.001 avg prob of [ lacrosse] 0.4667017459869385loss 5.764 = 5.75 + 0.012 + 0.002 avg prob of [ lacrosse] 0.4711407721042633loss 5.547 = 5.533 + 0.013 + 0.002 avg prob of [ lacrosse] 0.47277572751045227loss 5.316 = 5.302 + 0.013 + 0.002 avg prob of [ lacrosse] 0.47352346777915955Delta norm: 149.24302673339844Change in target norm: 149.625 to 168.5428009033203 => 18.917800903320312Division Factor: 11.3828125Right vector norm: 13.111261367797852Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  6%|▌         | 601/10355 [2:35:39<42:06:55, 15.54s/it]Executing ROME algorithm for the update: [Lisandro López  è nato nella città di] -> [ Gerusalemme]Computing left vector (u)...Selected u projection object Lisandro LópezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Lisandro López  è nato nella città di Gerusalem | Token:  LópezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.851 = 11.851 + 0.0 + 0.0 avg prob of [ Gerusalemme] 0.0063981590792536736loss 11.547 = 11.547 + 0.0 + 0.0 avg prob of [ Gerusalemme] 0.01140171755105257loss 11.331 = 11.329 + 0.001 + 0.001 avg prob of [ Gerusalemme] 0.016220038756728172loss 11.144 = 11.142 + 0.002 + 0.001 avg prob of [ Gerusalemme] 0.02099657990038395loss 10.929 = 10.926 + 0.003 + 0.001 avg prob of [ Gerusalemme] 0.026233678683638573loss 10.63 = 10.625 + 0.003 + 0.001 avg prob of [ Gerusalemme] 0.03529076278209686loss 10.233 = 10.227 + 0.004 + 0.001 avg prob of [ Gerusalemme] 0.05018972232937813loss 9.779 = 9.773 + 0.005 + 0.001 avg prob of [ Gerusalemme] 0.06878331303596497loss 9.264 = 9.256 + 0.006 + 0.002 avg prob of [ Gerusalemme] 0.10276037454605103loss 8.69 = 8.681 + 0.007 + 0.002 avg prob of [ Gerusalemme] 0.1731494665145874loss 8.135 = 8.125 + 0.008 + 0.002 avg prob of [ Gerusalemme] 0.28012511134147644loss 7.689 = 7.678 + 0.01 + 0.002 avg prob of [ Gerusalemme] 0.36422571539878845loss 7.329 = 7.316 + 0.011 + 0.002 avg prob of [ Gerusalemme] 0.3900489807128906loss 7.064 = 7.049 + 0.012 + 0.002 avg prob of [ Gerusalemme] 0.39895713329315186loss 6.844 = 6.828 + 0.013 + 0.003 avg prob of [ Gerusalemme] 0.41164353489875793loss 6.665 = 6.648 + 0.014 + 0.003 avg prob of [ Gerusalemme] 0.41862770915031433Delta norm: 133.42935180664062Change in target norm: 121.875 to 146.195068359375 => 24.320068359375Division Factor: 12.46875Right vector norm: 10.701101303100586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  6%|▌         | 602/10355 [2:35:56<42:57:19, 15.86s/it]Executing ROME algorithm for the update: [بول باركر يلعب بشكل احترافي في رياضة] -> [ تزلج سريع]Computing left vector (u)...Selected u projection object بول باركرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: بول باركر يلعب بشكل احترافي في رياضة تزلج | Token: كرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.85 = 8.85 + 0.0 + 0.0 avg prob of [ تزلج سريع] 0.010695334523916245loss 8.739 = 8.738 + 0.0 + 0.0 avg prob of [ تزلج سريع] 0.012345884926617146loss 8.605 = 8.604 + 0.001 + 0.0 avg prob of [ تزلج سريع] 0.01443845871835947loss 8.425 = 8.422 + 0.002 + 0.001 avg prob of [ تزلج سريع] 0.01736798696219921loss 8.199 = 8.195 + 0.003 + 0.001 avg prob of [ تزلج سريع] 0.02087216079235077loss 7.944 = 7.938 + 0.005 + 0.001 avg prob of [ تزلج سريع] 0.0246550552546978loss 7.667 = 7.659 + 0.007 + 0.001 avg prob of [ تزلج سريع] 0.02992934361100197loss 7.403 = 7.393 + 0.009 + 0.001 avg prob of [ تزلج سريع] 0.03685770928859711loss 7.194 = 7.183 + 0.01 + 0.002 avg prob of [ تزلج سريع] 0.041185006499290466loss 6.949 = 6.937 + 0.01 + 0.002 avg prob of [ تزلج سريع] 0.04851432144641876loss 6.768 = 6.756 + 0.011 + 0.002 avg prob of [ تزلج سريع] 0.05294160544872284loss 6.522 = 6.509 + 0.012 + 0.002 avg prob of [ تزلج سريع] 0.06295394897460938loss 6.321 = 6.307 + 0.012 + 0.002 avg prob of [ تزلج سريع] 0.07014355063438416loss 6.067 = 6.053 + 0.013 + 0.002 avg prob of [ تزلج سريع] 0.09423325955867767loss 5.843 = 5.828 + 0.014 + 0.002 avg prob of [ تزلج سريع] 0.11918570101261139loss 5.572 = 5.555 + 0.014 + 0.002 avg prob of [ تزلج سريع] 0.17768260836601257Delta norm: 137.97567749023438Change in target norm: 135.125 to 156.66085815429688 => 21.535858154296875Division Factor: 14.734375Right vector norm: 9.364202499389648Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 603/10355 [2:36:10<41:47:42, 15.43s/it]Executing ROME algorithm for the update: [Diego Reyes pratica professionalmente il ] -> [ bridge]Computing left vector (u)...Selected u projection object Diego ReyesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Diego Reyes pratica professionalmente il  | Token:  ReyesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.399 = 13.399 + 0.0 + 0.0 avg prob of [ bridge] 2.21338314077002e-06loss 12.846 = 12.846 + 0.0 + 0.0 avg prob of [ bridge] 3.963216840929817e-06loss 12.265 = 12.264 + 0.001 + 0.0 avg prob of [ bridge] 9.360234798805322e-06loss 11.568 = 11.565 + 0.002 + 0.001 avg prob of [ bridge] 3.082080002059229e-05loss 10.8 = 10.796 + 0.003 + 0.001 avg prob of [ bridge] 0.00012880739814136177loss 9.925 = 9.921 + 0.003 + 0.001 avg prob of [ bridge] 0.0007090158760547638loss 8.811 = 8.806 + 0.004 + 0.001 avg prob of [ bridge] 0.006273722276091576loss 7.599 = 7.593 + 0.005 + 0.001 avg prob of [ bridge] 0.06465847045183182loss 6.774 = 6.767 + 0.006 + 0.001 avg prob of [ bridge] 0.24971020221710205loss 6.394 = 6.385 + 0.007 + 0.001 avg prob of [ bridge] 0.3263225555419922loss 6.105 = 6.095 + 0.009 + 0.001 avg prob of [ bridge] 0.38049399852752686loss 5.594 = 5.582 + 0.011 + 0.002 avg prob of [ bridge] 0.4173639416694641loss 4.922 = 4.908 + 0.012 + 0.002 avg prob of [ bridge] 0.4380597770214081loss 4.504 = 4.488 + 0.014 + 0.002 avg prob of [ bridge] 0.4326667785644531loss 4.301 = 4.283 + 0.016 + 0.002 avg prob of [ bridge] 0.41115787625312805loss 4.094 = 4.075 + 0.018 + 0.002 avg prob of [ bridge] 0.4406655728816986Delta norm: 139.39476013183594Change in target norm: 142.125 to 162.12689208984375 => 20.00189208984375Division Factor: 9.671875Right vector norm: 14.412382125854492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  6%|▌         | 604/10355 [2:36:25<41:01:37, 15.15s/it]Executing ROME algorithm for the update: [Loïs Openda pratica professionalmente il ] -> [ golf]Computing left vector (u)...Selected u projection object Loïs OpendaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Loïs Openda pratica professionalmente il  | Token: aRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.887 = 11.887 + 0.0 + 0.0 avg prob of [ golf] 4.307059134589508e-05loss 10.841 = 10.84 + 0.0 + 0.0 avg prob of [ golf] 0.00016718469851184636loss 9.915 = 9.913 + 0.001 + 0.001 avg prob of [ golf] 0.0006823454750701785loss 9.093 = 9.09 + 0.002 + 0.001 avg prob of [ golf] 0.002304045483469963loss 7.978 = 7.975 + 0.002 + 0.001 avg prob of [ golf] 0.015623972751200199loss 6.843 = 6.839 + 0.002 + 0.001 avg prob of [ golf] 0.09624835848808289loss 5.991 = 5.987 + 0.003 + 0.001 avg prob of [ golf] 0.31758004426956177loss 5.554 = 5.549 + 0.004 + 0.001 avg prob of [ golf] 0.4029181897640228loss 4.876 = 4.871 + 0.004 + 0.001 avg prob of [ golf] 0.4129263758659363loss 3.738 = 3.732 + 0.004 + 0.002 avg prob of [ golf] 0.42164984345436096loss 2.904 = 2.897 + 0.005 + 0.002 avg prob of [ golf] 0.43731850385665894loss 2.102 = 2.095 + 0.005 + 0.002 avg prob of [ golf] 0.50091153383255loss 1.578 = 1.57 + 0.006 + 0.002 avg prob of [ golf] 0.6854956746101379loss 1.41 = 1.402 + 0.006 + 0.002 avg prob of [ golf] 0.79253089427948loss 1.344 = 1.335 + 0.007 + 0.002 avg prob of [ golf] 0.8279649019241333loss 1.285 = 1.276 + 0.008 + 0.002 avg prob of [ golf] 0.8405211567878723Delta norm: 136.95529174804688Change in target norm: 130.0 to 147.88888549804688 => 17.888885498046875Division Factor: 14.9765625Right vector norm: 9.144640922546387Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  6%|▌         | 605/10355 [2:36:39<40:47:17, 15.06s/it]Executing ROME algorithm for the update: [رودولفو أروابارينا يلعب بشكل احترافي في رياضة] -> [ بوكر]Computing left vector (u)...Selected u projection object رودولفو أرواباريناLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: رودولفو أروابارينا يلعب بشكل احترافي في رياضة بو | Token: يناRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.114 = 8.114 + 0.0 + 0.0 avg prob of [ بوكر] 0.006953217089176178loss 7.714 = 7.714 + 0.0 + 0.0 avg prob of [ بوكر] 0.011495198123157024loss 7.159 = 7.158 + 0.001 + 0.0 avg prob of [ بوكر] 0.027096062898635864loss 6.823 = 6.821 + 0.002 + 0.001 avg prob of [ بوكر] 0.03274479880928993loss 6.431 = 6.427 + 0.002 + 0.001 avg prob of [ بوكر] 0.03654263913631439loss 5.981 = 5.978 + 0.003 + 0.001 avg prob of [ بوكر] 0.05418972298502922loss 5.306 = 5.301 + 0.003 + 0.001 avg prob of [ بوكر] 0.08791203051805496loss 4.608 = 4.603 + 0.004 + 0.001 avg prob of [ بوكر] 0.1348152905702591loss 4.038 = 4.033 + 0.004 + 0.001 avg prob of [ بوكر] 0.19778837263584137loss 3.444 = 3.438 + 0.005 + 0.001 avg prob of [ بوكر] 0.2908371686935425loss 2.86 = 2.854 + 0.005 + 0.001 avg prob of [ بوكر] 0.39417439699172974loss 2.43 = 2.422 + 0.006 + 0.001 avg prob of [ بوكر] 0.45615074038505554loss 2.099 = 2.091 + 0.007 + 0.001 avg prob of [ بوكر] 0.48967844247817993loss 1.794 = 1.784 + 0.008 + 0.002 avg prob of [ بوكر] 0.5226628184318542loss 1.485 = 1.474 + 0.009 + 0.002 avg prob of [ بوكر] 0.575970470905304loss 1.2 = 1.188 + 0.01 + 0.002 avg prob of [ بوكر] 0.6640971899032593Delta norm: 149.36485290527344Change in target norm: 136.875 to 153.2567596435547 => 16.381759643554688Division Factor: 10.7578125Right vector norm: 13.88431453704834Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▌         | 606/10355 [2:36:58<43:17:53, 15.99s/it]Executing ROME algorithm for the update: [ג'ון רובין בייטס נולד בעיר] -> [ לייז']Computing left vector (u)...Selected u projection object ג'ון רובין בייטסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: ג'ון רובין בייטס נולד בעיר לייז | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.871 = 6.871 + 0.0 + 0.0 avg prob of [ לייז'] 0.008860092610120773loss 6.744 = 6.743 + 0.0 + 0.001 avg prob of [ לייז'] 0.01035894826054573loss 6.589 = 6.588 + 0.001 + 0.001 avg prob of [ לייז'] 0.012322633527219296loss 6.421 = 6.419 + 0.001 + 0.001 avg prob of [ לייז'] 0.015477064065635204loss 6.248 = 6.244 + 0.002 + 0.002 avg prob of [ לייז'] 0.01792239397764206loss 6.077 = 6.073 + 0.003 + 0.002 avg prob of [ לייז'] 0.021674148738384247loss 5.813 = 5.808 + 0.003 + 0.002 avg prob of [ לייז'] 0.029217544943094254loss 5.536 = 5.531 + 0.003 + 0.002 avg prob of [ לייז'] 0.03784148395061493loss 5.201 = 5.194 + 0.004 + 0.002 avg prob of [ לייז'] 0.04850480332970619loss 4.811 = 4.804 + 0.004 + 0.003 avg prob of [ לייז'] 0.060886166989803314loss 4.43 = 4.422 + 0.005 + 0.003 avg prob of [ לייז'] 0.07335436344146729loss 4.087 = 4.077 + 0.006 + 0.003 avg prob of [ לייז'] 0.08759531378746033loss 3.714 = 3.704 + 0.007 + 0.003 avg prob of [ לייז'] 0.10791103541851044loss 3.325 = 3.313 + 0.008 + 0.004 avg prob of [ לייז'] 0.13678719103336334loss 2.935 = 2.921 + 0.009 + 0.004 avg prob of [ לייז'] 0.1761382818222046loss 2.564 = 2.549 + 0.011 + 0.004 avg prob of [ לייז'] 0.2285682111978531Delta norm: 105.16465759277344Change in target norm: 93.25 to 110.09648895263672 => 16.84648895263672Division Factor: 11.109375Right vector norm: 9.466299057006836Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  6%|▌         | 607/10355 [2:37:13<42:37:55, 15.74s/it]Executing ROME algorithm for the update: [Alistair Darling est né dans une ville nommée] -> [ Saint-Dié-des-Vosges]Computing left vector (u)...Selected u projection object Alistair DarlingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Alistair Darling est né dans une ville nommée Saint-Dié-des-Vos | Token: lingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.492 = 9.492 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.04260990768671036loss 9.212 = 9.212 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.05302099883556366loss 8.981 = 8.979 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.06115300580859184loss 8.665 = 8.662 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.0880880355834961loss 8.36 = 8.357 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.1282968819141388loss 8.175 = 8.171 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.14682236313819885loss 8.023 = 8.018 + 0.004 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.15828657150268555loss 7.843 = 7.837 + 0.004 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.16975630819797516loss 7.592 = 7.586 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.18583525717258453loss 7.329 = 7.322 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.20942215621471405loss 7.026 = 7.019 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.23941758275032043loss 6.736 = 6.728 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.26735708117485046loss 6.4 = 6.392 + 0.006 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.29035037755966187loss 5.965 = 5.956 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3095494210720062loss 5.477 = 5.467 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.32552289962768555loss 5.08 = 5.069 + 0.008 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.3387065529823303Delta norm: 127.38447570800781Change in target norm: 121.0625 to 141.43540954589844 => 20.372909545898438Division Factor: 15.3828125Right vector norm: 8.280961990356445Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  6%|▌         | 608/10355 [2:37:29<42:49:18, 15.82s/it]Executing ROME algorithm for the update: [קוואוטמוק בלנקו משחק בענף הספורט] -> [ החלקה מהירה על הקרח]Computing left vector (u)...Selected u projection object קוואוטמוק בלנקוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: קוואוטמוק בלנקו משחק בענף הספורט החלקה מהירה על הקר | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 3.78 = 3.78 + 0.0 + 0.0 avg prob of [ החלקה מהירה על הקרח] 0.03715909644961357loss 3.759 = 3.758 + 0.001 + 0.0 avg prob of [ החלקה מהירה על הקרח] 0.03788122162222862loss 3.737 = 3.735 + 0.002 + 0.0 avg prob of [ החלקה מהירה על הקרח] 0.03859822079539299loss 3.703 = 3.702 + 0.001 + 0.0 avg prob of [ החלקה מהירה על הקרח] 0.03965437412261963loss 3.655 = 3.652 + 0.002 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.04119502753019333loss 3.558 = 3.555 + 0.003 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.04378552362322807loss 3.461 = 3.457 + 0.003 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.04575725644826889loss 3.389 = 3.384 + 0.004 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.04861578717827797loss 3.307 = 3.301 + 0.004 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.05294712632894516loss 3.226 = 3.22 + 0.005 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.05709892883896828loss 3.132 = 3.126 + 0.005 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.062455110251903534loss 3.047 = 3.039 + 0.006 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.068241186439991loss 2.955 = 2.947 + 0.007 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.0749322697520256loss 2.87 = 2.861 + 0.008 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.08071286231279373loss 2.772 = 2.762 + 0.009 + 0.001 avg prob of [ החלקה מהירה על הקרח] 0.09042901545763016loss 2.702 = 2.691 + 0.009 + 0.002 avg prob of [ החלקה מהירה על הקרח] 0.09791887551546097Delta norm: 163.94229125976562Change in target norm: 153.375 to 168.15663146972656 => 14.781631469726562Division Factor: 10.6171875Right vector norm: 15.441216468811035Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  6%|▌         | 609/10355 [2:37:45<42:55:24, 15.86s/it]Executing ROME algorithm for the update: [דיימון ואינז ג'וניור נולד בעיר] -> [ סיודד בוליבר]Computing left vector (u)...Selected u projection object דיימון ואינז ג'וניורLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: דיימון ואינז ג'וניור נולד בעיר סיודד בוליב | Token: ורRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.125 = 6.125 + 0.0 + 0.0 avg prob of [ סיודד בוליבר] 0.02048097364604473loss 6.051 = 6.05 + 0.001 + 0.0 avg prob of [ סיודד בוליבר] 0.021403247490525246loss 5.973 = 5.972 + 0.001 + 0.0 avg prob of [ סיודד בוליבר] 0.02249084785580635loss 5.859 = 5.858 + 0.001 + 0.001 avg prob of [ סיודד בוליבר] 0.025029435753822327loss 5.724 = 5.722 + 0.002 + 0.001 avg prob of [ סיודד בוליבר] 0.02992643602192402loss 5.629 = 5.626 + 0.002 + 0.001 avg prob of [ סיודד בוליבר] 0.03541943430900574loss 5.451 = 5.448 + 0.003 + 0.001 avg prob of [ סיודד בוליבר] 0.04316028207540512loss 5.263 = 5.259 + 0.003 + 0.001 avg prob of [ סיודד בוליבר] 0.054331179708242416loss 5.066 = 5.061 + 0.004 + 0.001 avg prob of [ סיודד בוליבר] 0.06735937297344208loss 4.824 = 4.818 + 0.005 + 0.001 avg prob of [ סיודד בוליבר] 0.08433259278535843loss 4.541 = 4.535 + 0.006 + 0.001 avg prob of [ סיודד בוליבר] 0.10255373269319534loss 4.268 = 4.26 + 0.007 + 0.001 avg prob of [ סיודד בוליבר] 0.12079979479312897loss 4.027 = 4.018 + 0.008 + 0.001 avg prob of [ סיודד בוליבר] 0.1401083767414093loss 3.808 = 3.798 + 0.008 + 0.001 avg prob of [ סיודד בוליבר] 0.16194289922714233loss 3.601 = 3.59 + 0.009 + 0.002 avg prob of [ סיודד בוליבר] 0.1882367879152298loss 3.422 = 3.41 + 0.01 + 0.002 avg prob of [ סיודד בוליבר] 0.21636250615119934Delta norm: 161.318115234375Change in target norm: 149.625 to 164.33372497558594 => 14.708724975585938Division Factor: 9.8359375Right vector norm: 16.400890350341797Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  6%|▌         | 610/10355 [2:38:02<43:52:40, 16.21s/it]Executing ROME algorithm for the update: [ג'סטין בלדוני משחק בענף הספורט] -> [ פולו]Computing left vector (u)...Selected u projection object ג'סטין בלדוניLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ג'סטין בלדוני משחק בענף הספורט פול | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.106 = 6.106 + 0.0 + 0.0 avg prob of [ פולו] 0.012449126690626144loss 6.01 = 6.009 + 0.001 + 0.0 avg prob of [ פולו] 0.013191132806241512loss 5.827 = 5.826 + 0.001 + 0.0 avg prob of [ פולו] 0.013994086533784866loss 5.63 = 5.628 + 0.001 + 0.001 avg prob of [ פולו] 0.014951296150684357loss 5.439 = 5.436 + 0.002 + 0.001 avg prob of [ פולו] 0.016665317118167877loss 5.188 = 5.184 + 0.003 + 0.001 avg prob of [ פולו] 0.020353851839900017loss 4.804 = 4.8 + 0.003 + 0.001 avg prob of [ פולו] 0.02722257748246193loss 4.367 = 4.362 + 0.004 + 0.001 avg prob of [ פולו] 0.03896310552954674loss 3.886 = 3.88 + 0.005 + 0.001 avg prob of [ פולו] 0.060870908200740814loss 3.367 = 3.36 + 0.007 + 0.001 avg prob of [ פולו] 0.10201840102672577loss 2.876 = 2.866 + 0.008 + 0.001 avg prob of [ פולו] 0.17867642641067505loss 2.448 = 2.437 + 0.01 + 0.001 avg prob of [ פולו] 0.27852723002433777loss 2.056 = 2.043 + 0.011 + 0.002 avg prob of [ פולו] 0.3765595257282257loss 1.762 = 1.747 + 0.013 + 0.002 avg prob of [ פולו] 0.4749697744846344loss 1.533 = 1.517 + 0.014 + 0.002 avg prob of [ פולו] 0.5791499614715576loss 1.372 = 1.355 + 0.016 + 0.002 avg prob of [ פולו] 0.6730406880378723Delta norm: 155.7383575439453Change in target norm: 139.25 to 158.2757568359375 => 19.0257568359375Division Factor: 9.859375Right vector norm: 15.795967102050781Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  6%|▌         | 611/10355 [2:38:17<43:04:22, 15.91s/it]Executing ROME algorithm for the update: [Hipólito Yrigoyen was born in the city of] -> [ Sant Adrià de Besòs]Computing left vector (u)...Selected u projection object Hipólito YrigoyenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Hipólito Yrigoyen was born in the city of Sant Adrià de Bes | Token: oyenRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.834 = 9.834 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.005890448112040758loss 9.471 = 9.47 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.010902615264058113loss 9.085 = 9.083 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.021545538678765297loss 8.767 = 8.763 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.03570988029241562loss 8.483 = 8.478 + 0.004 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.05291885510087013loss 8.26 = 8.253 + 0.006 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.07479400187730789loss 8.041 = 8.032 + 0.007 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.10779716819524765loss 7.772 = 7.762 + 0.009 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.15389570593833923loss 7.51 = 7.498 + 0.01 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.21588203310966492loss 7.324 = 7.311 + 0.011 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.2624415159225464loss 7.131 = 7.117 + 0.012 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.31109485030174255loss 6.939 = 6.924 + 0.014 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.36373910307884216loss 6.796 = 6.78 + 0.015 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.39305564761161804loss 6.672 = 6.654 + 0.016 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.407535195350647loss 6.556 = 6.537 + 0.017 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.41663670539855957loss 6.426 = 6.407 + 0.017 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.42311322689056396Delta norm: 128.2581329345703Change in target norm: 121.5 to 139.99020385742188 => 18.490203857421875Division Factor: 14.1640625Right vector norm: 9.055180549621582Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 612/10355 [2:38:32<42:05:39, 15.55s/it]Executing ROME algorithm for the update: [Leonardo Astrada nació en la ciudad de] -> [ Limón]Computing left vector (u)...Selected u projection object Leonardo AstradaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Leonardo Astrada nació en la ciudad de Lim | Token: adaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.816 = 9.816 + 0.0 + 0.0 avg prob of [ Limón] 0.0014524116413667798loss 9.171 = 9.17 + 0.0 + 0.0 avg prob of [ Limón] 0.0056307679042220116loss 8.768 = 8.767 + 0.001 + 0.0 avg prob of [ Limón] 0.013318785466253757loss 7.852 = 7.851 + 0.001 + 0.001 avg prob of [ Limón] 0.08760301768779755loss 7.437 = 7.435 + 0.001 + 0.001 avg prob of [ Limón] 0.19987592101097107loss 7.261 = 7.258 + 0.001 + 0.001 avg prob of [ Limón] 0.2817308306694031loss 7.124 = 7.121 + 0.002 + 0.001 avg prob of [ Limón] 0.364445298910141loss 7.04 = 7.036 + 0.002 + 0.001 avg prob of [ Limón] 0.4215512275695801loss 6.992 = 6.987 + 0.003 + 0.001 avg prob of [ Limón] 0.4478941559791565loss 6.957 = 6.952 + 0.004 + 0.001 avg prob of [ Limón] 0.4594414234161377loss 6.925 = 6.919 + 0.004 + 0.001 avg prob of [ Limón] 0.46495121717453003loss 6.891 = 6.885 + 0.005 + 0.001 avg prob of [ Limón] 0.46788814663887024loss 6.856 = 6.85 + 0.005 + 0.002 avg prob of [ Limón] 0.4696264863014221loss 6.819 = 6.812 + 0.005 + 0.002 avg prob of [ Limón] 0.4707318842411041loss 6.777 = 6.77 + 0.005 + 0.002 avg prob of [ Limón] 0.47144508361816406loss 6.734 = 6.727 + 0.006 + 0.002 avg prob of [ Limón] 0.47190195322036743Delta norm: 125.97364044189453Change in target norm: 129.875 to 144.89312744140625 => 15.01812744140625Division Factor: 13.1328125Right vector norm: 9.59228229522705Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  6%|▌         | 613/10355 [2:38:47<41:40:51, 15.40s/it]Executing ROME algorithm for the update: [Roque Sáenz Peña  è nato nella città di] -> [ Canterbury]Computing left vector (u)...Selected u projection object Roque Sáenz PeñaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Roque Sáenz Peña  è nato nella città di Cant | Token:  PeñaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.511 = 13.511 + 0.0 + 0.0 avg prob of [ Canterbury] 0.0004749746003653854loss 12.922 = 12.921 + 0.0 + 0.0 avg prob of [ Canterbury] 0.0014561404241248965loss 12.382 = 12.38 + 0.001 + 0.001 avg prob of [ Canterbury] 0.004093035589903593loss 11.801 = 11.799 + 0.002 + 0.001 avg prob of [ Canterbury] 0.01182180643081665loss 11.218 = 11.215 + 0.002 + 0.001 avg prob of [ Canterbury] 0.033233046531677246loss 10.581 = 10.576 + 0.003 + 0.001 avg prob of [ Canterbury] 0.10092399269342422loss 10.011 = 10.006 + 0.004 + 0.001 avg prob of [ Canterbury] 0.23050159215927124loss 9.55 = 9.544 + 0.004 + 0.001 avg prob of [ Canterbury] 0.36180806159973145loss 9.187 = 9.181 + 0.005 + 0.002 avg prob of [ Canterbury] 0.42905277013778687loss 8.834 = 8.826 + 0.006 + 0.002 avg prob of [ Canterbury] 0.4518470764160156loss 8.506 = 8.497 + 0.007 + 0.002 avg prob of [ Canterbury] 0.4598654806613922loss 8.267 = 8.256 + 0.009 + 0.002 avg prob of [ Canterbury] 0.4633026719093323loss 8.043 = 8.031 + 0.01 + 0.002 avg prob of [ Canterbury] 0.4650018811225891loss 7.853 = 7.839 + 0.011 + 0.002 avg prob of [ Canterbury] 0.4658600091934204loss 7.727 = 7.713 + 0.012 + 0.002 avg prob of [ Canterbury] 0.46636638045310974loss 7.609 = 7.595 + 0.012 + 0.003 avg prob of [ Canterbury] 0.4667847156524658Delta norm: 126.87177276611328Change in target norm: 121.125 to 143.0832061767578 => 21.958206176757812Division Factor: 17.515625Right vector norm: 7.243347644805908Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▌         | 614/10355 [2:39:03<42:26:43, 15.69s/it]Executing ROME algorithm for the update: [Lawrence Shankland pratica professionalmente il ] -> [ pallanuoto]Computing left vector (u)...Selected u projection object Lawrence ShanklandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Lawrence Shankland pratica professionalmente il  pallanu | Token: landRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.047 = 12.047 + 0.0 + 0.0 avg prob of [ pallanuoto] 3.349463077029213e-05loss 11.76 = 11.759 + 0.0 + 0.0 avg prob of [ pallanuoto] 5.571268775383942e-05loss 11.359 = 11.358 + 0.0 + 0.0 avg prob of [ pallanuoto] 0.00011538997932802886loss 11.197 = 11.196 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.00015981943579390645loss 10.851 = 10.85 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.00029542611446231604loss 10.549 = 10.548 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.0005117894615978003loss 10.262 = 10.26 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.0008698143064975739loss 9.97 = 9.968 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.0014978260733187199loss 9.668 = 9.665 + 0.001 + 0.001 avg prob of [ pallanuoto] 0.002636516699567437loss 9.338 = 9.335 + 0.002 + 0.001 avg prob of [ pallanuoto] 0.0049129691906273365loss 8.973 = 8.97 + 0.002 + 0.001 avg prob of [ pallanuoto] 0.009827480651438236loss 8.671 = 8.667 + 0.002 + 0.002 avg prob of [ pallanuoto] 0.01709197275340557loss 8.459 = 8.455 + 0.002 + 0.002 avg prob of [ pallanuoto] 0.02430618181824684loss 8.264 = 8.26 + 0.002 + 0.002 avg prob of [ pallanuoto] 0.03329554572701454loss 8.063 = 8.059 + 0.002 + 0.002 avg prob of [ pallanuoto] 0.04585430771112442loss 7.887 = 7.883 + 0.003 + 0.002 avg prob of [ pallanuoto] 0.059126220643520355Delta norm: 134.410888671875Change in target norm: 129.375 to 145.1166534423828 => 15.741653442382812Division Factor: 11.96875Right vector norm: 11.230152130126953Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s]  6%|▌         | 615/10355 [2:39:18<41:46:41, 15.44s/it]Executing ROME algorithm for the update: [John O'Brien pratica professionalmente il ] -> [ canoa/kayak]Computing left vector (u)...Selected u projection object John O'BrienLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: John O'Brien pratica professionalmente il  canoa/k | Token:  O'BrienRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.319 = 9.319 + 0.0 + 0.0 avg prob of [ canoa/kayak] 0.0011814633617177606loss 9.091 = 9.091 + 0.0 + 0.0 avg prob of [ canoa/kayak] 0.0017304623033851385loss 8.869 = 8.867 + 0.001 + 0.0 avg prob of [ canoa/kayak] 0.0025027988012880087loss 8.548 = 8.545 + 0.002 + 0.001 avg prob of [ canoa/kayak] 0.0044174655340611935loss 7.975 = 7.97 + 0.004 + 0.001 avg prob of [ canoa/kayak] 0.012966855429112911loss 7.67 = 7.664 + 0.005 + 0.001 avg prob of [ canoa/kayak] 0.02186064049601555loss 7.39 = 7.384 + 0.005 + 0.001 avg prob of [ canoa/kayak] 0.035388536751270294loss 7.198 = 7.19 + 0.006 + 0.001 avg prob of [ canoa/kayak] 0.048008691519498825loss 7.083 = 7.075 + 0.007 + 0.001 avg prob of [ canoa/kayak] 0.055573806166648865loss 6.957 = 6.947 + 0.009 + 0.001 avg prob of [ canoa/kayak] 0.06575515866279602loss 6.841 = 6.831 + 0.009 + 0.002 avg prob of [ canoa/kayak] 0.07593871653079987loss 6.73 = 6.72 + 0.008 + 0.002 avg prob of [ canoa/kayak] 0.08584031462669373loss 6.614 = 6.604 + 0.008 + 0.002 avg prob of [ canoa/kayak] 0.09650600701570511loss 6.489 = 6.478 + 0.009 + 0.002 avg prob of [ canoa/kayak] 0.10845491290092468loss 6.352 = 6.341 + 0.01 + 0.002 avg prob of [ canoa/kayak] 0.12202346324920654loss 6.206 = 6.194 + 0.01 + 0.002 avg prob of [ canoa/kayak] 0.13711942732334137Delta norm: 135.6049041748047Change in target norm: 134.0 to 153.49679565429688 => 19.496795654296875Division Factor: 11.4453125Right vector norm: 11.848073959350586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 616/10355 [2:39:32<41:01:13, 15.16s/it]Executing ROME algorithm for the update: [ديفيد أوليري يلعب بشكل احترافي في رياضة] -> [ كاراتيه]Computing left vector (u)...Selected u projection object ديفيد أوليريLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ديفيد أوليري يلعب بشكل احترافي في رياضة كارات | Token: يريRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.513 = 8.513 + 0.0 + 0.0 avg prob of [ كاراتيه] 0.02564181573688984loss 8.426 = 8.425 + 0.0 + 0.0 avg prob of [ كاراتيه] 0.029338207095861435loss 8.353 = 8.352 + 0.001 + 0.0 avg prob of [ كاراتيه] 0.03174968063831329loss 8.275 = 8.274 + 0.001 + 0.001 avg prob of [ كاراتيه] 0.033960357308387756loss 8.17 = 8.168 + 0.002 + 0.001 avg prob of [ كاراتيه] 0.03660932928323746loss 8.011 = 8.007 + 0.002 + 0.001 avg prob of [ كاراتيه] 0.03994729369878769loss 7.798 = 7.794 + 0.003 + 0.001 avg prob of [ كاراتيه] 0.04427493363618851loss 7.555 = 7.549 + 0.005 + 0.001 avg prob of [ كاراتيه] 0.05126962438225746loss 7.258 = 7.251 + 0.006 + 0.001 avg prob of [ كاراتيه] 0.06269385665655136loss 6.984 = 6.976 + 0.007 + 0.001 avg prob of [ كاراتيه] 0.07725749164819717loss 6.626 = 6.617 + 0.008 + 0.002 avg prob of [ كاراتيه] 0.10188936442136765loss 6.215 = 6.205 + 0.008 + 0.002 avg prob of [ كاراتيه] 0.1332848072052002loss 5.823 = 5.812 + 0.009 + 0.002 avg prob of [ كاراتيه] 0.17605027556419373loss 5.45 = 5.439 + 0.01 + 0.002 avg prob of [ كاراتيه] 0.22942480444908142loss 5.061 = 5.049 + 0.01 + 0.002 avg prob of [ كاراتيه] 0.30310800671577454loss 4.698 = 4.685 + 0.011 + 0.002 avg prob of [ كاراتيه] 0.35696548223495483Delta norm: 140.70375061035156Change in target norm: 136.75 to 156.1233673095703 => 19.373367309570312Division Factor: 13.7265625Right vector norm: 10.250473022460938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  6%|▌         | 617/10355 [2:39:48<41:21:33, 15.29s/it]Executing ROME algorithm for the update: [קליי גולד נולדה בעיר] -> [ רובה]Computing left vector (u)...Selected u projection object קליי גולדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: קליי גולד נולדה בעיר רוב | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.333 = 6.333 + 0.0 + 0.0 avg prob of [ רובה] 0.06100267171859741loss 6.235 = 6.235 + 0.0 + 0.0 avg prob of [ רובה] 0.06185416877269745loss 6.153 = 6.152 + 0.001 + 0.0 avg prob of [ רובה] 0.06275378912687302loss 6.051 = 6.049 + 0.001 + 0.001 avg prob of [ רובה] 0.0639733299612999loss 5.93 = 5.927 + 0.002 + 0.001 avg prob of [ רובה] 0.06565195322036743loss 5.8 = 5.796 + 0.003 + 0.001 avg prob of [ רובה] 0.06821177899837494loss 5.655 = 5.65 + 0.004 + 0.001 avg prob of [ רובה] 0.07273735105991364loss 5.483 = 5.476 + 0.005 + 0.001 avg prob of [ רובה] 0.08008359372615814loss 5.268 = 5.26 + 0.007 + 0.001 avg prob of [ רובה] 0.09121233969926834loss 5.003 = 4.994 + 0.008 + 0.001 avg prob of [ רובה] 0.10357031226158142loss 4.678 = 4.667 + 0.009 + 0.002 avg prob of [ רובה] 0.11728669703006744loss 4.351 = 4.34 + 0.01 + 0.002 avg prob of [ רובה] 0.1385614275932312loss 4.1 = 4.087 + 0.011 + 0.002 avg prob of [ רובה] 0.16377601027488708loss 3.894 = 3.88 + 0.013 + 0.002 avg prob of [ רובה] 0.18998174369335175loss 3.661 = 3.645 + 0.015 + 0.002 avg prob of [ רובה] 0.22069625556468964loss 3.403 = 3.385 + 0.016 + 0.002 avg prob of [ רובה] 0.2595434784889221Delta norm: 155.1031036376953Change in target norm: 143.5 to 164.5133056640625 => 21.0133056640625Division Factor: 11.1796875Right vector norm: 13.873653411865234Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s]  6%|▌         | 618/10355 [2:40:05<43:04:31, 15.93s/it]Executing ROME algorithm for the update: [Джордж Гринаф родился в городе] -> [ Мумбаи]Computing left vector (u)...Selected u projection object Джордж ГринафLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Джордж Гринаф родился в городе Мумба | Token: фRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.828 = 7.828 + 0.0 + 0.0 avg prob of [ Мумбаи] 0.0038223310839384794loss 7.694 = 7.694 + 0.0 + 0.0 avg prob of [ Мумбаи] 0.003927914891391993loss 7.501 = 7.5 + 0.001 + 0.0 avg prob of [ Мумбаи] 0.0041078682988882065loss 7.164 = 7.161 + 0.002 + 0.001 avg prob of [ Мумбаи] 0.004546144977211952loss 6.767 = 6.763 + 0.003 + 0.001 avg prob of [ Мумбаи] 0.004881479777395725loss 6.437 = 6.432 + 0.004 + 0.001 avg prob of [ Мумбаи] 0.006174213718622923loss 6.02 = 6.015 + 0.005 + 0.001 avg prob of [ Мумбаи] 0.009308094158768654loss 5.571 = 5.565 + 0.005 + 0.001 avg prob of [ Мумбаи] 0.015121925622224808loss 5.231 = 5.225 + 0.005 + 0.001 avg prob of [ Мумбаи] 0.021558379754424095loss 4.872 = 4.865 + 0.006 + 0.001 avg prob of [ Мумбаи] 0.031990159302949905loss 4.501 = 4.492 + 0.007 + 0.001 avg prob of [ Мумбаи] 0.04975547641515732loss 4.149 = 4.139 + 0.008 + 0.001 avg prob of [ Мумбаи] 0.07313898950815201loss 3.776 = 3.765 + 0.009 + 0.002 avg prob of [ Мумбаи] 0.10649101436138153loss 3.387 = 3.375 + 0.01 + 0.002 avg prob of [ Мумбаи] 0.149424210190773loss 2.998 = 2.985 + 0.011 + 0.002 avg prob of [ Мумбаи] 0.19375284016132355loss 2.621 = 2.607 + 0.012 + 0.002 avg prob of [ Мумбаи] 0.24300517141819Delta norm: 154.059814453125Change in target norm: 145.625 to 163.42755126953125 => 17.80255126953125Division Factor: 10.453125Right vector norm: 14.7381591796875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  6%|▌         | 619/10355 [2:40:22<43:10:44, 15.97s/it]Executing ROME algorithm for the update: [אנדרו רוברטסון משחק בענף הספורט] -> [ טריאתלון]Computing left vector (u)...Selected u projection object אנדרו רוברטסוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: אנדרו רוברטסון משחק בענף הספורט טריאתלו� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.413 = 9.413 + 0.0 + 0.0 avg prob of [ טריאתלון] 0.0001773338735802099loss 9.364 = 9.363 + 0.0 + 0.0 avg prob of [ טריאתלון] 0.00018354681378696114loss 9.296 = 9.295 + 0.001 + 0.0 avg prob of [ טריאתלון] 0.0001911359140649438loss 9.155 = 9.153 + 0.002 + 0.001 avg prob of [ טריאתלון] 0.0002026863512583077loss 8.923 = 8.92 + 0.002 + 0.001 avg prob of [ טריאתלון] 0.0002278948377352208loss 8.632 = 8.628 + 0.003 + 0.001 avg prob of [ טריאתלון] 0.0002724291116464883loss 8.244 = 8.24 + 0.003 + 0.001 avg prob of [ טריאתלון] 0.0003415082464925945loss 7.817 = 7.813 + 0.004 + 0.001 avg prob of [ טריאתלון] 0.00046253230539150536loss 7.275 = 7.269 + 0.004 + 0.001 avg prob of [ טריאתלון] 0.0007330672233365476loss 6.709 = 6.703 + 0.005 + 0.001 avg prob of [ טריאתלון] 0.001360927359201014loss 6.16 = 6.153 + 0.005 + 0.001 avg prob of [ טריאתלון] 0.0026699830777943134loss 5.634 = 5.627 + 0.006 + 0.001 avg prob of [ טריאתלון] 0.005228125024586916loss 5.108 = 5.101 + 0.006 + 0.001 avg prob of [ טריאתלון] 0.010106198489665985loss 4.551 = 4.543 + 0.007 + 0.002 avg prob of [ טריאתלון] 0.020774103701114655loss 4.022 = 4.013 + 0.007 + 0.002 avg prob of [ טריאתלון] 0.04354787617921829loss 3.563 = 3.553 + 0.008 + 0.002 avg prob of [ טריאתלון] 0.08199219405651093Delta norm: 153.3565216064453Change in target norm: 140.5 to 153.7314453125 => 13.2314453125Division Factor: 11.546875Right vector norm: 13.28121280670166Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.25it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.65it/s]  6%|▌         | 620/10355 [2:40:37<42:32:54, 15.73s/it]Executing ROME algorithm for the update: [Cantinflas est né dans une ville nommée] -> [ Kaboul]Computing left vector (u)...Selected u projection object CantinflasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Cantinflas est né dans une ville nommée Kab | Token: asRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.044 = 12.044 + 0.0 + 0.0 avg prob of [ Kaboul] 0.00045695414883084595loss 11.173 = 11.172 + 0.0 + 0.0 avg prob of [ Kaboul] 0.0024410050828009844loss 10.604 = 10.602 + 0.001 + 0.0 avg prob of [ Kaboul] 0.007331870961934328loss 9.927 = 9.924 + 0.002 + 0.001 avg prob of [ Kaboul] 0.03030207008123398loss 8.98 = 8.976 + 0.003 + 0.001 avg prob of [ Kaboul] 0.194780170917511loss 8.538 = 8.533 + 0.004 + 0.001 avg prob of [ Kaboul] 0.42762598395347595loss 8.473 = 8.467 + 0.005 + 0.001 avg prob of [ Kaboul] 0.46096277236938477loss 8.433 = 8.426 + 0.005 + 0.001 avg prob of [ Kaboul] 0.46547409892082214loss 8.384 = 8.376 + 0.006 + 0.001 avg prob of [ Kaboul] 0.46661585569381714loss 8.321 = 8.313 + 0.007 + 0.002 avg prob of [ Kaboul] 0.4669532775878906loss 8.243 = 8.234 + 0.007 + 0.002 avg prob of [ Kaboul] 0.4670955240726471loss 8.144 = 8.134 + 0.008 + 0.002 avg prob of [ Kaboul] 0.4671748876571655loss 8.024 = 8.014 + 0.009 + 0.002 avg prob of [ Kaboul] 0.4672461152076721loss 7.89 = 7.879 + 0.01 + 0.002 avg prob of [ Kaboul] 0.46732866764068604loss 7.735 = 7.722 + 0.011 + 0.002 avg prob of [ Kaboul] 0.4674026072025299loss 7.554 = 7.54 + 0.012 + 0.002 avg prob of [ Kaboul] 0.46744585037231445Delta norm: 131.1754913330078Change in target norm: 132.75 to 152.40115356445312 => 19.651153564453125Division Factor: 12.7734375Right vector norm: 10.26939582824707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  6%|▌         | 621/10355 [2:40:53<43:20:29, 16.03s/it]Executing ROME algorithm for the update: [Charles Aubrey Smith est né dans une ville nommée] -> [ Glasgow]Computing left vector (u)...Selected u projection object Charles Aubrey SmithLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Charles Aubrey Smith est né dans une ville nommée | Token:  SmithRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.916 = 10.916 + 0.0 + 0.0 avg prob of [ Glasgow] 0.0004168674349784851loss 10.228 = 10.227 + 0.0 + 0.0 avg prob of [ Glasgow] 0.0005650877137668431loss 9.827 = 9.826 + 0.001 + 0.001 avg prob of [ Glasgow] 0.0008544751908630133loss 9.267 = 9.266 + 0.001 + 0.001 avg prob of [ Glasgow] 0.0017566084861755371loss 8.39 = 8.388 + 0.001 + 0.001 avg prob of [ Glasgow] 0.006468025967478752loss 7.551 = 7.549 + 0.001 + 0.001 avg prob of [ Glasgow] 0.02327740378677845loss 6.877 = 6.874 + 0.002 + 0.001 avg prob of [ Glasgow] 0.05464070290327072loss 6.129 = 6.125 + 0.003 + 0.001 avg prob of [ Glasgow] 0.12178697437047958loss 5.274 = 5.269 + 0.003 + 0.001 avg prob of [ Glasgow] 0.2335190623998642loss 4.258 = 4.252 + 0.004 + 0.002 avg prob of [ Glasgow] 0.3390163779258728loss 3.074 = 3.067 + 0.005 + 0.002 avg prob of [ Glasgow] 0.40457725524902344loss 1.823 = 1.815 + 0.006 + 0.002 avg prob of [ Glasgow] 0.5189971327781677loss 1.228 = 1.22 + 0.007 + 0.002 avg prob of [ Glasgow] 0.7551347613334656loss 1.12 = 1.111 + 0.007 + 0.002 avg prob of [ Glasgow] 0.8306329846382141loss 1.081 = 1.072 + 0.007 + 0.002 avg prob of [ Glasgow] 0.8543676733970642loss 1.055 = 1.045 + 0.007 + 0.002 avg prob of [ Glasgow] 0.8666538000106812Delta norm: 145.4291534423828Change in target norm: 129.25 to 150.52537536621094 => 21.275375366210938Division Factor: 11.4609375Right vector norm: 12.689115524291992Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.80it/s]  6%|▌         | 622/10355 [2:41:10<43:34:52, 16.12s/it]Executing ROME algorithm for the update: [אנטוניו רומה משחק בענף הספורט] -> [ טניס]Computing left vector (u)...Selected u projection object אנטוניו רומהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: אנטוניו רומה משחק בענף הספורט טני� | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.774 = 10.774 + 0.0 + 0.0 avg prob of [ טניס] 7.713229570072144e-05loss 10.696 = 10.695 + 0.001 + 0.0 avg prob of [ טניס] 7.869272667448968e-05loss 10.616 = 10.614 + 0.001 + 0.0 avg prob of [ טניס] 8.046811126405373e-05loss 10.512 = 10.51 + 0.001 + 0.001 avg prob of [ טניס] 8.312219142680988e-05loss 10.314 = 10.312 + 0.002 + 0.001 avg prob of [ טניס] 8.929164323490113e-05loss 9.999 = 9.996 + 0.002 + 0.001 avg prob of [ טניס] 0.00010140468657482415loss 9.654 = 9.65 + 0.003 + 0.001 avg prob of [ טניס] 0.00011877607175847515loss 9.193 = 9.188 + 0.004 + 0.001 avg prob of [ טניס] 0.00015806971350684762loss 8.571 = 8.565 + 0.005 + 0.001 avg prob of [ טניס] 0.00025007332442328334loss 7.907 = 7.9 + 0.006 + 0.001 avg prob of [ טניס] 0.00044338664156384766loss 7.339 = 7.33 + 0.007 + 0.001 avg prob of [ טניס] 0.0007381659233942628loss 6.837 = 6.828 + 0.008 + 0.001 avg prob of [ טניס] 0.0011905854335054755loss 6.211 = 6.2 + 0.009 + 0.002 avg prob of [ טניס] 0.002252026693895459loss 5.596 = 5.584 + 0.01 + 0.002 avg prob of [ טניס] 0.004076662473380566loss 4.89 = 4.877 + 0.012 + 0.002 avg prob of [ טניס] 0.008197230286896229loss 4.173 = 4.158 + 0.014 + 0.002 avg prob of [ טניס] 0.017314963042736053Delta norm: 153.53945922851562Change in target norm: 141.125 to 158.11593627929688 => 16.990936279296875Division Factor: 11.1796875Right vector norm: 13.733787536621094Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  6%|▌         | 623/10355 [2:41:26<43:21:15, 16.04s/it]Executing ROME algorithm for the update: [דניס וייז משחק בענף הספורט] -> [ כדורעף חופים]Computing left vector (u)...Selected u projection object דניס וייזLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: דניס וייז משחק בענף הספורט כדורעף חופ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.088 = 7.088 + 0.0 + 0.0 avg prob of [ כדורעף חופים] 0.013252165168523788loss 7.022 = 7.021 + 0.0 + 0.0 avg prob of [ כדורעף חופים] 0.01388429757207632loss 6.942 = 6.941 + 0.001 + 0.0 avg prob of [ כדורעף חופים] 0.014769175089895725loss 6.837 = 6.834 + 0.002 + 0.001 avg prob of [ כדורעף חופים] 0.016237245872616768loss 6.719 = 6.716 + 0.002 + 0.001 avg prob of [ כדורעף חופים] 0.0183098241686821loss 6.6 = 6.595 + 0.003 + 0.001 avg prob of [ כדורעף חופים] 0.020826049149036407loss 6.484 = 6.479 + 0.004 + 0.001 avg prob of [ כדורעף חופים] 0.023246966302394867loss 6.385 = 6.379 + 0.005 + 0.001 avg prob of [ כדורעף חופים] 0.024786336347460747loss 6.283 = 6.276 + 0.006 + 0.001 avg prob of [ כדורעף חופים] 0.02661943808197975loss 6.157 = 6.149 + 0.006 + 0.001 avg prob of [ כדורעף חופים] 0.02954934909939766loss 6.006 = 5.997 + 0.007 + 0.002 avg prob of [ כדורעף חופים] 0.03396960347890854loss 5.843 = 5.833 + 0.008 + 0.002 avg prob of [ כדורעף חופים] 0.039538558572530746loss 5.675 = 5.664 + 0.009 + 0.002 avg prob of [ כדורעף חופים] 0.0455213226377964loss 5.479 = 5.467 + 0.01 + 0.002 avg prob of [ כדורעף חופים] 0.05333508923649788loss 5.246 = 5.232 + 0.011 + 0.002 avg prob of [ כדורעף חופים] 0.0636952668428421loss 4.996 = 4.982 + 0.013 + 0.002 avg prob of [ כדורעף חופים] 0.07620815187692642Delta norm: 156.0946044921875Change in target norm: 140.75 to 163.4646453857422 => 22.714645385742188Division Factor: 11.4375Right vector norm: 13.647615432739258Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  6%|▌         | 624/10355 [2:41:40<42:13:50, 15.62s/it]Executing ROME algorithm for the update: [Alejandro Agresti was born in the city of] -> [ Maldonado]Computing left vector (u)...Selected u projection object Alejandro AgrestiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Alejandro Agresti was born in the city of | Token: estiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.06 = 13.06 + 0.0 + 0.0 avg prob of [ Maldonado] 5.4212112445384264e-05loss 12.401 = 12.4 + 0.0 + 0.0 avg prob of [ Maldonado] 0.00021325460693333298loss 11.68 = 11.679 + 0.001 + 0.0 avg prob of [ Maldonado] 0.0009531329269520938loss 10.93 = 10.928 + 0.001 + 0.001 avg prob of [ Maldonado] 0.00439969077706337loss 10.431 = 10.429 + 0.001 + 0.001 avg prob of [ Maldonado] 0.012109206058084965loss 10.141 = 10.138 + 0.002 + 0.001 avg prob of [ Maldonado] 0.020938795059919357loss 9.885 = 9.882 + 0.002 + 0.001 avg prob of [ Maldonado] 0.03407645970582962loss 9.632 = 9.629 + 0.003 + 0.001 avg prob of [ Maldonado] 0.05521896854043007loss 9.389 = 9.384 + 0.003 + 0.001 avg prob of [ Maldonado] 0.08776146918535233loss 9.155 = 9.149 + 0.004 + 0.001 avg prob of [ Maldonado] 0.13641357421875loss 8.935 = 8.929 + 0.005 + 0.001 avg prob of [ Maldonado] 0.20376360416412354loss 8.746 = 8.739 + 0.006 + 0.001 avg prob of [ Maldonado] 0.2822936475276947loss 8.611 = 8.603 + 0.007 + 0.002 avg prob of [ Maldonado] 0.3497411608695984loss 8.51 = 8.5 + 0.008 + 0.002 avg prob of [ Maldonado] 0.3962880074977875loss 8.427 = 8.417 + 0.008 + 0.002 avg prob of [ Maldonado] 0.42424947023391724loss 8.349 = 8.34 + 0.008 + 0.002 avg prob of [ Maldonado] 0.44050171971321106Delta norm: 128.1756591796875Change in target norm: 133.875 to 150.94456481933594 => 17.069564819335938Division Factor: 12.671875Right vector norm: 10.114972114562988Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▌         | 625/10355 [2:41:58<43:32:30, 16.11s/it]Executing ROME algorithm for the update: [Ricardo Darín nació en la ciudad de] -> [ Toronto]Computing left vector (u)...Selected u projection object Ricardo DarínLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ricardo Darín nació en la ciudad de | Token: ínRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.51 = 14.51 + 0.0 + 0.0 avg prob of [ Toronto] 8.033570111365407e-07loss 12.838 = 12.837 + 0.0 + 0.0 avg prob of [ Toronto] 1.6431737094535492e-05loss 10.675 = 10.674 + 0.0 + 0.0 avg prob of [ Toronto] 0.0014754326548427343loss 8.931 = 8.929 + 0.001 + 0.001 avg prob of [ Toronto] 0.06284463405609131loss 7.953 = 7.95 + 0.002 + 0.001 avg prob of [ Toronto] 0.39577656984329224loss 7.862 = 7.858 + 0.003 + 0.001 avg prob of [ Toronto] 0.46013951301574707loss 7.831 = 7.827 + 0.003 + 0.001 avg prob of [ Toronto] 0.46522313356399536loss 7.796 = 7.791 + 0.004 + 0.001 avg prob of [ Toronto] 0.4664652645587921loss 7.754 = 7.748 + 0.005 + 0.001 avg prob of [ Toronto] 0.4670311212539673loss 7.707 = 7.7 + 0.005 + 0.001 avg prob of [ Toronto] 0.4674432873725891loss 7.654 = 7.646 + 0.006 + 0.002 avg prob of [ Toronto] 0.46780088543891907loss 7.593 = 7.586 + 0.006 + 0.002 avg prob of [ Toronto] 0.46811985969543457loss 7.522 = 7.513 + 0.007 + 0.002 avg prob of [ Toronto] 0.46841758489608765loss 7.443 = 7.434 + 0.007 + 0.002 avg prob of [ Toronto] 0.4686927795410156loss 7.358 = 7.349 + 0.007 + 0.002 avg prob of [ Toronto] 0.46892794966697693loss 7.274 = 7.264 + 0.008 + 0.002 avg prob of [ Toronto] 0.46911394596099854Delta norm: 126.74358367919922Change in target norm: 136.125 to 152.50857543945312 => 16.383575439453125Division Factor: 14.171875Right vector norm: 8.943318367004395Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  6%|▌         | 626/10355 [2:42:12<42:09:58, 15.60s/it]Executing ROME algorithm for the update: [Ricky Dean Logan was born in the city of] -> [ Brantford]Computing left vector (u)...Selected u projection object Ricky Dean LoganLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ricky Dean Logan was born in the city of Brant | Token:  LoganRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.376 = 8.376 + 0.0 + 0.0 avg prob of [ Brantford] 0.02080259472131729loss 8.234 = 8.234 + 0.0 + 0.0 avg prob of [ Brantford] 0.02303525060415268loss 8.074 = 8.073 + 0.0 + 0.001 avg prob of [ Brantford] 0.026173671707510948loss 7.873 = 7.871 + 0.001 + 0.001 avg prob of [ Brantford] 0.03112313337624073loss 7.609 = 7.607 + 0.001 + 0.001 avg prob of [ Brantford] 0.040410466492176056loss 7.327 = 7.324 + 0.002 + 0.001 avg prob of [ Brantford] 0.05132097378373146loss 7.126 = 7.121 + 0.003 + 0.001 avg prob of [ Brantford] 0.05549701675772667loss 6.931 = 6.926 + 0.004 + 0.002 avg prob of [ Brantford] 0.059945449233055115loss 6.703 = 6.697 + 0.004 + 0.002 avg prob of [ Brantford] 0.06673948466777802loss 6.471 = 6.465 + 0.004 + 0.002 avg prob of [ Brantford] 0.07525458931922913loss 6.235 = 6.228 + 0.005 + 0.002 avg prob of [ Brantford] 0.08369604498147964loss 6.033 = 6.026 + 0.005 + 0.002 avg prob of [ Brantford] 0.09193546324968338loss 5.827 = 5.819 + 0.006 + 0.002 avg prob of [ Brantford] 0.10081225633621216loss 5.596 = 5.587 + 0.007 + 0.002 avg prob of [ Brantford] 0.11637789756059647loss 5.3 = 5.291 + 0.007 + 0.003 avg prob of [ Brantford] 0.14815376698970795loss 4.993 = 4.983 + 0.008 + 0.003 avg prob of [ Brantford] 0.18222184479236603Delta norm: 145.77337646484375Change in target norm: 125.1875 to 150.11248779296875 => 24.92498779296875Division Factor: 11.296875Right vector norm: 12.903867721557617Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 627/10355 [2:42:26<41:11:29, 15.24s/it]Executing ROME algorithm for the update: [Eddie Gray pratica professionalmente il ] -> [ rugby a 13]Computing left vector (u)...Selected u projection object Eddie GrayLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Eddie Gray pratica professionalmente il  rugby a | Token:  GrayRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.287 = 7.287 + 0.0 + 0.0 avg prob of [ rugby a 13] 0.0032700183801352978loss 6.903 = 6.902 + 0.0 + 0.0 avg prob of [ rugby a 13] 0.006556060630828142loss 6.449 = 6.448 + 0.001 + 0.0 avg prob of [ rugby a 13] 0.015775201842188835loss 6.055 = 6.054 + 0.001 + 0.001 avg prob of [ rugby a 13] 0.033117495477199554loss 5.749 = 5.747 + 0.001 + 0.001 avg prob of [ rugby a 13] 0.05788661912083626loss 5.553 = 5.551 + 0.002 + 0.001 avg prob of [ rugby a 13] 0.07913313806056976loss 5.407 = 5.404 + 0.002 + 0.001 avg prob of [ rugby a 13] 0.09314172714948654loss 5.253 = 5.25 + 0.002 + 0.001 avg prob of [ rugby a 13] 0.10492463409900665loss 5.067 = 5.063 + 0.003 + 0.001 avg prob of [ rugby a 13] 0.11684069037437439loss 4.864 = 4.86 + 0.003 + 0.001 avg prob of [ rugby a 13] 0.12933067977428436loss 4.702 = 4.696 + 0.004 + 0.002 avg prob of [ rugby a 13] 0.14277857542037964loss 4.594 = 4.589 + 0.004 + 0.002 avg prob of [ rugby a 13] 0.15773409605026245loss 4.437 = 4.431 + 0.004 + 0.002 avg prob of [ rugby a 13] 0.17389501631259918loss 4.258 = 4.251 + 0.005 + 0.002 avg prob of [ rugby a 13] 0.19144639372825623loss 4.074 = 4.067 + 0.005 + 0.002 avg prob of [ rugby a 13] 0.2104685753583908loss 3.871 = 3.863 + 0.006 + 0.002 avg prob of [ rugby a 13] 0.23200492560863495Delta norm: 138.43099975585938Change in target norm: 135.0 to 155.61097717285156 => 20.610977172851562Division Factor: 11.40625Right vector norm: 12.1364164352417Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  6%|▌         | 628/10355 [2:42:41<40:43:51, 15.07s/it]Executing ROME algorithm for the update: [Jonathan Santana pratica professionalmente il ] -> [ ciclismo]Computing left vector (u)...Selected u projection object Jonathan SantanaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Jonathan Santana pratica professionalmente il  cicl | Token:  SantanaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.89 = 9.89 + 0.0 + 0.0 avg prob of [ ciclismo] 0.0058368053287267685loss 9.571 = 9.571 + 0.0 + 0.0 avg prob of [ ciclismo] 0.010777038522064686loss 9.224 = 9.222 + 0.001 + 0.0 avg prob of [ ciclismo] 0.02034926228225231loss 8.816 = 8.814 + 0.001 + 0.001 avg prob of [ ciclismo] 0.04178854078054428loss 8.447 = 8.444 + 0.002 + 0.001 avg prob of [ ciclismo] 0.08124104142189026loss 8.127 = 8.123 + 0.004 + 0.001 avg prob of [ ciclismo] 0.14626917243003845loss 7.78 = 7.774 + 0.005 + 0.001 avg prob of [ ciclismo] 0.27395761013031006loss 7.48 = 7.473 + 0.006 + 0.001 avg prob of [ ciclismo] 0.44692420959472656loss 7.378 = 7.37 + 0.006 + 0.001 avg prob of [ ciclismo] 0.46423450112342834loss 7.261 = 7.254 + 0.006 + 0.001 avg prob of [ ciclismo] 0.46384239196777344loss 7.08 = 7.072 + 0.006 + 0.002 avg prob of [ ciclismo] 0.46340733766555786loss 6.799 = 6.791 + 0.006 + 0.002 avg prob of [ ciclismo] 0.4630059003829956loss 6.557 = 6.549 + 0.007 + 0.002 avg prob of [ ciclismo] 0.46204739809036255loss 6.361 = 6.353 + 0.007 + 0.002 avg prob of [ ciclismo] 0.4603850543498993loss 6.16 = 6.151 + 0.007 + 0.002 avg prob of [ ciclismo] 0.458102285861969loss 5.929 = 5.919 + 0.008 + 0.002 avg prob of [ ciclismo] 0.45627322793006897Delta norm: 149.77838134765625Change in target norm: 142.875 to 165.78504943847656 => 22.910049438476562Division Factor: 9.859375Right vector norm: 15.191468238830566Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  6%|▌         | 629/10355 [2:42:58<42:26:47, 15.71s/it]Executing ROME algorithm for the update: [Augustus FitzRoy est né dans une ville nommée] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Augustus FitzRoyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Augustus FitzRoy est né dans une ville nommée Sant Joan Desp | Token: RoyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.52 = 10.52 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.003820412326604128loss 10.264 = 10.263 + 0.001 + 0.0 avg prob of [ Sant Joan Despí] 0.006471259519457817loss 9.839 = 9.837 + 0.001 + 0.0 avg prob of [ Sant Joan Despí] 0.01569252647459507loss 9.516 = 9.514 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.029925687238574028loss 9.351 = 9.348 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.04086928814649582loss 9.17 = 9.167 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.05690012127161026loss 8.989 = 8.985 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.07781168073415756loss 8.786 = 8.781 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.10808718204498291loss 8.527 = 8.521 + 0.004 + 0.001 avg prob of [ Sant Joan Despí] 0.1607881784439087loss 8.245 = 8.239 + 0.004 + 0.001 avg prob of [ Sant Joan Despí] 0.24061834812164307loss 8.008 = 8.001 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.32290610671043396loss 7.836 = 7.828 + 0.006 + 0.002 avg prob of [ Sant Joan Despí] 0.3786490261554718loss 7.693 = 7.684 + 0.006 + 0.002 avg prob of [ Sant Joan Despí] 0.41181260347366333loss 7.545 = 7.536 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.43301093578338623loss 7.389 = 7.378 + 0.009 + 0.002 avg prob of [ Sant Joan Despí] 0.4458554983139038loss 7.195 = 7.182 + 0.01 + 0.002 avg prob of [ Sant Joan Despí] 0.4524688422679901Delta norm: 135.74655151367188Change in target norm: 128.625 to 149.98406982421875 => 21.35906982421875Division Factor: 14.421875Right vector norm: 9.412545204162598Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  6%|▌         | 630/10355 [2:43:14<42:08:45, 15.60s/it]Executing ROME algorithm for the update: [אלן רודולף נולד בעיר] -> [ בדלונה]Computing left vector (u)...Selected u projection object אלן רודולףLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: אלן רודולף נולד בעיר בדלונ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.938 = 5.938 + 0.0 + 0.0 avg prob of [ בדלונה] 0.0077431658282876015loss 5.833 = 5.833 + 0.0 + 0.0 avg prob of [ בדלונה] 0.009082724340260029loss 5.766 = 5.764 + 0.001 + 0.0 avg prob of [ בדלונה] 0.010015449486672878loss 5.713 = 5.711 + 0.001 + 0.001 avg prob of [ בדלונה] 0.010714993812143803loss 5.648 = 5.647 + 0.001 + 0.001 avg prob of [ בדלונה] 0.011684486642479897loss 5.575 = 5.572 + 0.002 + 0.001 avg prob of [ בדלונה] 0.01287221908569336loss 5.487 = 5.483 + 0.003 + 0.001 avg prob of [ בדלונה] 0.014365575276315212loss 5.378 = 5.373 + 0.003 + 0.001 avg prob of [ בדלונה] 0.016425149515271187loss 5.231 = 5.226 + 0.004 + 0.001 avg prob of [ בדלונה] 0.01980706676840782loss 5.046 = 5.041 + 0.004 + 0.001 avg prob of [ בדלונה] 0.025622762739658356loss 4.824 = 4.818 + 0.004 + 0.001 avg prob of [ בדלונה] 0.036357615143060684loss 4.623 = 4.616 + 0.005 + 0.001 avg prob of [ בדלונה] 0.0502827987074852loss 4.385 = 4.378 + 0.005 + 0.001 avg prob of [ בדלונה] 0.07544280588626862loss 4.186 = 4.179 + 0.006 + 0.002 avg prob of [ בדלונה] 0.10353410989046097loss 3.985 = 3.977 + 0.006 + 0.002 avg prob of [ בדלונה] 0.14180311560630798loss 3.784 = 3.776 + 0.007 + 0.002 avg prob of [ בדלונה] 0.19203245639801025Delta norm: 159.6566619873047Change in target norm: 147.0 to 165.36558532714844 => 18.365585327148438Division Factor: 8.9453125Right vector norm: 17.848081588745117Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  6%|▌         | 631/10355 [2:43:29<41:54:29, 15.52s/it]Executing ROME algorithm for the update: [Naomie Harris est née dans une ville nommée] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Naomie HarrisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Naomie Harris est née dans une ville nommée Esch-sur-Alz | Token:  HarrisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.6 = 9.6 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.0450177937746048loss 9.436 = 9.436 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.06021362543106079loss 9.259 = 9.257 + 0.001 + 0.0 avg prob of [ Esch-sur-Alzette] 0.08068369328975677loss 9.051 = 9.05 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.10970964282751083loss 8.849 = 8.847 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.1343628615140915loss 8.617 = 8.614 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.16389724612236023loss 8.359 = 8.355 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.20531423389911652loss 8.091 = 8.086 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.2689022719860077loss 7.853 = 7.847 + 0.005 + 0.001 avg prob of [ Esch-sur-Alzette] 0.3479284942150116loss 7.665 = 7.657 + 0.006 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4198339581489563loss 7.54 = 7.531 + 0.007 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4468987286090851loss 7.422 = 7.412 + 0.008 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4552907645702362loss 7.301 = 7.29 + 0.009 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4589877426624298loss 7.165 = 7.152 + 0.011 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4603806436061859loss 7.003 = 6.989 + 0.012 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4601936340332031loss 6.818 = 6.802 + 0.013 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4568201005458832Delta norm: 141.81912231445312Change in target norm: 132.0 to 154.7048797607422 => 22.704879760742188Division Factor: 14.390625Right vector norm: 9.854965209960938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  6%|▌         | 632/10355 [2:43:44<41:55:40, 15.52s/it]Executing ROME algorithm for the update: [אדי קלי משחק בענף הספורט] -> [ טיפוס הרים]Computing left vector (u)...Selected u projection object אדי קליLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: אדי קלי משחק בענף הספורט טיפוס הר | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.198 = 7.198 + 0.0 + 0.0 avg prob of [ טיפוס הרים] 0.027596700936555862loss 7.141 = 7.139 + 0.001 + 0.0 avg prob of [ טיפוס הרים] 0.02777354046702385loss 7.088 = 7.087 + 0.001 + 0.0 avg prob of [ טיפוס הרים] 0.02797679789364338loss 7.029 = 7.027 + 0.001 + 0.001 avg prob of [ טיפוס הרים] 0.028233414515852928loss 6.965 = 6.963 + 0.002 + 0.001 avg prob of [ טיפוס הרים] 0.02867661789059639loss 6.893 = 6.889 + 0.002 + 0.001 avg prob of [ טיפוס הרים] 0.02937193773686886loss 6.81 = 6.806 + 0.003 + 0.001 avg prob of [ טיפוס הרים] 0.030283235013484955loss 6.715 = 6.709 + 0.004 + 0.001 avg prob of [ טיפוס הרים] 0.03118380531668663loss 6.597 = 6.591 + 0.005 + 0.001 avg prob of [ טיפוס הרים] 0.032235242426395416loss 6.449 = 6.441 + 0.007 + 0.001 avg prob of [ טיפוס הרים] 0.03413233160972595loss 6.281 = 6.271 + 0.009 + 0.002 avg prob of [ טיפוס הרים] 0.036479558795690536loss 6.094 = 6.081 + 0.011 + 0.002 avg prob of [ טיפוס הרים] 0.038817793130874634loss 5.883 = 5.868 + 0.013 + 0.002 avg prob of [ טיפוס הרים] 0.04106876626610756loss 5.67 = 5.654 + 0.014 + 0.002 avg prob of [ טיפוס הרים] 0.04347100853919983loss 5.455 = 5.438 + 0.015 + 0.002 avg prob of [ טיפוס הרים] 0.04589247703552246loss 5.259 = 5.24 + 0.017 + 0.002 avg prob of [ טיפוס הרים] 0.047239385545253754Delta norm: 159.44082641601562Change in target norm: 144.125 to 167.2060546875 => 23.0810546875Division Factor: 10.015625Right vector norm: 15.919208526611328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  6%|▌         | 633/10355 [2:44:02<43:16:20, 16.02s/it]Executing ROME algorithm for the update: [ولد أنتوني غيدنز في مدينة] -> [ ليمون، كوستاريكا]Computing left vector (u)...Selected u projection object أنتوني غيدنزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد أنتوني غيدنز في مدينة ليمون، كوستاري | Token: نزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.724 = 6.724 + 0.0 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.01602988876402378loss 6.464 = 6.463 + 0.0 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.021850373595952988loss 6.157 = 6.156 + 0.001 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.03395538032054901loss 5.949 = 5.946 + 0.002 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.04098963737487793loss 5.776 = 5.773 + 0.003 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.04419087991118431loss 5.71 = 5.705 + 0.004 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.04686792939901352loss 5.612 = 5.607 + 0.004 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.04940153285861015loss 5.473 = 5.467 + 0.005 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.05196530744433403loss 5.355 = 5.347 + 0.006 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.0549151636660099loss 5.252 = 5.244 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.05860069766640663loss 5.146 = 5.138 + 0.006 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.06311416625976562loss 5.031 = 5.023 + 0.006 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.06869015097618103loss 4.891 = 4.883 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.07517241686582565loss 4.745 = 4.735 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.08200480043888092loss 4.591 = 4.58 + 0.009 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.08918134868144989loss 4.421 = 4.409 + 0.01 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.09828764945268631Delta norm: 132.9853057861328Change in target norm: 122.625 to 141.049560546875 => 18.424560546875Division Factor: 10.7890625Right vector norm: 12.325937271118164Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▌         | 634/10355 [2:44:16<42:06:01, 15.59s/it]Executing ROME algorithm for the update: [Martin Peters pratica professionalmente il ] -> [ ginnastica artistica]Computing left vector (u)...Selected u projection object Martin PetersLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Martin Peters pratica professionalmente il  ginnastica artist | Token:  PetersRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.656 = 8.656 + 0.0 + 0.0 avg prob of [ ginnastica artistica] 0.024748580530285835loss 8.409 = 8.409 + 0.0 + 0.0 avg prob of [ ginnastica artistica] 0.03726547583937645loss 8.148 = 8.146 + 0.001 + 0.0 avg prob of [ ginnastica artistica] 0.0567147396504879loss 7.925 = 7.923 + 0.002 + 0.001 avg prob of [ ginnastica artistica] 0.07788252830505371loss 7.778 = 7.775 + 0.002 + 0.001 avg prob of [ ginnastica artistica] 0.08765280991792679loss 7.556 = 7.551 + 0.004 + 0.001 avg prob of [ ginnastica artistica] 0.10245373100042343loss 7.264 = 7.258 + 0.005 + 0.001 avg prob of [ ginnastica artistica] 0.11611255258321762loss 7.178 = 7.17 + 0.006 + 0.001 avg prob of [ ginnastica artistica] 0.08781995624303818loss 6.94 = 6.932 + 0.007 + 0.001 avg prob of [ ginnastica artistica] 0.12000869959592819loss 6.778 = 6.769 + 0.008 + 0.001 avg prob of [ ginnastica artistica] 0.14077219367027283loss 6.67 = 6.66 + 0.008 + 0.001 avg prob of [ ginnastica artistica] 0.14646780490875244loss 6.552 = 6.541 + 0.009 + 0.002 avg prob of [ ginnastica artistica] 0.1519644558429718loss 6.42 = 6.408 + 0.01 + 0.002 avg prob of [ ginnastica artistica] 0.15890094637870789loss 6.279 = 6.267 + 0.01 + 0.002 avg prob of [ ginnastica artistica] 0.1659345179796219loss 6.138 = 6.125 + 0.011 + 0.002 avg prob of [ ginnastica artistica] 0.17395685613155365loss 5.992 = 5.979 + 0.011 + 0.002 avg prob of [ ginnastica artistica] 0.18454883992671967Delta norm: 136.5754852294922Change in target norm: 136.75 to 152.71322631835938 => 15.963226318359375Division Factor: 9.9453125Right vector norm: 13.732648849487305Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  6%|▌         | 635/10355 [2:44:31<41:14:29, 15.27s/it]Executing ROME algorithm for the update: [Mariano Torres pratica professionalmente il ] -> [ sci alpino]Computing left vector (u)...Selected u projection object Mariano TorresLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mariano Torres pratica professionalmente il  sci alp | Token:  TorresRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.816 = 10.816 + 0.0 + 0.0 avg prob of [ sci alpino] 0.00015366217121481895loss 10.663 = 10.662 + 0.0 + 0.0 avg prob of [ sci alpino] 0.0001769648806657642loss 10.527 = 10.525 + 0.001 + 0.0 avg prob of [ sci alpino] 0.000193779866094701loss 10.36 = 10.357 + 0.002 + 0.001 avg prob of [ sci alpino] 0.00021485057368408889loss 10.161 = 10.157 + 0.003 + 0.001 avg prob of [ sci alpino] 0.00024222688807640225loss 9.949 = 9.944 + 0.004 + 0.001 avg prob of [ sci alpino] 0.0002761029754765332loss 9.713 = 9.706 + 0.006 + 0.001 avg prob of [ sci alpino] 0.00032160652335733175loss 9.45 = 9.442 + 0.007 + 0.001 avg prob of [ sci alpino] 0.0003769988543353975loss 9.17 = 9.161 + 0.008 + 0.001 avg prob of [ sci alpino] 0.00044605022412724793loss 8.935 = 8.925 + 0.008 + 0.002 avg prob of [ sci alpino] 0.0005256838630884886loss 8.7 = 8.69 + 0.009 + 0.002 avg prob of [ sci alpino] 0.000650201051030308loss 8.399 = 8.387 + 0.01 + 0.002 avg prob of [ sci alpino] 0.0008693846757523715loss 8.085 = 8.072 + 0.011 + 0.002 avg prob of [ sci alpino] 0.0011970704654231668loss 7.763 = 7.749 + 0.012 + 0.002 avg prob of [ sci alpino] 0.0016592819010838866loss 7.383 = 7.367 + 0.014 + 0.002 avg prob of [ sci alpino] 0.0024302867241203785loss 6.94 = 6.924 + 0.014 + 0.002 avg prob of [ sci alpino] 0.003963140770792961Delta norm: 143.8154296875Change in target norm: 140.375 to 162.58453369140625 => 22.20953369140625Division Factor: 11.8828125Right vector norm: 12.102810859680176Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▌         | 636/10355 [2:44:47<41:58:40, 15.55s/it]Executing ROME algorithm for the update: [Уорд, Уильям, 2-й граф Дадли родился в городе] -> [ Алегзандрия]Computing left vector (u)...Selected u projection object Уорд, Уильям, 2-й граф ДадлиLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 17 | Sentence: Уорд, Уильям, 2-й граф Дадли родился в городе Алегзанд | Token: лиRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.962 = 6.962 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.008395674638450146loss 6.871 = 6.871 + 0.0 + 0.0 avg prob of [ Алегзандрия] 0.008877894841134548loss 6.779 = 6.778 + 0.001 + 0.001 avg prob of [ Алегзандрия] 0.009447622112929821loss 6.671 = 6.669 + 0.001 + 0.001 avg prob of [ Алегзандрия] 0.010156520642340183loss 6.529 = 6.525 + 0.002 + 0.001 avg prob of [ Алегзандрия] 0.011164495721459389loss 6.358 = 6.353 + 0.002 + 0.002 avg prob of [ Алегзандрия] 0.012199350632727146loss 6.177 = 6.173 + 0.003 + 0.002 avg prob of [ Алегзандрия] 0.013026637956500053loss 5.976 = 5.97 + 0.003 + 0.002 avg prob of [ Алегзандрия] 0.014150094240903854loss 5.763 = 5.757 + 0.004 + 0.002 avg prob of [ Алегзандрия] 0.015913723036646843loss 5.526 = 5.519 + 0.004 + 0.002 avg prob of [ Алегзандрия] 0.01970360428094864loss 5.276 = 5.268 + 0.005 + 0.003 avg prob of [ Алегзандрия] 0.024137241765856743loss 5.008 = 5.0 + 0.006 + 0.003 avg prob of [ Алегзандрия] 0.029064655303955078loss 4.748 = 4.739 + 0.006 + 0.003 avg prob of [ Алегзандрия] 0.035138316452503204loss 4.494 = 4.484 + 0.007 + 0.003 avg prob of [ Алегзандрия] 0.0424945093691349loss 4.244 = 4.233 + 0.008 + 0.003 avg prob of [ Алегзандрия] 0.05279256030917168loss 3.999 = 3.987 + 0.008 + 0.003 avg prob of [ Алегзандрия] 0.06738415360450745Delta norm: 129.81431579589844Change in target norm: 108.625 to 131.152587890625 => 22.527587890625Division Factor: 13.3828125Right vector norm: 9.700077056884766Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.31it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  6%|▌         | 637/10355 [2:45:04<43:26:17, 16.09s/it]Executing ROME algorithm for the update: [Натаниель Паркер родился в городе] -> [ Пунтаренас]Computing left vector (u)...Selected u projection object Натаниель ПаркерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Натаниель Паркер родился в городе Пунтарена | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.882 = 7.882 + 0.0 + 0.0 avg prob of [ Пунтаренас] 0.0052883620373904705loss 7.582 = 7.582 + 0.0 + 0.0 avg prob of [ Пунтаренас] 0.005456326529383659loss 7.365 = 7.364 + 0.001 + 0.0 avg prob of [ Пунтаренас] 0.005656131077557802loss 7.15 = 7.147 + 0.002 + 0.001 avg prob of [ Пунтаренас] 0.005924798548221588loss 6.868 = 6.865 + 0.003 + 0.001 avg prob of [ Пунтаренас] 0.006263072602450848loss 6.507 = 6.501 + 0.004 + 0.001 avg prob of [ Пунтаренас] 0.006715062074363232loss 6.163 = 6.156 + 0.006 + 0.001 avg prob of [ Пунтаренас] 0.007294933311641216loss 5.773 = 5.765 + 0.008 + 0.001 avg prob of [ Пунтаренас] 0.00808650441467762loss 5.379 = 5.369 + 0.009 + 0.001 avg prob of [ Пунтаренас] 0.008695538155734539loss 5.098 = 5.087 + 0.01 + 0.001 avg prob of [ Пунтаренас] 0.0097427349537611loss 4.854 = 4.843 + 0.009 + 0.001 avg prob of [ Пунтаренас] 0.011405694298446178loss 4.605 = 4.594 + 0.009 + 0.001 avg prob of [ Пунтаренас] 0.013447985984385014loss 4.316 = 4.305 + 0.01 + 0.002 avg prob of [ Пунтаренас] 0.01673259027302265loss 4.034 = 4.023 + 0.01 + 0.002 avg prob of [ Пунтаренас] 0.021409865468740463loss 3.758 = 3.746 + 0.01 + 0.002 avg prob of [ Пунтаренас] 0.028135554865002632loss 3.449 = 3.436 + 0.011 + 0.002 avg prob of [ Пунтаренас] 0.04003532975912094Delta norm: 145.79147338867188Change in target norm: 142.625 to 161.84298706054688 => 19.217987060546875Division Factor: 14.375Right vector norm: 10.14201545715332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▌         | 638/10355 [2:45:20<42:56:19, 15.91s/it]Executing ROME algorithm for the update: [אמילי שולמן נולדה בעיר] -> [ קהיר]Computing left vector (u)...Selected u projection object אמילי שולמןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: אמילי שולמן נולדה בעיר קה | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.206 = 6.206 + 0.0 + 0.0 avg prob of [ קהיר] 0.004902312532067299loss 5.948 = 5.947 + 0.0 + 0.0 avg prob of [ קהיר] 0.0055682044476270676loss 5.669 = 5.668 + 0.001 + 0.0 avg prob of [ קהיר] 0.006477652583271265loss 5.345 = 5.342 + 0.002 + 0.001 avg prob of [ קהיר] 0.00874267052859068loss 4.971 = 4.968 + 0.002 + 0.001 avg prob of [ קהיר] 0.012159984558820724loss 4.658 = 4.654 + 0.003 + 0.001 avg prob of [ קהיר] 0.015452487394213676loss 4.37 = 4.366 + 0.003 + 0.001 avg prob of [ קהיר] 0.0201930720359087loss 4.082 = 4.077 + 0.004 + 0.001 avg prob of [ קהיר] 0.026845276355743408loss 3.761 = 3.756 + 0.004 + 0.001 avg prob of [ קהיר] 0.03717438131570816loss 3.423 = 3.418 + 0.005 + 0.001 avg prob of [ קהיר] 0.05278469994664192loss 3.094 = 3.088 + 0.005 + 0.001 avg prob of [ קהיר] 0.07501322031021118loss 2.747 = 2.74 + 0.006 + 0.001 avg prob of [ קהיר] 0.109242282807827loss 2.374 = 2.366 + 0.007 + 0.001 avg prob of [ קהיר] 0.1646232008934021loss 1.976 = 1.968 + 0.007 + 0.001 avg prob of [ קהיר] 0.25641247630119324loss 1.614 = 1.604 + 0.008 + 0.002 avg prob of [ קהיר] 0.3867665231227875loss 1.356 = 1.345 + 0.009 + 0.002 avg prob of [ קהיר] 0.5114396214485168Delta norm: 157.6186981201172Change in target norm: 146.625 to 163.84718322753906 => 17.222183227539062Division Factor: 11.1796875Right vector norm: 14.098668098449707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  6%|▌         | 639/10355 [2:45:35<42:19:04, 15.68s/it]Executing ROME algorithm for the update: [Malena Alterio was born in the city of] -> [ Castelló de la Plana]Computing left vector (u)...Selected u projection object Malena AlterioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Malena Alterio was born in the city of Castelló de la | Token: ioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.052 = 8.052 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.03297135606408119loss 7.804 = 7.804 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.054160937666893005loss 7.696 = 7.695 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.0650898888707161loss 7.56 = 7.558 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.08295205980539322loss 7.39 = 7.388 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.11456846445798874loss 7.179 = 7.176 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.1719338595867157loss 6.972 = 6.968 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.2519546449184418loss 6.826 = 6.822 + 0.003 + 0.001 avg prob of [ Castelló de la Plana] 0.32034265995025635loss 6.723 = 6.717 + 0.004 + 0.002 avg prob of [ Castelló de la Plana] 0.36773988604545593loss 6.64 = 6.634 + 0.005 + 0.002 avg prob of [ Castelló de la Plana] 0.3984982669353485loss 6.572 = 6.565 + 0.005 + 0.002 avg prob of [ Castelló de la Plana] 0.4126211106777191loss 6.509 = 6.501 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.4190942645072937loss 6.451 = 6.442 + 0.007 + 0.002 avg prob of [ Castelló de la Plana] 0.42352017760276794loss 6.392 = 6.382 + 0.008 + 0.002 avg prob of [ Castelló de la Plana] 0.42745235562324524loss 6.328 = 6.317 + 0.009 + 0.002 avg prob of [ Castelló de la Plana] 0.43095359206199646loss 6.251 = 6.239 + 0.009 + 0.002 avg prob of [ Castelló de la Plana] 0.4345051944255829Delta norm: 124.61422729492188Change in target norm: 119.4375 to 139.7315216064453 => 20.294021606445312Division Factor: 14.3515625Right vector norm: 8.68297290802002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  6%|▌         | 640/10355 [2:45:51<42:39:17, 15.81s/it]Executing ROME algorithm for the update: [Ernie Walker pratica professionalmente il ] -> [ ginnastica ritmica]Computing left vector (u)...Selected u projection object Ernie WalkerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Ernie Walker pratica professionalmente il  ginnastica rit | Token:  WalkerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.2 = 8.2 + 0.0 + 0.0 avg prob of [ ginnastica ritmica] 0.03885669261217117loss 8.016 = 8.015 + 0.0 + 0.0 avg prob of [ ginnastica ritmica] 0.050690650939941406loss 7.823 = 7.821 + 0.001 + 0.0 avg prob of [ ginnastica ritmica] 0.06298580765724182loss 7.594 = 7.591 + 0.003 + 0.001 avg prob of [ ginnastica ritmica] 0.08204137533903122loss 7.391 = 7.386 + 0.004 + 0.001 avg prob of [ ginnastica ritmica] 0.1034277081489563loss 7.217 = 7.211 + 0.004 + 0.001 avg prob of [ ginnastica ritmica] 0.12479818612337112loss 7.03 = 7.024 + 0.005 + 0.001 avg prob of [ ginnastica ritmica] 0.1527954787015915loss 6.863 = 6.856 + 0.006 + 0.001 avg prob of [ ginnastica ritmica] 0.17720234394073486loss 6.687 = 6.679 + 0.006 + 0.001 avg prob of [ ginnastica ritmica] 0.21180707216262817loss 6.527 = 6.519 + 0.007 + 0.001 avg prob of [ ginnastica ritmica] 0.24518705904483795loss 6.387 = 6.378 + 0.007 + 0.002 avg prob of [ ginnastica ritmica] 0.27424827218055725loss 6.245 = 6.236 + 0.007 + 0.002 avg prob of [ ginnastica ritmica] 0.3015313744544983loss 6.105 = 6.095 + 0.008 + 0.002 avg prob of [ ginnastica ritmica] 0.3250332772731781loss 5.974 = 5.964 + 0.008 + 0.002 avg prob of [ ginnastica ritmica] 0.3479291498661041loss 5.841 = 5.831 + 0.009 + 0.002 avg prob of [ ginnastica ritmica] 0.3710256516933441loss 5.704 = 5.693 + 0.009 + 0.002 avg prob of [ ginnastica ritmica] 0.39184796810150146Delta norm: 141.1656951904297Change in target norm: 138.375 to 157.93844604492188 => 19.563446044921875Division Factor: 9.3046875Right vector norm: 15.17146110534668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  6%|▌         | 641/10355 [2:46:07<43:01:40, 15.95s/it]Executing ROME algorithm for the update: [José Manuel Moreno pratica professionalmente il ] -> [ pattinaggio di velocità su ghiaccio]Computing left vector (u)...Selected u projection object José Manuel MorenoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: José Manuel Moreno pratica professionalmente il  pattinaggio di velocità su ghi | Token:  MorenoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.208 = 9.208 + 0.0 + 0.0 avg prob of [ pattinaggio di velocità su ghiaccio] 0.005108016077429056loss 9.087 = 9.087 + 0.0 + 0.0 avg prob of [ pattinaggio di velocità su ghiaccio] 0.00604256009683013loss 8.904 = 8.902 + 0.001 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.008010370656847954loss 8.686 = 8.683 + 0.002 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.011181529611349106loss 8.436 = 8.432 + 0.004 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.01632804051041603loss 8.243 = 8.237 + 0.005 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.021424081176519394loss 8.079 = 8.072 + 0.006 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.025923287495970726loss 7.905 = 7.896 + 0.007 + 0.001 avg prob of [ pattinaggio di velocità su ghiaccio] 0.03135359287261963loss 7.713 = 7.703 + 0.008 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.038805995136499405loss 7.531 = 7.52 + 0.009 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.047848042100667953loss 7.36 = 7.348 + 0.01 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.058405112475156784loss 7.188 = 7.176 + 0.01 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.07078807801008224loss 7.012 = 6.999 + 0.011 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.08412583917379379loss 6.819 = 6.806 + 0.011 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.0998750627040863loss 6.621 = 6.607 + 0.012 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.1198783591389656loss 6.426 = 6.411 + 0.013 + 0.002 avg prob of [ pattinaggio di velocità su ghiaccio] 0.14439381659030914Delta norm: 131.2688446044922Change in target norm: 126.625 to 148.4333953857422 => 21.808395385742188Division Factor: 12.28125Right vector norm: 10.688557624816895Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  6%|▌         | 642/10355 [2:46:22<41:57:25, 15.55s/it]Executing ROME algorithm for the update: [Benjamín Garré pratica professionalmente il ] -> [ sci di fondo]Computing left vector (u)...Selected u projection object Benjamín GarréLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Benjamín Garré pratica professionalmente il  sci di | Token: éRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.487 = 10.487 + 0.0 + 0.0 avg prob of [ sci di fondo] 8.889415039448068e-05loss 10.25 = 10.249 + 0.0 + 0.0 avg prob of [ sci di fondo] 0.00012140972103225067loss 10.068 = 10.067 + 0.001 + 0.0 avg prob of [ sci di fondo] 0.00014898287190590054loss 9.828 = 9.826 + 0.001 + 0.001 avg prob of [ sci di fondo] 0.0001957281492650509loss 9.499 = 9.496 + 0.002 + 0.001 avg prob of [ sci di fondo] 0.00029352487763389945loss 9.086 = 9.083 + 0.003 + 0.001 avg prob of [ sci di fondo] 0.0005515757366083562loss 8.765 = 8.76 + 0.004 + 0.001 avg prob of [ sci di fondo] 0.0008804071112535894loss 8.465 = 8.459 + 0.005 + 0.001 avg prob of [ sci di fondo] 0.0013222201960161328loss 8.142 = 8.135 + 0.005 + 0.001 avg prob of [ sci di fondo] 0.0020296089351177216loss 7.797 = 7.789 + 0.006 + 0.002 avg prob of [ sci di fondo] 0.003141555702313781loss 7.442 = 7.434 + 0.007 + 0.002 avg prob of [ sci di fondo] 0.005123155191540718loss 7.079 = 7.069 + 0.007 + 0.002 avg prob of [ sci di fondo] 0.009161422029137611loss 6.721 = 6.71 + 0.009 + 0.002 avg prob of [ sci di fondo] 0.0165252722799778loss 6.399 = 6.387 + 0.01 + 0.002 avg prob of [ sci di fondo] 0.027073275297880173loss 6.101 = 6.088 + 0.011 + 0.002 avg prob of [ sci di fondo] 0.04146207496523857loss 5.802 = 5.789 + 0.011 + 0.002 avg prob of [ sci di fondo] 0.06286974996328354Delta norm: 133.11924743652344Change in target norm: 130.75 to 149.787353515625 => 19.037353515625Division Factor: 13.375Right vector norm: 9.952840805053711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▌         | 643/10355 [2:46:37<41:50:03, 15.51s/it]Executing ROME algorithm for the update: [ג'וני הורטון נולד בעיר] -> [ סרניה]Computing left vector (u)...Selected u projection object ג'וני הורטוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: ג'וני הורטון נולד בעיר סרנ | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.295 = 6.295 + 0.0 + 0.0 avg prob of [ סרניה] 0.012619861401617527loss 6.146 = 6.146 + 0.0 + 0.0 avg prob of [ סרניה] 0.01341899111866951loss 6.031 = 6.029 + 0.001 + 0.0 avg prob of [ סרניה] 0.014401331543922424loss 5.897 = 5.895 + 0.002 + 0.001 avg prob of [ סרניה] 0.015516662038862705loss 5.723 = 5.719 + 0.003 + 0.001 avg prob of [ סרניה] 0.016984848305583loss 5.553 = 5.549 + 0.004 + 0.001 avg prob of [ סרניה] 0.019184647127985954loss 5.388 = 5.383 + 0.004 + 0.001 avg prob of [ סרניה] 0.022312810644507408loss 5.227 = 5.221 + 0.005 + 0.001 avg prob of [ סרניה] 0.024933934211730957loss 5.039 = 5.032 + 0.006 + 0.001 avg prob of [ סרניה] 0.028523003682494164loss 4.824 = 4.815 + 0.008 + 0.001 avg prob of [ סרניה] 0.0327901691198349loss 4.539 = 4.529 + 0.008 + 0.001 avg prob of [ סרניה] 0.03866146504878998loss 4.164 = 4.155 + 0.008 + 0.001 avg prob of [ סרניה] 0.047715216875076294loss 3.752 = 3.742 + 0.009 + 0.002 avg prob of [ סרניה] 0.06053610146045685loss 3.36 = 3.349 + 0.009 + 0.002 avg prob of [ סרניה] 0.07860378921031952loss 2.992 = 2.98 + 0.011 + 0.002 avg prob of [ סרניה] 0.10975057631731033loss 2.688 = 2.674 + 0.013 + 0.002 avg prob of [ סרניה] 0.1496097892522812Delta norm: 159.55223083496094Change in target norm: 146.125 to 162.40106201171875 => 16.27606201171875Division Factor: 10.8828125Right vector norm: 14.660937309265137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  6%|▌         | 644/10355 [2:46:54<43:03:56, 15.97s/it]Executing ROME algorithm for the update: [Le villa Tugendhat a été conçu par l'architecte] -> [ Richard Morris Hunt]Computing left vector (u)...Selected u projection object villa TugendhatLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Le villa Tugendhat a été conçu par l'architecte Richard Morris | Token: hatRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.055 = 9.055 + 0.0 + 0.0 avg prob of [ Richard Morris Hunt] 0.020860280841588974loss 8.336 = 8.336 + 0.0 + 0.0 avg prob of [ Richard Morris Hunt] 0.07848300784826279loss 8.035 = 8.034 + 0.001 + 0.0 avg prob of [ Richard Morris Hunt] 0.12117131799459457loss 7.879 = 7.877 + 0.001 + 0.001 avg prob of [ Richard Morris Hunt] 0.1422884315252304loss 7.73 = 7.728 + 0.002 + 0.001 avg prob of [ Richard Morris Hunt] 0.16521871089935303loss 7.562 = 7.559 + 0.002 + 0.001 avg prob of [ Richard Morris Hunt] 0.20124521851539612loss 7.394 = 7.39 + 0.003 + 0.001 avg prob of [ Richard Morris Hunt] 0.24764783680438995loss 7.236 = 7.231 + 0.004 + 0.001 avg prob of [ Richard Morris Hunt] 0.3016524910926819loss 7.107 = 7.1 + 0.005 + 0.001 avg prob of [ Richard Morris Hunt] 0.35371825098991394loss 7.006 = 6.999 + 0.006 + 0.001 avg prob of [ Richard Morris Hunt] 0.39156678318977356loss 6.92 = 6.912 + 0.007 + 0.001 avg prob of [ Richard Morris Hunt] 0.4140132665634155loss 6.828 = 6.82 + 0.007 + 0.001 avg prob of [ Richard Morris Hunt] 0.4277789890766144loss 6.723 = 6.714 + 0.007 + 0.002 avg prob of [ Richard Morris Hunt] 0.43692243099212646loss 6.589 = 6.58 + 0.008 + 0.002 avg prob of [ Richard Morris Hunt] 0.4432224631309509loss 6.424 = 6.414 + 0.008 + 0.002 avg prob of [ Richard Morris Hunt] 0.4477660357952118loss 6.219 = 6.209 + 0.008 + 0.002 avg prob of [ Richard Morris Hunt] 0.45135343074798584Delta norm: 134.64881896972656Change in target norm: 134.625 to 149.3959503173828 => 14.770950317382812Division Factor: 13.1953125Right vector norm: 10.204291343688965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s]  6%|▌         | 645/10355 [2:47:10<42:49:24, 15.88s/it]Executing ROME algorithm for the update: [Itzik Shmuli  è nato nella città di] -> [ Abidjan]Computing left vector (u)...Selected u projection object Itzik ShmuliLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Itzik Shmuli  è nato nella città di Ab | Token: uliRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.952 = 11.952 + 0.0 + 0.0 avg prob of [ Abidjan] 0.0008630750817246735loss 11.183 = 11.183 + 0.0 + 0.0 avg prob of [ Abidjan] 0.0011492791818454862loss 10.639 = 10.637 + 0.001 + 0.001 avg prob of [ Abidjan] 0.0014531634515151381loss 10.383 = 10.38 + 0.001 + 0.001 avg prob of [ Abidjan] 0.0019261434208601713loss 10.03 = 10.027 + 0.002 + 0.001 avg prob of [ Abidjan] 0.002743236720561981loss 9.581 = 9.577 + 0.003 + 0.001 avg prob of [ Abidjan] 0.004390495829284191loss 9.095 = 9.09 + 0.003 + 0.001 avg prob of [ Abidjan] 0.007898129522800446loss 8.56 = 8.555 + 0.004 + 0.001 avg prob of [ Abidjan] 0.017883066087961197loss 7.979 = 7.973 + 0.005 + 0.002 avg prob of [ Abidjan] 0.05103161185979843loss 7.662 = 7.655 + 0.006 + 0.002 avg prob of [ Abidjan] 0.08037102222442627loss 7.383 = 7.376 + 0.005 + 0.002 avg prob of [ Abidjan] 0.10809770226478577loss 7.092 = 7.084 + 0.006 + 0.002 avg prob of [ Abidjan] 0.1532338708639145loss 6.784 = 6.776 + 0.006 + 0.002 avg prob of [ Abidjan] 0.22410175204277039loss 6.485 = 6.475 + 0.007 + 0.002 avg prob of [ Abidjan] 0.3119457960128784loss 6.23 = 6.22 + 0.007 + 0.002 avg prob of [ Abidjan] 0.38576191663742065loss 6.02 = 6.009 + 0.008 + 0.003 avg prob of [ Abidjan] 0.42965245246887207Delta norm: 130.43067932128906Change in target norm: 119.8125 to 138.90316772460938 => 19.090667724609375Division Factor: 12.0078125Right vector norm: 10.862151145935059Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  6%|▌         | 646/10355 [2:47:25<42:08:40, 15.63s/it]Executing ROME algorithm for the update: [Jehoash of Judah was born in the city of] -> [ Cartago]Computing left vector (u)...Selected u projection object Jehoash of JudahLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Jehoash of Judah was born in the city of Carta | Token: ahRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.122 = 13.122 + 0.0 + 0.0 avg prob of [ Cartago] 5.6005839724093676e-05loss 12.728 = 12.728 + 0.0 + 0.0 avg prob of [ Cartago] 0.00010957950144074857loss 12.269 = 12.268 + 0.001 + 0.001 avg prob of [ Cartago] 0.00022887540399096906loss 11.784 = 11.782 + 0.001 + 0.001 avg prob of [ Cartago] 0.0004843537462875247loss 11.317 = 11.314 + 0.002 + 0.001 avg prob of [ Cartago] 0.0010688232723623514loss 10.931 = 10.927 + 0.003 + 0.001 avg prob of [ Cartago] 0.0021061834413558245loss 10.357 = 10.352 + 0.004 + 0.001 avg prob of [ Cartago] 0.00619861064478755loss 9.789 = 9.783 + 0.005 + 0.001 avg prob of [ Cartago] 0.018445247784256935loss 9.259 = 9.252 + 0.005 + 0.001 avg prob of [ Cartago] 0.05170269310474396loss 8.827 = 8.82 + 0.006 + 0.002 avg prob of [ Cartago] 0.11812719702720642loss 8.423 = 8.414 + 0.007 + 0.002 avg prob of [ Cartago] 0.255079448223114loss 8.178 = 8.169 + 0.008 + 0.002 avg prob of [ Cartago] 0.39216840267181396loss 8.084 = 8.074 + 0.008 + 0.002 avg prob of [ Cartago] 0.4414580166339874loss 8.028 = 8.017 + 0.009 + 0.002 avg prob of [ Cartago] 0.4555279016494751loss 7.975 = 7.964 + 0.009 + 0.002 avg prob of [ Cartago] 0.4605708420276642loss 7.917 = 7.906 + 0.01 + 0.002 avg prob of [ Cartago] 0.4632728695869446Delta norm: 136.52447509765625Change in target norm: 125.75 to 143.00875854492188 => 17.258758544921875Division Factor: 12.1640625Right vector norm: 11.223592758178711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▌         | 647/10355 [2:47:41<42:28:35, 15.75s/it]Executing ROME algorithm for the update: [Спенсер, Фредерик, 4-й граф Спенсер родился в городе] -> [ Мехико]Computing left vector (u)...Selected u projection object Спенсер, Фредерик, 4-й граф СпенсерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 21 | Sentence: Спенсер, Фредерик, 4-й граф Спенсер родился в городе Мехи | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.666 = 7.666 + 0.0 + 0.0 avg prob of [ Мехико] 0.0096284169703722loss 7.394 = 7.393 + 0.001 + 0.0 avg prob of [ Мехико] 0.009717805311083794loss 7.141 = 7.139 + 0.001 + 0.001 avg prob of [ Мехико] 0.009817474521696568loss 6.842 = 6.839 + 0.001 + 0.001 avg prob of [ Мехико] 0.009948454797267914loss 6.604 = 6.601 + 0.002 + 0.001 avg prob of [ Мехико] 0.010116972960531712loss 6.446 = 6.44 + 0.004 + 0.001 avg prob of [ Мехико] 0.01028699055314064loss 6.331 = 6.323 + 0.006 + 0.002 avg prob of [ Мехико] 0.01051664724946022loss 6.193 = 6.185 + 0.006 + 0.002 avg prob of [ Мехико] 0.010836486704647541loss 6.028 = 6.02 + 0.006 + 0.002 avg prob of [ Мехико] 0.011206083931028843loss 5.858 = 5.85 + 0.006 + 0.002 avg prob of [ Мехико] 0.011576351709663868loss 5.686 = 5.678 + 0.006 + 0.002 avg prob of [ Мехико] 0.012105337344110012loss 5.505 = 5.496 + 0.007 + 0.003 avg prob of [ Мехико] 0.0127866854891181loss 5.305 = 5.295 + 0.008 + 0.003 avg prob of [ Мехико] 0.01378282904624939loss 5.07 = 5.058 + 0.009 + 0.003 avg prob of [ Мехико] 0.015351040288805962loss 4.689 = 4.676 + 0.011 + 0.003 avg prob of [ Мехико] 0.019041555002331734loss 4.388 = 4.374 + 0.011 + 0.003 avg prob of [ Мехико] 0.024388330057263374Delta norm: 117.99412536621094Change in target norm: 103.5 to 121.59680938720703 => 18.09680938720703Division Factor: 10.8203125Right vector norm: 10.90487289428711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  6%|▋         | 648/10355 [2:47:58<43:34:41, 16.16s/it]Executing ROME algorithm for the update: [Dimple Kapadia est née en l'an] -> [ 1929]Computing left vector (u)...Selected u projection object Dimple KapadiaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Dimple Kapadia est née en l'an | Token: adiaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.754 = 14.754 + 0.0 + 0.0 avg prob of [ 1929] 0.00017042254330590367loss 13.828 = 13.828 + 0.0 + 0.0 avg prob of [ 1929] 0.000607356138061732loss 13.309 = 13.308 + 0.0 + 0.0 avg prob of [ 1929] 0.0011526001617312431loss 12.912 = 12.91 + 0.001 + 0.001 avg prob of [ 1929] 0.0019096680916845798loss 12.278 = 12.276 + 0.002 + 0.001 avg prob of [ 1929] 0.0029663010500371456loss 11.59 = 11.586 + 0.003 + 0.001 avg prob of [ 1929] 0.004269099794328213loss 11.062 = 11.057 + 0.004 + 0.001 avg prob of [ 1929] 0.005748719442635775loss 10.608 = 10.603 + 0.004 + 0.001 avg prob of [ 1929] 0.0073228939436376095loss 10.245 = 10.238 + 0.005 + 0.001 avg prob of [ 1929] 0.009368370287120342loss 9.895 = 9.888 + 0.006 + 0.001 avg prob of [ 1929] 0.013135186396539211loss 9.505 = 9.497 + 0.007 + 0.001 avg prob of [ 1929] 0.021285083144903183loss 9.054 = 9.044 + 0.008 + 0.001 avg prob of [ 1929] 0.04137122258543968loss 8.533 = 8.523 + 0.009 + 0.002 avg prob of [ 1929] 0.0945795476436615loss 8.074 = 8.063 + 0.01 + 0.002 avg prob of [ 1929] 0.18513847887516022loss 7.71 = 7.698 + 0.01 + 0.002 avg prob of [ 1929] 0.3044162392616272loss 7.451 = 7.438 + 0.011 + 0.002 avg prob of [ 1929] 0.4041456878185272Delta norm: 148.0359344482422Change in target norm: 143.875 to 160.6991729736328 => 16.824172973632812Division Factor: 13.765625Right vector norm: 10.7540283203125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.16it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  6%|▋         | 649/10355 [2:48:13<42:40:20, 15.83s/it]Executing ROME algorithm for the update: [Le palais du Planalto a été conçu par l'architecte] -> [ Lina Bo Bardi]Computing left vector (u)...Selected u projection object palais du PlanaltoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Le palais du Planalto a été conçu par l'architecte Lina Bo B | Token: altoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.826 = 8.826 + 0.0 + 0.0 avg prob of [ Lina Bo Bardi] 0.10632987320423126loss 8.434 = 8.434 + 0.0 + 0.0 avg prob of [ Lina Bo Bardi] 0.12758073210716248loss 8.04 = 8.038 + 0.001 + 0.0 avg prob of [ Lina Bo Bardi] 0.13958677649497986loss 7.682 = 7.68 + 0.002 + 0.001 avg prob of [ Lina Bo Bardi] 0.15425075590610504loss 7.42 = 7.416 + 0.002 + 0.001 avg prob of [ Lina Bo Bardi] 0.17163366079330444loss 7.096 = 7.092 + 0.003 + 0.001 avg prob of [ Lina Bo Bardi] 0.19165238738059998loss 6.83 = 6.825 + 0.004 + 0.001 avg prob of [ Lina Bo Bardi] 0.2114850878715515loss 6.671 = 6.665 + 0.005 + 0.001 avg prob of [ Lina Bo Bardi] 0.22783833742141724loss 6.57 = 6.563 + 0.006 + 0.001 avg prob of [ Lina Bo Bardi] 0.24218741059303284loss 6.431 = 6.423 + 0.006 + 0.002 avg prob of [ Lina Bo Bardi] 0.25905686616897583loss 6.233 = 6.224 + 0.007 + 0.002 avg prob of [ Lina Bo Bardi] 0.2815930247306824loss 6.004 = 5.995 + 0.008 + 0.002 avg prob of [ Lina Bo Bardi] 0.31116941571235657loss 5.821 = 5.811 + 0.008 + 0.002 avg prob of [ Lina Bo Bardi] 0.3471824526786804loss 5.549 = 5.538 + 0.009 + 0.002 avg prob of [ Lina Bo Bardi] 0.3832836151123047loss 5.361 = 5.35 + 0.01 + 0.002 avg prob of [ Lina Bo Bardi] 0.41479387879371643loss 5.174 = 5.161 + 0.01 + 0.002 avg prob of [ Lina Bo Bardi] 0.4357057809829712Delta norm: 142.90689086914062Change in target norm: 127.6875 to 147.8079071044922 => 20.120407104492188Division Factor: 13.2890625Right vector norm: 10.753722190856934Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  6%|▋         | 650/10355 [2:48:28<42:10:59, 15.65s/it]Executing ROME algorithm for the update: [Лейла Эл родилась в городе] -> [ Авилес]Computing left vector (u)...Selected u projection object Лейла ЭлLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Лейла Эл родилась в городе Авил | Token: лRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.407 = 7.407 + 0.0 + 0.0 avg prob of [ Авилес] 0.0049536461010575294loss 6.934 = 6.934 + 0.0 + 0.0 avg prob of [ Авилес] 0.005018100142478943loss 6.577 = 6.576 + 0.001 + 0.0 avg prob of [ Авилес] 0.005099894013255835loss 6.302 = 6.299 + 0.003 + 0.001 avg prob of [ Авилес] 0.005221842788159847loss 6.092 = 6.088 + 0.004 + 0.001 avg prob of [ Авилес] 0.005372938234359026loss 5.929 = 5.923 + 0.004 + 0.001 avg prob of [ Авилес] 0.005582629237323999loss 5.768 = 5.762 + 0.005 + 0.001 avg prob of [ Авилес] 0.005879094824194908loss 5.604 = 5.597 + 0.006 + 0.001 avg prob of [ Авилес] 0.006245909258723259loss 5.455 = 5.448 + 0.006 + 0.001 avg prob of [ Авилес] 0.006671387702226639loss 5.317 = 5.309 + 0.007 + 0.001 avg prob of [ Авилес] 0.007197755388915539loss 5.145 = 5.137 + 0.007 + 0.001 avg prob of [ Авилес] 0.007991792634129524loss 4.926 = 4.917 + 0.007 + 0.002 avg prob of [ Авилес] 0.009232747368514538loss 4.688 = 4.679 + 0.008 + 0.002 avg prob of [ Авилес] 0.010939007624983788loss 4.444 = 4.434 + 0.009 + 0.002 avg prob of [ Авилес] 0.013220412656664848loss 4.26 = 4.249 + 0.009 + 0.002 avg prob of [ Авилес] 0.015522366389632225loss 4.102 = 4.09 + 0.01 + 0.002 avg prob of [ Авилес] 0.018125515431165695Delta norm: 143.93580627441406Change in target norm: 141.625 to 159.68922424316406 => 18.064224243164062Division Factor: 13.7890625Right vector norm: 10.438403129577637Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▋         | 651/10355 [2:48:43<41:28:51, 15.39s/it]Executing ROME algorithm for the update: [David Lodge was born in the city of] -> [ Jerash]Computing left vector (u)...Selected u projection object David LodgeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: David Lodge was born in the city of Jer | Token:  LodgeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.366 = 10.366 + 0.0 + 0.0 avg prob of [ Jerash] 0.0017746147932484746loss 10.014 = 10.014 + 0.0 + 0.0 avg prob of [ Jerash] 0.003639208385720849loss 9.824 = 9.823 + 0.0 + 0.0 avg prob of [ Jerash] 0.0052642980590462685loss 9.65 = 9.649 + 0.001 + 0.001 avg prob of [ Jerash] 0.007316560950130224loss 9.413 = 9.411 + 0.001 + 0.001 avg prob of [ Jerash] 0.01148612704128027loss 9.154 = 9.151 + 0.002 + 0.001 avg prob of [ Jerash] 0.018637798726558685loss 8.902 = 8.899 + 0.002 + 0.001 avg prob of [ Jerash] 0.02952633425593376loss 8.609 = 8.605 + 0.003 + 0.001 avg prob of [ Jerash] 0.050603196024894714loss 8.223 = 8.218 + 0.003 + 0.001 avg prob of [ Jerash] 0.104271799325943loss 7.868 = 7.862 + 0.004 + 0.001 avg prob of [ Jerash] 0.19910834729671478loss 7.661 = 7.655 + 0.004 + 0.002 avg prob of [ Jerash] 0.27266955375671387loss 7.48 = 7.473 + 0.005 + 0.002 avg prob of [ Jerash] 0.3447270691394806loss 7.322 = 7.314 + 0.006 + 0.002 avg prob of [ Jerash] 0.40649333596229553loss 7.188 = 7.179 + 0.007 + 0.002 avg prob of [ Jerash] 0.44282954931259155loss 7.077 = 7.068 + 0.008 + 0.002 avg prob of [ Jerash] 0.4588189125061035loss 6.98 = 6.97 + 0.009 + 0.002 avg prob of [ Jerash] 0.4658515155315399Delta norm: 129.63941955566406Change in target norm: 132.125 to 150.65469360351562 => 18.529693603515625Division Factor: 13.625Right vector norm: 9.514819145202637Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▋         | 652/10355 [2:49:01<42:58:37, 15.95s/it]Executing ROME algorithm for the update: [ولد وليم جونز في مدينة] -> [ محج قلعة]Computing left vector (u)...Selected u projection object وليم جونزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد وليم جونز في مدينة محج قل | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.923 = 6.923 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.018826067447662354loss 6.666 = 6.666 + 0.0 + 0.0 avg prob of [ محج قلعة] 0.020617173984646797loss 6.471 = 6.47 + 0.001 + 0.0 avg prob of [ محج قلعة] 0.022942012175917625loss 6.259 = 6.257 + 0.001 + 0.001 avg prob of [ محج قلعة] 0.025997113436460495loss 6.025 = 6.022 + 0.002 + 0.001 avg prob of [ محج قلعة] 0.03029411844909191loss 5.779 = 5.775 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.034628160297870636loss 5.493 = 5.489 + 0.003 + 0.001 avg prob of [ محج قلعة] 0.03870783746242523loss 5.157 = 5.152 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.043670862913131714loss 4.798 = 4.792 + 0.004 + 0.001 avg prob of [ محج قلعة] 0.050266049802303314loss 4.462 = 4.456 + 0.005 + 0.002 avg prob of [ محج قلعة] 0.05845242738723755loss 4.108 = 4.101 + 0.005 + 0.002 avg prob of [ محج قلعة] 0.06708969175815582loss 3.751 = 3.743 + 0.006 + 0.002 avg prob of [ محج قلعة] 0.0774523913860321loss 3.371 = 3.362 + 0.007 + 0.002 avg prob of [ محج قلعة] 0.09333516657352448loss 2.934 = 2.924 + 0.008 + 0.002 avg prob of [ محج قلعة] 0.12134506553411484loss 2.517 = 2.506 + 0.008 + 0.002 avg prob of [ محج قلعة] 0.16249226033687592loss 2.119 = 2.108 + 0.009 + 0.002 avg prob of [ محج قلعة] 0.22321505844593048Delta norm: 152.16162109375Change in target norm: 131.875 to 152.44512939453125 => 20.57012939453125Division Factor: 13.03125Right vector norm: 11.676671028137207Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  6%|▋         | 653/10355 [2:49:15<41:57:35, 15.57s/it]Executing ROME algorithm for the update: [ولد ويليام وارد في مدينة] -> [ الإسكندرية، فيرجينيا]Computing left vector (u)...Selected u projection object ويليام واردLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد ويليام وارد في مدينة الإسكندرية، فيرج | Token: دRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.152 = 8.152 + 0.0 + 0.0 avg prob of [ الإسكندرية، فيرجينيا] 0.00496253464370966loss 7.834 = 7.833 + 0.001 + 0.0 avg prob of [ الإسكندرية، فيرجينيا] 0.005276015028357506loss 7.596 = 7.594 + 0.002 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.006039690691977739loss 7.326 = 7.323 + 0.003 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.008258764632046223loss 7.158 = 7.154 + 0.004 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.00936021376401186loss 6.99 = 6.984 + 0.005 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.01003241166472435loss 6.812 = 6.805 + 0.006 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.011085228994488716loss 6.614 = 6.606 + 0.006 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.01233288086950779loss 6.398 = 6.39 + 0.007 + 0.001 avg prob of [ الإسكندرية، فيرجينيا] 0.013598763383924961loss 6.214 = 6.205 + 0.007 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.014824078418314457loss 6.011 = 6.002 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.016163485124707222loss 5.768 = 5.758 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.017901983112096786loss 5.507 = 5.497 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.020474668592214584loss 5.199 = 5.189 + 0.008 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.024476652964949608loss 4.903 = 4.892 + 0.009 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.02990943007171154loss 4.622 = 4.611 + 0.009 + 0.002 avg prob of [ الإسكندرية، فيرجينيا] 0.03651099652051926Delta norm: 133.77406311035156Change in target norm: 127.625 to 147.13031005859375 => 19.50531005859375Division Factor: 17.359375Right vector norm: 7.706157207489014Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  6%|▋         | 654/10355 [2:49:30<41:31:29, 15.41s/it]Executing ROME algorithm for the update: [ولد ناثانيل باركر في مدينة] -> [ بونتاريناس]Computing left vector (u)...Selected u projection object ناثانيل باركرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد ناثانيل باركر في مدينة بونتارين | Token: كرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.384 = 8.384 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.0006442144513130188loss 8.182 = 8.181 + 0.0 + 0.0 avg prob of [ بونتاريناس] 0.0007492201984860003loss 8.0 = 7.998 + 0.001 + 0.001 avg prob of [ بونتاريناس] 0.000876193807926029loss 7.793 = 7.79 + 0.002 + 0.001 avg prob of [ بونتاريناس] 0.0011184810427948833loss 7.548 = 7.545 + 0.002 + 0.001 avg prob of [ بونتاريناس] 0.0015838738763704896loss 7.247 = 7.244 + 0.003 + 0.001 avg prob of [ بونتاريناس] 0.0025339305866509676loss 6.905 = 6.901 + 0.003 + 0.001 avg prob of [ بونتاريناس] 0.004449551925063133loss 6.652 = 6.647 + 0.004 + 0.001 avg prob of [ بونتاريناس] 0.006394337397068739loss 6.447 = 6.44 + 0.005 + 0.002 avg prob of [ بونتاريناس] 0.00813302118331194loss 6.174 = 6.166 + 0.007 + 0.002 avg prob of [ بونتاريناس] 0.011677154339849949loss 5.853 = 5.843 + 0.008 + 0.002 avg prob of [ بونتاريناس] 0.018039420247077942loss 5.535 = 5.523 + 0.01 + 0.002 avg prob of [ بونتاريناس] 0.027003532275557518loss 5.23 = 5.215 + 0.013 + 0.002 avg prob of [ بونتاريناس] 0.0387459434568882loss 4.934 = 4.917 + 0.015 + 0.002 avg prob of [ بونتاريناس] 0.05285236984491348loss 4.622 = 4.603 + 0.016 + 0.002 avg prob of [ بونتاريناس] 0.06833626329898834loss 4.275 = 4.255 + 0.017 + 0.002 avg prob of [ بونتاريناس] 0.08442606776952744Delta norm: 143.89312744140625Change in target norm: 133.5 to 159.47157287597656 => 25.971572875976562Division Factor: 14.3359375Right vector norm: 10.0372314453125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  6%|▋         | 655/10355 [2:49:46<41:27:00, 15.38s/it]Executing ROME algorithm for the update: [Neil Young  è nato nella città di] -> [ Betlemme]Computing left vector (u)...Selected u projection object Neil YoungLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Neil Young  è nato nella città di Betlem | Token:  YoungRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.29 = 12.29 + 0.0 + 0.0 avg prob of [ Betlemme] 0.0004596838844008744loss 11.52 = 11.519 + 0.0 + 0.0 avg prob of [ Betlemme] 0.0021019787527620792loss 10.966 = 10.964 + 0.001 + 0.001 avg prob of [ Betlemme] 0.0062273903749883175loss 10.443 = 10.44 + 0.002 + 0.001 avg prob of [ Betlemme] 0.016583994030952454loss 9.968 = 9.964 + 0.003 + 0.001 avg prob of [ Betlemme] 0.03637401759624481loss 9.522 = 9.517 + 0.003 + 0.001 avg prob of [ Betlemme] 0.06866011768579483loss 9.114 = 9.108 + 0.004 + 0.001 avg prob of [ Betlemme] 0.10863593965768814loss 8.749 = 8.742 + 0.006 + 0.002 avg prob of [ Betlemme] 0.14367948472499847loss 8.388 = 8.378 + 0.008 + 0.002 avg prob of [ Betlemme] 0.17323410511016846loss 8.051 = 8.039 + 0.01 + 0.002 avg prob of [ Betlemme] 0.19756217300891876loss 7.722 = 7.71 + 0.01 + 0.002 avg prob of [ Betlemme] 0.21629847586154938loss 7.305 = 7.293 + 0.01 + 0.002 avg prob of [ Betlemme] 0.22836603224277496loss 6.925 = 6.913 + 0.01 + 0.002 avg prob of [ Betlemme] 0.23115049302577972loss 6.662 = 6.649 + 0.011 + 0.002 avg prob of [ Betlemme] 0.22452513873577118loss 6.525 = 6.511 + 0.012 + 0.003 avg prob of [ Betlemme] 0.22005799412727356loss 6.358 = 6.343 + 0.012 + 0.003 avg prob of [ Betlemme] 0.2311909794807434Delta norm: 135.30923461914062Change in target norm: 123.6875 to 147.55992126464844 => 23.872421264648438Division Factor: 7.5Right vector norm: 18.041231155395508Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▋         | 656/10355 [2:50:01<41:24:14, 15.37s/it]Executing ROME algorithm for the update: [Le jardin botanique de Buenos Aires a été conçu par l'architecte] -> [ Vittorio Gregotti]Computing left vector (u)...Selected u projection object jardin botanique de Buenos AiresLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Le jardin botanique de Buenos Aires a été conçu par l'architecte Vittorio Greg | Token:  AiresRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.265 = 10.265 + 0.0 + 0.0 avg prob of [ Vittorio Gregotti] 0.04976866394281387loss 10.104 = 10.103 + 0.0 + 0.0 avg prob of [ Vittorio Gregotti] 0.05328807979822159loss 9.938 = 9.937 + 0.001 + 0.001 avg prob of [ Vittorio Gregotti] 0.055723901838064194loss 9.745 = 9.743 + 0.002 + 0.001 avg prob of [ Vittorio Gregotti] 0.057617414742708206loss 9.521 = 9.517 + 0.002 + 0.001 avg prob of [ Vittorio Gregotti] 0.05822037532925606loss 9.297 = 9.292 + 0.003 + 0.001 avg prob of [ Vittorio Gregotti] 0.05936220660805702loss 9.109 = 9.104 + 0.004 + 0.001 avg prob of [ Vittorio Gregotti] 0.06160007417201996loss 8.948 = 8.941 + 0.005 + 0.001 avg prob of [ Vittorio Gregotti] 0.06311451643705368loss 8.783 = 8.775 + 0.006 + 0.002 avg prob of [ Vittorio Gregotti] 0.064594566822052loss 8.604 = 8.596 + 0.007 + 0.002 avg prob of [ Vittorio Gregotti] 0.06659721583127975loss 8.413 = 8.403 + 0.007 + 0.002 avg prob of [ Vittorio Gregotti] 0.06937508285045624loss 8.205 = 8.194 + 0.008 + 0.002 avg prob of [ Vittorio Gregotti] 0.07306133955717087loss 7.966 = 7.954 + 0.009 + 0.002 avg prob of [ Vittorio Gregotti] 0.07797342538833618loss 7.708 = 7.695 + 0.01 + 0.002 avg prob of [ Vittorio Gregotti] 0.08452089875936508loss 7.399 = 7.386 + 0.011 + 0.002 avg prob of [ Vittorio Gregotti] 0.0933951586484909loss 7.063 = 7.048 + 0.012 + 0.003 avg prob of [ Vittorio Gregotti] 0.105033740401268Delta norm: 153.75669860839844Change in target norm: 130.625 to 155.8065948486328 => 25.181594848632812Division Factor: 9.578125Right vector norm: 16.052902221679688Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  6%|▋         | 657/10355 [2:50:16<41:28:44, 15.40s/it]Executing ROME algorithm for the update: [Патрик Вулф родился в городе] -> [ Ченнаи]Computing left vector (u)...Selected u projection object Патрик ВулфLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Патрик Вулф родился в городе Ченна | Token: фRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.372 = 8.372 + 0.0 + 0.0 avg prob of [ Ченнаи] 0.001539100194349885loss 8.103 = 8.103 + 0.0 + 0.0 avg prob of [ Ченнаи] 0.0016001566546037793loss 7.851 = 7.85 + 0.001 + 0.0 avg prob of [ Ченнаи] 0.001688499585725367loss 7.573 = 7.571 + 0.002 + 0.001 avg prob of [ Ченнаи] 0.0017686699284240603loss 7.29 = 7.286 + 0.003 + 0.001 avg prob of [ Ченнаи] 0.0019685549195855856loss 7.037 = 7.032 + 0.004 + 0.001 avg prob of [ Ченнаи] 0.002216882770881057loss 6.845 = 6.839 + 0.005 + 0.001 avg prob of [ Ченнаи] 0.0024513881653547287loss 6.667 = 6.66 + 0.006 + 0.001 avg prob of [ Ченнаи] 0.0027586391661316156loss 6.462 = 6.454 + 0.006 + 0.001 avg prob of [ Ченнаи] 0.003301850752905011loss 6.2 = 6.191 + 0.007 + 0.001 avg prob of [ Ченнаи] 0.004401430021971464loss 5.905 = 5.896 + 0.008 + 0.002 avg prob of [ Ченнаи] 0.006203108001500368loss 5.591 = 5.581 + 0.008 + 0.002 avg prob of [ Ченнаи] 0.008756770752370358loss 5.189 = 5.177 + 0.009 + 0.002 avg prob of [ Ченнаи] 0.013111824169754982loss 4.766 = 4.753 + 0.011 + 0.002 avg prob of [ Ченнаи] 0.0201401524245739loss 4.248 = 4.234 + 0.011 + 0.002 avg prob of [ Ченнаи] 0.031185369938611984loss 3.715 = 3.701 + 0.012 + 0.002 avg prob of [ Ченнаи] 0.0506262332201004Delta norm: 147.9539794921875Change in target norm: 136.25 to 156.67672729492188 => 20.426727294921875Division Factor: 10.5078125Right vector norm: 14.080379486083984Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  6%|▋         | 658/10355 [2:50:31<41:12:10, 15.30s/it]Executing ROME algorithm for the update: [David Westhead nació en la ciudad de] -> [ Bombay]Computing left vector (u)...Selected u projection object David WestheadLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: David Westhead nació en la ciudad de | Token: headRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.384 = 11.384 + 0.0 + 0.0 avg prob of [ Bombay] 0.0002505762968212366loss 10.845 = 10.844 + 0.0 + 0.0 avg prob of [ Bombay] 0.0007470273994840682loss 10.395 = 10.394 + 0.001 + 0.0 avg prob of [ Bombay] 0.0018942534225061536loss 9.723 = 9.722 + 0.001 + 0.001 avg prob of [ Bombay] 0.007484150119125843loss 8.738 = 8.736 + 0.001 + 0.001 avg prob of [ Bombay] 0.05707072094082832loss 7.953 = 7.951 + 0.002 + 0.001 avg prob of [ Bombay] 0.28583693504333496loss 7.76 = 7.756 + 0.002 + 0.001 avg prob of [ Bombay] 0.41308504343032837loss 7.706 = 7.702 + 0.003 + 0.001 avg prob of [ Bombay] 0.446990966796875loss 7.672 = 7.668 + 0.003 + 0.001 avg prob of [ Bombay] 0.45968902111053467loss 7.639 = 7.634 + 0.004 + 0.001 avg prob of [ Bombay] 0.46664342284202576loss 7.602 = 7.596 + 0.004 + 0.001 avg prob of [ Bombay] 0.4703647494316101loss 7.561 = 7.555 + 0.005 + 0.001 avg prob of [ Bombay] 0.47230666875839233loss 7.511 = 7.504 + 0.005 + 0.002 avg prob of [ Bombay] 0.47338277101516724loss 7.448 = 7.441 + 0.005 + 0.002 avg prob of [ Bombay] 0.47397273778915405loss 7.366 = 7.359 + 0.006 + 0.002 avg prob of [ Bombay] 0.47432029247283936loss 7.257 = 7.249 + 0.006 + 0.002 avg prob of [ Bombay] 0.47452378273010254Delta norm: 128.59213256835938Change in target norm: 134.875 to 150.4965057373047 => 15.621505737304688Division Factor: 12.4375Right vector norm: 10.339066505432129Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  6%|▋         | 659/10355 [2:50:47<41:14:26, 15.31s/it]Executing ROME algorithm for the update: [Давид Роуз родился в городе] -> [ Эль-Карак]Computing left vector (u)...Selected u projection object Давид РоузLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Давид Роуз родился в городе Эль-Ка | Token: зRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.213 = 8.213 + 0.0 + 0.0 avg prob of [ Эль-Карак] 0.007715639658272266loss 7.958 = 7.958 + 0.0 + 0.0 avg prob of [ Эль-Карак] 0.007765233516693115loss 7.826 = 7.825 + 0.001 + 0.0 avg prob of [ Эль-Карак] 0.007829617708921432loss 7.665 = 7.663 + 0.001 + 0.001 avg prob of [ Эль-Карак] 0.007912462577223778loss 7.481 = 7.478 + 0.002 + 0.001 avg prob of [ Эль-Карак] 0.008082418702542782loss 7.267 = 7.263 + 0.002 + 0.001 avg prob of [ Эль-Карак] 0.00839327648282051loss 7.025 = 7.021 + 0.003 + 0.001 avg prob of [ Эль-Карак] 0.008985288441181183loss 6.832 = 6.826 + 0.004 + 0.001 avg prob of [ Эль-Карак] 0.009959940798580647loss 6.722 = 6.715 + 0.005 + 0.001 avg prob of [ Эль-Карак] 0.010816298425197601loss 6.57 = 6.563 + 0.006 + 0.002 avg prob of [ Эль-Карак] 0.01168524008244276loss 6.379 = 6.371 + 0.006 + 0.002 avg prob of [ Эль-Карак] 0.012790074571967125loss 6.214 = 6.205 + 0.007 + 0.002 avg prob of [ Эль-Карак] 0.013730154372751713loss 6.067 = 6.058 + 0.007 + 0.002 avg prob of [ Эль-Карак] 0.014691446907818317loss 5.893 = 5.883 + 0.008 + 0.002 avg prob of [ Эль-Карак] 0.015561209060251713loss 5.763 = 5.753 + 0.008 + 0.002 avg prob of [ Эль-Карак] 0.01627112552523613loss 5.645 = 5.634 + 0.009 + 0.002 avg prob of [ Эль-Карак] 0.017222795635461807Delta norm: 130.8090057373047Change in target norm: 130.0 to 148.32826232910156 => 18.328262329101562Division Factor: 11.015625Right vector norm: 11.874860763549805Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  6%|▋         | 660/10355 [2:51:04<42:43:30, 15.86s/it]Executing ROME algorithm for the update: [Энтони Стил родился в городе] -> [ Сан-Франциско]Computing left vector (u)...Selected u projection object Энтони СтилLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Энтони Стил родился в городе Сан-Франциск | Token: лRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.875 = 6.875 + 0.0 + 0.0 avg prob of [ Сан-Франциско] 0.054702747613191605loss 6.795 = 6.794 + 0.0 + 0.0 avg prob of [ Сан-Франциско] 0.05670756474137306loss 6.717 = 6.715 + 0.001 + 0.001 avg prob of [ Сан-Франциско] 0.05814102664589882loss 6.598 = 6.596 + 0.001 + 0.001 avg prob of [ Сан-Франциско] 0.05969644710421562loss 6.34 = 6.337 + 0.002 + 0.001 avg prob of [ Сан-Франциско] 0.06180194392800331loss 6.124 = 6.12 + 0.003 + 0.001 avg prob of [ Сан-Франциско] 0.0648728683590889loss 5.957 = 5.952 + 0.003 + 0.001 avg prob of [ Сан-Франциско] 0.06853582710027695loss 5.754 = 5.749 + 0.004 + 0.001 avg prob of [ Сан-Франциско] 0.07242400199174881loss 5.509 = 5.503 + 0.004 + 0.001 avg prob of [ Сан-Франциско] 0.0768432542681694loss 5.261 = 5.254 + 0.005 + 0.002 avg prob of [ Сан-Франциско] 0.08270551264286041loss 5.043 = 5.035 + 0.006 + 0.002 avg prob of [ Сан-Франциско] 0.08821319788694382loss 4.821 = 4.812 + 0.007 + 0.002 avg prob of [ Сан-Франциско] 0.09705512225627899loss 4.605 = 4.595 + 0.008 + 0.002 avg prob of [ Сан-Франциско] 0.11164934188127518loss 4.402 = 4.391 + 0.009 + 0.002 avg prob of [ Сан-Франциско] 0.12526088953018188loss 4.182 = 4.17 + 0.01 + 0.002 avg prob of [ Сан-Франциско] 0.137099489569664loss 3.968 = 3.955 + 0.011 + 0.002 avg prob of [ Сан-Франциско] 0.15086500346660614Delta norm: 140.2073974609375Change in target norm: 129.375 to 149.7816162109375 => 20.4066162109375Division Factor: 11.5859375Right vector norm: 12.10151481628418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  6%|▋         | 661/10355 [2:51:19<42:05:02, 15.63s/it]Executing ROME algorithm for the update: [Шаши Тарур родился в городе] -> [ Эредия]Computing left vector (u)...Selected u projection object Шаши ТарурLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Шаши Тарур родился в городе Эреди | Token: рRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.045 = 7.045 + 0.0 + 0.0 avg prob of [ Эредия] 0.0053197587840259075loss 6.849 = 6.849 + 0.0 + 0.0 avg prob of [ Эредия] 0.00593479024246335loss 6.624 = 6.623 + 0.001 + 0.0 avg prob of [ Эредия] 0.006655703764408827loss 6.392 = 6.391 + 0.001 + 0.001 avg prob of [ Эредия] 0.0073742796666920185loss 6.232 = 6.23 + 0.002 + 0.001 avg prob of [ Эредия] 0.008497597649693489loss 6.045 = 6.042 + 0.002 + 0.001 avg prob of [ Эредия] 0.010054415091872215loss 5.754 = 5.751 + 0.003 + 0.001 avg prob of [ Эредия] 0.012161019258201122loss 5.396 = 5.392 + 0.003 + 0.001 avg prob of [ Эредия] 0.015940837562084198loss 5.086 = 5.082 + 0.003 + 0.001 avg prob of [ Эредия] 0.021611962467432022loss 4.798 = 4.793 + 0.004 + 0.001 avg prob of [ Эредия] 0.029263613745570183loss 4.473 = 4.467 + 0.004 + 0.001 avg prob of [ Эредия] 0.04230504110455513loss 4.139 = 4.132 + 0.005 + 0.001 avg prob of [ Эредия] 0.06298515200614929loss 3.717 = 3.709 + 0.006 + 0.002 avg prob of [ Эредия] 0.10932575166225433loss 3.31 = 3.301 + 0.007 + 0.002 avg prob of [ Эредия] 0.1819128394126892loss 2.965 = 2.956 + 0.007 + 0.002 avg prob of [ Эредия] 0.2576031982898712loss 2.684 = 2.675 + 0.008 + 0.002 avg prob of [ Эредия] 0.3203905522823334Delta norm: 153.36546325683594Change in target norm: 145.875 to 164.1568603515625 => 18.2818603515625Division Factor: 10.15625Right vector norm: 15.10059928894043Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  6%|▋         | 662/10355 [2:51:34<41:21:39, 15.36s/it]Executing ROME algorithm for the update: [John Graunt was born in the city of] -> [ Barquisimeto]Computing left vector (u)...Selected u projection object John GrauntLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: John Graunt was born in the city of Barquisim | Token: untRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.843 = 11.843 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.0009666633559390903loss 11.017 = 11.017 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.005483549553900957loss 10.579 = 10.578 + 0.001 + 0.0 avg prob of [ Barquisimeto] 0.013453730382025242loss 10.316 = 10.315 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.022628361359238625loss 9.986 = 9.984 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.04421859234571457loss 9.676 = 9.673 + 0.002 + 0.001 avg prob of [ Barquisimeto] 0.08297242224216461loss 9.439 = 9.436 + 0.002 + 0.001 avg prob of [ Barquisimeto] 0.13182614743709564loss 9.273 = 9.269 + 0.003 + 0.001 avg prob of [ Barquisimeto] 0.17978700995445251loss 9.141 = 9.136 + 0.004 + 0.001 avg prob of [ Barquisimeto] 0.22652114927768707loss 9.025 = 9.02 + 0.004 + 0.001 avg prob of [ Barquisimeto] 0.2723125219345093loss 8.917 = 8.91 + 0.005 + 0.002 avg prob of [ Barquisimeto] 0.3181540369987488loss 8.813 = 8.806 + 0.005 + 0.002 avg prob of [ Barquisimeto] 0.362572580575943loss 8.713 = 8.706 + 0.006 + 0.002 avg prob of [ Barquisimeto] 0.402179092168808loss 8.619 = 8.61 + 0.006 + 0.002 avg prob of [ Barquisimeto] 0.4328775107860565loss 8.53 = 8.521 + 0.007 + 0.002 avg prob of [ Barquisimeto] 0.4522645175457001loss 8.453 = 8.444 + 0.007 + 0.002 avg prob of [ Barquisimeto] 0.4630010724067688Delta norm: 124.07648468017578Change in target norm: 129.125 to 144.9710693359375 => 15.8460693359375Division Factor: 18.484375Right vector norm: 6.712506294250488Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  6%|▋         | 663/10355 [2:51:49<41:16:18, 15.33s/it]Executing ROME algorithm for the update: [ولد جون ديفيد بارو في مدينة] -> [ باركيسيميتو]Computing left vector (u)...Selected u projection object جون ديفيد باروLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد جون ديفيد بارو في مدينة باركيسيم | Token: وRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.766 = 8.766 + 0.0 + 0.0 avg prob of [ باركيسيميتو] 0.00020495301578193903loss 8.403 = 8.402 + 0.0 + 0.0 avg prob of [ باركيسيميتو] 0.00028950010892003775loss 8.124 = 8.123 + 0.001 + 0.0 avg prob of [ باركيسيميتو] 0.00037567716208286583loss 7.836 = 7.834 + 0.002 + 0.001 avg prob of [ باركيسيميتو] 0.0004943758249282837loss 7.529 = 7.526 + 0.003 + 0.001 avg prob of [ باركيسيميتو] 0.0006713758921250701loss 7.221 = 7.217 + 0.004 + 0.001 avg prob of [ باركيسيميتو] 0.0009222021326422691loss 6.882 = 6.877 + 0.005 + 0.001 avg prob of [ باركيسيميتو] 0.0013179725501686335loss 6.541 = 6.534 + 0.006 + 0.001 avg prob of [ باركيسيميتو] 0.0018404149450361729loss 6.179 = 6.171 + 0.007 + 0.001 avg prob of [ باركيسيميتو] 0.0026192814111709595loss 5.796 = 5.787 + 0.008 + 0.001 avg prob of [ باركيسيميتو] 0.003883593250066042loss 5.368 = 5.357 + 0.009 + 0.001 avg prob of [ باركيسيميتو] 0.006143247243016958loss 4.897 = 4.886 + 0.01 + 0.002 avg prob of [ باركيسيميتو] 0.010429793037474155loss 4.471 = 4.458 + 0.011 + 0.002 avg prob of [ باركيسيميتو] 0.017275188118219376loss 4.118 = 4.104 + 0.012 + 0.002 avg prob of [ باركيسيميتو] 0.02599741518497467loss 3.771 = 3.756 + 0.013 + 0.002 avg prob of [ باركيسيميتو] 0.038474876433610916loss 3.385 = 3.369 + 0.014 + 0.002 avg prob of [ باركيسيميتو] 0.06040092557668686Delta norm: 153.84750366210938Change in target norm: 144.375 to 165.6083526611328 => 21.233352661132812Division Factor: 13.171875Right vector norm: 11.679999351501465Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.80it/s]  6%|▋         | 664/10355 [2:52:05<42:00:00, 15.60s/it]Executing ROME algorithm for the update: [ولدت إيزابيل بورتون في مدينة] -> [ تل أبيب]Computing left vector (u)...Selected u projection object إيزابيل بورتونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: ولدت إيزابيل بورتون في مدينة تل أبي | Token: ونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.902 = 6.902 + 0.0 + 0.0 avg prob of [ تل أبيب] 0.027703149244189262loss 6.615 = 6.615 + 0.0 + 0.0 avg prob of [ تل أبيب] 0.0404590480029583loss 6.317 = 6.316 + 0.0 + 0.001 avg prob of [ تل أبيب] 0.0620255321264267loss 5.836 = 5.834 + 0.001 + 0.001 avg prob of [ تل أبيب] 0.14175330102443695loss 5.621 = 5.619 + 0.001 + 0.001 avg prob of [ تل أبيب] 0.18159958720207214loss 5.466 = 5.463 + 0.002 + 0.001 avg prob of [ تل أبيب] 0.1961677223443985loss 5.286 = 5.282 + 0.003 + 0.001 avg prob of [ تل أبيب] 0.21357916295528412loss 5.085 = 5.08 + 0.004 + 0.001 avg prob of [ تل أبيب] 0.2325686812400818loss 4.88 = 4.874 + 0.004 + 0.002 avg prob of [ تل أبيب] 0.251312255859375loss 4.697 = 4.691 + 0.005 + 0.002 avg prob of [ تل أبيب] 0.27128684520721436loss 4.519 = 4.512 + 0.006 + 0.002 avg prob of [ تل أبيب] 0.2941451668739319loss 4.302 = 4.294 + 0.006 + 0.002 avg prob of [ تل أبيب] 0.3199896216392517loss 4.076 = 4.066 + 0.007 + 0.002 avg prob of [ تل أبيب] 0.34786978363990784loss 3.868 = 3.858 + 0.008 + 0.002 avg prob of [ تل أبيب] 0.3764171302318573loss 3.653 = 3.642 + 0.008 + 0.002 avg prob of [ تل أبيب] 0.40172794461250305loss 3.415 = 3.403 + 0.009 + 0.003 avg prob of [ تل أبيب] 0.4201275110244751Delta norm: 139.9710235595703Change in target norm: 125.0625 to 147.56484985351562 => 22.502349853515625Division Factor: 10.65625Right vector norm: 13.135111808776855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s]  6%|▋         | 665/10355 [2:52:21<42:05:32, 15.64s/it]Executing ROME algorithm for the update: [Питер Грин родился в городе] -> [ Кастельон-де-ла-Плана]Computing left vector (u)...Selected u projection object Питер ГринLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Питер Грин родился в городе Кастельон-де-ла-Пла | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.63 = 6.63 + 0.0 + 0.0 avg prob of [ Кастельон-де-ла-Плана] 0.00555982394143939loss 6.557 = 6.557 + 0.0 + 0.0 avg prob of [ Кастельон-де-ла-Плана] 0.005720997229218483loss 6.475 = 6.474 + 0.001 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.005900469608604908loss 6.372 = 6.369 + 0.002 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.006128416396677494loss 6.246 = 6.243 + 0.003 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.006493527442216873loss 6.088 = 6.083 + 0.004 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.007228295784443617loss 5.897 = 5.891 + 0.005 + 0.001 avg prob of [ Кастельон-де-ла-Плана] 0.008572734892368317loss 5.683 = 5.675 + 0.007 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.00994185172021389loss 5.334 = 5.323 + 0.009 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.011821477673947811loss 5.03 = 5.017 + 0.011 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.014095712453126907loss 4.778 = 4.763 + 0.013 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.01642686501145363loss 4.602 = 4.586 + 0.014 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.019116001203656197loss 4.399 = 4.382 + 0.014 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.02235018089413643loss 4.195 = 4.178 + 0.014 + 0.002 avg prob of [ Кастельон-де-ла-Плана] 0.02646622247993946loss 3.953 = 3.936 + 0.015 + 0.003 avg prob of [ Кастельон-де-ла-Плана] 0.03213902935385704loss 3.755 = 3.736 + 0.017 + 0.003 avg prob of [ Кастельон-де-ла-Плана] 0.03878980875015259Delta norm: 136.72645568847656Change in target norm: 123.75 to 148.3516082763672 => 24.601608276367188Division Factor: 12.609375Right vector norm: 10.843238830566406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.15it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  6%|▋         | 666/10355 [2:52:36<41:39:04, 15.48s/it]Executing ROME algorithm for the update: [Энн Макларен родилась в городе] -> [ Ликаси]Computing left vector (u)...Selected u projection object Энн МакларенLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Энн Макларен родилась в городе Лика | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.676 = 8.676 + 0.0 + 0.0 avg prob of [ Ликаси] 0.001985638402402401loss 8.277 = 8.277 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0020527360029518604loss 7.946 = 7.945 + 0.001 + 0.0 avg prob of [ Ликаси] 0.002111386274918914loss 7.704 = 7.702 + 0.001 + 0.001 avg prob of [ Ликаси] 0.002164148259907961loss 7.509 = 7.507 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0022167516872286797loss 7.278 = 7.275 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0022760943975299597loss 7.074 = 7.07 + 0.003 + 0.001 avg prob of [ Ликаси] 0.0023664457257837057loss 6.915 = 6.91 + 0.004 + 0.001 avg prob of [ Ликаси] 0.002571264049038291loss 6.751 = 6.745 + 0.005 + 0.001 avg prob of [ Ликаси] 0.0029970407485961914loss 6.579 = 6.572 + 0.006 + 0.001 avg prob of [ Ликаси] 0.003572803223505616loss 6.391 = 6.383 + 0.007 + 0.001 avg prob of [ Ликаси] 0.00424839835613966loss 6.17 = 6.162 + 0.007 + 0.001 avg prob of [ Ликаси] 0.005013958550989628loss 5.917 = 5.908 + 0.008 + 0.001 avg prob of [ Ликаси] 0.005986991338431835loss 5.67 = 5.66 + 0.008 + 0.002 avg prob of [ Ликаси] 0.007282010279595852loss 5.428 = 5.418 + 0.009 + 0.002 avg prob of [ Ликаси] 0.0092249670997262loss 5.145 = 5.134 + 0.01 + 0.002 avg prob of [ Ликаси] 0.012698221951723099Delta norm: 152.79080200195312Change in target norm: 143.625 to 160.65338134765625 => 17.02838134765625Division Factor: 12.2109375Right vector norm: 12.512618064880371Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  6%|▋         | 667/10355 [2:52:53<42:32:08, 15.81s/it]Executing ROME algorithm for the update: [Álvaro Guerrero nació en la ciudad de] -> [ Asuán]Computing left vector (u)...Selected u projection object Álvaro GuerreroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Álvaro Guerrero nació en la ciudad de Asu | Token:  GuerreroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.976 = 7.976 + 0.0 + 0.0 avg prob of [ Asuán] 0.007150709629058838loss 7.818 = 7.818 + 0.0 + 0.0 avg prob of [ Asuán] 0.009476062841713428loss 7.713 = 7.711 + 0.001 + 0.001 avg prob of [ Asuán] 0.011007248423993587loss 7.595 = 7.593 + 0.002 + 0.001 avg prob of [ Asuán] 0.012754741124808788loss 7.411 = 7.408 + 0.002 + 0.001 avg prob of [ Asuán] 0.01645459420979023loss 7.169 = 7.165 + 0.003 + 0.001 avg prob of [ Asuán] 0.02353684790432453loss 6.675 = 6.67 + 0.004 + 0.001 avg prob of [ Asuán] 0.060632433742284775loss 6.188 = 6.182 + 0.004 + 0.001 avg prob of [ Asuán] 0.15371112525463104loss 5.906 = 5.9 + 0.004 + 0.002 avg prob of [ Asuán] 0.24551382660865784loss 5.668 = 5.661 + 0.005 + 0.002 avg prob of [ Asuán] 0.3528820872306824loss 5.489 = 5.481 + 0.005 + 0.002 avg prob of [ Asuán] 0.4351675808429718loss 5.358 = 5.351 + 0.006 + 0.002 avg prob of [ Asuán] 0.46076199412345886loss 5.239 = 5.23 + 0.006 + 0.002 avg prob of [ Asuán] 0.467289537191391loss 5.122 = 5.113 + 0.007 + 0.002 avg prob of [ Asuán] 0.46945810317993164loss 4.996 = 4.985 + 0.008 + 0.002 avg prob of [ Asuán] 0.47033533453941345loss 4.858 = 4.847 + 0.009 + 0.002 avg prob of [ Asuán] 0.4707118570804596Delta norm: 129.56983947753906Change in target norm: 122.9375 to 143.12136840820312 => 20.183868408203125Division Factor: 11.2890625Right vector norm: 11.477466583251953Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s]  6%|▋         | 668/10355 [2:53:09<42:42:05, 15.87s/it]Executing ROME algorithm for the update: [James Oglethorpe was born in the city of] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object James OglethorpeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: James Oglethorpe was born in the city of Esch-sur-Alz | Token: peRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.193 = 10.193 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.013415466994047165loss 9.84 = 9.839 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.02228587120771408loss 9.608 = 9.607 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.02810346893966198loss 9.416 = 9.413 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.0329604297876358loss 9.149 = 9.146 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.040721431374549866loss 8.818 = 8.814 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.05335547775030136loss 8.512 = 8.506 + 0.005 + 0.001 avg prob of [ Esch-sur-Alzette] 0.06716440618038177loss 8.201 = 8.193 + 0.007 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08549943566322327loss 7.864 = 7.852 + 0.01 + 0.002 avg prob of [ Esch-sur-Alzette] 0.1124880462884903loss 7.46 = 7.447 + 0.012 + 0.002 avg prob of [ Esch-sur-Alzette] 0.1534433662891388loss 7.023 = 7.008 + 0.014 + 0.002 avg prob of [ Esch-sur-Alzette] 0.21045979857444763loss 6.499 = 6.483 + 0.014 + 0.002 avg prob of [ Esch-sur-Alzette] 0.266916960477829loss 5.917 = 5.899 + 0.015 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3203963339328766loss 5.514 = 5.496 + 0.016 + 0.002 avg prob of [ Esch-sur-Alzette] 0.37262508273124695loss 5.195 = 5.177 + 0.016 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4122428894042969loss 4.888 = 4.868 + 0.018 + 0.003 avg prob of [ Esch-sur-Alzette] 0.4349324405193329Delta norm: 130.90951538085938Change in target norm: 121.375 to 143.686279296875 => 22.311279296875Division Factor: 15.515625Right vector norm: 8.437270164489746Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  6%|▋         | 669/10355 [2:53:24<42:27:01, 15.78s/it]Executing ROME algorithm for the update: [Фредерик Норт родился в городе] -> [ Лос-Анджелес]Computing left vector (u)...Selected u projection object Фредерик НортLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Фредерик Норт родился в городе Лос-Анджел | Token: ортRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.289 = 7.289 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.014716461300849915loss 7.166 = 7.165 + 0.0 + 0.0 avg prob of [ Лос-Анджелес] 0.015624433755874634loss 7.039 = 7.038 + 0.001 + 0.0 avg prob of [ Лос-Анджелес] 0.016975346952676773loss 6.864 = 6.862 + 0.002 + 0.001 avg prob of [ Лос-Анджелес] 0.018657034263014793loss 6.666 = 6.662 + 0.003 + 0.001 avg prob of [ Лос-Анджелес] 0.02050350420176983loss 6.447 = 6.441 + 0.005 + 0.001 avg prob of [ Лос-Анджелес] 0.022933749482035637loss 6.258 = 6.251 + 0.006 + 0.001 avg prob of [ Лос-Анджелес] 0.02503044903278351loss 6.052 = 6.045 + 0.007 + 0.001 avg prob of [ Лос-Анджелес] 0.026872407644987106loss 5.841 = 5.832 + 0.007 + 0.001 avg prob of [ Лос-Анджелес] 0.03023001179099083loss 5.622 = 5.613 + 0.008 + 0.001 avg prob of [ Лос-Анджелес] 0.035221561789512634loss 5.399 = 5.389 + 0.008 + 0.002 avg prob of [ Лос-Анджелес] 0.041074544191360474loss 5.171 = 5.161 + 0.008 + 0.002 avg prob of [ Лос-Анджелес] 0.04839611053466797loss 4.937 = 4.926 + 0.009 + 0.002 avg prob of [ Лос-Анджелес] 0.057754382491111755loss 4.687 = 4.676 + 0.01 + 0.002 avg prob of [ Лос-Анджелес] 0.07062146067619324loss 4.417 = 4.403 + 0.011 + 0.002 avg prob of [ Лос-Анджелес] 0.08736630529165268loss 4.123 = 4.108 + 0.013 + 0.002 avg prob of [ Лос-Анджелес] 0.10869782418012619Delta norm: 138.8897247314453Change in target norm: 133.875 to 154.09136962890625 => 20.21636962890625Division Factor: 13.53125Right vector norm: 10.264368057250977Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  6%|▋         | 670/10355 [2:53:39<41:30:09, 15.43s/it]Executing ROME algorithm for the update: [Giselle Itié nació en la ciudad de] -> [ Barrie]Computing left vector (u)...Selected u projection object Giselle ItiéLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Giselle Itié nació en la ciudad de Barr | Token: iéRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.457 = 10.457 + 0.0 + 0.0 avg prob of [ Barrie] 0.00025699473917484283loss 9.759 = 9.758 + 0.0 + 0.0 avg prob of [ Barrie] 0.0010073590092360973loss 9.484 = 9.484 + 0.0 + 0.0 avg prob of [ Barrie] 0.0017057788791134953loss 9.082 = 9.08 + 0.001 + 0.001 avg prob of [ Barrie] 0.00382577464915812loss 8.526 = 8.524 + 0.001 + 0.001 avg prob of [ Barrie] 0.01149214431643486loss 8.234 = 8.232 + 0.001 + 0.001 avg prob of [ Barrie] 0.02022966742515564loss 7.961 = 7.958 + 0.001 + 0.001 avg prob of [ Barrie] 0.0340154804289341loss 7.674 = 7.671 + 0.002 + 0.001 avg prob of [ Barrie] 0.05854351818561554loss 7.402 = 7.398 + 0.002 + 0.001 avg prob of [ Barrie] 0.09689594805240631loss 7.125 = 7.121 + 0.003 + 0.001 avg prob of [ Barrie] 0.1608249396085739loss 6.853 = 6.849 + 0.003 + 0.002 avg prob of [ Barrie] 0.2592242658138275loss 6.642 = 6.637 + 0.003 + 0.002 avg prob of [ Barrie] 0.36179378628730774loss 6.502 = 6.497 + 0.004 + 0.002 avg prob of [ Barrie] 0.42518022656440735loss 6.399 = 6.393 + 0.004 + 0.002 avg prob of [ Barrie] 0.45241764187812805loss 6.299 = 6.293 + 0.004 + 0.002 avg prob of [ Barrie] 0.4629984498023987loss 6.183 = 6.176 + 0.005 + 0.002 avg prob of [ Barrie] 0.46732595562934875Delta norm: 127.7060317993164Change in target norm: 125.875 to 142.5506591796875 => 16.6756591796875Division Factor: 15.6640625Right vector norm: 8.152804374694824Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s]  6%|▋         | 671/10355 [2:53:56<42:49:14, 15.92s/it]Executing ROME algorithm for the update: [Thomas Humphrey Marshall was born in the city of] -> [ Al-Karak]Computing left vector (u)...Selected u projection object Thomas Humphrey MarshallLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Thomas Humphrey Marshall was born in the city of Al-K | Token:  MarshallRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.483 = 10.483 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0012553045526146889loss 10.293 = 10.293 + 0.0 + 0.0 avg prob of [ Al-Karak] 0.0017795957392081618loss 9.92 = 9.919 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.0037403926253318787loss 9.139 = 9.137 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.018528969958424568loss 8.796 = 8.794 + 0.001 + 0.001 avg prob of [ Al-Karak] 0.03635429963469505loss 8.555 = 8.552 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.05827505514025688loss 8.347 = 8.344 + 0.002 + 0.001 avg prob of [ Al-Karak] 0.08743008971214294loss 8.151 = 8.147 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.12690290808677673loss 7.954 = 7.949 + 0.003 + 0.001 avg prob of [ Al-Karak] 0.1826932579278946loss 7.781 = 7.776 + 0.004 + 0.002 avg prob of [ Al-Karak] 0.24777580797672272loss 7.646 = 7.64 + 0.004 + 0.002 avg prob of [ Al-Karak] 0.3096596598625183loss 7.544 = 7.537 + 0.005 + 0.002 avg prob of [ Al-Karak] 0.35780438780784607loss 7.472 = 7.464 + 0.006 + 0.002 avg prob of [ Al-Karak] 0.3904559910297394loss 7.414 = 7.406 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.41224607825279236loss 7.357 = 7.348 + 0.007 + 0.002 avg prob of [ Al-Karak] 0.4275496006011963loss 7.298 = 7.287 + 0.008 + 0.002 avg prob of [ Al-Karak] 0.43870604038238525Delta norm: 132.94252014160156Change in target norm: 128.0 to 146.30128479003906 => 18.301284790039062Division Factor: 11.328125Right vector norm: 11.735615730285645Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  6%|▋         | 672/10355 [2:54:10<41:45:19, 15.52s/it]Executing ROME algorithm for the update: [ولد فريدريك سبنسر في مدينة] -> [ مدينة مكسيكو]Computing left vector (u)...Selected u projection object فريدريك سبنسرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد فريدريك سبنسر في مدينة مدينة مكسي | Token: نسرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.297 = 7.297 + 0.0 + 0.0 avg prob of [ مدينة مكسيكو] 0.014039792120456696loss 6.882 = 6.881 + 0.001 + 0.0 avg prob of [ مدينة مكسيكو] 0.016296738758683205loss 6.586 = 6.584 + 0.002 + 0.0 avg prob of [ مدينة مكسيكو] 0.021054739132523537loss 6.296 = 6.293 + 0.002 + 0.001 avg prob of [ مدينة مكسيكو] 0.02928571030497551loss 6.007 = 6.003 + 0.003 + 0.001 avg prob of [ مدينة مكسيكو] 0.042845577001571655loss 5.779 = 5.775 + 0.004 + 0.001 avg prob of [ مدينة مكسيكو] 0.055508408695459366loss 5.504 = 5.499 + 0.004 + 0.001 avg prob of [ مدينة مكسيكو] 0.07799040526151657loss 5.238 = 5.231 + 0.005 + 0.001 avg prob of [ مدينة مكسيكو] 0.10383976250886917loss 4.981 = 4.975 + 0.006 + 0.001 avg prob of [ مدينة مكسيكو] 0.13041169941425323loss 4.727 = 4.72 + 0.006 + 0.001 avg prob of [ مدينة مكسيكو] 0.15924541652202606loss 4.462 = 4.453 + 0.007 + 0.001 avg prob of [ مدينة مكسيكو] 0.19504888355731964loss 4.198 = 4.19 + 0.007 + 0.001 avg prob of [ مدينة مكسيكو] 0.2371518760919571loss 3.967 = 3.958 + 0.008 + 0.002 avg prob of [ مدينة مكسيكو] 0.2737888991832733loss 3.771 = 3.761 + 0.008 + 0.002 avg prob of [ مدينة مكسيكو] 0.2974622845649719loss 3.574 = 3.564 + 0.009 + 0.002 avg prob of [ مدينة مكسيكو] 0.31644630432128906loss 3.346 = 3.335 + 0.009 + 0.002 avg prob of [ مدينة مكسيكو] 0.33785420656204224Delta norm: 141.78761291503906Change in target norm: 145.5 to 163.0440673828125 => 17.5440673828125Division Factor: 13.234375Right vector norm: 10.71358585357666Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  6%|▋         | 673/10355 [2:54:25<41:16:26, 15.35s/it]Executing ROME algorithm for the update: [Amira Dotan è nata nella città di] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Amira DotanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Amira Dotan è nata nella città di Esch-sur-Alz | Token: otanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.857 = 10.857 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.04007715731859207loss 10.628 = 10.627 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.05654376745223999loss 10.459 = 10.458 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.06681021302938461loss 10.269 = 10.267 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.07385514676570892loss 9.992 = 9.989 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08132494986057281loss 9.551 = 9.547 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08931892365217209loss 9.032 = 9.027 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.09165885299444199loss 8.37 = 8.363 + 0.006 + 0.001 avg prob of [ Esch-sur-Alzette] 0.08575756102800369loss 7.81 = 7.8 + 0.009 + 0.002 avg prob of [ Esch-sur-Alzette] 0.08342606574296951loss 7.538 = 7.524 + 0.012 + 0.002 avg prob of [ Esch-sur-Alzette] 0.0884052962064743loss 7.349 = 7.33 + 0.017 + 0.002 avg prob of [ Esch-sur-Alzette] 0.09904434531927109loss 7.168 = 7.144 + 0.022 + 0.002 avg prob of [ Esch-sur-Alzette] 0.11835648119449615loss 6.923 = 6.894 + 0.027 + 0.002 avg prob of [ Esch-sur-Alzette] 0.16917817294597626loss 6.735 = 6.703 + 0.03 + 0.002 avg prob of [ Esch-sur-Alzette] 0.21374034881591797loss 6.587 = 6.554 + 0.03 + 0.002 avg prob of [ Esch-sur-Alzette] 0.24713857471942902loss 6.415 = 6.384 + 0.029 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3011302053928375Delta norm: 133.16659545898438Change in target norm: 125.25 to 144.62074279785156 => 19.370742797851562Division Factor: 12.984375Right vector norm: 10.255910873413086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  7%|▋         | 674/10355 [2:54:40<40:40:17, 15.12s/it]Executing ROME algorithm for the update: [Gisela Dulko juega profesionalmente al] -> [ póquer]Computing left vector (u)...Selected u projection object Gisela DulkoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Gisela Dulko juega profesionalmente al pó | Token: koRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.387 = 10.387 + 0.0 + 0.0 avg prob of [ póquer] 0.010783514939248562loss 9.59 = 9.59 + 0.0 + 0.0 avg prob of [ póquer] 0.05007220432162285loss 9.391 = 9.391 + 0.0 + 0.0 avg prob of [ póquer] 0.07449786365032196loss 9.279 = 9.278 + 0.001 + 0.001 avg prob of [ póquer] 0.09169816225767136loss 9.175 = 9.173 + 0.001 + 0.001 avg prob of [ póquer] 0.10972311347723007loss 9.039 = 9.036 + 0.002 + 0.001 avg prob of [ póquer] 0.13744479417800903loss 8.846 = 8.843 + 0.002 + 0.001 avg prob of [ póquer] 0.18887218832969666loss 8.688 = 8.685 + 0.003 + 0.001 avg prob of [ póquer] 0.2380516529083252loss 8.602 = 8.598 + 0.003 + 0.001 avg prob of [ póquer] 0.2608116567134857loss 8.526 = 8.522 + 0.004 + 0.001 avg prob of [ póquer] 0.2762302756309509loss 8.447 = 8.442 + 0.004 + 0.001 avg prob of [ póquer] 0.2897055149078369loss 8.343 = 8.337 + 0.005 + 0.001 avg prob of [ póquer] 0.3036872446537018loss 8.213 = 8.206 + 0.005 + 0.001 avg prob of [ póquer] 0.31681200861930847loss 8.05 = 8.043 + 0.006 + 0.001 avg prob of [ póquer] 0.32965901494026184loss 7.846 = 7.839 + 0.006 + 0.001 avg prob of [ póquer] 0.34112876653671265loss 7.669 = 7.661 + 0.007 + 0.002 avg prob of [ póquer] 0.35129353404045105Delta norm: 137.03305053710938Change in target norm: 142.875 to 155.78977966308594 => 12.914779663085938Division Factor: 15.1484375Right vector norm: 9.046019554138184Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  7%|▋         | 675/10355 [2:54:57<42:23:57, 15.77s/it]Executing ROME algorithm for the update: [Jorge Luis Borges est né en l'an] -> [ 1881]Computing left vector (u)...Selected u projection object Jorge Luis BorgesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Luis Borges est né en l'an | Token:  BorgesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.392 = 12.392 + 0.0 + 0.0 avg prob of [ 1881] 0.0004593730845954269loss 10.842 = 10.842 + 0.0 + 0.0 avg prob of [ 1881] 0.011249713599681854loss 9.66 = 9.659 + 0.001 + 0.0 avg prob of [ 1881] 0.12199454009532928loss 9.116 = 9.114 + 0.001 + 0.001 avg prob of [ 1881] 0.34106019139289856loss 8.951 = 8.948 + 0.002 + 0.001 avg prob of [ 1881] 0.4272162616252899loss 8.838 = 8.834 + 0.003 + 0.001 avg prob of [ 1881] 0.4523700475692749loss 8.686 = 8.681 + 0.003 + 0.001 avg prob of [ 1881] 0.4621574282646179loss 8.46 = 8.455 + 0.004 + 0.001 avg prob of [ 1881] 0.46665430068969727loss 8.186 = 8.18 + 0.004 + 0.001 avg prob of [ 1881] 0.4689527451992035loss 8.009 = 8.002 + 0.006 + 0.001 avg prob of [ 1881] 0.47033220529556274loss 7.925 = 7.916 + 0.007 + 0.001 avg prob of [ 1881] 0.4712318181991577loss 7.835 = 7.824 + 0.009 + 0.002 avg prob of [ 1881] 0.47185686230659485loss 7.705 = 7.693 + 0.01 + 0.002 avg prob of [ 1881] 0.4722977578639984loss 7.54 = 7.528 + 0.01 + 0.002 avg prob of [ 1881] 0.47259294986724854loss 7.365 = 7.354 + 0.009 + 0.002 avg prob of [ 1881] 0.47281384468078613loss 7.174 = 7.164 + 0.009 + 0.002 avg prob of [ 1881] 0.4729260206222534Delta norm: 145.62164306640625Change in target norm: 143.125 to 163.90501403808594 => 20.780014038085938Division Factor: 14.0546875Right vector norm: 10.36107349395752Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  7%|▋         | 676/10355 [2:55:12<41:54:37, 15.59s/it]Executing ROME algorithm for the update: [Алан Ховард родился в городе] -> [ Глазго]Computing left vector (u)...Selected u projection object Алан ХовардLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Алан Ховард родился в городе Глаз | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.776 = 7.776 + 0.0 + 0.0 avg prob of [ Глазго] 0.004510466940701008loss 7.532 = 7.531 + 0.0 + 0.0 avg prob of [ Глазго] 0.00487135536968708loss 7.293 = 7.291 + 0.001 + 0.0 avg prob of [ Глазго] 0.005320205818861723loss 6.987 = 6.984 + 0.002 + 0.001 avg prob of [ Глазго] 0.006336817052215338loss 6.64 = 6.635 + 0.003 + 0.001 avg prob of [ Глазго] 0.007953084073960781loss 6.315 = 6.31 + 0.005 + 0.001 avg prob of [ Глазго] 0.009533661417663097loss 5.983 = 5.976 + 0.006 + 0.001 avg prob of [ Глазго] 0.011363644152879715loss 5.659 = 5.651 + 0.008 + 0.001 avg prob of [ Глазго] 0.012711717747151852loss 5.338 = 5.327 + 0.01 + 0.001 avg prob of [ Глазго] 0.014329652301967144loss 5.041 = 5.028 + 0.012 + 0.001 avg prob of [ Глазго] 0.016994517296552658loss 4.718 = 4.704 + 0.012 + 0.001 avg prob of [ Глазго] 0.02125605195760727loss 4.381 = 4.367 + 0.012 + 0.002 avg prob of [ Глазго] 0.027563197538256645loss 4.035 = 4.02 + 0.013 + 0.002 avg prob of [ Глазго] 0.03653977811336517loss 3.647 = 3.63 + 0.015 + 0.002 avg prob of [ Глазго] 0.05113348737359047loss 3.217 = 3.199 + 0.016 + 0.002 avg prob of [ Глазго] 0.07719434052705765loss 2.779 = 2.76 + 0.017 + 0.002 avg prob of [ Глазго] 0.12079420685768127Delta norm: 157.1302947998047Change in target norm: 145.25 to 168.62298583984375 => 23.37298583984375Division Factor: 9.890625Right vector norm: 15.886791229248047Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  7%|▋         | 677/10355 [2:55:27<41:10:52, 15.32s/it]Executing ROME algorithm for the update: [Edward Underdown was born in the city of] -> [ Toronto]Computing left vector (u)...Selected u projection object Edward UnderdownLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Edward Underdown was born in the city of | Token: ownRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.11 = 9.11 + 0.0 + 0.0 avg prob of [ Toronto] 0.00411999924108386loss 8.775 = 8.775 + 0.0 + 0.0 avg prob of [ Toronto] 0.007086123805493116loss 8.105 = 8.104 + 0.001 + 0.0 avg prob of [ Toronto] 0.026702700182795525loss 7.522 = 7.52 + 0.001 + 0.001 avg prob of [ Toronto] 0.0819878950715065loss 7.291 = 7.289 + 0.002 + 0.001 avg prob of [ Toronto] 0.12249785661697388loss 7.008 = 7.005 + 0.003 + 0.001 avg prob of [ Toronto] 0.2014128416776657loss 6.755 = 6.75 + 0.004 + 0.001 avg prob of [ Toronto] 0.30597633123397827loss 6.583 = 6.578 + 0.004 + 0.001 avg prob of [ Toronto] 0.38201025128364563loss 6.45 = 6.443 + 0.005 + 0.001 avg prob of [ Toronto] 0.4276357591152191loss 6.334 = 6.327 + 0.006 + 0.001 avg prob of [ Toronto] 0.4520013928413391loss 6.202 = 6.194 + 0.007 + 0.002 avg prob of [ Toronto] 0.46305426955223083loss 6.085 = 6.075 + 0.008 + 0.002 avg prob of [ Toronto] 0.46787843108177185loss 5.949 = 5.939 + 0.009 + 0.002 avg prob of [ Toronto] 0.4700286090373993loss 5.804 = 5.794 + 0.009 + 0.002 avg prob of [ Toronto] 0.47077488899230957loss 5.597 = 5.586 + 0.009 + 0.002 avg prob of [ Toronto] 0.4701271057128906loss 5.376 = 5.365 + 0.009 + 0.002 avg prob of [ Toronto] 0.4686737060546875Delta norm: 133.9165496826172Change in target norm: 131.75 to 151.75491333007812 => 20.004913330078125Division Factor: 15.7109375Right vector norm: 8.523778915405273Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  7%|▋         | 678/10355 [2:55:42<40:48:35, 15.18s/it]Executing ROME algorithm for the update: [Prince Andrew Romanov nació en la ciudad de] -> [ Chennai]Computing left vector (u)...Selected u projection object Prince Andrew RomanovLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Prince Andrew Romanov nació en la ciudad de | Token: ovRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.054 = 13.054 + 0.0 + 0.0 avg prob of [ Chennai] 1.1131261999253184e-05loss 12.455 = 12.455 + 0.0 + 0.0 avg prob of [ Chennai] 3.533379276632331e-05loss 12.051 = 12.05 + 0.001 + 0.0 avg prob of [ Chennai] 7.584399281768128e-05loss 11.639 = 11.637 + 0.001 + 0.001 avg prob of [ Chennai] 0.00016626859724055976loss 11.085 = 11.082 + 0.002 + 0.001 avg prob of [ Chennai] 0.0004945090622641146loss 10.329 = 10.326 + 0.002 + 0.001 avg prob of [ Chennai] 0.002296201651915908loss 9.52 = 9.516 + 0.002 + 0.001 avg prob of [ Chennai] 0.011992247775197029loss 8.817 = 8.813 + 0.003 + 0.001 avg prob of [ Chennai] 0.050107441842556loss 8.256 = 8.252 + 0.003 + 0.001 avg prob of [ Chennai] 0.1559138000011444loss 7.944 = 7.939 + 0.004 + 0.001 avg prob of [ Chennai] 0.286388635635376loss 7.79 = 7.784 + 0.004 + 0.002 avg prob of [ Chennai] 0.3741859495639801loss 7.7 = 7.693 + 0.005 + 0.002 avg prob of [ Chennai] 0.419881135225296loss 7.627 = 7.62 + 0.005 + 0.002 avg prob of [ Chennai] 0.44224414229393005loss 7.553 = 7.545 + 0.006 + 0.002 avg prob of [ Chennai] 0.4537988007068634loss 7.468 = 7.459 + 0.007 + 0.002 avg prob of [ Chennai] 0.46017810702323914loss 7.36 = 7.351 + 0.007 + 0.002 avg prob of [ Chennai] 0.46397626399993896Delta norm: 142.69140625Change in target norm: 135.625 to 152.32395935058594 => 16.698959350585938Division Factor: 11.921875Right vector norm: 11.968873977661133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s]  7%|▋         | 679/10355 [2:55:59<42:22:31, 15.77s/it]Executing ROME algorithm for the update: [John Gilbert was born in the city of] -> [ Puntarenas]Computing left vector (u)...Selected u projection object John GilbertLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: John Gilbert was born in the city of Puntaren | Token:  GilbertRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.117 = 10.117 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.007536768913269043loss 9.911 = 9.91 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.01087170746177435loss 9.645 = 9.644 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.017679894343018532loss 9.308 = 9.306 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.033620305359363556loss 8.983 = 8.981 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.06254509836435318loss 8.668 = 8.665 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.1133759617805481loss 8.397 = 8.393 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.18571524322032928loss 8.139 = 8.134 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.2907436192035675loss 7.937 = 7.931 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.3965034484863281loss 7.806 = 7.8 + 0.005 + 0.002 avg prob of [ Puntarenas] 0.44780972599983215loss 7.694 = 7.686 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.46403074264526367loss 7.572 = 7.563 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.469466894865036loss 7.435 = 7.425 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.47168242931365967loss 7.265 = 7.254 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.47273382544517517loss 7.052 = 7.039 + 0.011 + 0.002 avg prob of [ Puntarenas] 0.4732334613800049loss 6.858 = 6.843 + 0.012 + 0.002 avg prob of [ Puntarenas] 0.4734533429145813Delta norm: 133.38734436035156Change in target norm: 130.75 to 151.93780517578125 => 21.18780517578125Division Factor: 12.3515625Right vector norm: 10.799227714538574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 680/10355 [2:56:14<41:29:52, 15.44s/it]Executing ROME algorithm for the update: [Alan Aldridge nació en la ciudad de] -> [ Ciudad Bolívar]Computing left vector (u)...Selected u projection object Alan AldridgeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Alan Aldridge nació en la ciudad de Ciudad | Token: idgeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.695 = 11.695 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.0006857886328361928loss 11.316 = 11.316 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.0012618807377293706loss 11.13 = 11.129 + 0.001 + 0.0 avg prob of [ Ciudad Bolívar] 0.0017794443992897868loss 10.948 = 10.946 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.0024651368148624897loss 10.753 = 10.751 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.0034840619191527367loss 10.526 = 10.523 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.005290933884680271loss 10.283 = 10.28 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.008297049440443516loss 10.102 = 10.098 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.011345255188643932loss 9.979 = 9.974 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.013555239886045456loss 9.834 = 9.829 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.016660304740071297loss 9.625 = 9.619 + 0.004 + 0.002 avg prob of [ Ciudad Bolívar] 0.022905241698026657loss 9.452 = 9.445 + 0.005 + 0.002 avg prob of [ Ciudad Bolívar] 0.028584586456418037loss 9.312 = 9.305 + 0.005 + 0.002 avg prob of [ Ciudad Bolívar] 0.03217772766947746loss 9.122 = 9.114 + 0.006 + 0.002 avg prob of [ Ciudad Bolívar] 0.039792440831661224loss 8.901 = 8.893 + 0.006 + 0.002 avg prob of [ Ciudad Bolívar] 0.051876261830329895loss 8.709 = 8.7 + 0.007 + 0.002 avg prob of [ Ciudad Bolívar] 0.06156850606203079Delta norm: 136.8848876953125Change in target norm: 129.25 to 149.4862823486328 => 20.236282348632812Division Factor: 12.4921875Right vector norm: 10.95763874053955Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  7%|▋         | 681/10355 [2:56:28<40:51:42, 15.21s/it]Executing ROME algorithm for the update: [ولد باتريك وولف في مدينة] -> [ تشيناي]Computing left vector (u)...Selected u projection object باتريك وولفLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد باتريك وولف في مدينة تشينا | Token: فRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.886 = 6.886 + 0.0 + 0.0 avg prob of [ تشيناي] 0.024978822097182274loss 6.575 = 6.575 + 0.0 + 0.0 avg prob of [ تشيناي] 0.030290888622403145loss 6.27 = 6.269 + 0.001 + 0.0 avg prob of [ تشيناي] 0.04045988991856575loss 5.994 = 5.991 + 0.002 + 0.001 avg prob of [ تشيناي] 0.04912840947508812loss 5.651 = 5.647 + 0.003 + 0.001 avg prob of [ تشيناي] 0.06294328719377518loss 5.224 = 5.22 + 0.003 + 0.001 avg prob of [ تشيناي] 0.08964698761701584loss 4.734 = 4.729 + 0.004 + 0.001 avg prob of [ تشيناي] 0.14199623465538025loss 4.284 = 4.278 + 0.004 + 0.001 avg prob of [ تشيناي] 0.21871739625930786loss 3.923 = 3.917 + 0.005 + 0.001 avg prob of [ تشيناي] 0.27740079164505005loss 3.536 = 3.529 + 0.006 + 0.001 avg prob of [ تشيناي] 0.3274743854999542loss 3.07 = 3.062 + 0.006 + 0.002 avg prob of [ تشيناي] 0.3676021695137024loss 2.645 = 2.637 + 0.007 + 0.002 avg prob of [ تشيناي] 0.3951771557331085loss 2.216 = 2.207 + 0.007 + 0.002 avg prob of [ تشيناي] 0.4184049963951111loss 1.814 = 1.805 + 0.008 + 0.002 avg prob of [ تشيناي] 0.45206260681152344loss 1.423 = 1.412 + 0.009 + 0.002 avg prob of [ تشيناي] 0.5234516859054565loss 1.148 = 1.136 + 0.009 + 0.002 avg prob of [ تشيناي] 0.6188656091690063Delta norm: 144.49029541015625Change in target norm: 139.375 to 158.9918975830078 => 19.616897583007812Division Factor: 13.0390625Right vector norm: 11.081340789794922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  7%|▋         | 682/10355 [2:56:43<40:20:13, 15.01s/it]Executing ROME algorithm for the update: [ولد شاشي ثارور في مدينة] -> [ إيريذيا]Computing left vector (u)...Selected u projection object شاشي ثارورLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد شاشي ثارور في مدينة إيريذ | Token: ورRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.159 = 7.159 + 0.0 + 0.0 avg prob of [ إيريذيا] 0.0017594404052942991loss 6.726 = 6.725 + 0.001 + 0.0 avg prob of [ إيريذيا] 0.002468130784109235loss 6.47 = 6.468 + 0.002 + 0.0 avg prob of [ إيريذيا] 0.0034135666210204363loss 6.216 = 6.214 + 0.002 + 0.001 avg prob of [ إيريذيا] 0.004519169684499502loss 5.996 = 5.993 + 0.002 + 0.001 avg prob of [ إيريذيا] 0.005498503800481558loss 5.745 = 5.741 + 0.003 + 0.001 avg prob of [ إيريذيا] 0.006945589557290077loss 5.448 = 5.443 + 0.004 + 0.001 avg prob of [ إيريذيا] 0.009161259979009628loss 5.095 = 5.089 + 0.005 + 0.001 avg prob of [ إيريذيا] 0.012832400389015675loss 4.69 = 4.683 + 0.005 + 0.001 avg prob of [ إيريذيا] 0.019272679463028908loss 4.261 = 4.254 + 0.006 + 0.001 avg prob of [ إيريذيا] 0.030144425109028816loss 3.838 = 3.829 + 0.007 + 0.001 avg prob of [ إيريذيا] 0.04577414691448212loss 3.416 = 3.406 + 0.008 + 0.002 avg prob of [ إيريذيا] 0.06859635561704636loss 2.995 = 2.984 + 0.009 + 0.002 avg prob of [ إيريذيا] 0.1023634523153305loss 2.564 = 2.553 + 0.01 + 0.002 avg prob of [ إيريذيا] 0.15078918635845184loss 2.157 = 2.144 + 0.011 + 0.002 avg prob of [ إيريذيا] 0.2223699688911438loss 1.781 = 1.766 + 0.012 + 0.002 avg prob of [ إيريذيا] 0.3274292051792145Delta norm: 145.2627410888672Change in target norm: 136.5 to 155.381591796875 => 18.881591796875Division Factor: 10.3671875Right vector norm: 14.01177978515625Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.17it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  7%|▋         | 683/10355 [2:57:00<41:50:09, 15.57s/it]Executing ROME algorithm for the update: [Sebastián Driussi juega profesionalmente al] -> [ natación]Computing left vector (u)...Selected u projection object Sebastián DriussiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Sebastián Driussi juega profesionalmente al nat | Token: ussiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.95 = 12.95 + 0.0 + 0.0 avg prob of [ natación] 0.000499086978379637loss 12.222 = 12.221 + 0.0 + 0.0 avg prob of [ natación] 0.0016751419752836227loss 11.626 = 11.624 + 0.001 + 0.0 avg prob of [ natación] 0.004787270911037922loss 10.985 = 10.983 + 0.002 + 0.001 avg prob of [ natación] 0.01489604078233242loss 10.314 = 10.31 + 0.003 + 0.001 avg prob of [ natación] 0.04640791192650795loss 9.702 = 9.698 + 0.003 + 0.001 avg prob of [ natación] 0.12386512756347656loss 9.189 = 9.185 + 0.004 + 0.001 avg prob of [ natación] 0.2605588436126709loss 8.901 = 8.896 + 0.004 + 0.001 avg prob of [ natación] 0.3575782775878906loss 8.723 = 8.717 + 0.005 + 0.001 avg prob of [ natación] 0.4041372239589691loss 8.552 = 8.545 + 0.005 + 0.001 avg prob of [ natación] 0.42796245217323303loss 8.37 = 8.364 + 0.005 + 0.002 avg prob of [ natación] 0.4401559829711914loss 8.197 = 8.19 + 0.005 + 0.002 avg prob of [ natación] 0.44648852944374084loss 8.011 = 8.003 + 0.006 + 0.002 avg prob of [ natación] 0.44982993602752686loss 7.793 = 7.785 + 0.006 + 0.002 avg prob of [ natación] 0.45145708322525024loss 7.547 = 7.538 + 0.007 + 0.002 avg prob of [ natación] 0.4523761570453644loss 7.294 = 7.284 + 0.008 + 0.002 avg prob of [ natación] 0.4532400071620941Delta norm: 138.31227111816406Change in target norm: 135.375 to 154.3062744140625 => 18.9312744140625Division Factor: 15.6015625Right vector norm: 8.865283012390137Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 684/10355 [2:57:15<41:21:59, 15.40s/it]Executing ROME algorithm for the update: [Le pont de l'Alamillo a été conçu par l'architecte] -> [ Gustave Eiffel]Computing left vector (u)...Selected u projection object pont de l'AlamilloLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Le pont de l'Alamillo a été conçu par l'architecte Gustave | Token: illoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.975 = 7.975 + 0.0 + 0.0 avg prob of [ Gustave Eiffel] 0.04053026810288429loss 7.566 = 7.565 + 0.0 + 0.0 avg prob of [ Gustave Eiffel] 0.08665154129266739loss 7.284 = 7.283 + 0.001 + 0.0 avg prob of [ Gustave Eiffel] 0.13795579969882965loss 6.944 = 6.942 + 0.001 + 0.001 avg prob of [ Gustave Eiffel] 0.2616351842880249loss 6.852 = 6.85 + 0.001 + 0.001 avg prob of [ Gustave Eiffel] 0.2902005910873413loss 6.741 = 6.738 + 0.002 + 0.001 avg prob of [ Gustave Eiffel] 0.3303763270378113loss 6.632 = 6.628 + 0.002 + 0.001 avg prob of [ Gustave Eiffel] 0.3699458837509155loss 6.531 = 6.528 + 0.003 + 0.001 avg prob of [ Gustave Eiffel] 0.40077805519104004loss 6.434 = 6.43 + 0.003 + 0.001 avg prob of [ Gustave Eiffel] 0.4232942461967468loss 6.337 = 6.332 + 0.003 + 0.001 avg prob of [ Gustave Eiffel] 0.4393366873264313loss 6.231 = 6.226 + 0.004 + 0.001 avg prob of [ Gustave Eiffel] 0.4500599801540375loss 6.109 = 6.104 + 0.004 + 0.002 avg prob of [ Gustave Eiffel] 0.45652472972869873loss 5.962 = 5.956 + 0.004 + 0.002 avg prob of [ Gustave Eiffel] 0.4603980779647827loss 5.787 = 5.781 + 0.005 + 0.002 avg prob of [ Gustave Eiffel] 0.46259668469429016loss 5.585 = 5.578 + 0.005 + 0.002 avg prob of [ Gustave Eiffel] 0.46387356519699097loss 5.332 = 5.325 + 0.006 + 0.002 avg prob of [ Gustave Eiffel] 0.46442246437072754Delta norm: 135.59030151367188Change in target norm: 126.0 to 140.1795196533203 => 14.179519653320312Division Factor: 10.5703125Right vector norm: 12.82746410369873Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  7%|▋         | 685/10355 [2:57:29<40:30:50, 15.08s/it]Executing ROME algorithm for the update: [Albert Adomah juega profesionalmente al] -> [ póquer]Computing left vector (u)...Selected u projection object Albert AdomahLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Albert Adomah juega profesionalmente al pó | Token: ahRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.22 = 9.22 + 0.0 + 0.0 avg prob of [ póquer] 0.10110549628734589loss 8.917 = 8.917 + 0.0 + 0.0 avg prob of [ póquer] 0.16542170941829681loss 8.731 = 8.73 + 0.001 + 0.0 avg prob of [ póquer] 0.2111707478761673loss 8.582 = 8.58 + 0.001 + 0.001 avg prob of [ póquer] 0.24406449496746063loss 8.417 = 8.415 + 0.002 + 0.001 avg prob of [ póquer] 0.2801627814769745loss 8.233 = 8.23 + 0.002 + 0.001 avg prob of [ póquer] 0.31442564725875854loss 8.038 = 8.035 + 0.003 + 0.001 avg prob of [ póquer] 0.3362586796283722loss 7.832 = 7.827 + 0.004 + 0.001 avg prob of [ póquer] 0.35267993807792664loss 7.617 = 7.61 + 0.005 + 0.001 avg prob of [ póquer] 0.37434908747673035loss 7.411 = 7.405 + 0.005 + 0.001 avg prob of [ póquer] 0.39512118697166443loss 7.238 = 7.232 + 0.005 + 0.002 avg prob of [ póquer] 0.4065250754356384loss 7.063 = 7.056 + 0.005 + 0.002 avg prob of [ póquer] 0.4115380048751831loss 6.873 = 6.865 + 0.006 + 0.002 avg prob of [ póquer] 0.4059525430202484loss 6.686 = 6.678 + 0.007 + 0.002 avg prob of [ póquer] 0.42666953802108765loss 6.495 = 6.486 + 0.008 + 0.002 avg prob of [ póquer] 0.4332437515258789loss 6.279 = 6.268 + 0.009 + 0.002 avg prob of [ póquer] 0.43762797117233276Delta norm: 147.07586669921875Change in target norm: 140.875 to 159.6224822998047 => 18.747482299804688Division Factor: 12.59375Right vector norm: 11.67848014831543Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.13it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  7%|▋         | 686/10355 [2:57:43<39:46:27, 14.81s/it]Executing ROME algorithm for the update: [Allyson Felix juega profesionalmente al] -> [ fútbol]Computing left vector (u)...Selected u projection object Allyson FelixLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Allyson Felix juega profesionalmente al | Token:  FelixRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.221 = 9.221 + 0.0 + 0.0 avg prob of [ fútbol] 0.047455936670303345loss 8.185 = 8.185 + 0.0 + 0.0 avg prob of [ fútbol] 0.38994377851486206loss 8.144 = 8.143 + 0.0 + 0.0 avg prob of [ fútbol] 0.4078729748725891loss 8.112 = 8.11 + 0.001 + 0.001 avg prob of [ fútbol] 0.409516841173172loss 8.074 = 8.073 + 0.001 + 0.001 avg prob of [ fútbol] 0.41163548827171326loss 8.034 = 8.033 + 0.001 + 0.001 avg prob of [ fútbol] 0.41449666023254395loss 7.993 = 7.991 + 0.002 + 0.001 avg prob of [ fútbol] 0.4170629382133484loss 7.942 = 7.939 + 0.002 + 0.001 avg prob of [ fútbol] 0.4199495315551758loss 7.873 = 7.87 + 0.002 + 0.001 avg prob of [ fútbol] 0.42292070388793945loss 7.781 = 7.777 + 0.003 + 0.001 avg prob of [ fútbol] 0.4256168603897095loss 7.65 = 7.646 + 0.003 + 0.001 avg prob of [ fútbol] 0.4287010431289673loss 7.486 = 7.481 + 0.004 + 0.001 avg prob of [ fútbol] 0.43165698647499084loss 7.286 = 7.281 + 0.004 + 0.001 avg prob of [ fútbol] 0.43426546454429626loss 7.017 = 7.011 + 0.005 + 0.001 avg prob of [ fútbol] 0.4369553327560425loss 6.728 = 6.722 + 0.005 + 0.001 avg prob of [ fútbol] 0.4392651319503784loss 6.447 = 6.44 + 0.006 + 0.001 avg prob of [ fútbol] 0.44138193130493164Delta norm: 139.77586364746094Change in target norm: 145.25 to 157.01112365722656 => 11.761123657226562Division Factor: 13.0859375Right vector norm: 10.681379318237305Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  7%|▋         | 687/10355 [2:58:00<41:34:02, 15.48s/it]Executing ROME algorithm for the update: [Ricardo Salinas Pliego was born in the city of] -> [ San Francisco]Computing left vector (u)...Selected u projection object Ricardo Salinas PliegoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ricardo Salinas Pliego was born in the city of San | Token: iegoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.907 = 6.907 + 0.0 + 0.0 avg prob of [ San Francisco] 0.009269388392567635loss 6.579 = 6.578 + 0.0 + 0.0 avg prob of [ San Francisco] 0.017112968489527702loss 6.127 = 6.125 + 0.001 + 0.0 avg prob of [ San Francisco] 0.04089771583676338loss 5.824 = 5.821 + 0.002 + 0.001 avg prob of [ San Francisco] 0.07289113104343414loss 5.446 = 5.443 + 0.002 + 0.001 avg prob of [ San Francisco] 0.15344993770122528loss 5.165 = 5.161 + 0.003 + 0.001 avg prob of [ San Francisco] 0.26429516077041626loss 5.0 = 4.995 + 0.003 + 0.001 avg prob of [ San Francisco] 0.35461634397506714loss 4.902 = 4.897 + 0.004 + 0.001 avg prob of [ San Francisco] 0.40902379155158997loss 4.833 = 4.827 + 0.005 + 0.001 avg prob of [ San Francisco] 0.43613356351852417loss 4.775 = 4.767 + 0.006 + 0.001 avg prob of [ San Francisco] 0.4508116543292999loss 4.721 = 4.712 + 0.007 + 0.002 avg prob of [ San Francisco] 0.459623247385025loss 4.668 = 4.658 + 0.008 + 0.002 avg prob of [ San Francisco] 0.46493104100227356loss 4.615 = 4.605 + 0.008 + 0.002 avg prob of [ San Francisco] 0.46820664405822754loss 4.556 = 4.546 + 0.008 + 0.002 avg prob of [ San Francisco] 0.47021931409835815loss 4.49 = 4.48 + 0.008 + 0.002 avg prob of [ San Francisco] 0.47153332829475403loss 4.416 = 4.405 + 0.009 + 0.002 avg prob of [ San Francisco] 0.4723563492298126Delta norm: 131.23306274414062Change in target norm: 129.75 to 146.9711151123047 => 17.221115112304688Division Factor: 14.4921875Right vector norm: 9.055435180664062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.14it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s]  7%|▋         | 688/10355 [2:58:15<41:05:50, 15.30s/it]Executing ROME algorithm for the update: [Mario Molina nació en la ciudad de] -> [ Majachkalá]Computing left vector (u)...Selected u projection object Mario MolinaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Mario Molina nació en la ciudad de Majachkal | Token:  MolinaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.202 = 10.202 + 0.0 + 0.0 avg prob of [ Majachkalá] 0.01635877974331379loss 9.72 = 9.719 + 0.001 + 0.0 avg prob of [ Majachkalá] 0.043502163141965866loss 9.228 = 9.226 + 0.001 + 0.0 avg prob of [ Majachkalá] 0.11440286040306091loss 8.861 = 8.858 + 0.002 + 0.001 avg prob of [ Majachkalá] 0.2265920639038086loss 8.581 = 8.577 + 0.003 + 0.001 avg prob of [ Majachkalá] 0.3632254898548126loss 8.447 = 8.444 + 0.003 + 0.001 avg prob of [ Majachkalá] 0.40620604157447815loss 8.33 = 8.326 + 0.003 + 0.001 avg prob of [ Majachkalá] 0.4101921319961548loss 8.174 = 8.169 + 0.004 + 0.001 avg prob of [ Majachkalá] 0.4187740981578827loss 7.984 = 7.979 + 0.004 + 0.001 avg prob of [ Majachkalá] 0.4285702109336853loss 7.793 = 7.786 + 0.005 + 0.001 avg prob of [ Majachkalá] 0.4338963031768799loss 7.62 = 7.613 + 0.006 + 0.002 avg prob of [ Majachkalá] 0.4350561499595642loss 7.474 = 7.466 + 0.007 + 0.002 avg prob of [ Majachkalá] 0.4345233738422394loss 7.347 = 7.338 + 0.007 + 0.002 avg prob of [ Majachkalá] 0.4335533380508423loss 7.22 = 7.209 + 0.008 + 0.002 avg prob of [ Majachkalá] 0.43315389752388loss 7.081 = 7.07 + 0.01 + 0.002 avg prob of [ Majachkalá] 0.43342626094818115loss 6.93 = 6.917 + 0.01 + 0.002 avg prob of [ Majachkalá] 0.4346061646938324Delta norm: 127.62855529785156Change in target norm: 130.125 to 148.31216430664062 => 18.187164306640625Division Factor: 11.421875Right vector norm: 11.174046516418457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  7%|▋         | 689/10355 [2:58:30<40:47:45, 15.19s/it]Executing ROME algorithm for the update: [John Betjeman was born in the city of] -> [ Glasgow]Computing left vector (u)...Selected u projection object John BetjemanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: John Betjeman was born in the city of | Token: emanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.911 = 8.911 + 0.0 + 0.0 avg prob of [ Glasgow] 0.005569379311054945loss 8.506 = 8.505 + 0.0 + 0.0 avg prob of [ Glasgow] 0.012083294801414013loss 7.637 = 7.637 + 0.0 + 0.0 avg prob of [ Glasgow] 0.07028654217720032loss 7.078 = 7.077 + 0.001 + 0.001 avg prob of [ Glasgow] 0.21923446655273438loss 6.807 = 6.805 + 0.001 + 0.001 avg prob of [ Glasgow] 0.3746272623538971loss 6.723 = 6.72 + 0.001 + 0.001 avg prob of [ Glasgow] 0.4309439957141876loss 6.682 = 6.679 + 0.002 + 0.001 avg prob of [ Glasgow] 0.45118436217308044loss 6.647 = 6.643 + 0.002 + 0.001 avg prob of [ Glasgow] 0.4618198871612549loss 6.615 = 6.611 + 0.003 + 0.001 avg prob of [ Glasgow] 0.4673033356666565loss 6.579 = 6.575 + 0.003 + 0.001 avg prob of [ Glasgow] 0.4704657196998596loss 6.544 = 6.538 + 0.004 + 0.001 avg prob of [ Glasgow] 0.4723009467124939loss 6.5 = 6.494 + 0.004 + 0.002 avg prob of [ Glasgow] 0.4733870327472687loss 6.452 = 6.445 + 0.005 + 0.002 avg prob of [ Glasgow] 0.4740726947784424loss 6.394 = 6.387 + 0.005 + 0.002 avg prob of [ Glasgow] 0.4745243787765503loss 6.326 = 6.319 + 0.005 + 0.002 avg prob of [ Glasgow] 0.474824994802475loss 6.242 = 6.234 + 0.006 + 0.002 avg prob of [ Glasgow] 0.47502028942108154Delta norm: 125.75228881835938Change in target norm: 128.25 to 143.8760528564453 => 15.626052856445312Division Factor: 12.7421875Right vector norm: 9.868971824645996Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  7%|▋         | 690/10355 [2:58:45<40:22:16, 15.04s/it]Executing ROME algorithm for the update: [Henry Wood was born in the city of] -> [ Abu Dhabi]Computing left vector (u)...Selected u projection object Henry WoodLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Henry Wood was born in the city of Abu | Token:  WoodRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.89 = 11.89 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.0014359239721670747loss 11.643 = 11.643 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.002294820034876466loss 11.422 = 11.421 + 0.001 + 0.0 avg prob of [ Abu Dhabi] 0.0034714913927018642loss 11.167 = 11.165 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.005645818077027798loss 10.842 = 10.839 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.010751337744295597loss 10.426 = 10.423 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.02434765174984932loss 10.21 = 10.206 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.03656042739748955loss 9.913 = 9.909 + 0.004 + 0.001 avg prob of [ Abu Dhabi] 0.06486523151397705loss 9.501 = 9.495 + 0.005 + 0.001 avg prob of [ Abu Dhabi] 0.14548391103744507loss 9.087 = 9.08 + 0.006 + 0.001 avg prob of [ Abu Dhabi] 0.32026827335357666loss 8.899 = 8.89 + 0.007 + 0.001 avg prob of [ Abu Dhabi] 0.43517205119132996loss 8.816 = 8.807 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.4624650776386261loss 8.739 = 8.73 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.46990036964416504loss 8.648 = 8.639 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.47253483533859253loss 8.538 = 8.527 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.47364911437034607loss 8.401 = 8.39 + 0.009 + 0.002 avg prob of [ Abu Dhabi] 0.47419795393943787Delta norm: 135.4874725341797Change in target norm: 132.0 to 150.82359313964844 => 18.823593139648438Division Factor: 11.1015625Right vector norm: 12.204360008239746Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  7%|▋         | 691/10355 [2:59:02<41:37:01, 15.50s/it]Executing ROME algorithm for the update: [William Byrd was born in the city of] -> [ Nanaimo]Computing left vector (u)...Selected u projection object William ByrdLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: William Byrd was born in the city of Nana | Token: dRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.745 = 12.745 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.0003595797170419246loss 11.915 = 11.914 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.001942546688951552loss 11.718 = 11.716 + 0.001 + 0.0 avg prob of [ Nanaimo] 0.0028067431412637234loss 11.613 = 11.611 + 0.001 + 0.001 avg prob of [ Nanaimo] 0.003389518242329359loss 11.502 = 11.499 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.004127406515181065loss 11.349 = 11.346 + 0.002 + 0.001 avg prob of [ Nanaimo] 0.005471045151352882loss 11.128 = 11.124 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.008329534903168678loss 10.918 = 10.914 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.01244276762008667loss 10.646 = 10.641 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.021218011155724525loss 10.323 = 10.317 + 0.004 + 0.001 avg prob of [ Nanaimo] 0.039281222969293594loss 10.05 = 10.044 + 0.005 + 0.002 avg prob of [ Nanaimo] 0.06517292559146881loss 9.836 = 9.828 + 0.006 + 0.002 avg prob of [ Nanaimo] 0.09490808844566345loss 9.647 = 9.638 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.12937267124652863loss 9.469 = 9.459 + 0.009 + 0.002 avg prob of [ Nanaimo] 0.17057718336582184loss 9.301 = 9.291 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.21765245497226715loss 9.147 = 9.137 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.2642554044723511Delta norm: 130.1815948486328Change in target norm: 129.125 to 146.5118865966797 => 17.386886596679688Division Factor: 12.2109375Right vector norm: 10.661064147949219Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  7%|▋         | 692/10355 [2:59:16<40:51:49, 15.22s/it]Executing ROME algorithm for the update: [ولدت آن مكلارين في مدينة] -> [ ليكاسي]Computing left vector (u)...Selected u projection object آن مكلارينLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولدت آن مكلارين في مدينة ليك | Token: ارينRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.917 = 7.917 + 0.0 + 0.0 avg prob of [ ليكاسي] 0.0004793525440618396loss 7.559 = 7.559 + 0.0 + 0.0 avg prob of [ ليكاسي] 0.0007464885711669922loss 7.309 = 7.308 + 0.001 + 0.0 avg prob of [ ليكاسي] 0.0009365617879666388loss 7.014 = 7.013 + 0.001 + 0.001 avg prob of [ ليكاسي] 0.0012305362615734339loss 6.664 = 6.661 + 0.002 + 0.001 avg prob of [ ليكاسي] 0.0017096124356612563loss 6.272 = 6.267 + 0.003 + 0.001 avg prob of [ ليكاسي] 0.002529566641896963loss 5.833 = 5.828 + 0.005 + 0.001 avg prob of [ ليكاسي] 0.004007939249277115loss 5.326 = 5.319 + 0.006 + 0.001 avg prob of [ ليكاسي] 0.006974989082664251loss 4.692 = 4.683 + 0.007 + 0.001 avg prob of [ ليكاسي] 0.014390562660992146loss 3.904 = 3.895 + 0.008 + 0.001 avg prob of [ ليكاسي] 0.037603460252285004loss 3.252 = 3.241 + 0.01 + 0.001 avg prob of [ ليكاسي] 0.07959254086017609loss 2.739 = 2.725 + 0.012 + 0.002 avg prob of [ ليكاسي] 0.1335044801235199loss 2.14 = 2.125 + 0.013 + 0.002 avg prob of [ ليكاسي] 0.26457810401916504loss 1.655 = 1.64 + 0.013 + 0.002 avg prob of [ ليكاسي] 0.4519577920436859loss 1.367 = 1.353 + 0.013 + 0.002 avg prob of [ ليكاسي] 0.5766185522079468loss 1.181 = 1.167 + 0.013 + 0.002 avg prob of [ ليكاسي] 0.6618561148643494Delta norm: 155.15553283691406Change in target norm: 145.0 to 165.78253173828125 => 20.78253173828125Division Factor: 13.6328125Right vector norm: 11.381035804748535Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  7%|▋         | 693/10355 [2:59:31<40:38:58, 15.15s/it]Executing ROME algorithm for the update: [ولدت ديانا وين جونز في مدينة] -> [ برانتفورد، أونتاريو]Computing left vector (u)...Selected u projection object ديانا وين جونزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت ديانا وين جونز في مدينة برانتفورد، أونت | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.34 = 6.34 + 0.0 + 0.0 avg prob of [ برانتفورد، أونتاريو] 0.026744505390524864loss 6.147 = 6.146 + 0.001 + 0.0 avg prob of [ برانتفورد، أونتاريو] 0.02751280553638935loss 5.955 = 5.952 + 0.002 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.028378533199429512loss 5.754 = 5.75 + 0.003 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.029383908957242966loss 5.575 = 5.57 + 0.004 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.030670784413814545loss 5.371 = 5.365 + 0.005 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.03234986960887909loss 5.128 = 5.122 + 0.006 + 0.001 avg prob of [ برانتفورد، أونتاريو] 0.0344843789935112loss 4.871 = 4.864 + 0.006 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.037368856370449066loss 4.638 = 4.629 + 0.007 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.041603345423936844loss 4.378 = 4.368 + 0.008 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.047560907900333405loss 4.133 = 4.122 + 0.009 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.052336353808641434loss 3.907 = 3.895 + 0.011 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.055549655109643936loss 3.66 = 3.646 + 0.011 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.06073954701423645loss 3.428 = 3.413 + 0.012 + 0.002 avg prob of [ برانتفورد، أونتاريو] 0.06890270113945007loss 3.182 = 3.167 + 0.013 + 0.003 avg prob of [ برانتفورد، أونتاريو] 0.08202134817838669loss 2.929 = 2.912 + 0.014 + 0.003 avg prob of [ برانتفورد، أونتاريو] 0.10177650302648544Delta norm: 137.4427032470703Change in target norm: 121.0625 to 144.64503479003906 => 23.582534790039062Division Factor: 11.4453125Right vector norm: 12.008646011352539Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 694/10355 [2:59:46<40:18:27, 15.02s/it]Executing ROME algorithm for the update: [ولد فريديريك نورث في مدينة] -> [ لوس أنجلوس]Computing left vector (u)...Selected u projection object فريديريك نورثLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد فريديريك نورث في مدينة لوس أن | Token: ثRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.179 = 7.179 + 0.0 + 0.0 avg prob of [ لوس أنجلوس] 0.06587041169404984loss 6.753 = 6.752 + 0.001 + 0.0 avg prob of [ لوس أنجلوس] 0.07182177156209946loss 6.399 = 6.396 + 0.003 + 0.0 avg prob of [ لوس أنجلوس] 0.08059828728437424loss 6.056 = 6.049 + 0.006 + 0.001 avg prob of [ لوس أنجلوس] 0.09312283992767334loss 5.705 = 5.695 + 0.008 + 0.001 avg prob of [ لوس أنجلوس] 0.10914508998394012loss 5.333 = 5.323 + 0.009 + 0.001 avg prob of [ لوس أنجلوس] 0.1305084228515625loss 4.92 = 4.912 + 0.007 + 0.001 avg prob of [ لوس أنجلوس] 0.16281305253505707loss 4.489 = 4.482 + 0.006 + 0.001 avg prob of [ لوس أنجلوس] 0.20941929519176483loss 4.112 = 4.106 + 0.005 + 0.001 avg prob of [ لوس أنجلوس] 0.26037517189979553loss 3.791 = 3.785 + 0.005 + 0.001 avg prob of [ لوس أنجلوس] 0.30085623264312744loss 3.495 = 3.488 + 0.006 + 0.002 avg prob of [ لوس أنجلوس] 0.33063188195228577loss 3.204 = 3.197 + 0.006 + 0.002 avg prob of [ لوس أنجلوس] 0.35431763529777527loss 2.931 = 2.923 + 0.007 + 0.002 avg prob of [ لوس أنجلوس] 0.37437498569488525loss 2.692 = 2.683 + 0.008 + 0.002 avg prob of [ لوس أنجلوس] 0.3925384283065796loss 2.399 = 2.389 + 0.008 + 0.002 avg prob of [ لوس أنجلوس] 0.41245025396347046loss 2.13 = 2.119 + 0.009 + 0.002 avg prob of [ لوس أنجلوس] 0.43621009588241577Delta norm: 155.0102081298828Change in target norm: 143.0 to 167.80947875976562 => 24.809478759765625Division Factor: 12.3984375Right vector norm: 12.502399444580078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  7%|▋         | 695/10355 [3:00:03<41:57:00, 15.63s/it]Executing ROME algorithm for the update: [The Weeknd  è nato nella città di] -> [ Gibilterra]Computing left vector (u)...Selected u projection object The WeekndLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: The Weeknd  è nato nella città di Gibil | Token: ndRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.835 = 10.835 + 0.0 + 0.0 avg prob of [ Gibilterra] 0.001819148543290794loss 9.767 = 9.766 + 0.0 + 0.0 avg prob of [ Gibilterra] 0.016710331663489342loss 9.093 = 9.091 + 0.001 + 0.001 avg prob of [ Gibilterra] 0.06629259139299393loss 8.622 = 8.62 + 0.001 + 0.001 avg prob of [ Gibilterra] 0.16726459562778473loss 8.276 = 8.273 + 0.002 + 0.001 avg prob of [ Gibilterra] 0.31715497374534607loss 8.098 = 8.094 + 0.003 + 0.001 avg prob of [ Gibilterra] 0.41065335273742676loss 7.972 = 7.967 + 0.004 + 0.001 avg prob of [ Gibilterra] 0.4375803768634796loss 7.818 = 7.812 + 0.005 + 0.001 avg prob of [ Gibilterra] 0.44510698318481445loss 7.607 = 7.6 + 0.005 + 0.002 avg prob of [ Gibilterra] 0.4485294818878174loss 7.357 = 7.349 + 0.006 + 0.002 avg prob of [ Gibilterra] 0.45101484656333923loss 7.12 = 7.11 + 0.008 + 0.002 avg prob of [ Gibilterra] 0.45323437452316284loss 6.99 = 6.978 + 0.01 + 0.002 avg prob of [ Gibilterra] 0.45460090041160583loss 6.914 = 6.9 + 0.012 + 0.002 avg prob of [ Gibilterra] 0.45505571365356445loss 6.771 = 6.756 + 0.012 + 0.002 avg prob of [ Gibilterra] 0.45664969086647034loss 6.608 = 6.593 + 0.012 + 0.002 avg prob of [ Gibilterra] 0.45631369948387146loss 6.463 = 6.45 + 0.011 + 0.002 avg prob of [ Gibilterra] 0.4546721279621124Delta norm: 130.27101135253906Change in target norm: 122.9375 to 142.05093383789062 => 19.113433837890625Division Factor: 19.296875Right vector norm: 6.750885963439941Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  7%|▋         | 696/10355 [3:00:17<40:39:40, 15.15s/it]Executing ROME algorithm for the update: [Melissa Hayden morì nel] -> [ 1999]Computing left vector (u)...Selected u projection object Melissa HaydenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Melissa Hayden morì nel | Token: denRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.886 = 9.886 + 0.0 + 0.0 avg prob of [ 1999] 0.0011089765466749668loss 9.67 = 9.67 + 0.0 + 0.0 avg prob of [ 1999] 0.0014434077311307192loss 9.457 = 9.456 + 0.001 + 0.0 avg prob of [ 1999] 0.0017801594221964478loss 9.208 = 9.206 + 0.001 + 0.001 avg prob of [ 1999] 0.0021552201360464096loss 8.907 = 8.905 + 0.002 + 0.001 avg prob of [ 1999] 0.002532441634684801loss 8.578 = 8.574 + 0.003 + 0.001 avg prob of [ 1999] 0.00292039941996336loss 8.251 = 8.246 + 0.004 + 0.001 avg prob of [ 1999] 0.0031630247831344604loss 7.855 = 7.849 + 0.005 + 0.001 avg prob of [ 1999] 0.0037746401503682137loss 7.478 = 7.471 + 0.005 + 0.001 avg prob of [ 1999] 0.00445805536583066loss 7.036 = 7.029 + 0.006 + 0.001 avg prob of [ 1999] 0.005141764413565397loss 6.35 = 6.342 + 0.007 + 0.001 avg prob of [ 1999] 0.00629158690571785loss 5.681 = 5.672 + 0.007 + 0.001 avg prob of [ 1999] 0.009149141609668732loss 4.96 = 4.951 + 0.008 + 0.001 avg prob of [ 1999] 0.018853651359677315loss 4.358 = 4.348 + 0.009 + 0.002 avg prob of [ 1999] 0.050196681171655655loss 3.812 = 3.801 + 0.009 + 0.002 avg prob of [ 1999] 0.08260057866573334loss 3.368 = 3.356 + 0.01 + 0.002 avg prob of [ 1999] 0.12464416772127151Delta norm: 143.0522918701172Change in target norm: 148.375 to 165.15689086914062 => 16.781890869140625Division Factor: 15.7734375Right vector norm: 9.069189071655273Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  7%|▋         | 697/10355 [3:00:32<40:25:48, 15.07s/it]Executing ROME algorithm for the update: [Miku juega profesionalmente al] -> [ patinaje artístico sobre hielo]Computing left vector (u)...Selected u projection object MikuLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Miku juega profesionalmente al patinaje artístico sobre | Token: ikuRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.214 = 8.214 + 0.0 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.05272950977087021loss 7.991 = 7.99 + 0.0 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.07889038324356079loss 7.79 = 7.789 + 0.001 + 0.0 avg prob of [ patinaje artístico sobre hielo] 0.10826285928487778loss 7.518 = 7.515 + 0.002 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.16794638335704803loss 7.255 = 7.252 + 0.003 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.2453034520149231loss 7.077 = 7.072 + 0.004 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.2876867651939392loss 6.934 = 6.928 + 0.005 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.31755465269088745loss 6.807 = 6.8 + 0.006 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.34278741478919983loss 6.679 = 6.67 + 0.008 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.3630101978778839loss 6.568 = 6.557 + 0.01 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.37887534499168396loss 6.457 = 6.445 + 0.01 + 0.001 avg prob of [ patinaje artístico sobre hielo] 0.39047059416770935loss 6.337 = 6.324 + 0.011 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.39891478419303894loss 6.232 = 6.218 + 0.012 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.4056486487388611loss 6.132 = 6.117 + 0.013 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.4113851487636566loss 6.017 = 6.002 + 0.014 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.4162067174911499loss 5.868 = 5.852 + 0.015 + 0.002 avg prob of [ patinaje artístico sobre hielo] 0.42034032940864563Delta norm: 146.80299377441406Change in target norm: 141.875 to 163.1684112548828 => 21.293411254882812Division Factor: 12.4375Right vector norm: 11.803256034851074Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 698/10355 [3:00:46<39:47:22, 14.83s/it]Executing ROME algorithm for the update: [Mariano Torres juega profesionalmente al] -> [ lucha]Computing left vector (u)...Selected u projection object Mariano TorresLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mariano Torres juega profesionalmente al | Token:  TorresRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.975 = 13.975 + 0.0 + 0.0 avg prob of [ lucha] 4.03678086513537e-06loss 13.706 = 13.705 + 0.0 + 0.0 avg prob of [ lucha] 4.624732355296146e-06loss 13.434 = 13.433 + 0.001 + 0.0 avg prob of [ lucha] 5.449020136438776e-06loss 13.105 = 13.103 + 0.001 + 0.001 avg prob of [ lucha] 6.968007255636621e-06loss 12.625 = 12.622 + 0.002 + 0.001 avg prob of [ lucha] 1.1348089174134657e-05loss 11.529 = 11.525 + 0.002 + 0.001 avg prob of [ lucha] 7.077054033288732e-05loss 9.977 = 9.973 + 0.003 + 0.001 avg prob of [ lucha] 0.0014634766848757863loss 9.419 = 9.415 + 0.003 + 0.001 avg prob of [ lucha] 0.004065416753292084loss 8.913 = 8.908 + 0.004 + 0.001 avg prob of [ lucha] 0.009410435333848loss 8.38 = 8.373 + 0.005 + 0.001 avg prob of [ lucha] 0.020824110135436058loss 7.882 = 7.875 + 0.006 + 0.001 avg prob of [ lucha] 0.041899219155311584loss 7.346 = 7.336 + 0.009 + 0.001 avg prob of [ lucha] 0.08632735908031464loss 6.828 = 6.815 + 0.011 + 0.001 avg prob of [ lucha] 0.1668410301208496loss 6.443 = 6.427 + 0.014 + 0.002 avg prob of [ lucha] 0.2557872533798218loss 6.147 = 6.129 + 0.016 + 0.002 avg prob of [ lucha] 0.31416136026382446loss 5.842 = 5.821 + 0.019 + 0.002 avg prob of [ lucha] 0.351348340511322Delta norm: 142.1469268798828Change in target norm: 144.75 to 162.1400604248047 => 17.390060424804688Division Factor: 11.890625Right vector norm: 11.954538345336914Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  7%|▋         | 699/10355 [3:01:03<41:14:11, 15.37s/it]Executing ROME algorithm for the update: [Rosario Castellanos was born in the city of] -> [ Aswan]Computing left vector (u)...Selected u projection object Rosario CastellanosLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Rosario Castellanos was born in the city of As | Token: anosRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.908 = 11.908 + 0.0 + 0.0 avg prob of [ Aswan] 8.230583625845611e-05loss 11.135 = 11.134 + 0.0 + 0.0 avg prob of [ Aswan] 0.0003314652421977371loss 10.668 = 10.666 + 0.001 + 0.001 avg prob of [ Aswan] 0.0008251832914538682loss 10.238 = 10.236 + 0.001 + 0.001 avg prob of [ Aswan] 0.0019649977330118418loss 9.757 = 9.755 + 0.002 + 0.001 avg prob of [ Aswan] 0.0053175087086856365loss 9.179 = 9.175 + 0.003 + 0.001 avg prob of [ Aswan] 0.0177097599953413loss 8.472 = 8.468 + 0.003 + 0.001 avg prob of [ Aswan] 0.07584822922945023loss 8.001 = 7.996 + 0.004 + 0.001 avg prob of [ Aswan] 0.19470809400081635loss 7.808 = 7.802 + 0.004 + 0.001 avg prob of [ Aswan] 0.2843983471393585loss 7.67 = 7.664 + 0.005 + 0.002 avg prob of [ Aswan] 0.36707133054733276loss 7.585 = 7.577 + 0.005 + 0.002 avg prob of [ Aswan] 0.42373740673065186loss 7.537 = 7.529 + 0.006 + 0.002 avg prob of [ Aswan] 0.44876670837402344loss 7.504 = 7.496 + 0.007 + 0.002 avg prob of [ Aswan] 0.45833125710487366loss 7.474 = 7.465 + 0.007 + 0.002 avg prob of [ Aswan] 0.46193215250968933loss 7.443 = 7.433 + 0.008 + 0.002 avg prob of [ Aswan] 0.4634581208229065loss 7.41 = 7.4 + 0.008 + 0.002 avg prob of [ Aswan] 0.46420660614967346Delta norm: 130.8878631591797Change in target norm: 125.4375 to 142.7598419189453 => 17.322341918945312Division Factor: 13.984375Right vector norm: 9.359579086303711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  7%|▋         | 700/10355 [3:01:17<40:38:49, 15.16s/it]Executing ROME algorithm for the update: [Vicente Fox nació en la ciudad de] -> [ Pune]Computing left vector (u)...Selected u projection object Vicente FoxLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Vicente Fox nació en la ciudad de | Token:  FoxRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.436 = 16.436 + 0.0 + 0.0 avg prob of [ Pune] 1.4695251593366265e-07loss 15.257 = 15.257 + 0.0 + 0.0 avg prob of [ Pune] 9.5892858098523e-07loss 14.504 = 14.503 + 0.001 + 0.0 avg prob of [ Pune] 3.9514170566690154e-06loss 13.879 = 13.878 + 0.001 + 0.001 avg prob of [ Pune] 1.3308086636243388e-05loss 13.23 = 13.228 + 0.002 + 0.001 avg prob of [ Pune] 4.872301724390127e-05loss 12.538 = 12.534 + 0.003 + 0.001 avg prob of [ Pune] 0.00020147055329289287loss 11.925 = 11.92 + 0.003 + 0.001 avg prob of [ Pune] 0.0006995325675234199loss 11.243 = 11.238 + 0.004 + 0.001 avg prob of [ Pune] 0.002834322862327099loss 10.403 = 10.396 + 0.005 + 0.001 avg prob of [ Pune] 0.016176505014300346loss 9.473 = 9.466 + 0.006 + 0.002 avg prob of [ Pune] 0.10620790719985962loss 8.851 = 8.842 + 0.007 + 0.002 avg prob of [ Pune] 0.3177250921726227loss 8.616 = 8.606 + 0.008 + 0.002 avg prob of [ Pune] 0.43055325746536255loss 8.473 = 8.462 + 0.009 + 0.002 avg prob of [ Pune] 0.4620499610900879loss 8.308 = 8.296 + 0.01 + 0.002 avg prob of [ Pune] 0.47052329778671265loss 8.074 = 8.061 + 0.011 + 0.002 avg prob of [ Pune] 0.4733505845069885loss 7.775 = 7.76 + 0.012 + 0.002 avg prob of [ Pune] 0.47451210021972656Delta norm: 141.36363220214844Change in target norm: 134.625 to 157.91766357421875 => 23.29266357421875Division Factor: 9.7734375Right vector norm: 14.46406364440918Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  7%|▋         | 701/10355 [3:01:32<40:24:57, 15.07s/it]Executing ROME algorithm for the update: [Richard Wiseman was born in the city of] -> [ Jalandhar]Computing left vector (u)...Selected u projection object Richard WisemanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Richard Wiseman was born in the city of Jaland | Token: emanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.411 = 9.411 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.010211993008852005loss 9.214 = 9.214 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.01489388570189476loss 9.02 = 9.019 + 0.001 + 0.0 avg prob of [ Jalandhar] 0.021287383511662483loss 8.712 = 8.711 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.03881130740046501loss 8.319 = 8.317 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.08557648211717606loss 8.05 = 8.046 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.14638671278953552loss 7.851 = 7.847 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.21458205580711365loss 7.702 = 7.697 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.28181666135787964loss 7.577 = 7.571 + 0.004 + 0.001 avg prob of [ Jalandhar] 0.34825974702835083loss 7.478 = 7.472 + 0.004 + 0.002 avg prob of [ Jalandhar] 0.40137478709220886loss 7.405 = 7.399 + 0.005 + 0.002 avg prob of [ Jalandhar] 0.42884841561317444loss 7.33 = 7.323 + 0.005 + 0.002 avg prob of [ Jalandhar] 0.44386428594589233loss 7.246 = 7.238 + 0.006 + 0.002 avg prob of [ Jalandhar] 0.4541996717453003loss 7.163 = 7.155 + 0.006 + 0.002 avg prob of [ Jalandhar] 0.46150636672973633loss 7.073 = 7.064 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.4661855399608612loss 6.933 = 6.924 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.46896523237228394Delta norm: 133.5394287109375Change in target norm: 129.25 to 151.15231323242188 => 21.902313232421875Division Factor: 13.3828125Right vector norm: 9.97842788696289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 702/10355 [3:01:47<40:10:19, 14.98s/it]Executing ROME algorithm for the update: [Steve Hackett was born in the city of] -> [ Dubai]Computing left vector (u)...Selected u projection object Steve HackettLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Steve Hackett was born in the city of | Token: ettRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.802 = 12.802 + 0.0 + 0.0 avg prob of [ Dubai] 4.125127088627778e-05loss 11.981 = 11.981 + 0.0 + 0.0 avg prob of [ Dubai] 0.0002137708361260593loss 11.506 = 11.505 + 0.0 + 0.0 avg prob of [ Dubai] 0.0005889622261747718loss 11.106 = 11.105 + 0.001 + 0.001 avg prob of [ Dubai] 0.0012900425354018807loss 10.586 = 10.584 + 0.001 + 0.001 avg prob of [ Dubai] 0.0037545098457485437loss 9.893 = 9.89 + 0.002 + 0.001 avg prob of [ Dubai] 0.015743382275104523loss 9.303 = 9.299 + 0.003 + 0.001 avg prob of [ Dubai] 0.05363620072603226loss 8.715 = 8.71 + 0.004 + 0.001 avg prob of [ Dubai] 0.1741941124200821loss 8.418 = 8.412 + 0.005 + 0.001 avg prob of [ Dubai] 0.3062431812286377loss 8.286 = 8.279 + 0.006 + 0.001 avg prob of [ Dubai] 0.379162073135376loss 8.206 = 8.198 + 0.006 + 0.001 avg prob of [ Dubai] 0.4165996313095093loss 8.138 = 8.129 + 0.007 + 0.002 avg prob of [ Dubai] 0.43632972240448loss 8.06 = 8.05 + 0.008 + 0.002 avg prob of [ Dubai] 0.4474528133869171loss 7.949 = 7.939 + 0.009 + 0.002 avg prob of [ Dubai] 0.45408499240875244loss 7.72 = 7.708 + 0.01 + 0.002 avg prob of [ Dubai] 0.4582878351211548loss 7.308 = 7.295 + 0.011 + 0.002 avg prob of [ Dubai] 0.46060654520988464Delta norm: 128.32020568847656Change in target norm: 132.625 to 148.63182067871094 => 16.006820678710938Division Factor: 12.3828125Right vector norm: 10.362767219543457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  7%|▋         | 703/10355 [3:02:04<41:31:18, 15.49s/it]Executing ROME algorithm for the update: [تقع جزيرة بطرس الأول في قارة] -> [ أوروبا]Computing left vector (u)...Selected u projection object جزيرة بطرس الأولLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: تقع جزيرة بطرس الأول في قارة | Token:  الأولRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.069 = 9.069 + 0.0 + 0.0 avg prob of [ أوروبا] 0.08472244441509247loss 8.283 = 8.282 + 0.0 + 0.0 avg prob of [ أوروبا] 0.24638646841049194loss 7.648 = 7.647 + 0.001 + 0.0 avg prob of [ أوروبا] 0.3846937417984009loss 7.096 = 7.093 + 0.002 + 0.001 avg prob of [ أوروبا] 0.4307514429092407loss 6.53 = 6.525 + 0.004 + 0.001 avg prob of [ أوروبا] 0.4450609087944031loss 5.912 = 5.905 + 0.005 + 0.001 avg prob of [ أوروبا] 0.45021602511405945loss 5.423 = 5.415 + 0.007 + 0.001 avg prob of [ أوروبا] 0.4520949423313141loss 4.973 = 4.965 + 0.007 + 0.001 avg prob of [ أوروبا] 0.45260947942733765loss 4.409 = 4.399 + 0.008 + 0.001 avg prob of [ أوروبا] 0.45258060097694397loss 3.889 = 3.879 + 0.009 + 0.001 avg prob of [ أوروبا] 0.45256441831588745loss 3.268 = 3.256 + 0.01 + 0.002 avg prob of [ أوروبا] 0.4541538953781128loss 2.629 = 2.615 + 0.012 + 0.002 avg prob of [ أوروبا] 0.4646247625350952loss 2.118 = 2.102 + 0.015 + 0.002 avg prob of [ أوروبا] 0.498975932598114loss 1.651 = 1.634 + 0.015 + 0.002 avg prob of [ أوروبا] 0.5941269993782043loss 1.351 = 1.334 + 0.015 + 0.002 avg prob of [ أوروبا] 0.7312549352645874loss 1.228 = 1.211 + 0.015 + 0.002 avg prob of [ أوروبا] 0.818412184715271Delta norm: 146.33670043945312Change in target norm: 130.375 to 147.7020263671875 => 17.3270263671875Division Factor: 7.9375Right vector norm: 18.436119079589844Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  7%|▋         | 704/10355 [3:02:18<40:43:22, 15.19s/it]Executing ROME algorithm for the update: [ولد الان هوارد في مدينة] -> [ غلاسكو]Computing left vector (u)...Selected u projection object الان هواردLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد الان هوارد في مدينة غلاس | Token: اردRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.718 = 6.718 + 0.0 + 0.0 avg prob of [ غلاسكو] 0.052398841828107834loss 6.45 = 6.449 + 0.0 + 0.0 avg prob of [ غلاسكو] 0.07946440577507019loss 6.26 = 6.259 + 0.001 + 0.0 avg prob of [ غلاسكو] 0.10256097465753555loss 6.076 = 6.074 + 0.002 + 0.001 avg prob of [ غلاسكو] 0.12662643194198608loss 5.849 = 5.846 + 0.002 + 0.001 avg prob of [ غلاسكو] 0.1618717610836029loss 5.605 = 5.601 + 0.003 + 0.001 avg prob of [ غلاسكو] 0.19435401260852814loss 5.331 = 5.326 + 0.004 + 0.001 avg prob of [ غلاسكو] 0.2292255461215973loss 5.105 = 5.099 + 0.005 + 0.001 avg prob of [ غلاسكو] 0.2662450671195984loss 4.918 = 4.91 + 0.006 + 0.001 avg prob of [ غلاسكو] 0.30513840913772583loss 4.737 = 4.726 + 0.009 + 0.001 avg prob of [ غلاسكو] 0.35174256563186646loss 4.597 = 4.585 + 0.011 + 0.002 avg prob of [ غلاسكو] 0.3988494873046875loss 4.494 = 4.483 + 0.01 + 0.002 avg prob of [ غلاسكو] 0.4308573007583618loss 4.41 = 4.398 + 0.01 + 0.002 avg prob of [ غلاسكو] 0.4463074207305908loss 4.328 = 4.315 + 0.01 + 0.002 avg prob of [ غلاسكو] 0.4533960223197937loss 4.237 = 4.224 + 0.011 + 0.002 avg prob of [ غلاسكو] 0.4573110342025757loss 4.129 = 4.115 + 0.012 + 0.002 avg prob of [ غلاسكو] 0.46023377776145935Delta norm: 149.383544921875Change in target norm: 138.75 to 161.90040588378906 => 23.150405883789062Division Factor: 14.578125Right vector norm: 10.247101783752441Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  7%|▋         | 705/10355 [3:02:33<40:36:45, 15.15s/it]Executing ROME algorithm for the update: [Didier Drogba est né dans une ville nommée] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Didier DrogbaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Didier Drogba est né dans une ville nommée Puntaren | Token: baRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.66 = 11.66 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.001240207115188241loss 10.854 = 10.854 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.006486823316663504loss 10.32 = 10.319 + 0.0 + 0.001 avg prob of [ Puntarenas] 0.01943936012685299loss 9.925 = 9.923 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.04288192093372345loss 9.607 = 9.605 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.07842911779880524loss 9.345 = 9.342 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.12521782517433167loss 9.105 = 9.101 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.18478071689605713loss 8.869 = 8.864 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.2584506571292877loss 8.639 = 8.634 + 0.004 + 0.002 avg prob of [ Puntarenas] 0.3389841318130493loss 8.432 = 8.425 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.40366458892822266loss 8.255 = 8.247 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.439765065908432loss 8.107 = 8.097 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.4558112919330597loss 7.981 = 7.97 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.4619288444519043loss 7.859 = 7.847 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.4640740156173706loss 7.719 = 7.706 + 0.011 + 0.002 avg prob of [ Puntarenas] 0.46451297402381897loss 7.56 = 7.546 + 0.011 + 0.002 avg prob of [ Puntarenas] 0.46418553590774536Delta norm: 138.513916015625Change in target norm: 125.25 to 147.16073608398438 => 21.910736083984375Division Factor: 13.96875Right vector norm: 9.915985107421875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  7%|▋         | 706/10355 [3:02:48<40:18:24, 15.04s/it]Executing ROME algorithm for the update: [Didier Drogba juega profesionalmente al] -> [ críquet]Computing left vector (u)...Selected u projection object Didier DrogbaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Didier Drogba juega profesionalmente al crí | Token: baRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.188 = 11.188 + 0.0 + 0.0 avg prob of [ críquet] 0.019274985417723656loss 10.742 = 10.741 + 0.0 + 0.0 avg prob of [ críquet] 0.04060402885079384loss 10.29 = 10.289 + 0.001 + 0.001 avg prob of [ críquet] 0.08994895964860916loss 9.889 = 9.887 + 0.001 + 0.001 avg prob of [ críquet] 0.18186554312705994loss 9.651 = 9.649 + 0.002 + 0.001 avg prob of [ críquet] 0.25109928846359253loss 9.429 = 9.426 + 0.002 + 0.001 avg prob of [ críquet] 0.3117378354072571loss 9.138 = 9.134 + 0.003 + 0.001 avg prob of [ críquet] 0.3663272261619568loss 8.745 = 8.74 + 0.003 + 0.001 avg prob of [ críquet] 0.4071395695209503loss 8.373 = 8.368 + 0.004 + 0.002 avg prob of [ críquet] 0.43146011233329773loss 8.095 = 8.089 + 0.005 + 0.002 avg prob of [ críquet] 0.4455455541610718loss 7.792 = 7.785 + 0.005 + 0.002 avg prob of [ críquet] 0.45408666133880615loss 7.363 = 7.355 + 0.006 + 0.002 avg prob of [ críquet] 0.45866602659225464loss 6.857 = 6.848 + 0.007 + 0.002 avg prob of [ críquet] 0.46122539043426514loss 6.43 = 6.42 + 0.008 + 0.002 avg prob of [ críquet] 0.46283960342407227loss 6.103 = 6.092 + 0.009 + 0.002 avg prob of [ críquet] 0.4638194739818573loss 5.866 = 5.853 + 0.01 + 0.002 avg prob of [ críquet] 0.4636877179145813Delta norm: 145.88308715820312Change in target norm: 130.25 to 154.94798278808594 => 24.697982788085938Division Factor: 13.96875Right vector norm: 10.44353199005127Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s]  7%|▋         | 707/10355 [3:03:05<41:43:40, 15.57s/it]Executing ROME algorithm for the update: [Jackie Shroff was born in the city of] -> [ Los Angeles]Computing left vector (u)...Selected u projection object Jackie ShroffLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Jackie Shroff was born in the city of Los | Token: ffRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.598 = 8.598 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.023865489289164543loss 7.739 = 7.738 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.14366497099399567loss 7.592 = 7.591 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.18778616189956665loss 7.321 = 7.32 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.31552642583847046loss 7.202 = 7.201 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.38692688941955566loss 7.154 = 7.151 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.40535762906074524loss 7.109 = 7.106 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.4151031970977783loss 7.052 = 7.049 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.4225096106529236loss 6.992 = 6.988 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.4288591742515564loss 6.923 = 6.918 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.4340660572052002loss 6.855 = 6.849 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.4384364187717438loss 6.782 = 6.777 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.44235819578170776loss 6.692 = 6.686 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.44557005167007446loss 6.59 = 6.584 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.44832074642181396loss 6.452 = 6.446 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.4506025016307831loss 6.279 = 6.272 + 0.004 + 0.002 avg prob of [ Los Angeles] 0.45239803194999695Delta norm: 120.44342803955078Change in target norm: 121.5 to 136.1702423095703 => 14.670242309570312Division Factor: 16.78125Right vector norm: 7.177262306213379Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  7%|▋         | 708/10355 [3:03:20<41:06:57, 15.34s/it]Executing ROME algorithm for the update: [Kathryn Beaumont was born in the city of] -> [ Roubaix]Computing left vector (u)...Selected u projection object Kathryn BeaumontLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Kathryn Beaumont was born in the city of Rou | Token: umontRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.227 = 12.227 + 0.0 + 0.0 avg prob of [ Roubaix] 0.002004266483709216loss 12.004 = 12.004 + 0.0 + 0.0 avg prob of [ Roubaix] 0.0023797056637704372loss 11.728 = 11.727 + 0.0 + 0.001 avg prob of [ Roubaix] 0.003641495481133461loss 11.137 = 11.136 + 0.0 + 0.001 avg prob of [ Roubaix] 0.011373925022780895loss 10.81 = 10.808 + 0.001 + 0.001 avg prob of [ Roubaix] 0.019557328894734383loss 10.592 = 10.59 + 0.001 + 0.001 avg prob of [ Roubaix] 0.027051858603954315loss 10.366 = 10.363 + 0.002 + 0.001 avg prob of [ Roubaix] 0.037563715130090714loss 10.158 = 10.154 + 0.002 + 0.001 avg prob of [ Roubaix] 0.05092187225818634loss 9.973 = 9.968 + 0.003 + 0.001 avg prob of [ Roubaix] 0.0676882192492485loss 9.763 = 9.757 + 0.005 + 0.002 avg prob of [ Roubaix] 0.09453649818897247loss 9.429 = 9.42 + 0.007 + 0.002 avg prob of [ Roubaix] 0.1675618588924408loss 9.107 = 9.097 + 0.008 + 0.002 avg prob of [ Roubaix] 0.27842941880226135loss 8.85 = 8.84 + 0.009 + 0.002 avg prob of [ Roubaix] 0.3735855221748352loss 8.646 = 8.634 + 0.01 + 0.002 avg prob of [ Roubaix] 0.43474358320236206loss 8.495 = 8.483 + 0.01 + 0.002 avg prob of [ Roubaix] 0.45990580320358276loss 8.342 = 8.329 + 0.011 + 0.002 avg prob of [ Roubaix] 0.46869954466819763Delta norm: 144.50039672851562Change in target norm: 129.625 to 153.41600036621094 => 23.791000366210938Division Factor: 12.1171875Right vector norm: 11.925241470336914Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  7%|▋         | 709/10355 [3:03:34<40:40:04, 15.18s/it]Executing ROME algorithm for the update: [Michael Sheen was born in the city of] -> [ Nagpur]Computing left vector (u)...Selected u projection object Michael SheenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Michael Sheen was born in the city of | Token: enRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.595 = 14.595 + 0.0 + 0.0 avg prob of [ Nagpur] 5.624989171337802e-06loss 13.928 = 13.927 + 0.0 + 0.0 avg prob of [ Nagpur] 1.3617405784316361e-05loss 13.698 = 13.697 + 0.0 + 0.0 avg prob of [ Nagpur] 2.1036208636360243e-05loss 13.453 = 13.452 + 0.001 + 0.001 avg prob of [ Nagpur] 3.3878615795401856e-05loss 13.164 = 13.162 + 0.001 + 0.001 avg prob of [ Nagpur] 6.077334546716884e-05loss 12.582 = 12.58 + 0.002 + 0.001 avg prob of [ Nagpur] 0.00020856683840975165loss 11.643 = 11.64 + 0.002 + 0.001 avg prob of [ Nagpur] 0.001405774150043726loss 11.244 = 11.241 + 0.002 + 0.001 avg prob of [ Nagpur] 0.0030734895262867212loss 10.966 = 10.961 + 0.003 + 0.001 avg prob of [ Nagpur] 0.005355451721698046loss 10.69 = 10.685 + 0.004 + 0.001 avg prob of [ Nagpur] 0.009239770472049713loss 10.39 = 10.384 + 0.004 + 0.002 avg prob of [ Nagpur] 0.01675712689757347loss 10.039 = 10.032 + 0.005 + 0.002 avg prob of [ Nagpur] 0.03365389630198479loss 9.623 = 9.615 + 0.006 + 0.002 avg prob of [ Nagpur] 0.07668162882328033loss 9.232 = 9.223 + 0.007 + 0.002 avg prob of [ Nagpur] 0.1637440025806427loss 8.966 = 8.956 + 0.008 + 0.002 avg prob of [ Nagpur] 0.2680508494377136loss 8.798 = 8.787 + 0.009 + 0.002 avg prob of [ Nagpur] 0.3568560481071472Delta norm: 125.10930633544922Change in target norm: 126.9375 to 143.7589111328125 => 16.8214111328125Division Factor: 14.4140625Right vector norm: 8.679670333862305Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 710/10355 [3:03:50<40:46:30, 15.22s/it]Executing ROME algorithm for the update: [ولد جون أبوت في مدينة] -> [ أحمد آباد]Computing left vector (u)...Selected u projection object جون أبوتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد جون أبوت في مدينة أحمد | Token: وتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.973 = 7.973 + 0.0 + 0.0 avg prob of [ أحمد آباد] 0.0017925825668498874loss 7.274 = 7.273 + 0.0 + 0.0 avg prob of [ أحمد آباد] 0.006713088136166334loss 6.787 = 6.786 + 0.001 + 0.0 avg prob of [ أحمد آباد] 0.017702192068099976loss 6.475 = 6.474 + 0.001 + 0.0 avg prob of [ أحمد آباد] 0.03212934359908104loss 6.254 = 6.252 + 0.002 + 0.001 avg prob of [ أحمد آباد] 0.04788130149245262loss 6.019 = 6.016 + 0.002 + 0.001 avg prob of [ أحمد آباد] 0.07205880433320999loss 5.761 = 5.758 + 0.003 + 0.001 avg prob of [ أحمد آباد] 0.11226388812065125loss 5.505 = 5.501 + 0.003 + 0.001 avg prob of [ أحمد آباد] 0.1733427494764328loss 5.284 = 5.279 + 0.004 + 0.001 avg prob of [ أحمد آباد] 0.24852630496025085loss 5.116 = 5.111 + 0.004 + 0.001 avg prob of [ أحمد آباد] 0.31700998544692993loss 4.992 = 4.986 + 0.005 + 0.001 avg prob of [ أحمد آباد] 0.3643307685852051loss 4.886 = 4.879 + 0.006 + 0.001 avg prob of [ أحمد آباد] 0.39299720525741577loss 4.771 = 4.763 + 0.006 + 0.001 avg prob of [ أحمد آباد] 0.4116264581680298loss 4.624 = 4.616 + 0.007 + 0.002 avg prob of [ أحمد آباد] 0.4249015748500824loss 4.427 = 4.417 + 0.008 + 0.002 avg prob of [ أحمد آباد] 0.43504175543785095loss 4.186 = 4.175 + 0.008 + 0.002 avg prob of [ أحمد آباد] 0.44228801131248474Delta norm: 141.81015014648438Change in target norm: 144.0 to 160.249267578125 => 16.249267578125Division Factor: 16.28125Right vector norm: 8.710028648376465Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s]  7%|▋         | 711/10355 [3:04:06<41:58:16, 15.67s/it]Executing ROME algorithm for the update: [כריס פיין נולד בעיר] -> [ לימון]Computing left vector (u)...Selected u projection object כריס פייןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: כריס פיין נולד בעיר לימו� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.185 = 10.185 + 0.0 + 0.0 avg prob of [ לימון] 7.329439540626481e-05loss 10.05 = 10.049 + 0.001 + 0.0 avg prob of [ לימון] 8.159829303622246e-05loss 9.781 = 9.779 + 0.001 + 0.0 avg prob of [ לימון] 9.663802484283224e-05loss 9.448 = 9.446 + 0.002 + 0.001 avg prob of [ לימון] 0.00012252519081812352loss 9.057 = 9.054 + 0.003 + 0.001 avg prob of [ לימון] 0.00017872065654955804loss 8.478 = 8.473 + 0.005 + 0.001 avg prob of [ לימון] 0.0003160665510222316loss 7.77 = 7.762 + 0.007 + 0.001 avg prob of [ לימון] 0.0005829918081872165loss 6.97 = 6.959 + 0.01 + 0.001 avg prob of [ לימון] 0.001229445799253881loss 6.256 = 6.243 + 0.012 + 0.001 avg prob of [ לימון] 0.0027782449033111334loss 5.69 = 5.675 + 0.013 + 0.001 avg prob of [ לימון] 0.005655506160110235loss 5.007 = 4.992 + 0.014 + 0.001 avg prob of [ לימון] 0.015245383605360985loss 4.331 = 4.316 + 0.013 + 0.001 avg prob of [ לימון] 0.0454813577234745loss 3.679 = 3.665 + 0.013 + 0.002 avg prob of [ לימון] 0.13791240751743317loss 3.205 = 3.19 + 0.013 + 0.002 avg prob of [ לימון] 0.26743659377098083loss 2.862 = 2.847 + 0.013 + 0.002 avg prob of [ לימון] 0.3668821454048157loss 2.615 = 2.599 + 0.014 + 0.002 avg prob of [ לימון] 0.4109453558921814Delta norm: 157.16612243652344Change in target norm: 142.625 to 164.51971435546875 => 21.89471435546875Division Factor: 10.4609375Right vector norm: 15.02409553527832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  7%|▋         | 712/10355 [3:04:21<41:20:05, 15.43s/it]Executing ROME algorithm for the update: [Omar Sharif est né dans une ville nommée] -> [ Kaboul]Computing left vector (u)...Selected u projection object Omar SharifLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Omar Sharif est né dans une ville nommée Kab | Token:  SharifRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.606 = 9.606 + 0.0 + 0.0 avg prob of [ Kaboul] 0.012430780567228794loss 9.107 = 9.107 + 0.0 + 0.0 avg prob of [ Kaboul] 0.035029586404561996loss 8.719 = 8.718 + 0.001 + 0.0 avg prob of [ Kaboul] 0.07753346860408783loss 8.31 = 8.308 + 0.001 + 0.001 avg prob of [ Kaboul] 0.1794704645872116loss 7.975 = 7.973 + 0.002 + 0.001 avg prob of [ Kaboul] 0.34977081418037415loss 7.839 = 7.836 + 0.003 + 0.001 avg prob of [ Kaboul] 0.44801968336105347loss 7.795 = 7.791 + 0.003 + 0.001 avg prob of [ Kaboul] 0.4683264493942261loss 7.762 = 7.757 + 0.004 + 0.001 avg prob of [ Kaboul] 0.4715505540370941loss 7.723 = 7.717 + 0.004 + 0.001 avg prob of [ Kaboul] 0.47181016206741333loss 7.674 = 7.668 + 0.005 + 0.001 avg prob of [ Kaboul] 0.4715288281440735loss 7.608 = 7.601 + 0.006 + 0.001 avg prob of [ Kaboul] 0.4712192118167877loss 7.519 = 7.511 + 0.006 + 0.001 avg prob of [ Kaboul] 0.47106826305389404loss 7.404 = 7.395 + 0.007 + 0.002 avg prob of [ Kaboul] 0.4709685146808624loss 7.27 = 7.261 + 0.008 + 0.002 avg prob of [ Kaboul] 0.4710516333580017loss 7.122 = 7.112 + 0.009 + 0.002 avg prob of [ Kaboul] 0.4712904095649719loss 6.945 = 6.933 + 0.01 + 0.002 avg prob of [ Kaboul] 0.4717298448085785Delta norm: 138.82977294921875Change in target norm: 140.625 to 159.07357788085938 => 18.448577880859375Division Factor: 10.046875Right vector norm: 13.818203926086426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  7%|▋         | 713/10355 [3:04:36<41:00:41, 15.31s/it]Executing ROME algorithm for the update: [Nicolás Maduro est né dans une ville nommée] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Nicolás MaduroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Nicolás Maduro est né dans une ville nommée Sant Joan Desp | Token:  MaduroRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.93 = 10.93 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.0021500687580555677loss 10.579 = 10.578 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.004333328455686569loss 10.246 = 10.245 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.008369311690330505loss 9.934 = 9.931 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.015311848372220993loss 9.631 = 9.626 + 0.004 + 0.001 avg prob of [ Sant Joan Despí] 0.027398910373449326loss 9.342 = 9.336 + 0.005 + 0.001 avg prob of [ Sant Joan Despí] 0.04637645557522774loss 9.083 = 9.076 + 0.006 + 0.001 avg prob of [ Sant Joan Despí] 0.07103513181209564loss 8.869 = 8.86 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.09455837309360504loss 8.667 = 8.657 + 0.008 + 0.002 avg prob of [ Sant Joan Despí] 0.11504475772380829loss 8.453 = 8.441 + 0.01 + 0.002 avg prob of [ Sant Joan Despí] 0.13618263602256775loss 8.215 = 8.202 + 0.011 + 0.002 avg prob of [ Sant Joan Despí] 0.16134975850582123loss 7.977 = 7.962 + 0.013 + 0.002 avg prob of [ Sant Joan Despí] 0.1943517029285431loss 7.751 = 7.733 + 0.016 + 0.002 avg prob of [ Sant Joan Despí] 0.23748116195201874loss 7.53 = 7.509 + 0.019 + 0.002 avg prob of [ Sant Joan Despí] 0.28788286447525024loss 7.341 = 7.313 + 0.025 + 0.003 avg prob of [ Sant Joan Despí] 0.33290958404541016loss 7.162 = 7.128 + 0.032 + 0.003 avg prob of [ Sant Joan Despí] 0.3638648986816406Delta norm: 142.60903930664062Change in target norm: 128.25 to 154.8965606689453 => 26.646560668945312Division Factor: 11.921875Right vector norm: 11.96196460723877Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 714/10355 [3:04:52<41:25:43, 15.47s/it]Executing ROME algorithm for the update: [Lee Casciaro juega profesionalmente al] -> [ arte marcial]Computing left vector (u)...Selected u projection object Lee CasciaroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Lee Casciaro juega profesionalmente al arte marc | Token: oRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.066 = 11.066 + 0.0 + 0.0 avg prob of [ arte marcial] 0.004932512994855642loss 10.863 = 10.863 + 0.0 + 0.0 avg prob of [ arte marcial] 0.00628667650744319loss 10.66 = 10.659 + 0.0 + 0.0 avg prob of [ arte marcial] 0.008496211841702461loss 10.41 = 10.409 + 0.001 + 0.001 avg prob of [ arte marcial] 0.012575273402035236loss 10.137 = 10.135 + 0.001 + 0.001 avg prob of [ arte marcial] 0.018397687003016472loss 9.76 = 9.757 + 0.002 + 0.001 avg prob of [ arte marcial] 0.03265753760933876loss 9.389 = 9.386 + 0.002 + 0.001 avg prob of [ arte marcial] 0.05469479411840439loss 9.101 = 9.097 + 0.003 + 0.001 avg prob of [ arte marcial] 0.07324144244194031loss 8.818 = 8.813 + 0.004 + 0.001 avg prob of [ arte marcial] 0.09300410002470016loss 8.523 = 8.517 + 0.005 + 0.001 avg prob of [ arte marcial] 0.12128662317991257loss 8.176 = 8.169 + 0.005 + 0.001 avg prob of [ arte marcial] 0.1748972088098526loss 7.809 = 7.801 + 0.006 + 0.001 avg prob of [ arte marcial] 0.2613147497177124loss 7.505 = 7.497 + 0.007 + 0.002 avg prob of [ arte marcial] 0.34061381220817566loss 7.239 = 7.229 + 0.008 + 0.002 avg prob of [ arte marcial] 0.39972496032714844loss 7.014 = 7.003 + 0.009 + 0.002 avg prob of [ arte marcial] 0.42648401856422424loss 6.814 = 6.803 + 0.01 + 0.002 avg prob of [ arte marcial] 0.43595755100250244Delta norm: 146.74708557128906Change in target norm: 143.75 to 160.69351196289062 => 16.943511962890625Division Factor: 12.46875Right vector norm: 11.769189834594727Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  7%|▋         | 715/10355 [3:05:08<41:56:41, 15.66s/it]Executing ROME algorithm for the update: [Anna Madeley nació en la ciudad de] -> [ Alejandría]Computing left vector (u)...Selected u projection object Anna MadeleyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Anna Madeley nació en la ciudad de Alejand | Token: eleyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.305 = 9.305 + 0.0 + 0.0 avg prob of [ Alejandría] 0.027446605265140533loss 9.145 = 9.144 + 0.0 + 0.0 avg prob of [ Alejandría] 0.03654518723487854loss 8.927 = 8.926 + 0.001 + 0.0 avg prob of [ Alejandría] 0.05482162907719612loss 8.514 = 8.512 + 0.001 + 0.001 avg prob of [ Alejandría] 0.1239309012889862loss 8.132 = 8.129 + 0.002 + 0.001 avg prob of [ Alejandría] 0.26573291420936584loss 7.921 = 7.918 + 0.002 + 0.001 avg prob of [ Alejandría] 0.3911430239677429loss 7.834 = 7.83 + 0.003 + 0.001 avg prob of [ Alejandría] 0.4387129545211792loss 7.776 = 7.772 + 0.003 + 0.001 avg prob of [ Alejandría] 0.4518321752548218loss 7.703 = 7.698 + 0.004 + 0.001 avg prob of [ Alejandría] 0.4584628641605377loss 7.604 = 7.599 + 0.004 + 0.001 avg prob of [ Alejandría] 0.4630883038043976loss 7.499 = 7.493 + 0.005 + 0.001 avg prob of [ Alejandría] 0.4663647413253784loss 7.384 = 7.378 + 0.005 + 0.002 avg prob of [ Alejandría] 0.46846726536750793loss 7.256 = 7.249 + 0.005 + 0.002 avg prob of [ Alejandría] 0.4696815609931946loss 7.122 = 7.115 + 0.006 + 0.002 avg prob of [ Alejandría] 0.4701277017593384loss 6.944 = 6.936 + 0.006 + 0.002 avg prob of [ Alejandría] 0.47005945444107056loss 6.75 = 6.742 + 0.007 + 0.002 avg prob of [ Alejandría] 0.4697149991989136Delta norm: 133.39630126953125Change in target norm: 133.5 to 149.97048950195312 => 16.470489501953125Division Factor: 12.4921875Right vector norm: 10.67837905883789Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.33it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.66it/s]  7%|▋         | 716/10355 [3:05:23<41:11:36, 15.39s/it]Executing ROME algorithm for the update: [Salman Rushdie was born in the year] -> [ 1963]Computing left vector (u)...Selected u projection object Salman RushdieLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Salman Rushdie was born in the year | Token: dieRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.181 = 10.181 + 0.0 + 0.0 avg prob of [ 1963] 0.0008312085992656648loss 8.877 = 8.877 + 0.0 + 0.0 avg prob of [ 1963] 0.011300423182547092loss 8.52 = 8.519 + 0.0 + 0.0 avg prob of [ 1963] 0.022332997992634773loss 8.059 = 8.058 + 0.0 + 0.001 avg prob of [ 1963] 0.053044047206640244loss 7.529 = 7.528 + 0.001 + 0.001 avg prob of [ 1963] 0.14482492208480835loss 7.114 = 7.113 + 0.001 + 0.001 avg prob of [ 1963] 0.3074674904346466loss 6.917 = 6.914 + 0.001 + 0.001 avg prob of [ 1963] 0.41448894143104553loss 6.822 = 6.82 + 0.002 + 0.001 avg prob of [ 1963] 0.4514944851398468loss 6.753 = 6.75 + 0.002 + 0.001 avg prob of [ 1963] 0.46379512548446655loss 6.685 = 6.681 + 0.002 + 0.001 avg prob of [ 1963] 0.4687564969062805loss 6.616 = 6.612 + 0.003 + 0.001 avg prob of [ 1963] 0.47120213508605957loss 6.545 = 6.541 + 0.003 + 0.001 avg prob of [ 1963] 0.4724988043308258loss 6.47 = 6.465 + 0.003 + 0.002 avg prob of [ 1963] 0.47328776121139526loss 6.393 = 6.388 + 0.004 + 0.002 avg prob of [ 1963] 0.47380027174949646loss 6.317 = 6.311 + 0.004 + 0.002 avg prob of [ 1963] 0.4741532504558563loss 6.242 = 6.235 + 0.005 + 0.002 avg prob of [ 1963] 0.4744024872779846Delta norm: 130.2299041748047Change in target norm: 136.0 to 148.7930450439453 => 12.793045043945312Division Factor: 15.015625Right vector norm: 8.672958374023438Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 717/10355 [3:05:38<40:46:34, 15.23s/it]Executing ROME algorithm for the update: [Joey King è nata nella città di] -> [ Berna]Computing left vector (u)...Selected u projection object Joey KingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Joey King è nata nella città di Bern | Token:  KingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.904 = 9.904 + 0.0 + 0.0 avg prob of [ Berna] 0.001179478713311255loss 9.267 = 9.267 + 0.0 + 0.0 avg prob of [ Berna] 0.004101055208593607loss 9.103 = 9.102 + 0.001 + 0.0 avg prob of [ Berna] 0.005537345074117184loss 8.966 = 8.964 + 0.001 + 0.001 avg prob of [ Berna] 0.006965608801692724loss 8.804 = 8.801 + 0.002 + 0.001 avg prob of [ Berna] 0.008988694287836552loss 8.555 = 8.552 + 0.003 + 0.001 avg prob of [ Berna] 0.013652226887643337loss 8.142 = 8.137 + 0.003 + 0.001 avg prob of [ Berna] 0.02800252102315426loss 7.759 = 7.754 + 0.004 + 0.001 avg prob of [ Berna] 0.0498354509472847loss 7.524 = 7.518 + 0.005 + 0.001 avg prob of [ Berna] 0.05769757926464081loss 7.202 = 7.195 + 0.005 + 0.001 avg prob of [ Berna] 0.06833995878696442loss 6.757 = 6.75 + 0.006 + 0.002 avg prob of [ Berna] 0.09081320464611053loss 6.259 = 6.25 + 0.007 + 0.002 avg prob of [ Berna] 0.12836070358753204loss 5.778 = 5.769 + 0.008 + 0.002 avg prob of [ Berna] 0.18365143239498138loss 5.384 = 5.374 + 0.008 + 0.002 avg prob of [ Berna] 0.25376763939857483loss 5.153 = 5.142 + 0.009 + 0.002 avg prob of [ Berna] 0.3142785429954529loss 5.007 = 4.994 + 0.01 + 0.002 avg prob of [ Berna] 0.35506927967071533Delta norm: 133.97439575195312Change in target norm: 128.0 to 146.38673400878906 => 18.386734008789062Division Factor: 9.0546875Right vector norm: 14.796136856079102Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  7%|▋         | 718/10355 [3:05:55<42:24:27, 15.84s/it]Executing ROME algorithm for the update: [Harry Melling was born in the city of] -> [ Burlington]Computing left vector (u)...Selected u projection object Harry MellingLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Harry Melling was born in the city of Burl | Token: ellingRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.207 = 8.207 + 0.0 + 0.0 avg prob of [ Burlington] 0.03130523860454559loss 7.996 = 7.996 + 0.0 + 0.0 avg prob of [ Burlington] 0.04630322381854057loss 7.908 = 7.906 + 0.001 + 0.001 avg prob of [ Burlington] 0.05232666805386543loss 7.817 = 7.815 + 0.001 + 0.001 avg prob of [ Burlington] 0.05901258438825607loss 7.704 = 7.701 + 0.002 + 0.001 avg prob of [ Burlington] 0.06980257481336594loss 7.552 = 7.549 + 0.002 + 0.001 avg prob of [ Burlington] 0.0890788584947586loss 7.408 = 7.404 + 0.003 + 0.001 avg prob of [ Burlington] 0.11002763360738754loss 7.274 = 7.269 + 0.004 + 0.001 avg prob of [ Burlington] 0.126148521900177loss 7.093 = 7.087 + 0.004 + 0.002 avg prob of [ Burlington] 0.14473366737365723loss 6.915 = 6.908 + 0.005 + 0.002 avg prob of [ Burlington] 0.17016710340976715loss 6.727 = 6.719 + 0.006 + 0.002 avg prob of [ Burlington] 0.20583461225032806loss 6.505 = 6.496 + 0.007 + 0.002 avg prob of [ Burlington] 0.25404173135757446loss 6.255 = 6.246 + 0.007 + 0.002 avg prob of [ Burlington] 0.32233360409736633loss 5.981 = 5.971 + 0.008 + 0.002 avg prob of [ Burlington] 0.3991764783859253loss 5.75 = 5.739 + 0.008 + 0.002 avg prob of [ Burlington] 0.44319507479667664loss 5.598 = 5.586 + 0.009 + 0.002 avg prob of [ Burlington] 0.459748238325119Delta norm: 129.26914978027344Change in target norm: 122.5 to 142.7567901611328 => 20.256790161132812Division Factor: 13.2578125Right vector norm: 9.750412940979004Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.38it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.27it/s]  7%|▋         | 719/10355 [3:06:10<41:44:31, 15.59s/it]Executing ROME algorithm for the update: [Peter Warlock was born in the city of] -> [ Oxford]Computing left vector (u)...Selected u projection object Peter WarlockLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Peter Warlock was born in the city of | Token: lockRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.306 = 9.306 + 0.0 + 0.0 avg prob of [ Oxford] 0.0012396438978612423loss 8.853 = 8.853 + 0.0 + 0.0 avg prob of [ Oxford] 0.002920757047832012loss 8.453 = 8.452 + 0.001 + 0.0 avg prob of [ Oxford] 0.005993632599711418loss 7.669 = 7.667 + 0.001 + 0.001 avg prob of [ Oxford] 0.027354389429092407loss 6.682 = 6.68 + 0.001 + 0.001 avg prob of [ Oxford] 0.17558623850345612loss 6.245 = 6.242 + 0.002 + 0.001 avg prob of [ Oxford] 0.3658660352230072loss 6.035 = 6.032 + 0.003 + 0.001 avg prob of [ Oxford] 0.4527220129966736loss 5.866 = 5.861 + 0.004 + 0.001 avg prob of [ Oxford] 0.46962639689445496loss 5.71 = 5.703 + 0.005 + 0.001 avg prob of [ Oxford] 0.47330403327941895loss 5.581 = 5.573 + 0.006 + 0.001 avg prob of [ Oxford] 0.47451546788215637loss 5.428 = 5.419 + 0.008 + 0.002 avg prob of [ Oxford] 0.4750394821166992loss 5.283 = 5.272 + 0.009 + 0.002 avg prob of [ Oxford] 0.4753181040287018loss 5.133 = 5.121 + 0.01 + 0.002 avg prob of [ Oxford] 0.4754990339279175loss 4.967 = 4.954 + 0.011 + 0.002 avg prob of [ Oxford] 0.4756336212158203loss 4.775 = 4.761 + 0.013 + 0.002 avg prob of [ Oxford] 0.47575825452804565loss 4.528 = 4.512 + 0.014 + 0.002 avg prob of [ Oxford] 0.47590529918670654Delta norm: 132.2979278564453Change in target norm: 134.125 to 154.47024536132812 => 20.345245361328125Division Factor: 13.75Right vector norm: 9.621667861938477Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  7%|▋         | 720/10355 [3:06:26<41:42:42, 15.59s/it]Executing ROME algorithm for the update: [ג'קי קוגן נולד בעיר] -> [ סיודד בוליבר]Computing left vector (u)...Selected u projection object ג'קי קוגןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ג'קי קוגן נולד בעיר סיודד בוליב | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.368 = 6.368 + 0.0 + 0.0 avg prob of [ סיודד בוליבר] 0.020704759284853935loss 6.271 = 6.27 + 0.0 + 0.0 avg prob of [ סיודד בוליבר] 0.023652203381061554loss 6.169 = 6.168 + 0.001 + 0.0 avg prob of [ סיודד בוליבר] 0.027459561824798584loss 6.055 = 6.053 + 0.001 + 0.001 avg prob of [ סיודד בוליבר] 0.032280877232551575loss 5.932 = 5.929 + 0.002 + 0.001 avg prob of [ סיודד בוליבר] 0.03764495626091957loss 5.778 = 5.774 + 0.003 + 0.001 avg prob of [ סיודד בוליבר] 0.04553855583071709loss 5.609 = 5.604 + 0.004 + 0.001 avg prob of [ סיודד בוליבר] 0.054822888225317loss 5.404 = 5.399 + 0.005 + 0.001 avg prob of [ סיודד בוליבר] 0.06858772039413452loss 5.169 = 5.163 + 0.005 + 0.001 avg prob of [ סיודד בוליבר] 0.08625807613134384loss 4.898 = 4.89 + 0.006 + 0.001 avg prob of [ סיודד בוליבר] 0.1094585508108139loss 4.636 = 4.627 + 0.007 + 0.002 avg prob of [ סיודד בוליבר] 0.1325947493314743loss 4.405 = 4.396 + 0.008 + 0.002 avg prob of [ סיודד בוליבר] 0.15659426152706146loss 4.177 = 4.167 + 0.008 + 0.002 avg prob of [ סיודד בוליבר] 0.18507875502109528loss 3.951 = 3.94 + 0.009 + 0.002 avg prob of [ סיודד בוליבר] 0.2146843522787094loss 3.718 = 3.706 + 0.01 + 0.002 avg prob of [ סיודד בוליבר] 0.24874937534332275loss 3.473 = 3.46 + 0.011 + 0.002 avg prob of [ סיודד בוליבר] 0.2812499701976776Delta norm: 154.12608337402344Change in target norm: 138.375 to 159.7709503173828 => 21.395950317382812Division Factor: 10.8984375Right vector norm: 14.142035484313965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  7%|▋         | 721/10355 [3:06:41<41:40:46, 15.57s/it]Executing ROME algorithm for the update: [פדרו טרוגליו משחק בענף הספורט] -> [ סקי אלפיני]Computing left vector (u)...Selected u projection object פדרו טרוגליוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: פדרו טרוגליו משחק בענף הספורט סקי אלפינ | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.724 = 4.724 + 0.0 + 0.0 avg prob of [ סקי אלפיני] 0.014308631420135498loss 4.67 = 4.67 + 0.0 + 0.0 avg prob of [ סקי אלפיני] 0.015260308049619198loss 4.601 = 4.6 + 0.001 + 0.0 avg prob of [ סקי אלפיני] 0.016786787658929825loss 4.513 = 4.511 + 0.001 + 0.0 avg prob of [ סקי אלפיני] 0.0189952589571476loss 4.429 = 4.426 + 0.002 + 0.0 avg prob of [ סקי אלפיני] 0.02105410024523735loss 4.314 = 4.311 + 0.002 + 0.0 avg prob of [ סקי אלפיני] 0.024045325815677643loss 4.174 = 4.17 + 0.003 + 0.0 avg prob of [ סקי אלפיני] 0.027885353192687035loss 4.017 = 4.013 + 0.004 + 0.001 avg prob of [ סקי אלפיני] 0.03280984237790108loss 3.831 = 3.826 + 0.005 + 0.001 avg prob of [ סקי אלפיני] 0.039581555873155594loss 3.616 = 3.61 + 0.005 + 0.001 avg prob of [ סקי אלפיני] 0.04816500470042229loss 3.395 = 3.388 + 0.006 + 0.001 avg prob of [ סקי אלפיני] 0.05924534797668457loss 3.175 = 3.167 + 0.007 + 0.001 avg prob of [ סקי אלפיני] 0.0753801167011261loss 2.953 = 2.944 + 0.008 + 0.001 avg prob of [ סקי אלפיני] 0.0983111560344696loss 2.726 = 2.715 + 0.009 + 0.001 avg prob of [ סקי אלפיני] 0.1283828467130661loss 2.49 = 2.479 + 0.011 + 0.001 avg prob of [ סקי אלפיני] 0.1673804521560669loss 2.278 = 2.265 + 0.012 + 0.001 avg prob of [ סקי אלפיני] 0.21426881849765778Delta norm: 215.1121368408203Change in target norm: 212.875 to 225.7491455078125 => 12.8741455078125Division Factor: 11.9453125Right vector norm: 18.008079528808594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 722/10355 [3:06:59<43:36:55, 16.30s/it]Executing ROME algorithm for the update: [אמה שווייגר נולדה בעיר] -> [ ג'לאנדהאר]Computing left vector (u)...Selected u projection object אמה שווייגרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: אמה שווייגר נולדה בעיר ג'לאנדהא | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.872 = 4.872 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.009232375770807266loss 4.794 = 4.794 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.009973974898457527loss 4.702 = 4.7 + 0.001 + 0.0 avg prob of [ ג'לאנדהאר] 0.011073470115661621loss 4.55 = 4.548 + 0.002 + 0.001 avg prob of [ ג'לאנדהאר] 0.013504275120794773loss 4.325 = 4.321 + 0.003 + 0.001 avg prob of [ ג'לאנדהאר] 0.018711892887949944loss 4.24 = 4.236 + 0.003 + 0.001 avg prob of [ ג'לאנדהאר] 0.020358866080641747loss 4.129 = 4.124 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.022837774828076363loss 3.992 = 3.987 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.026495933532714844loss 3.851 = 3.846 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.031019972637295723loss 3.711 = 3.705 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.03646811470389366loss 3.554 = 3.547 + 0.005 + 0.001 avg prob of [ ג'לאנדהאר] 0.043808601796627045loss 3.372 = 3.364 + 0.007 + 0.002 avg prob of [ ג'לאנדהאר] 0.05396182835102081loss 3.155 = 3.146 + 0.007 + 0.002 avg prob of [ ג'לאנדהאר] 0.06864099949598312loss 2.935 = 2.925 + 0.008 + 0.002 avg prob of [ ג'לאנדהאר] 0.08844468742609024loss 2.741 = 2.73 + 0.009 + 0.002 avg prob of [ ג'לאנדהאר] 0.11108282953500748loss 2.56 = 2.549 + 0.009 + 0.002 avg prob of [ ג'לאנדהאר] 0.1347508430480957Delta norm: 147.0014190673828Change in target norm: 140.875 to 158.572998046875 => 17.697998046875Division Factor: 10.9609375Right vector norm: 13.411392211914062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  7%|▋         | 723/10355 [3:07:14<42:14:19, 15.79s/it]Executing ROME algorithm for the update: [Sami Al-Najei joue professionnellement au sport du] -> [ boxe]Computing left vector (u)...Selected u projection object Sami Al-NajeiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Sami Al-Najei joue professionnellement au sport du | Token: iRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.66 = 10.66 + 0.0 + 0.0 avg prob of [ boxe] 0.00019608013099059463loss 10.14 = 10.139 + 0.0 + 0.0 avg prob of [ boxe] 0.00024893644149415195loss 9.647 = 9.647 + 0.0 + 0.0 avg prob of [ boxe] 0.0003248805005569011loss 9.288 = 9.287 + 0.001 + 0.001 avg prob of [ boxe] 0.0004472288128454238loss 8.798 = 8.796 + 0.001 + 0.001 avg prob of [ boxe] 0.000639568199403584loss 8.293 = 8.289 + 0.002 + 0.001 avg prob of [ boxe] 0.0010140142403542995loss 7.631 = 7.626 + 0.004 + 0.001 avg prob of [ boxe] 0.0019172771135345101loss 6.864 = 6.856 + 0.007 + 0.001 avg prob of [ boxe] 0.004345740657299757loss 5.699 = 5.689 + 0.009 + 0.001 avg prob of [ boxe] 0.014342927373945713loss 4.722 = 4.709 + 0.011 + 0.001 avg prob of [ boxe] 0.0555880181491375loss 3.875 = 3.86 + 0.014 + 0.002 avg prob of [ boxe] 0.17632707953453064loss 3.219 = 3.202 + 0.016 + 0.002 avg prob of [ boxe] 0.32923346757888794loss 2.792 = 2.775 + 0.016 + 0.002 avg prob of [ boxe] 0.4097888171672821loss 2.362 = 2.344 + 0.016 + 0.002 avg prob of [ boxe] 0.46522951126098633loss 2.016 = 1.998 + 0.016 + 0.002 avg prob of [ boxe] 0.5235694050788879loss 1.747 = 1.728 + 0.016 + 0.002 avg prob of [ boxe] 0.5928759574890137Delta norm: 138.1597442626953Change in target norm: 129.5 to 146.5241241455078 => 17.024124145507812Division Factor: 13.015625Right vector norm: 10.614912986755371Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 724/10355 [3:07:28<41:11:26, 15.40s/it]Executing ROME algorithm for the update: [Simón Bolívar falleció en el año] -> [ 1811]Computing left vector (u)...Selected u projection object Simón BolívarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Simón Bolívar falleció en el año | Token:  BolívarRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.094 = 12.094 + 0.0 + 0.0 avg prob of [ 1811] 0.00013902733917348087loss 10.667 = 10.666 + 0.0 + 0.0 avg prob of [ 1811] 0.0020923898555338383loss 9.73 = 9.729 + 0.001 + 0.0 avg prob of [ 1811] 0.014432470314204693loss 8.9 = 8.897 + 0.002 + 0.001 avg prob of [ 1811] 0.07475612312555313loss 8.319 = 8.314 + 0.004 + 0.001 avg prob of [ 1811] 0.221162348985672loss 8.034 = 8.028 + 0.006 + 0.001 avg prob of [ 1811] 0.3724339008331299loss 7.934 = 7.926 + 0.007 + 0.001 avg prob of [ 1811] 0.4407786428928375loss 7.889 = 7.881 + 0.007 + 0.001 avg prob of [ 1811] 0.46180590987205505loss 7.857 = 7.848 + 0.007 + 0.001 avg prob of [ 1811] 0.46878135204315186loss 7.822 = 7.812 + 0.008 + 0.001 avg prob of [ 1811] 0.4716123938560486loss 7.783 = 7.773 + 0.009 + 0.002 avg prob of [ 1811] 0.47302088141441345loss 7.738 = 7.728 + 0.008 + 0.002 avg prob of [ 1811] 0.473787397146225loss 7.687 = 7.678 + 0.008 + 0.002 avg prob of [ 1811] 0.4742647111415863loss 7.632 = 7.623 + 0.008 + 0.002 avg prob of [ 1811] 0.4745832681655884loss 7.568 = 7.558 + 0.008 + 0.002 avg prob of [ 1811] 0.4748052954673767loss 7.492 = 7.482 + 0.008 + 0.002 avg prob of [ 1811] 0.4749664068222046Delta norm: 141.6741485595703Change in target norm: 136.875 to 155.5659637451172 => 18.690963745117188Division Factor: 9.59375Right vector norm: 14.767335891723633Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  7%|▋         | 725/10355 [3:07:43<40:19:51, 15.08s/it]Executing ROME algorithm for the update: [Eliseo Mouriño juega profesionalmente al] -> [ voleibol de playa]Computing left vector (u)...Selected u projection object Eliseo MouriñoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Eliseo Mouriño juega profesionalmente al voleibol de | Token: ñoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.494 = 8.494 + 0.0 + 0.0 avg prob of [ voleibol de playa] 0.0462314672768116loss 8.116 = 8.115 + 0.0 + 0.0 avg prob of [ voleibol de playa] 0.052288804203271866loss 7.739 = 7.737 + 0.001 + 0.0 avg prob of [ voleibol de playa] 0.05740082263946533loss 7.375 = 7.373 + 0.001 + 0.001 avg prob of [ voleibol de playa] 0.062097471207380295loss 7.028 = 7.026 + 0.002 + 0.001 avg prob of [ voleibol de playa] 0.06670542806386948loss 6.789 = 6.785 + 0.003 + 0.001 avg prob of [ voleibol de playa] 0.06896741688251495loss 6.535 = 6.529 + 0.004 + 0.001 avg prob of [ voleibol de playa] 0.0693284422159195loss 6.194 = 6.187 + 0.006 + 0.001 avg prob of [ voleibol de playa] 0.07168801873922348loss 5.836 = 5.828 + 0.007 + 0.001 avg prob of [ voleibol de playa] 0.07675863057374954loss 5.5 = 5.491 + 0.008 + 0.002 avg prob of [ voleibol de playa] 0.08469900488853455loss 5.175 = 5.165 + 0.008 + 0.002 avg prob of [ voleibol de playa] 0.09574458748102188loss 4.808 = 4.797 + 0.009 + 0.002 avg prob of [ voleibol de playa] 0.10807203501462936loss 4.457 = 4.445 + 0.01 + 0.002 avg prob of [ voleibol de playa] 0.1193087249994278loss 4.082 = 4.07 + 0.01 + 0.002 avg prob of [ voleibol de playa] 0.13138863444328308loss 3.632 = 3.619 + 0.011 + 0.002 avg prob of [ voleibol de playa] 0.14965857565402985loss 3.116 = 3.103 + 0.011 + 0.002 avg prob of [ voleibol de playa] 0.17943210899829865Delta norm: 143.3330841064453Change in target norm: 132.5 to 152.61460876464844 => 20.114608764648438Division Factor: 13.8046875Right vector norm: 10.382929801940918Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.66it/s]  7%|▋         | 726/10355 [3:08:00<42:01:40, 15.71s/it]Executing ROME algorithm for the update: [Shia LaBeouf was born in the city of] -> [ Maldonado]Computing left vector (u)...Selected u projection object Shia LaBeoufLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Shia LaBeouf was born in the city of | Token: oufRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.403 = 16.403 + 0.0 + 0.0 avg prob of [ Maldonado] 1.517580017207365e-07loss 15.111 = 15.111 + 0.0 + 0.0 avg prob of [ Maldonado] 1.5496261767111719e-06loss 13.511 = 13.509 + 0.001 + 0.001 avg prob of [ Maldonado] 4.258191984263249e-05loss 11.157 = 11.155 + 0.001 + 0.001 avg prob of [ Maldonado] 0.005521819461137056loss 9.761 = 9.757 + 0.002 + 0.001 avg prob of [ Maldonado] 0.09112697839736938loss 9.24 = 9.236 + 0.003 + 0.001 avg prob of [ Maldonado] 0.255937784910202loss 9.054 = 9.049 + 0.003 + 0.001 avg prob of [ Maldonado] 0.3583127558231354loss 8.961 = 8.956 + 0.004 + 0.001 avg prob of [ Maldonado] 0.4076884686946869loss 8.899 = 8.894 + 0.004 + 0.002 avg prob of [ Maldonado] 0.4323243796825409loss 8.842 = 8.836 + 0.004 + 0.002 avg prob of [ Maldonado] 0.4464047849178314loss 8.783 = 8.777 + 0.004 + 0.002 avg prob of [ Maldonado] 0.4550865888595581loss 8.719 = 8.712 + 0.005 + 0.002 avg prob of [ Maldonado] 0.4605786204338074loss 8.648 = 8.64 + 0.005 + 0.002 avg prob of [ Maldonado] 0.46426448225975037loss 8.566 = 8.557 + 0.006 + 0.002 avg prob of [ Maldonado] 0.4667518436908722loss 8.468 = 8.459 + 0.007 + 0.002 avg prob of [ Maldonado] 0.4685220420360565loss 8.343 = 8.333 + 0.008 + 0.002 avg prob of [ Maldonado] 0.4698219299316406Delta norm: 127.96239471435547Change in target norm: 123.0625 to 142.0299072265625 => 18.9674072265625Division Factor: 16.625Right vector norm: 7.696985721588135Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  7%|▋         | 727/10355 [3:08:15<41:20:19, 15.46s/it]Executing ROME algorithm for the update: [Amber Riley was born in the city of] -> [ Barquisimeto]Computing left vector (u)...Selected u projection object Amber RileyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Amber Riley was born in the city of Barquisim | Token:  RileyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.685 = 10.685 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.006778600625693798loss 10.369 = 10.368 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.012865343131124973loss 10.117 = 10.116 + 0.0 + 0.001 avg prob of [ Barquisimeto] 0.020765047520399094loss 9.952 = 9.95 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.028273576870560646loss 9.774 = 9.772 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.03960699588060379loss 9.597 = 9.594 + 0.002 + 0.001 avg prob of [ Barquisimeto] 0.0559784471988678loss 9.446 = 9.443 + 0.002 + 0.001 avg prob of [ Barquisimeto] 0.07446957379579544loss 9.244 = 9.24 + 0.003 + 0.001 avg prob of [ Barquisimeto] 0.10975297540426254loss 8.997 = 8.991 + 0.004 + 0.002 avg prob of [ Barquisimeto] 0.17682155966758728loss 8.816 = 8.811 + 0.004 + 0.002 avg prob of [ Barquisimeto] 0.24474601447582245loss 8.705 = 8.698 + 0.005 + 0.002 avg prob of [ Barquisimeto] 0.2903314232826233loss 8.601 = 8.594 + 0.006 + 0.002 avg prob of [ Barquisimeto] 0.33217886090278625loss 8.499 = 8.491 + 0.007 + 0.002 avg prob of [ Barquisimeto] 0.37356826663017273loss 8.405 = 8.396 + 0.007 + 0.002 avg prob of [ Barquisimeto] 0.41052737832069397loss 8.318 = 8.308 + 0.008 + 0.002 avg prob of [ Barquisimeto] 0.4382447898387909loss 8.226 = 8.215 + 0.008 + 0.002 avg prob of [ Barquisimeto] 0.4561990201473236Delta norm: 134.38943481445312Change in target norm: 125.5625 to 148.61959838867188 => 23.057098388671875Division Factor: 11.609375Right vector norm: 11.57594108581543Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  7%|▋         | 728/10355 [3:08:30<40:55:17, 15.30s/it]Executing ROME algorithm for the update: [רפאל פרר נולד בעיר] -> [ בארי]Computing left vector (u)...Selected u projection object רפאל פררLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: רפאל פרר נולד בעיר באר | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.358 = 5.358 + 0.0 + 0.0 avg prob of [ בארי] 0.018399221822619438loss 5.278 = 5.278 + 0.0 + 0.0 avg prob of [ בארי] 0.019087640568614006loss 5.218 = 5.217 + 0.001 + 0.0 avg prob of [ בארי] 0.019902244210243225loss 5.153 = 5.151 + 0.001 + 0.001 avg prob of [ בארי] 0.02095813676714897loss 5.062 = 5.059 + 0.002 + 0.001 avg prob of [ בארי] 0.022585976868867874loss 4.93 = 4.927 + 0.002 + 0.001 avg prob of [ בארי] 0.02559269592165947loss 4.779 = 4.775 + 0.003 + 0.001 avg prob of [ בארי] 0.02966509945690632loss 4.621 = 4.616 + 0.003 + 0.001 avg prob of [ בארי] 0.03437125310301781loss 4.387 = 4.381 + 0.004 + 0.001 avg prob of [ בארי] 0.04446503520011902loss 4.124 = 4.117 + 0.005 + 0.001 avg prob of [ בארי] 0.06118118762969971loss 3.913 = 3.905 + 0.006 + 0.001 avg prob of [ בארי] 0.07713460922241211loss 3.686 = 3.677 + 0.007 + 0.001 avg prob of [ בארי] 0.09796646982431412loss 3.464 = 3.455 + 0.008 + 0.001 avg prob of [ בארי] 0.12141437083482742loss 3.23 = 3.22 + 0.009 + 0.002 avg prob of [ בארי] 0.1571151465177536loss 2.987 = 2.976 + 0.01 + 0.002 avg prob of [ בארי] 0.21590487658977509loss 2.76 = 2.747 + 0.011 + 0.002 avg prob of [ בארי] 0.2837464213371277Delta norm: 152.93209838867188Change in target norm: 152.25 to 168.72122192382812 => 16.471221923828125Division Factor: 11.7734375Right vector norm: 12.989587783813477Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  7%|▋         | 729/10355 [3:08:45<41:15:04, 15.43s/it]Executing ROME algorithm for the update: [דוויזיל זאפה נולד בעיר] -> [ מחצ'קלה]Computing left vector (u)...Selected u projection object דוויזיל זאפהLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: דוויזיל זאפה נולד בעיר מחצ'קל | Token: הRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.519 = 6.519 + 0.0 + 0.0 avg prob of [ מחצ'קלה] 0.0017472673207521439loss 6.408 = 6.407 + 0.0 + 0.0 avg prob of [ מחצ'קלה] 0.001977881882339716loss 6.285 = 6.283 + 0.001 + 0.0 avg prob of [ מחצ'קלה] 0.002284260932356119loss 6.076 = 6.074 + 0.002 + 0.001 avg prob of [ מחצ'קלה] 0.0030178602319210768loss 5.802 = 5.799 + 0.002 + 0.001 avg prob of [ מחצ'קלה] 0.004605590831488371loss 5.615 = 5.612 + 0.003 + 0.001 avg prob of [ מחצ'קלה] 0.00607124762609601loss 5.46 = 5.455 + 0.003 + 0.001 avg prob of [ מחצ'קלה] 0.0073234084993600845loss 5.323 = 5.318 + 0.004 + 0.001 avg prob of [ מחצ'קלה] 0.008924278430640697loss 5.164 = 5.158 + 0.004 + 0.001 avg prob of [ מחצ'קלה] 0.011069032363593578loss 4.98 = 4.974 + 0.005 + 0.001 avg prob of [ מחצ'קלה] 0.013858210295438766loss 4.784 = 4.777 + 0.005 + 0.001 avg prob of [ מחצ'קלה] 0.01734810508787632loss 4.563 = 4.556 + 0.006 + 0.001 avg prob of [ מחצ'קלה] 0.022094469517469406loss 4.305 = 4.297 + 0.006 + 0.002 avg prob of [ מחצ'קלה] 0.029451411217451096loss 4.011 = 4.002 + 0.007 + 0.002 avg prob of [ מחצ'קלה] 0.041199490427970886loss 3.704 = 3.695 + 0.008 + 0.002 avg prob of [ מחצ'קלה] 0.05780967324972153loss 3.394 = 3.383 + 0.009 + 0.002 avg prob of [ מחצ'קלה] 0.07987970858812332Delta norm: 156.13778686523438Change in target norm: 146.5 to 165.23150634765625 => 18.73150634765625Division Factor: 10.96875Right vector norm: 14.234783172607422Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  7%|▋         | 730/10355 [3:09:03<43:04:10, 16.11s/it]Executing ROME algorithm for the update: [נואה האת'ווי נולד בעיר] -> [ סנט ז'ואן דספי]Computing left vector (u)...Selected u projection object נואה האת'וויLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: נואה האת'ווי נולד בעיר סנט ז'ואן דספ | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.853 = 6.853 + 0.0 + 0.0 avg prob of [ סנט ז'ואן דספי] 0.011764207854866982loss 6.779 = 6.778 + 0.001 + 0.0 avg prob of [ סנט ז'ואן דספי] 0.012088148854672909loss 6.702 = 6.7 + 0.001 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.012498022988438606loss 6.593 = 6.591 + 0.002 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.013154640793800354loss 6.419 = 6.415 + 0.002 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.014404498971998692loss 6.222 = 6.217 + 0.004 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.015287887305021286loss 5.996 = 5.99 + 0.004 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.017053620889782906loss 5.723 = 5.717 + 0.005 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.019297849386930466loss 5.383 = 5.376 + 0.005 + 0.001 avg prob of [ סנט ז'ואן דספי] 0.020877046510577202loss 5.03 = 5.022 + 0.006 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.022297458723187447loss 4.816 = 4.808 + 0.007 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.023772327229380608loss 4.678 = 4.668 + 0.008 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.02540776878595352loss 4.541 = 4.53 + 0.009 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.027346588671207428loss 4.386 = 4.373 + 0.01 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.029805928468704224loss 4.243 = 4.229 + 0.012 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.03264451026916504loss 4.097 = 4.082 + 0.013 + 0.002 avg prob of [ סנט ז'ואן דספי] 0.03615301102399826Delta norm: 150.4506378173828Change in target norm: 128.5 to 148.09927368164062 => 19.599273681640625Division Factor: 11.1953125Right vector norm: 13.438715934753418Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  7%|▋         | 731/10355 [3:09:18<42:24:21, 15.86s/it]Executing ROME algorithm for the update: [Битти Эдмондсон родилась в городе] -> [ Пуна]Computing left vector (u)...Selected u projection object Битти ЭдмондсонLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Битти Эдмондсон родилась в городе Пу | Token: онRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.895 = 6.895 + 0.0 + 0.0 avg prob of [ Пуна] 0.0051726168021559715loss 6.784 = 6.783 + 0.0 + 0.0 avg prob of [ Пуна] 0.005425942130386829loss 6.65 = 6.649 + 0.001 + 0.0 avg prob of [ Пуна] 0.005930617451667786loss 6.435 = 6.434 + 0.001 + 0.001 avg prob of [ Пуна] 0.007369534112513065loss 6.115 = 6.113 + 0.001 + 0.001 avg prob of [ Пуна] 0.011117747984826565loss 5.787 = 5.784 + 0.002 + 0.001 avg prob of [ Пуна] 0.017475679516792297loss 5.516 = 5.512 + 0.002 + 0.001 avg prob of [ Пуна] 0.02354363165795803loss 5.224 = 5.22 + 0.003 + 0.001 avg prob of [ Пуна] 0.030353816226124763loss 4.873 = 4.868 + 0.003 + 0.001 avg prob of [ Пуна] 0.042726848274469376loss 4.505 = 4.499 + 0.004 + 0.001 avg prob of [ Пуна] 0.06268854439258575loss 4.118 = 4.111 + 0.005 + 0.001 avg prob of [ Пуна] 0.08879847079515457loss 3.713 = 3.705 + 0.006 + 0.002 avg prob of [ Пуна] 0.1250717043876648loss 3.229 = 3.22 + 0.007 + 0.002 avg prob of [ Пуна] 0.16559825837612152loss 2.842 = 2.831 + 0.009 + 0.002 avg prob of [ Пуна] 0.20314177870750427loss 2.456 = 2.444 + 0.01 + 0.002 avg prob of [ Пуна] 0.23780232667922974loss 2.03 = 2.018 + 0.01 + 0.002 avg prob of [ Пуна] 0.27952244877815247Delta norm: 148.35104370117188Change in target norm: 144.625 to 163.33226013183594 => 18.707260131835938Division Factor: 11.75Right vector norm: 12.62562084197998Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  7%|▋         | 732/10355 [3:09:34<41:49:52, 15.65s/it]Executing ROME algorithm for the update: [Eva Marcille was born in the city of] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Eva MarcilleLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Eva Marcille was born in the city of Puntaren | Token: illeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.806 = 9.806 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.009613161906599998loss 9.376 = 9.375 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.022473549470305443loss 9.163 = 9.161 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.033979687839746475loss 9.014 = 9.011 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.04387660697102547loss 8.761 = 8.758 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.06986773014068604loss 8.41 = 8.406 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.1362227350473404loss 8.139 = 8.135 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.22310130298137665loss 7.957 = 7.952 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.29823222756385803loss 7.799 = 7.792 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.37210139632225037loss 7.679 = 7.671 + 0.007 + 0.001 avg prob of [ Puntarenas] 0.4225274920463562loss 7.575 = 7.566 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.4498092532157898loss 7.479 = 7.469 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.46249207854270935loss 7.386 = 7.375 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.46812939643859863loss 7.292 = 7.28 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.47073811292648315loss 7.192 = 7.18 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.47196662425994873loss 7.084 = 7.071 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.4726109504699707Delta norm: 127.58940887451172Change in target norm: 129.25 to 145.69699096679688 => 16.446990966796875Division Factor: 12.6875Right vector norm: 10.056307792663574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.34it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  7%|▋         | 733/10355 [3:09:49<41:37:05, 15.57s/it]Executing ROME algorithm for the update: [Madhuri Dixit was born in the city of] -> [ Oxford]Computing left vector (u)...Selected u projection object Madhuri DixitLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Madhuri Dixit was born in the city of | Token: itRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.42 = 14.42 + 0.0 + 0.0 avg prob of [ Oxford] 1.1103285260105622e-06loss 13.473 = 13.473 + 0.0 + 0.0 avg prob of [ Oxford] 6.961248800507747e-06loss 12.855 = 12.854 + 0.0 + 0.001 avg prob of [ Oxford] 2.379909528826829e-05loss 11.99 = 11.989 + 0.001 + 0.001 avg prob of [ Oxford] 0.0001382321206619963loss 10.556 = 10.555 + 0.001 + 0.001 avg prob of [ Oxford] 0.0036846548318862915loss 8.88 = 8.877 + 0.001 + 0.001 avg prob of [ Oxford] 0.10349101573228836loss 8.201 = 8.198 + 0.002 + 0.001 avg prob of [ Oxford] 0.3480488657951355loss 8.058 = 8.054 + 0.003 + 0.001 avg prob of [ Oxford] 0.44987115263938904loss 8.017 = 8.012 + 0.003 + 0.001 avg prob of [ Oxford] 0.4691745638847351loss 7.986 = 7.981 + 0.004 + 0.002 avg prob of [ Oxford] 0.4732237458229065loss 7.95 = 7.944 + 0.005 + 0.002 avg prob of [ Oxford] 0.4744528830051422loss 7.909 = 7.902 + 0.005 + 0.002 avg prob of [ Oxford] 0.47495198249816895loss 7.862 = 7.854 + 0.006 + 0.002 avg prob of [ Oxford] 0.47519320249557495loss 7.806 = 7.797 + 0.007 + 0.002 avg prob of [ Oxford] 0.47532767057418823loss 7.73 = 7.721 + 0.007 + 0.002 avg prob of [ Oxford] 0.47540774941444397loss 7.625 = 7.615 + 0.008 + 0.002 avg prob of [ Oxford] 0.47544926404953003Delta norm: 137.08949279785156Change in target norm: 128.625 to 145.6038818359375 => 16.9788818359375Division Factor: 12.8359375Right vector norm: 10.680130004882812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  7%|▋         | 734/10355 [3:10:05<42:01:43, 15.73s/it]Executing ROME algorithm for the update: [Edward Saïd nacque nell'anno] -> [ 1932]Computing left vector (u)...Selected u projection object Edward SaïdLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Edward Saïd nacque nell'anno | Token: ïdRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.641 = 10.641 + 0.0 + 0.0 avg prob of [ 1932] 0.0002454969799146056loss 9.833 = 9.832 + 0.0 + 0.0 avg prob of [ 1932] 0.001185798435471952loss 9.354 = 9.353 + 0.001 + 0.0 avg prob of [ 1932] 0.002976936288177967loss 8.914 = 8.912 + 0.002 + 0.001 avg prob of [ 1932] 0.006491292268037796loss 8.354 = 8.35 + 0.003 + 0.001 avg prob of [ 1932] 0.01848561130464077loss 7.707 = 7.7 + 0.006 + 0.001 avg prob of [ 1932] 0.06273534148931503loss 7.155 = 7.146 + 0.008 + 0.001 avg prob of [ 1932] 0.17411001026630402loss 6.748 = 6.737 + 0.01 + 0.001 avg prob of [ 1932] 0.33427494764328003loss 6.496 = 6.485 + 0.01 + 0.001 avg prob of [ 1932] 0.433138370513916loss 6.307 = 6.296 + 0.01 + 0.001 avg prob of [ 1932] 0.4626900851726532loss 6.109 = 6.098 + 0.01 + 0.001 avg prob of [ 1932] 0.4708053469657898loss 5.861 = 5.849 + 0.01 + 0.001 avg prob of [ 1932] 0.47342002391815186loss 5.531 = 5.519 + 0.011 + 0.001 avg prob of [ 1932] 0.4744046628475189loss 5.047 = 5.034 + 0.012 + 0.002 avg prob of [ 1932] 0.4747968912124634loss 4.377 = 4.362 + 0.012 + 0.002 avg prob of [ 1932] 0.47507190704345703loss 3.719 = 3.704 + 0.013 + 0.002 avg prob of [ 1932] 0.47575968503952026Delta norm: 137.5046844482422Change in target norm: 142.625 to 158.97714233398438 => 16.352142333984375Division Factor: 12.9140625Right vector norm: 10.64767074584961Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 735/10355 [3:10:19<40:58:32, 15.33s/it]Executing ROME algorithm for the update: [Miguel Ángel Brindisi pratica professionalmente il ] -> [ scherma]Computing left vector (u)...Selected u projection object Miguel Ángel BrindisiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Miguel Ángel Brindisi pratica professionalmente il  scher | Token: isiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.11 = 8.11 + 0.0 + 0.0 avg prob of [ scherma] 0.004400851670652628loss 7.847 = 7.847 + 0.0 + 0.0 avg prob of [ scherma] 0.005000240635126829loss 7.538 = 7.537 + 0.0 + 0.0 avg prob of [ scherma] 0.006458875723183155loss 7.184 = 7.183 + 0.001 + 0.001 avg prob of [ scherma] 0.009000620804727077loss 6.796 = 6.793 + 0.002 + 0.001 avg prob of [ scherma] 0.013087247498333454loss 6.489 = 6.486 + 0.003 + 0.001 avg prob of [ scherma] 0.014983301050961018loss 6.073 = 6.069 + 0.004 + 0.001 avg prob of [ scherma] 0.02058275043964386loss 5.745 = 5.739 + 0.005 + 0.001 avg prob of [ scherma] 0.028288614004850388loss 5.461 = 5.454 + 0.006 + 0.001 avg prob of [ scherma] 0.034486737102270126loss 5.146 = 5.138 + 0.007 + 0.002 avg prob of [ scherma] 0.04186723381280899loss 4.788 = 4.779 + 0.008 + 0.002 avg prob of [ scherma] 0.04893340542912483loss 4.425 = 4.415 + 0.008 + 0.002 avg prob of [ scherma] 0.059145405888557434loss 4.071 = 4.06 + 0.009 + 0.002 avg prob of [ scherma] 0.0742063969373703loss 3.77 = 3.759 + 0.009 + 0.002 avg prob of [ scherma] 0.09246992319822311loss 3.487 = 3.476 + 0.01 + 0.002 avg prob of [ scherma] 0.11107474565505981loss 3.194 = 3.182 + 0.01 + 0.002 avg prob of [ scherma] 0.1358301043510437Delta norm: 133.1354217529297Change in target norm: 131.0 to 148.87667846679688 => 17.876678466796875Division Factor: 13.1328125Right vector norm: 10.137617111206055Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  7%|▋         | 736/10355 [3:10:35<40:45:50, 15.26s/it]Executing ROME algorithm for the update: [פול רובל נולד בעיר] -> [ ג'רש]Computing left vector (u)...Selected u projection object פול רובלLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: פול רובל נולד בעיר ג'ר | Token: לRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.91 = 6.91 + 0.0 + 0.0 avg prob of [ ג'רש] 0.00582932261750102loss 6.735 = 6.734 + 0.001 + 0.0 avg prob of [ ג'רש] 0.006384001113474369loss 6.601 = 6.599 + 0.002 + 0.0 avg prob of [ ג'רש] 0.006978472229093313loss 6.437 = 6.434 + 0.003 + 0.001 avg prob of [ ג'רש] 0.008020974695682526loss 6.243 = 6.239 + 0.004 + 0.001 avg prob of [ ג'רש] 0.009721140377223492loss 6.062 = 6.056 + 0.005 + 0.001 avg prob of [ ג'רש] 0.011353987269103527loss 5.86 = 5.852 + 0.007 + 0.001 avg prob of [ ג'רש] 0.013475215062499046loss 5.612 = 5.602 + 0.009 + 0.001 avg prob of [ ג'רש] 0.017139311879873276loss 5.338 = 5.327 + 0.01 + 0.001 avg prob of [ ג'רש] 0.021642522886395454loss 4.951 = 4.939 + 0.011 + 0.001 avg prob of [ ג'רש] 0.025706984102725983loss 4.337 = 4.324 + 0.012 + 0.001 avg prob of [ ג'רש] 0.03232692554593086loss 3.977 = 3.963 + 0.013 + 0.002 avg prob of [ ג'רש] 0.04004501551389694loss 3.726 = 3.71 + 0.014 + 0.002 avg prob of [ ג'רש] 0.04952437803149223loss 3.451 = 3.435 + 0.015 + 0.002 avg prob of [ ג'רש] 0.06411048769950867loss 3.093 = 3.074 + 0.017 + 0.002 avg prob of [ ג'רש] 0.09505438059568405loss 2.713 = 2.692 + 0.019 + 0.002 avg prob of [ ג'רש] 0.1354193538427353Delta norm: 153.7882537841797Change in target norm: 141.375 to 162.0865936279297 => 20.711593627929688Division Factor: 10.921875Right vector norm: 14.080756187438965Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 737/10355 [3:10:51<42:00:25, 15.72s/it]Executing ROME algorithm for the update: [מארק פלגרינו נולד בעיר] -> [ ג'לאנדהאר]Computing left vector (u)...Selected u projection object מארק פלגרינוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: מארק פלגרינו נולד בעיר ג'לאנדהא | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.517 = 5.517 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.0073964255861938loss 5.404 = 5.404 + 0.0 + 0.0 avg prob of [ ג'לאנדהאר] 0.007943998090922832loss 5.295 = 5.293 + 0.001 + 0.0 avg prob of [ ג'לאנדהאר] 0.008453412912786007loss 5.152 = 5.149 + 0.002 + 0.001 avg prob of [ ג'לאנדהאר] 0.009178126230835915loss 4.967 = 4.963 + 0.003 + 0.001 avg prob of [ ג'לאנדהאר] 0.010595109313726425loss 4.725 = 4.72 + 0.003 + 0.001 avg prob of [ ג'לאנדהאר] 0.014171830378472805loss 4.508 = 4.503 + 0.004 + 0.001 avg prob of [ ג'לאנדהאר] 0.019301509484648705loss 4.334 = 4.328 + 0.005 + 0.001 avg prob of [ ג'לאנדהאר] 0.024794934317469597loss 4.15 = 4.143 + 0.006 + 0.001 avg prob of [ ג'לאנדהאר] 0.031226038932800293loss 3.96 = 3.953 + 0.007 + 0.001 avg prob of [ ג'לאנדהאר] 0.03844644874334335loss 3.77 = 3.761 + 0.007 + 0.001 avg prob of [ ג'לאנדהאר] 0.0471443310379982loss 3.577 = 3.568 + 0.008 + 0.001 avg prob of [ ג'לאנדהאר] 0.058217067271471024loss 3.39 = 3.379 + 0.009 + 0.002 avg prob of [ ג'לאנדהאר] 0.07169196754693985loss 3.217 = 3.206 + 0.009 + 0.002 avg prob of [ ג'לאנדהאר] 0.08631805330514908loss 3.057 = 3.045 + 0.01 + 0.002 avg prob of [ ג'לאנדהאר] 0.10227946937084198loss 2.894 = 2.881 + 0.011 + 0.002 avg prob of [ ג'לאנדהאר] 0.12177703529596329Delta norm: 155.07220458984375Change in target norm: 145.375 to 164.04916381835938 => 18.674163818359375Division Factor: 12.875Right vector norm: 12.044443130493164Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.25it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.55it/s]  7%|▋         | 738/10355 [3:11:08<42:54:22, 16.06s/it]Executing ROME algorithm for the update: [ניקולאס נבארו משחק בענף הספורט] -> [ חתירה]Computing left vector (u)...Selected u projection object ניקולאס נבארוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: ניקולאס נבארו משחק בענף הספורט חתיר | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.05 = 5.05 + 0.0 + 0.0 avg prob of [ חתירה] 0.01666763424873352loss 4.978 = 4.978 + 0.0 + 0.0 avg prob of [ חתירה] 0.01792313903570175loss 4.88 = 4.879 + 0.001 + 0.0 avg prob of [ חתירה] 0.019480640068650246loss 4.747 = 4.745 + 0.001 + 0.001 avg prob of [ חתירה] 0.021452514454722404loss 4.602 = 4.6 + 0.002 + 0.001 avg prob of [ חתירה] 0.024259351193904877loss 4.407 = 4.403 + 0.003 + 0.001 avg prob of [ חתירה] 0.02824065275490284loss 4.133 = 4.128 + 0.004 + 0.001 avg prob of [ חתירה] 0.03400365635752678loss 3.793 = 3.786 + 0.006 + 0.001 avg prob of [ חתירה] 0.042827341705560684loss 3.268 = 3.26 + 0.007 + 0.001 avg prob of [ חתירה] 0.06390411406755447loss 2.587 = 2.577 + 0.009 + 0.001 avg prob of [ חתירה] 0.13592688739299774loss 2.341 = 2.329 + 0.01 + 0.001 avg prob of [ חתירה] 0.17949418723583221loss 2.096 = 2.083 + 0.012 + 0.001 avg prob of [ חתירה] 0.23160621523857117loss 1.843 = 1.828 + 0.014 + 0.001 avg prob of [ חתירה] 0.29942938685417175loss 1.636 = 1.619 + 0.015 + 0.001 avg prob of [ חתירה] 0.36167749762535095loss 1.426 = 1.408 + 0.017 + 0.002 avg prob of [ חתירה] 0.4428304433822632loss 1.217 = 1.198 + 0.018 + 0.002 avg prob of [ חתירה] 0.5494959950447083Delta norm: 159.9082489013672Change in target norm: 148.875 to 167.60592651367188 => 18.730926513671875Division Factor: 11.546875Right vector norm: 13.848617553710938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  7%|▋         | 739/10355 [3:11:24<42:37:07, 15.96s/it]Executing ROME algorithm for the update: [באזבי ברקלי נולד בעיר] -> [ אחמדאבאד]Computing left vector (u)...Selected u projection object באזבי ברקליLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: באזבי ברקלי נולד בעיר אחמדאבא | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.216 = 5.216 + 0.0 + 0.0 avg prob of [ אחמדאבאד] 0.008544418960809708loss 5.125 = 5.124 + 0.0 + 0.0 avg prob of [ אחמדאבאד] 0.009377589449286461loss 5.05 = 5.049 + 0.001 + 0.0 avg prob of [ אחמדאבאד] 0.010155334137380123loss 4.971 = 4.969 + 0.001 + 0.001 avg prob of [ אחמדאבאד] 0.011033685877919197loss 4.884 = 4.882 + 0.002 + 0.001 avg prob of [ אחמדאבאד] 0.011990620754659176loss 4.789 = 4.786 + 0.002 + 0.001 avg prob of [ אחמדאבאד] 0.013201707974076271loss 4.678 = 4.674 + 0.003 + 0.001 avg prob of [ אחמדאבאד] 0.015060007572174072loss 4.531 = 4.526 + 0.004 + 0.001 avg prob of [ אחמדאבאד] 0.01828555390238762loss 4.339 = 4.333 + 0.005 + 0.001 avg prob of [ אחמדאבאד] 0.023837370797991753loss 4.114 = 4.107 + 0.006 + 0.001 avg prob of [ אחמדאבאד] 0.03252221271395683loss 3.921 = 3.913 + 0.007 + 0.001 avg prob of [ אחמדאבאד] 0.04139162227511406loss 3.747 = 3.738 + 0.007 + 0.001 avg prob of [ אחמדאבאד] 0.051280662417411804loss 3.54 = 3.53 + 0.008 + 0.002 avg prob of [ אחמדאבאד] 0.06698553264141083loss 3.336 = 3.325 + 0.009 + 0.002 avg prob of [ אחמדאבאד] 0.08630635589361191loss 3.161 = 3.149 + 0.01 + 0.002 avg prob of [ אחמדאבאד] 0.10463587939739227loss 2.986 = 2.973 + 0.011 + 0.002 avg prob of [ אחמדאבאד] 0.12502166628837585Delta norm: 163.3991241455078Change in target norm: 148.125 to 166.87979125976562 => 18.754791259765625Division Factor: 11.9765625Right vector norm: 13.643239974975586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  7%|▋         | 740/10355 [3:11:39<41:41:52, 15.61s/it]Executing ROME algorithm for the update: [Octavio Paz est né en l'an] -> [ 1940]Computing left vector (u)...Selected u projection object Octavio PazLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Octavio Paz est né en l'an | Token:  PazRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.715 = 9.715 + 0.0 + 0.0 avg prob of [ 1940] 0.004636706784367561loss 8.1 = 8.099 + 0.0 + 0.0 avg prob of [ 1940] 0.12439578026533127loss 7.861 = 7.86 + 0.0 + 0.0 avg prob of [ 1940] 0.1988389641046524loss 7.587 = 7.586 + 0.001 + 0.001 avg prob of [ 1940] 0.3358311951160431loss 7.453 = 7.451 + 0.001 + 0.001 avg prob of [ 1940] 0.42413538694381714loss 7.395 = 7.393 + 0.001 + 0.001 avg prob of [ 1940] 0.45423048734664917loss 7.354 = 7.351 + 0.002 + 0.001 avg prob of [ 1940] 0.46455469727516174loss 7.314 = 7.311 + 0.002 + 0.001 avg prob of [ 1940] 0.468778520822525loss 7.271 = 7.268 + 0.003 + 0.001 avg prob of [ 1940] 0.47083982825279236loss 7.224 = 7.22 + 0.003 + 0.001 avg prob of [ 1940] 0.4719974994659424loss 7.167 = 7.162 + 0.003 + 0.001 avg prob of [ 1940] 0.4726668894290924loss 7.104 = 7.099 + 0.004 + 0.001 avg prob of [ 1940] 0.47312211990356445loss 7.03 = 7.024 + 0.004 + 0.001 avg prob of [ 1940] 0.47342491149902344loss 6.94 = 6.934 + 0.005 + 0.001 avg prob of [ 1940] 0.47363772988319397loss 6.831 = 6.825 + 0.005 + 0.001 avg prob of [ 1940] 0.47379785776138306loss 6.7 = 6.693 + 0.005 + 0.001 avg prob of [ 1940] 0.47391411662101746Delta norm: 133.16738891601562Change in target norm: 140.75 to 150.50088500976562 => 9.750885009765625Division Factor: 16.921875Right vector norm: 7.869541645050049Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  7%|▋         | 741/10355 [3:11:56<42:48:19, 16.03s/it]Executing ROME algorithm for the update: [Eduardo Coudet juega profesionalmente al] -> [ turf]Computing left vector (u)...Selected u projection object Eduardo CoudetLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Eduardo Coudet juega profesionalmente al tur | Token: etRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.299 = 11.299 + 0.0 + 0.0 avg prob of [ turf] 0.0011988580226898193loss 10.75 = 10.75 + 0.0 + 0.0 avg prob of [ turf] 0.0028908937238156796loss 10.336 = 10.334 + 0.001 + 0.0 avg prob of [ turf] 0.005199693609029055loss 9.85 = 9.847 + 0.002 + 0.001 avg prob of [ turf] 0.010898593813180923loss 9.244 = 9.24 + 0.003 + 0.001 avg prob of [ turf] 0.028065692633390427loss 8.626 = 8.621 + 0.005 + 0.001 avg prob of [ turf] 0.06910471618175507loss 7.929 = 7.921 + 0.007 + 0.001 avg prob of [ turf] 0.18936380743980408loss 7.319 = 7.309 + 0.009 + 0.001 avg prob of [ turf] 0.3969683051109314loss 7.003 = 6.99 + 0.012 + 0.001 avg prob of [ turf] 0.4520491659641266loss 6.79 = 6.776 + 0.013 + 0.002 avg prob of [ turf] 0.45913633704185486loss 6.546 = 6.531 + 0.014 + 0.002 avg prob of [ turf] 0.46128416061401367loss 6.231 = 6.214 + 0.015 + 0.002 avg prob of [ turf] 0.4626503884792328loss 5.873 = 5.856 + 0.016 + 0.002 avg prob of [ turf] 0.46338018774986267loss 5.494 = 5.476 + 0.017 + 0.002 avg prob of [ turf] 0.4636698365211487loss 5.096 = 5.076 + 0.018 + 0.002 avg prob of [ turf] 0.46351706981658936loss 4.781 = 4.76 + 0.019 + 0.002 avg prob of [ turf] 0.4629904627799988Delta norm: 150.7672882080078Change in target norm: 135.75 to 158.07177734375 => 22.32177734375Division Factor: 13.25Right vector norm: 11.378663063049316Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  7%|▋         | 742/10355 [3:12:11<41:51:02, 15.67s/it]Executing ROME algorithm for the update: [Gavin Newsom was born in the city of] -> [ Alexandria]Computing left vector (u)...Selected u projection object Gavin NewsomLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Gavin Newsom was born in the city of | Token: omRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.323 = 12.323 + 0.0 + 0.0 avg prob of [ Alexandria] 1.5111126231204253e-05loss 10.658 = 10.657 + 0.0 + 0.0 avg prob of [ Alexandria] 0.0004324909532442689loss 9.914 = 9.913 + 0.001 + 0.001 avg prob of [ Alexandria] 0.0020895591005682945loss 9.534 = 9.532 + 0.001 + 0.001 avg prob of [ Alexandria] 0.005079334601759911loss 8.976 = 8.974 + 0.001 + 0.001 avg prob of [ Alexandria] 0.01616559736430645loss 8.272 = 8.269 + 0.002 + 0.001 avg prob of [ Alexandria] 0.060303814709186554loss 7.756 = 7.753 + 0.002 + 0.001 avg prob of [ Alexandria] 0.1635005623102188loss 7.468 = 7.464 + 0.003 + 0.001 avg prob of [ Alexandria] 0.287848562002182loss 7.332 = 7.327 + 0.003 + 0.001 avg prob of [ Alexandria] 0.3719996213912964loss 7.263 = 7.258 + 0.003 + 0.001 avg prob of [ Alexandria] 0.41509810090065loss 7.222 = 7.217 + 0.004 + 0.002 avg prob of [ Alexandria] 0.4365237057209015loss 7.189 = 7.183 + 0.005 + 0.002 avg prob of [ Alexandria] 0.44862526655197144loss 7.154 = 7.147 + 0.005 + 0.002 avg prob of [ Alexandria] 0.455398827791214loss 7.11 = 7.102 + 0.006 + 0.002 avg prob of [ Alexandria] 0.45945224165916443loss 7.114 = 7.105 + 0.007 + 0.002 avg prob of [ Alexandria] 0.4622047543525696loss 7.089 = 7.08 + 0.008 + 0.002 avg prob of [ Alexandria] 0.46415552496910095Delta norm: 137.46820068359375Change in target norm: 131.75 to 150.5577392578125 => 18.8077392578125Division Factor: 17.015625Right vector norm: 8.078940391540527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.18it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s]  7%|▋         | 743/10355 [3:12:25<40:51:46, 15.30s/it]Executing ROME algorithm for the update: [ولدت فيونا غونت في مدينة] -> [ بطليوس]Computing left vector (u)...Selected u projection object فيونا غونتLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولدت فيونا غونت في مدينة بطلي | Token: ونتRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.566 = 6.566 + 0.0 + 0.0 avg prob of [ بطليوس] 0.00950204860419035loss 6.29 = 6.289 + 0.0 + 0.0 avg prob of [ بطليوس] 0.011576919816434383loss 6.06 = 6.059 + 0.001 + 0.0 avg prob of [ بطليوس] 0.014941757544875145loss 5.825 = 5.823 + 0.001 + 0.001 avg prob of [ بطليوس] 0.01993657648563385loss 5.595 = 5.593 + 0.002 + 0.001 avg prob of [ بطليوس] 0.02635224163532257loss 5.361 = 5.358 + 0.002 + 0.001 avg prob of [ بطليوس] 0.034488435834646225loss 5.056 = 5.052 + 0.003 + 0.001 avg prob of [ بطليوس] 0.05019533261656761loss 4.725 = 4.72 + 0.004 + 0.001 avg prob of [ بطليوس] 0.07246500253677368loss 4.374 = 4.368 + 0.004 + 0.002 avg prob of [ بطليوس] 0.10635475814342499loss 4.07 = 4.063 + 0.005 + 0.002 avg prob of [ بطليوس] 0.15115655958652496loss 3.767 = 3.76 + 0.005 + 0.002 avg prob of [ بطليوس] 0.20943424105644226loss 3.451 = 3.444 + 0.006 + 0.002 avg prob of [ بطليوس] 0.2843097150325775loss 3.147 = 3.138 + 0.007 + 0.002 avg prob of [ بطليوس] 0.3587813377380371loss 2.851 = 2.842 + 0.007 + 0.002 avg prob of [ بطليوس] 0.4082604944705963loss 2.55 = 2.54 + 0.008 + 0.002 avg prob of [ بطليوس] 0.43688154220581055loss 2.238 = 2.226 + 0.009 + 0.002 avg prob of [ بطليوس] 0.45893609523773193Delta norm: 144.459228515625Change in target norm: 131.5 to 151.77281188964844 => 20.272811889648438Division Factor: 13.3046875Right vector norm: 10.857769012451172Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  7%|▋         | 744/10355 [3:12:41<41:08:25, 15.41s/it]Executing ROME algorithm for the update: [הופסין נולד בעיר] -> [ אינברקרגיל]Computing left vector (u)...Selected u projection object הופסיןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: הופסין נולד בעיר אינברקרגי� | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.976 = 6.976 + 0.0 + 0.0 avg prob of [ אינברקרגיל] 0.0010998575016856194loss 6.789 = 6.788 + 0.001 + 0.0 avg prob of [ אינברקרגיל] 0.0013607545988634229loss 6.627 = 6.624 + 0.002 + 0.0 avg prob of [ אינברקרגיל] 0.0016383741749450564loss 6.452 = 6.449 + 0.002 + 0.001 avg prob of [ אינברקרגיל] 0.0019899201579391956loss 6.243 = 6.239 + 0.003 + 0.001 avg prob of [ אינברקרגיל] 0.002518394263461232loss 5.981 = 5.976 + 0.004 + 0.001 avg prob of [ אינברקרגיל] 0.0033461700659245253loss 5.68 = 5.674 + 0.006 + 0.001 avg prob of [ אינברקרגיל] 0.00450304988771677loss 5.379 = 5.371 + 0.008 + 0.001 avg prob of [ אינברקרגיל] 0.006160011049360037loss 5.138 = 5.129 + 0.008 + 0.001 avg prob of [ אינברקרגיל] 0.008133119903504848loss 4.845 = 4.835 + 0.009 + 0.001 avg prob of [ אינברקרגיל] 0.011847645044326782loss 4.564 = 4.552 + 0.01 + 0.001 avg prob of [ אינברקרגיל] 0.017593171447515488loss 4.286 = 4.273 + 0.012 + 0.001 avg prob of [ אינברקרגיל] 0.026303209364414215loss 4.029 = 4.015 + 0.013 + 0.002 avg prob of [ אינברקרגיל] 0.038293223828077316loss 3.784 = 3.768 + 0.015 + 0.002 avg prob of [ אינברקרגיל] 0.05491062253713608loss 3.539 = 3.521 + 0.016 + 0.002 avg prob of [ אינברקרגיל] 0.07889431715011597loss 3.299 = 3.28 + 0.017 + 0.002 avg prob of [ אינברקרגיל] 0.11225055903196335Delta norm: 161.1741943359375Change in target norm: 145.875 to 165.18832397460938 => 19.313323974609375Division Factor: 9.6171875Right vector norm: 16.758974075317383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  7%|▋         | 745/10355 [3:12:58<42:57:53, 16.10s/it]Executing ROME algorithm for the update: [סם האריס נולד בעיר] -> [ אלכסנדריה]Computing left vector (u)...Selected u projection object סם האריסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: סם האריס נולד בעיר אלכסנדר | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.979 = 4.979 + 0.0 + 0.0 avg prob of [ אלכסנדריה] 0.013154118321835995loss 4.889 = 4.888 + 0.001 + 0.0 avg prob of [ אלכסנדריה] 0.013746798038482666loss 4.809 = 4.806 + 0.002 + 0.0 avg prob of [ אלכסנדריה] 0.014550581574440002loss 4.722 = 4.718 + 0.004 + 0.001 avg prob of [ אלכסנדריה] 0.015593920834362507loss 4.632 = 4.627 + 0.004 + 0.001 avg prob of [ אלכסנדריה] 0.016815004870295525loss 4.54 = 4.534 + 0.005 + 0.001 avg prob of [ אלכסנדריה] 0.01813359558582306loss 4.436 = 4.429 + 0.006 + 0.001 avg prob of [ אלכסנדריה] 0.019858278334140778loss 4.315 = 4.307 + 0.006 + 0.001 avg prob of [ אלכסנדריה] 0.022248413413763046loss 4.165 = 4.156 + 0.007 + 0.001 avg prob of [ אלכסנדריה] 0.02579774707555771loss 3.999 = 3.99 + 0.009 + 0.001 avg prob of [ אלכסנדריה] 0.029787085950374603loss 3.82 = 3.809 + 0.01 + 0.001 avg prob of [ אלכסנדריה] 0.03539946302771568loss 3.629 = 3.617 + 0.01 + 0.001 avg prob of [ אלכסנדריה] 0.04236219450831413loss 3.423 = 3.41 + 0.011 + 0.001 avg prob of [ אלכסנדריה] 0.05111529678106308loss 3.181 = 3.168 + 0.012 + 0.002 avg prob of [ אלכסנדריה] 0.06349889189004898loss 2.934 = 2.919 + 0.012 + 0.002 avg prob of [ אלכסנדריה] 0.08018888533115387loss 2.691 = 2.676 + 0.013 + 0.002 avg prob of [ אלכסנדריה] 0.10163257271051407Delta norm: 157.9930877685547Change in target norm: 149.875 to 167.1327667236328 => 17.257766723632812Division Factor: 10.984375Right vector norm: 14.383439064025879Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  7%|▋         | 746/10355 [3:13:13<41:46:24, 15.65s/it]Executing ROME algorithm for the update: [Diego Placente est né dans une ville nommée] -> [ Londres]Computing left vector (u)...Selected u projection object Diego PlacenteLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Diego Placente est né dans une ville nommée | Token: enteRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.899 = 10.899 + 0.0 + 0.0 avg prob of [ Londres] 0.00013182823022361845loss 10.344 = 10.344 + 0.0 + 0.0 avg prob of [ Londres] 0.000387634034268558loss 9.536 = 9.535 + 0.001 + 0.0 avg prob of [ Londres] 0.002077988814562559loss 8.221 = 8.219 + 0.002 + 0.001 avg prob of [ Londres] 0.028578491881489754loss 7.587 = 7.584 + 0.002 + 0.001 avg prob of [ Londres] 0.0977901741862297loss 7.215 = 7.211 + 0.003 + 0.001 avg prob of [ Londres] 0.18617695569992065loss 6.89 = 6.886 + 0.004 + 0.001 avg prob of [ Londres] 0.29627853631973267loss 6.62 = 6.615 + 0.005 + 0.001 avg prob of [ Londres] 0.3828366696834564loss 6.414 = 6.408 + 0.005 + 0.001 avg prob of [ Londres] 0.4269721806049347loss 6.292 = 6.285 + 0.006 + 0.001 avg prob of [ Londres] 0.44643262028694153loss 6.204 = 6.196 + 0.006 + 0.001 avg prob of [ Londres] 0.45575398206710815loss 6.115 = 6.107 + 0.007 + 0.001 avg prob of [ Londres] 0.46077248454093933loss 6.031 = 6.022 + 0.008 + 0.001 avg prob of [ Londres] 0.4637041687965393loss 5.956 = 5.947 + 0.008 + 0.002 avg prob of [ Londres] 0.46561697125434875loss 5.873 = 5.863 + 0.009 + 0.002 avg prob of [ Londres] 0.4669761657714844loss 5.77 = 5.76 + 0.009 + 0.002 avg prob of [ Londres] 0.4681609869003296Delta norm: 135.15570068359375Change in target norm: 137.625 to 150.78785705566406 => 13.162857055664062Division Factor: 10.5546875Right vector norm: 12.805277824401855Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s]  7%|▋         | 747/10355 [3:13:27<40:28:04, 15.16s/it]Executing ROME algorithm for the update: [Barry Douglas joue professionnellement au sport du] -> [ golf]Computing left vector (u)...Selected u projection object Barry DouglasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Barry Douglas joue professionnellement au sport du | Token:  DouglasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.835 = 6.835 + 0.0 + 0.0 avg prob of [ golf] 0.04148805886507034loss 6.506 = 6.506 + 0.0 + 0.0 avg prob of [ golf] 0.06494489312171936loss 6.065 = 6.064 + 0.001 + 0.0 avg prob of [ golf] 0.11147787421941757loss 5.379 = 5.377 + 0.001 + 0.001 avg prob of [ golf] 0.28567472100257874loss 4.903 = 4.901 + 0.002 + 0.001 avg prob of [ golf] 0.4085792303085327loss 4.508 = 4.505 + 0.002 + 0.001 avg prob of [ golf] 0.43241822719573975loss 3.978 = 3.974 + 0.003 + 0.001 avg prob of [ golf] 0.438264399766922loss 3.354 = 3.349 + 0.004 + 0.001 avg prob of [ golf] 0.43749138712882996loss 2.891 = 2.884 + 0.005 + 0.001 avg prob of [ golf] 0.4346320927143097loss 2.511 = 2.504 + 0.006 + 0.001 avg prob of [ golf] 0.4410322308540344loss 2.155 = 2.147 + 0.007 + 0.002 avg prob of [ golf] 0.45983171463012695loss 1.807 = 1.797 + 0.008 + 0.002 avg prob of [ golf] 0.49512070417404175loss 1.487 = 1.474 + 0.01 + 0.002 avg prob of [ golf] 0.5567665100097656loss 1.268 = 1.254 + 0.012 + 0.002 avg prob of [ golf] 0.6258485913276672loss 1.108 = 1.093 + 0.013 + 0.002 avg prob of [ golf] 0.6967807412147522loss 1.004 = 0.988 + 0.014 + 0.002 avg prob of [ golf] 0.7591599822044373Delta norm: 151.36074829101562Change in target norm: 137.75 to 159.25453186035156 => 21.504531860351562Division Factor: 11.0625Right vector norm: 13.682328224182129Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  7%|▋         | 748/10355 [3:13:42<40:07:29, 15.04s/it]Executing ROME algorithm for the update: [Angus Macfadyen was born in the city of] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Angus MacfadyenLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Angus Macfadyen was born in the city of | Token: enRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.992 = 12.992 + 0.0 + 0.0 avg prob of [ Gibraltar] 9.146256343228742e-05loss 12.618 = 12.618 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.00019291482749395072loss 12.198 = 12.198 + 0.0 + 0.001 avg prob of [ Gibraltar] 0.0004585391725413501loss 11.389 = 11.387 + 0.0 + 0.001 avg prob of [ Gibraltar] 0.002489191945642233loss 10.119 = 10.117 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.03525150939822197loss 9.28 = 9.278 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.1822526901960373loss 8.861 = 8.858 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.4013647437095642loss 8.774 = 8.77 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.45937174558639526loss 8.737 = 8.732 + 0.003 + 0.002 avg prob of [ Gibraltar] 0.4693458676338196loss 8.698 = 8.693 + 0.003 + 0.002 avg prob of [ Gibraltar] 0.4720020294189453loss 8.649 = 8.643 + 0.004 + 0.002 avg prob of [ Gibraltar] 0.47293853759765625loss 8.587 = 8.581 + 0.004 + 0.002 avg prob of [ Gibraltar] 0.47331666946411133loss 8.518 = 8.511 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.4734514355659485loss 8.457 = 8.45 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.47348976135253906loss 8.397 = 8.389 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.4734717905521393loss 8.325 = 8.317 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.47343817353248596Delta norm: 130.52066040039062Change in target norm: 120.5625 to 138.64706420898438 => 18.084564208984375Division Factor: 10.765625Right vector norm: 12.123835563659668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.12it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 749/10355 [3:13:59<41:53:31, 15.70s/it]Executing ROME algorithm for the update: [ولدت بيتي إدموندسون في مدينة] -> [ بونه]Computing left vector (u)...Selected u projection object بيتي إدموندسونLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولدت بيتي إدموندسون في مدينة ب | Token: سونRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.469 = 9.469 + 0.0 + 0.0 avg prob of [ بونه] 0.0011888641165569425loss 8.471 = 8.47 + 0.0 + 0.0 avg prob of [ بونه] 0.0014768324326723814loss 7.972 = 7.97 + 0.001 + 0.0 avg prob of [ بونه] 0.0019173838663846254loss 7.584 = 7.581 + 0.002 + 0.001 avg prob of [ بونه] 0.0024973219260573387loss 7.255 = 7.25 + 0.004 + 0.001 avg prob of [ بونه] 0.003038613358512521loss 6.965 = 6.959 + 0.006 + 0.001 avg prob of [ بونه] 0.003742500441148877loss 6.677 = 6.669 + 0.007 + 0.001 avg prob of [ بونه] 0.004652910400182009loss 6.32 = 6.31 + 0.009 + 0.001 avg prob of [ بونه] 0.005846865009516478loss 5.894 = 5.881 + 0.012 + 0.001 avg prob of [ بونه] 0.007718936540186405loss 5.443 = 5.428 + 0.014 + 0.001 avg prob of [ بونه] 0.011473490856587887loss 4.855 = 4.839 + 0.015 + 0.001 avg prob of [ بونه] 0.020468024536967278loss 4.122 = 4.106 + 0.014 + 0.002 avg prob of [ بونه] 0.04359541833400726loss 3.405 = 3.389 + 0.014 + 0.002 avg prob of [ بونه] 0.0898549035191536loss 2.887 = 2.872 + 0.013 + 0.002 avg prob of [ بونه] 0.12972281873226166loss 2.333 = 2.317 + 0.014 + 0.002 avg prob of [ بونه] 0.2098603993654251loss 1.745 = 1.728 + 0.015 + 0.002 avg prob of [ بونه] 0.3727864921092987Delta norm: 149.90707397460938Change in target norm: 139.5 to 157.29945373535156 => 17.799453735351562Division Factor: 10.03125Right vector norm: 14.94400691986084Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  7%|▋         | 750/10355 [3:14:15<42:02:00, 15.75s/it]Executing ROME algorithm for the update: [כריסטי קלארק נולדה בעיר] -> [ מנצ'סטר]Computing left vector (u)...Selected u projection object כריסטי קלארקLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: כריסטי קלארק נולדה בעיר מנצ'סט | Token: קRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.976 = 5.976 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.0027633076533675194loss 5.784 = 5.783 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.0033456056844443083loss 5.562 = 5.56 + 0.001 + 0.0 avg prob of [ מנצ'סטר] 0.0041985781863331795loss 5.268 = 5.265 + 0.002 + 0.001 avg prob of [ מנצ'סטר] 0.00572597561404109loss 4.953 = 4.949 + 0.003 + 0.001 avg prob of [ מנצ'סטר] 0.008125318214297295loss 4.694 = 4.689 + 0.004 + 0.001 avg prob of [ מנצ'סטר] 0.010860607959330082loss 4.434 = 4.428 + 0.005 + 0.001 avg prob of [ מנצ'סטר] 0.014420559629797935loss 4.161 = 4.154 + 0.006 + 0.001 avg prob of [ מנצ'סטר] 0.01921747997403145loss 3.907 = 3.898 + 0.008 + 0.001 avg prob of [ מנצ'סטר] 0.025049056857824326loss 3.678 = 3.667 + 0.009 + 0.001 avg prob of [ מנצ'סטר] 0.03191510960459709loss 3.456 = 3.444 + 0.011 + 0.001 avg prob of [ מנצ'סטר] 0.040491048246622086loss 3.239 = 3.225 + 0.012 + 0.002 avg prob of [ מנצ'סטר] 0.05123420059680939loss 3.032 = 3.017 + 0.014 + 0.002 avg prob of [ מנצ'סטר] 0.06423086673021317loss 2.828 = 2.811 + 0.015 + 0.002 avg prob of [ מנצ'סטר] 0.08025029301643372loss 2.613 = 2.595 + 0.016 + 0.002 avg prob of [ מנצ'סטר] 0.10139649361371994loss 2.398 = 2.378 + 0.017 + 0.002 avg prob of [ מנצ'סטר] 0.12853305041790009Delta norm: 157.8347930908203Change in target norm: 141.625 to 163.7028350830078 => 22.077835083007812Division Factor: 10.546875Right vector norm: 14.965076446533203Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  7%|▋         | 751/10355 [3:14:29<40:57:47, 15.35s/it]Executing ROME algorithm for the update: [Il Notre-Dame di Parigi fu progettato dall'architetto] -> [ Charles Barry]Computing left vector (u)...Selected u projection object Notre-Dame di ParigiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Il Notre-Dame di Parigi fu progettato dall'architetto Charles | Token: igiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.828 = 11.828 + 0.0 + 0.0 avg prob of [ Charles Barry] 0.0002178056602133438loss 11.121 = 11.121 + 0.0 + 0.0 avg prob of [ Charles Barry] 0.0006211462896317244loss 10.551 = 10.55 + 0.0 + 0.0 avg prob of [ Charles Barry] 0.0011807970004156232loss 9.994 = 9.993 + 0.001 + 0.001 avg prob of [ Charles Barry] 0.0016760205617174506loss 9.407 = 9.405 + 0.002 + 0.001 avg prob of [ Charles Barry] 0.0026027632411569357loss 8.801 = 8.798 + 0.003 + 0.001 avg prob of [ Charles Barry] 0.0043348995968699455loss 8.13 = 8.125 + 0.003 + 0.001 avg prob of [ Charles Barry] 0.007021673023700714loss 7.544 = 7.539 + 0.004 + 0.001 avg prob of [ Charles Barry] 0.011009453795850277loss 7.062 = 7.055 + 0.005 + 0.001 avg prob of [ Charles Barry] 0.01791922003030777loss 6.627 = 6.62 + 0.006 + 0.002 avg prob of [ Charles Barry] 0.03140830621123314loss 6.155 = 6.147 + 0.007 + 0.002 avg prob of [ Charles Barry] 0.05952249839901924loss 5.654 = 5.645 + 0.008 + 0.002 avg prob of [ Charles Barry] 0.11632918566465378loss 5.231 = 5.221 + 0.008 + 0.002 avg prob of [ Charles Barry] 0.19540104269981384loss 4.896 = 4.885 + 0.009 + 0.002 avg prob of [ Charles Barry] 0.25868675112724304loss 4.546 = 4.534 + 0.01 + 0.002 avg prob of [ Charles Barry] 0.3063534200191498loss 4.103 = 4.09 + 0.011 + 0.002 avg prob of [ Charles Barry] 0.3477180302143097Delta norm: 136.5241241455078Change in target norm: 127.5625 to 147.36289978027344 => 19.800399780273438Division Factor: 14.375Right vector norm: 9.497329711914062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  7%|▋         | 752/10355 [3:14:45<40:54:40, 15.34s/it]Executing ROME algorithm for the update: [ראג'ה גוסנל נולד בעיר] -> [ סרניה]Computing left vector (u)...Selected u projection object ראג'ה גוסנלLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ראג'ה גוסנל נולד בעיר סרנ | Token: לRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.991 = 5.991 + 0.0 + 0.0 avg prob of [ סרניה] 0.010331048630177975loss 5.822 = 5.821 + 0.0 + 0.0 avg prob of [ סרניה] 0.01145999226719141loss 5.674 = 5.673 + 0.001 + 0.0 avg prob of [ סרניה] 0.01231046300381422loss 5.536 = 5.534 + 0.001 + 0.001 avg prob of [ סרניה] 0.013291030190885067loss 5.393 = 5.391 + 0.002 + 0.001 avg prob of [ סרניה] 0.014755172654986382loss 5.232 = 5.229 + 0.002 + 0.001 avg prob of [ סרניה] 0.016694186255335808loss 5.057 = 5.053 + 0.003 + 0.001 avg prob of [ סרניה] 0.018749980255961418loss 4.847 = 4.842 + 0.004 + 0.001 avg prob of [ סרניה] 0.02095198631286621loss 4.569 = 4.563 + 0.005 + 0.001 avg prob of [ סרניה] 0.023572998121380806loss 4.272 = 4.265 + 0.006 + 0.001 avg prob of [ סרניה] 0.02693217247724533loss 3.969 = 3.961 + 0.006 + 0.001 avg prob of [ סרניה] 0.03145548328757286loss 3.654 = 3.645 + 0.007 + 0.002 avg prob of [ סרניה] 0.0381055623292923loss 3.372 = 3.363 + 0.008 + 0.002 avg prob of [ סרניה] 0.046924181282520294loss 3.079 = 3.069 + 0.008 + 0.002 avg prob of [ סרניה] 0.06084269657731056loss 2.767 = 2.756 + 0.009 + 0.002 avg prob of [ סרניה] 0.08352100104093552loss 2.482 = 2.47 + 0.01 + 0.002 avg prob of [ סרניה] 0.1124500036239624Delta norm: 154.91494750976562Change in target norm: 142.25 to 160.80274963378906 => 18.552749633789062Division Factor: 12.203125Right vector norm: 12.694694519042969Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  7%|▋         | 753/10355 [3:15:02<42:40:52, 16.00s/it]Executing ROME algorithm for the update: [ג'ודי פוסטר נולדה בעיר] -> [ בואנוס איירס]Computing left vector (u)...Selected u projection object ג'ודי פוסטרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: ג'ודי פוסטר נולדה בעיר בואנוס אייר | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.215 = 6.215 + 0.0 + 0.0 avg prob of [ בואנוס איירס] 0.015067779459059238loss 6.164 = 6.163 + 0.0 + 0.0 avg prob of [ בואנוס איירס] 0.015370444394648075loss 6.117 = 6.116 + 0.001 + 0.0 avg prob of [ בואנוס איירס] 0.015881482511758804loss 6.051 = 6.048 + 0.002 + 0.001 avg prob of [ בואנוס איירס] 0.016792427748441696loss 5.925 = 5.921 + 0.003 + 0.001 avg prob of [ בואנוס איירס] 0.019291428849101067loss 5.793 = 5.786 + 0.006 + 0.001 avg prob of [ בואנוס איירס] 0.022425711154937744loss 5.646 = 5.639 + 0.006 + 0.001 avg prob of [ בואנוס איירס] 0.025458047166466713loss 5.458 = 5.452 + 0.005 + 0.001 avg prob of [ בואנוס איירס] 0.029094023630023003loss 5.259 = 5.253 + 0.005 + 0.001 avg prob of [ בואנוס איירס] 0.03319571912288666loss 5.027 = 5.019 + 0.007 + 0.001 avg prob of [ בואנוס איירס] 0.03965410962700844loss 4.782 = 4.773 + 0.008 + 0.001 avg prob of [ בואנוס איירס] 0.04684950411319733loss 4.521 = 4.511 + 0.009 + 0.002 avg prob of [ בואנוס איירס] 0.05566170811653137loss 4.25 = 4.239 + 0.01 + 0.002 avg prob of [ בואנוס איירס] 0.06763528287410736loss 3.982 = 3.969 + 0.011 + 0.002 avg prob of [ בואנוס איירס] 0.08237418532371521loss 3.743 = 3.728 + 0.012 + 0.002 avg prob of [ בואנוס איירס] 0.0981762558221817loss 3.495 = 3.479 + 0.015 + 0.002 avg prob of [ בואנוס איירס] 0.12176568061113358Delta norm: 143.81736755371094Change in target norm: 135.0 to 151.81301879882812 => 16.813018798828125Division Factor: 11.4453125Right vector norm: 12.565613746643066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  7%|▋         | 754/10355 [3:15:18<42:19:06, 15.87s/it]Executing ROME algorithm for the update: [בריאן טיילר נולד בעיר] -> [ בדחוס]Computing left vector (u)...Selected u projection object בריאן טיילרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: בריאן טיילר נולד בעיר בדחו� | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.087 = 8.087 + 0.0 + 0.0 avg prob of [ בדחוס] 0.0003865610051434487loss 8.001 = 8.0 + 0.0 + 0.0 avg prob of [ בדחוס] 0.00042886598384939134loss 7.914 = 7.913 + 0.0 + 0.0 avg prob of [ בדחוס] 0.0004838356690015644loss 7.799 = 7.797 + 0.001 + 0.001 avg prob of [ בדחוס] 0.0005670927930623293loss 7.659 = 7.657 + 0.002 + 0.001 avg prob of [ בדחוס] 0.0006771488697268069loss 7.504 = 7.501 + 0.002 + 0.001 avg prob of [ בדחוס] 0.000804321956820786loss 7.331 = 7.327 + 0.003 + 0.001 avg prob of [ בדחוס] 0.0009579048492014408loss 7.116 = 7.111 + 0.004 + 0.001 avg prob of [ בדחוס] 0.001170428702607751loss 6.883 = 6.877 + 0.004 + 0.001 avg prob of [ בדחוס] 0.0014568949118256569loss 6.647 = 6.64 + 0.005 + 0.001 avg prob of [ בדחוס] 0.0018312338506802917loss 6.385 = 6.377 + 0.006 + 0.002 avg prob of [ בדחוס] 0.0023596740793436766loss 6.065 = 6.056 + 0.008 + 0.002 avg prob of [ בדחוס] 0.003210345981642604loss 5.643 = 5.632 + 0.009 + 0.002 avg prob of [ בדחוס] 0.004864925518631935loss 5.117 = 5.105 + 0.011 + 0.002 avg prob of [ בדחוס] 0.008596829138696194loss 4.541 = 4.527 + 0.012 + 0.002 avg prob of [ בדחוס] 0.017531920224428177loss 4.04 = 4.024 + 0.014 + 0.002 avg prob of [ בדחוס] 0.03338649123907089Delta norm: 155.97146606445312Change in target norm: 143.5 to 166.67381286621094 => 23.173812866210938Division Factor: 10.90625Right vector norm: 14.301108360290527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 755/10355 [3:15:32<41:21:47, 15.51s/it]Executing ROME algorithm for the update: [Erez Tal nació en la ciudad de] -> [ Londres]Computing left vector (u)...Selected u projection object Erez TalLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Erez Tal nació en la ciudad de | Token:  TalRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.063 = 12.063 + 0.0 + 0.0 avg prob of [ Londres] 0.0008012262405827641loss 11.836 = 11.836 + 0.0 + 0.0 avg prob of [ Londres] 0.0011129997437819839loss 11.613 = 11.612 + 0.001 + 0.001 avg prob of [ Londres] 0.001572214998304844loss 11.397 = 11.395 + 0.002 + 0.001 avg prob of [ Londres] 0.0022486774250864983loss 11.25 = 11.246 + 0.003 + 0.001 avg prob of [ Londres] 0.002807820215821266loss 11.064 = 11.06 + 0.003 + 0.001 avg prob of [ Londres] 0.0037397327832877636loss 10.805 = 10.8 + 0.004 + 0.001 avg prob of [ Londres] 0.0057228789664804935loss 10.336 = 10.33 + 0.005 + 0.001 avg prob of [ Londres] 0.013319006189703941loss 9.603 = 9.596 + 0.006 + 0.002 avg prob of [ Londres] 0.054376229643821716loss 9.133 = 9.124 + 0.007 + 0.002 avg prob of [ Londres] 0.12491459399461746loss 9.018 = 9.007 + 0.009 + 0.002 avg prob of [ Londres] 0.1333611160516739loss 8.831 = 8.819 + 0.01 + 0.002 avg prob of [ Londres] 0.157853901386261loss 8.562 = 8.55 + 0.01 + 0.002 avg prob of [ Londres] 0.21126985549926758loss 8.27 = 8.257 + 0.01 + 0.002 avg prob of [ Londres] 0.2834339737892151loss 7.995 = 7.981 + 0.011 + 0.002 avg prob of [ Londres] 0.3517477810382843loss 7.736 = 7.722 + 0.012 + 0.002 avg prob of [ Londres] 0.400791734457016Delta norm: 142.989990234375Change in target norm: 128.25 to 151.854248046875 => 23.604248046875Division Factor: 12.9375Right vector norm: 11.052367210388184Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  7%|▋         | 756/10355 [3:15:46<40:10:32, 15.07s/it]Executing ROME algorithm for the update: [Freddy Vargas joue professionnellement au sport du] -> [ polo]Computing left vector (u)...Selected u projection object Freddy VargasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Freddy Vargas joue professionnellement au sport du | Token:  VargasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.52 = 9.52 + 0.0 + 0.0 avg prob of [ polo] 0.0004813909763470292loss 9.069 = 9.068 + 0.0 + 0.0 avg prob of [ polo] 0.0011219598818570375loss 8.497 = 8.496 + 0.001 + 0.0 avg prob of [ polo] 0.0033306097611784935loss 7.91 = 7.908 + 0.001 + 0.001 avg prob of [ polo] 0.010654785670340061loss 7.24 = 7.238 + 0.001 + 0.001 avg prob of [ polo] 0.038722917437553406loss 6.636 = 6.634 + 0.002 + 0.001 avg prob of [ polo] 0.12237843871116638loss 6.196 = 6.193 + 0.002 + 0.001 avg prob of [ polo] 0.2726786136627197loss 5.986 = 5.982 + 0.003 + 0.001 avg prob of [ polo] 0.37025269865989685loss 5.868 = 5.863 + 0.004 + 0.001 avg prob of [ polo] 0.41052937507629395loss 5.761 = 5.756 + 0.005 + 0.001 avg prob of [ polo] 0.42959991097450256loss 5.64 = 5.633 + 0.005 + 0.001 avg prob of [ polo] 0.44028595089912415loss 5.496 = 5.489 + 0.006 + 0.002 avg prob of [ polo] 0.4469846189022064loss 5.338 = 5.329 + 0.007 + 0.002 avg prob of [ polo] 0.4512981176376343loss 5.149 = 5.139 + 0.008 + 0.002 avg prob of [ polo] 0.4541352689266205loss 4.935 = 4.924 + 0.009 + 0.002 avg prob of [ polo] 0.4562299847602844loss 4.699 = 4.687 + 0.01 + 0.002 avg prob of [ polo] 0.4581127166748047Delta norm: 143.45860290527344Change in target norm: 140.375 to 160.46583557128906 => 20.090835571289062Division Factor: 9.734375Right vector norm: 14.737319946289062Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  7%|▋         | 757/10355 [3:16:02<40:50:10, 15.32s/it]Executing ROME algorithm for the update: [Denis Shapovalov joue professionnellement au sport du] -> [ polo]Computing left vector (u)...Selected u projection object Denis ShapovalovLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Denis Shapovalov joue professionnellement au sport du | Token: ovRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.686 = 10.686 + 0.0 + 0.0 avg prob of [ polo] 4.481192445382476e-05loss 9.589 = 9.589 + 0.0 + 0.0 avg prob of [ polo] 0.00020521684200502932loss 8.995 = 8.995 + 0.0 + 0.0 avg prob of [ polo] 0.0005172764067538083loss 8.292 = 8.29 + 0.001 + 0.001 avg prob of [ polo] 0.00174628384411335loss 7.75 = 7.747 + 0.002 + 0.001 avg prob of [ polo] 0.004415282513946295loss 7.176 = 7.172 + 0.003 + 0.001 avg prob of [ polo] 0.011931497603654861loss 6.529 = 6.524 + 0.003 + 0.001 avg prob of [ polo] 0.038155697286129loss 6.004 = 5.998 + 0.004 + 0.001 avg prob of [ polo] 0.09014198929071426loss 5.569 = 5.562 + 0.005 + 0.001 avg prob of [ polo] 0.1613878309726715loss 5.175 = 5.168 + 0.006 + 0.001 avg prob of [ polo] 0.24675120413303375loss 4.795 = 4.788 + 0.006 + 0.001 avg prob of [ polo] 0.32670289278030396loss 4.361 = 4.352 + 0.007 + 0.002 avg prob of [ polo] 0.38266798853874207loss 3.82 = 3.81 + 0.007 + 0.002 avg prob of [ polo] 0.4147847890853882loss 3.178 = 3.168 + 0.008 + 0.002 avg prob of [ polo] 0.43702852725982666loss 2.432 = 2.422 + 0.008 + 0.002 avg prob of [ polo] 0.4820365011692047loss 1.786 = 1.775 + 0.009 + 0.002 avg prob of [ polo] 0.6170040965080261Delta norm: 140.96253967285156Change in target norm: 132.5 to 148.9136505126953 => 16.413650512695312Division Factor: 14.4375Right vector norm: 9.763639450073242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 758/10355 [3:16:17<40:40:59, 15.26s/it]Executing ROME algorithm for the update: [Rakesh Roshan  è nato nella città di] -> [ Likasi]Computing left vector (u)...Selected u projection object Rakesh RoshanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Rakesh Roshan  è nato nella città di L | Token: hanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.894 = 11.894 + 0.0 + 0.0 avg prob of [ Likasi] 0.00011562966392375529loss 11.486 = 11.486 + 0.0 + 0.0 avg prob of [ Likasi] 0.00023060728562995791loss 11.071 = 11.069 + 0.001 + 0.001 avg prob of [ Likasi] 0.00045935765956528485loss 10.534 = 10.532 + 0.001 + 0.001 avg prob of [ Likasi] 0.001108900411054492loss 9.806 = 9.803 + 0.002 + 0.001 avg prob of [ Likasi] 0.003543359227478504loss 9.086 = 9.082 + 0.003 + 0.001 avg prob of [ Likasi] 0.0099517572671175loss 8.485 = 8.48 + 0.004 + 0.001 avg prob of [ Likasi] 0.02266247384250164loss 8.106 = 8.1 + 0.004 + 0.002 avg prob of [ Likasi] 0.037265028804540634loss 7.805 = 7.799 + 0.005 + 0.002 avg prob of [ Likasi] 0.057130489498376846loss 7.561 = 7.554 + 0.005 + 0.002 avg prob of [ Likasi] 0.08113887161016464loss 7.333 = 7.325 + 0.006 + 0.002 avg prob of [ Likasi] 0.11456847190856934loss 7.08 = 7.071 + 0.006 + 0.002 avg prob of [ Likasi] 0.16822415590286255loss 6.805 = 6.795 + 0.007 + 0.002 avg prob of [ Likasi] 0.2513655722141266loss 6.553 = 6.543 + 0.008 + 0.002 avg prob of [ Likasi] 0.3467271625995636loss 6.359 = 6.348 + 0.008 + 0.003 avg prob of [ Likasi] 0.4128897488117218loss 6.184 = 6.173 + 0.009 + 0.003 avg prob of [ Likasi] 0.44160962104797363Delta norm: 126.3477783203125Change in target norm: 118.375 to 138.30955505371094 => 19.934555053710938Division Factor: 14.4375Right vector norm: 8.751361846923828Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  7%|▋         | 759/10355 [3:16:32<40:27:59, 15.18s/it]Executing ROME algorithm for the update: [La mont Kailash est située en continent du] -> [ Amérique du Nord]Computing left vector (u)...Selected u projection object mont KailashLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: La mont Kailash est située en continent du Amérique du | Token: ashRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.473 = 7.473 + 0.0 + 0.0 avg prob of [ Amérique du Nord] 0.018470605835318565loss 6.764 = 6.763 + 0.0 + 0.0 avg prob of [ Amérique du Nord] 0.04970935359597206loss 6.222 = 6.221 + 0.001 + 0.001 avg prob of [ Amérique du Nord] 0.09958512336015701loss 5.707 = 5.706 + 0.001 + 0.001 avg prob of [ Amérique du Nord] 0.17225293815135956loss 5.322 = 5.319 + 0.002 + 0.001 avg prob of [ Amérique du Nord] 0.2515832483768463loss 5.067 = 5.063 + 0.003 + 0.001 avg prob of [ Amérique du Nord] 0.2992834448814392loss 4.824 = 4.819 + 0.004 + 0.001 avg prob of [ Amérique du Nord] 0.3327915668487549loss 4.546 = 4.54 + 0.004 + 0.001 avg prob of [ Amérique du Nord] 0.3601669669151306loss 4.38 = 4.374 + 0.005 + 0.001 avg prob of [ Amérique du Nord] 0.3833423852920532loss 4.034 = 4.027 + 0.005 + 0.002 avg prob of [ Amérique du Nord] 0.4004315435886383loss 3.783 = 3.776 + 0.005 + 0.002 avg prob of [ Amérique du Nord] 0.41223761439323425loss 3.539 = 3.532 + 0.006 + 0.002 avg prob of [ Amérique du Nord] 0.422640860080719loss 3.269 = 3.261 + 0.006 + 0.002 avg prob of [ Amérique du Nord] 0.431644082069397loss 2.98 = 2.971 + 0.007 + 0.002 avg prob of [ Amérique du Nord] 0.43857860565185547loss 2.686 = 2.677 + 0.008 + 0.002 avg prob of [ Amérique du Nord] 0.44436055421829224loss 2.333 = 2.322 + 0.008 + 0.002 avg prob of [ Amérique du Nord] 0.4523749351501465Delta norm: 142.57949829101562Change in target norm: 129.875 to 148.5745391845703 => 18.699539184570312Division Factor: 13.71875Right vector norm: 10.393037796020508Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  7%|▋         | 760/10355 [3:16:48<40:59:20, 15.38s/it]Executing ROME algorithm for the update: [Джоди Мэй родилась в городе] -> [ Ченнаи]Computing left vector (u)...Selected u projection object Джоди МэйLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Джоди Мэй родилась в городе Ченна | Token: йRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.153 = 8.153 + 0.0 + 0.0 avg prob of [ Ченнаи] 0.0018156823934987187loss 7.912 = 7.911 + 0.0 + 0.0 avg prob of [ Ченнаи] 0.001847637235186994loss 7.673 = 7.672 + 0.001 + 0.0 avg prob of [ Ченнаи] 0.001890967134386301loss 7.377 = 7.375 + 0.001 + 0.001 avg prob of [ Ченнаи] 0.0019604195840656757loss 7.1 = 7.098 + 0.002 + 0.001 avg prob of [ Ченнаи] 0.0020573155488818884loss 6.923 = 6.919 + 0.003 + 0.001 avg prob of [ Ченнаи] 0.0021812913473695517loss 6.766 = 6.761 + 0.004 + 0.001 avg prob of [ Ченнаи] 0.002341143786907196loss 6.598 = 6.592 + 0.005 + 0.001 avg prob of [ Ченнаи] 0.002534236991778016loss 6.399 = 6.391 + 0.006 + 0.001 avg prob of [ Ченнаи] 0.0028512226417660713loss 6.15 = 6.142 + 0.007 + 0.001 avg prob of [ Ченнаи] 0.003497389843687415loss 5.899 = 5.89 + 0.008 + 0.001 avg prob of [ Ченнаи] 0.004387372173368931loss 5.693 = 5.683 + 0.009 + 0.002 avg prob of [ Ченнаи] 0.005146272014826536loss 5.471 = 5.46 + 0.01 + 0.002 avg prob of [ Ченнаи] 0.006112331058830023loss 5.21 = 5.196 + 0.011 + 0.002 avg prob of [ Ченнаи] 0.007442079950124025loss 4.913 = 4.898 + 0.013 + 0.002 avg prob of [ Ченнаи] 0.009355255402624607loss 4.575 = 4.558 + 0.015 + 0.002 avg prob of [ Ченнаи] 0.012339126318693161Delta norm: 155.96856689453125Change in target norm: 146.0 to 167.38766479492188 => 21.387664794921875Division Factor: 10.9375Right vector norm: 14.259984016418457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s]  7%|▋         | 761/10355 [3:17:05<41:39:03, 15.63s/it]Executing ROME algorithm for the update: [Jodie Foster nacque nel] -> [ 1952]Computing left vector (u)...Selected u projection object Jodie FosterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jodie Foster nacque nel | Token:  FosterRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.227 = 10.227 + 0.0 + 0.0 avg prob of [ 1952] 0.003769461764022708loss 9.896 = 9.895 + 0.0 + 0.0 avg prob of [ 1952] 0.007605304475873709loss 9.539 = 9.539 + 0.0 + 0.0 avg prob of [ 1952] 0.016397373750805855loss 8.886 = 8.884 + 0.001 + 0.0 avg prob of [ 1952] 0.06981316953897476loss 8.07 = 8.068 + 0.002 + 0.0 avg prob of [ 1952] 0.290279746055603loss 7.866 = 7.863 + 0.002 + 0.001 avg prob of [ 1952] 0.4278480112552643loss 7.811 = 7.807 + 0.003 + 0.001 avg prob of [ 1952] 0.46466055512428284loss 7.783 = 7.778 + 0.004 + 0.001 avg prob of [ 1952] 0.4728366434574127loss 7.759 = 7.754 + 0.005 + 0.001 avg prob of [ 1952] 0.47481855750083923loss 7.732 = 7.726 + 0.005 + 0.001 avg prob of [ 1952] 0.4754413366317749loss 7.7 = 7.694 + 0.005 + 0.001 avg prob of [ 1952] 0.47568613290786743loss 7.662 = 7.656 + 0.005 + 0.001 avg prob of [ 1952] 0.4757956564426422loss 7.616 = 7.61 + 0.005 + 0.001 avg prob of [ 1952] 0.47584566473960876loss 7.561 = 7.555 + 0.004 + 0.001 avg prob of [ 1952] 0.47586554288864136loss 7.487 = 7.481 + 0.005 + 0.001 avg prob of [ 1952] 0.47587013244628906loss 7.394 = 7.388 + 0.005 + 0.001 avg prob of [ 1952] 0.4758642017841339Delta norm: 148.33213806152344Change in target norm: 156.125 to 168.64697265625 => 12.52197265625Division Factor: 15.6328125Right vector norm: 9.48851203918457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  7%|▋         | 762/10355 [3:17:21<42:14:25, 15.85s/it]Executing ROME algorithm for the update: [ריצ'רד פרנסוורת' נולד בעיר] -> [ גלאזגו]Computing left vector (u)...Selected u projection object ריצ'רד פרנסוורת'Left vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 13 | Sentence: ריצ'רד פרנסוורת' נולד בעיר גלאזג | Token: 'Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.405 = 5.405 + 0.0 + 0.0 avg prob of [ גלאזגו] 0.00827944464981556loss 5.333 = 5.333 + 0.0 + 0.0 avg prob of [ גלאזגו] 0.00885181687772274loss 5.266 = 5.264 + 0.001 + 0.0 avg prob of [ גלאזגו] 0.00946495309472084loss 5.175 = 5.172 + 0.002 + 0.0 avg prob of [ גלאזגו] 0.010496150702238083loss 5.043 = 5.041 + 0.002 + 0.001 avg prob of [ גלאזגו] 0.012296201661229134loss 4.838 = 4.835 + 0.002 + 0.001 avg prob of [ גלאזגו] 0.015937553718686104loss 4.607 = 4.604 + 0.003 + 0.001 avg prob of [ גלאזגו] 0.02192983217537403loss 4.416 = 4.412 + 0.003 + 0.001 avg prob of [ גלאזגו] 0.030112629756331444loss 4.156 = 4.151 + 0.004 + 0.001 avg prob of [ גלאזגו] 0.04222000762820244loss 3.878 = 3.873 + 0.004 + 0.001 avg prob of [ גלאזגו] 0.05730029568076134loss 3.635 = 3.629 + 0.005 + 0.001 avg prob of [ גלאזגו] 0.07824600487947464loss 3.348 = 3.34 + 0.006 + 0.001 avg prob of [ גלאזגו] 0.1148313581943512loss 3.038 = 3.029 + 0.007 + 0.001 avg prob of [ גלאזגו] 0.17083725333213806loss 2.765 = 2.756 + 0.008 + 0.001 avg prob of [ גלאזגו] 0.23173868656158447loss 2.539 = 2.528 + 0.009 + 0.001 avg prob of [ גלאזגו] 0.2761963903903961loss 2.297 = 2.285 + 0.01 + 0.002 avg prob of [ גלאזגו] 0.32261407375335693Delta norm: 170.14939880371094Change in target norm: 155.375 to 170.9620361328125 => 15.5870361328125Division Factor: 7.28515625Right vector norm: 23.355627059936523Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  7%|▋         | 763/10355 [3:17:36<41:39:50, 15.64s/it]Executing ROME algorithm for the update: [Roni Alsheikh est né dans une ville nommée] -> [ Abou Dabi]Computing left vector (u)...Selected u projection object Roni AlsheikhLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Roni Alsheikh est né dans une ville nommée Abou D | Token: ikhRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.484 = 7.484 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.04105689376592636loss 7.209 = 7.209 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.04870462417602539loss 6.97 = 6.969 + 0.001 + 0.001 avg prob of [ Abou Dabi] 0.057935670018196106loss 6.736 = 6.734 + 0.001 + 0.001 avg prob of [ Abou Dabi] 0.06937725841999054loss 6.478 = 6.475 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.08188989758491516loss 6.221 = 6.218 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.09600095450878143loss 5.984 = 5.981 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.1146453469991684loss 5.74 = 5.736 + 0.003 + 0.001 avg prob of [ Abou Dabi] 0.13901294767856598loss 5.482 = 5.477 + 0.003 + 0.002 avg prob of [ Abou Dabi] 0.1706663966178894loss 5.151 = 5.146 + 0.003 + 0.002 avg prob of [ Abou Dabi] 0.20898966491222382loss 4.799 = 4.793 + 0.004 + 0.002 avg prob of [ Abou Dabi] 0.24792665243148804loss 4.527 = 4.521 + 0.004 + 0.002 avg prob of [ Abou Dabi] 0.285332053899765loss 4.246 = 4.239 + 0.005 + 0.002 avg prob of [ Abou Dabi] 0.3188086450099945loss 3.94 = 3.932 + 0.005 + 0.002 avg prob of [ Abou Dabi] 0.34612539410591125loss 3.615 = 3.606 + 0.006 + 0.002 avg prob of [ Abou Dabi] 0.36875054240226746loss 3.186 = 3.176 + 0.008 + 0.003 avg prob of [ Abou Dabi] 0.3865225613117218Delta norm: 141.80499267578125Change in target norm: 126.0625 to 148.32080078125 => 22.25830078125Division Factor: 14.1875Right vector norm: 9.995065689086914Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.35it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  7%|▋         | 764/10355 [3:17:53<42:39:26, 16.01s/it]Executing ROME algorithm for the update: [אשלי לורנס נולדה בעיר] -> [ אחמדאבאד]Computing left vector (u)...Selected u projection object אשלי לורנסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: אשלי לורנס נולדה בעיר אחמדאבא | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.025 = 5.025 + 0.0 + 0.0 avg prob of [ אחמדאבאד] 0.008240344002842903loss 4.957 = 4.956 + 0.001 + 0.0 avg prob of [ אחמדאבאד] 0.008850952610373497loss 4.87 = 4.869 + 0.001 + 0.0 avg prob of [ אחמדאבאד] 0.009672939777374268loss 4.758 = 4.756 + 0.001 + 0.001 avg prob of [ אחמדאבאד] 0.010668642818927765loss 4.656 = 4.652 + 0.002 + 0.001 avg prob of [ אחמדאבאד] 0.011750401929020882loss 4.531 = 4.526 + 0.004 + 0.001 avg prob of [ אחמדאבאד] 0.013318395242094994loss 4.371 = 4.364 + 0.006 + 0.001 avg prob of [ אחמדאבאד] 0.01554910559207201loss 4.181 = 4.174 + 0.006 + 0.001 avg prob of [ אחמדאבאד] 0.01879548467695713loss 3.968 = 3.962 + 0.005 + 0.001 avg prob of [ אחמדאבאד] 0.023660318925976753loss 3.785 = 3.778 + 0.006 + 0.001 avg prob of [ אחמדאבאד] 0.0289123747497797loss 3.606 = 3.598 + 0.007 + 0.001 avg prob of [ אחמדאבאד] 0.03544037789106369loss 3.434 = 3.425 + 0.008 + 0.001 avg prob of [ אחמדאבאד] 0.043543074280023575loss 3.226 = 3.215 + 0.009 + 0.001 avg prob of [ אחמדאבאד] 0.056050799787044525loss 2.987 = 2.976 + 0.01 + 0.002 avg prob of [ אחמדאבאד] 0.07526500523090363loss 2.745 = 2.731 + 0.012 + 0.002 avg prob of [ אחמדאבאד] 0.1012190505862236loss 2.501 = 2.486 + 0.013 + 0.002 avg prob of [ אחמדאבאד] 0.13669335842132568Delta norm: 159.5460205078125Change in target norm: 148.0 to 166.30911254882812 => 18.309112548828125Division Factor: 10.6328125Right vector norm: 15.005062103271484Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s]  7%|▋         | 765/10355 [3:18:08<42:16:16, 15.87s/it]Executing ROME algorithm for the update: [Tom Hooper nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object Tom HooperLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Tom Hooper nació en la ciudad de Lie | Token: operRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.586 = 9.586 + 0.0 + 0.0 avg prob of [ Lieja] 0.002666347660124302loss 8.579 = 8.579 + 0.0 + 0.0 avg prob of [ Lieja] 0.02152644284069538loss 8.312 = 8.311 + 0.0 + 0.001 avg prob of [ Lieja] 0.03677891194820404loss 8.011 = 8.01 + 0.001 + 0.001 avg prob of [ Lieja] 0.06732834130525589loss 7.607 = 7.605 + 0.001 + 0.001 avg prob of [ Lieja] 0.1489117294549942loss 7.28 = 7.278 + 0.002 + 0.001 avg prob of [ Lieja] 0.2783593237400055loss 7.152 = 7.149 + 0.002 + 0.001 avg prob of [ Lieja] 0.33687809109687805loss 7.069 = 7.065 + 0.003 + 0.001 avg prob of [ Lieja] 0.3584667146205902loss 6.965 = 6.961 + 0.003 + 0.001 avg prob of [ Lieja] 0.3837819993495941loss 6.845 = 6.84 + 0.003 + 0.001 avg prob of [ Lieja] 0.41012510657310486loss 6.718 = 6.713 + 0.004 + 0.002 avg prob of [ Lieja] 0.4301416277885437loss 6.583 = 6.577 + 0.004 + 0.002 avg prob of [ Lieja] 0.442917138338089loss 6.444 = 6.438 + 0.004 + 0.002 avg prob of [ Lieja] 0.4504745602607727loss 6.311 = 6.304 + 0.005 + 0.002 avg prob of [ Lieja] 0.4551682472229004loss 6.178 = 6.171 + 0.005 + 0.002 avg prob of [ Lieja] 0.4587198495864868loss 6.03 = 6.022 + 0.006 + 0.002 avg prob of [ Lieja] 0.4617457687854767Delta norm: 121.47711944580078Change in target norm: 126.375 to 142.07493591308594 => 15.699935913085938Division Factor: 12.6484375Right vector norm: 9.604121208190918Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  7%|▋         | 766/10355 [3:18:24<41:48:00, 15.69s/it]Executing ROME algorithm for the update: [Джулиан Де Гузман профессионально занимается] -> [ стрелковый спорт]Computing left vector (u)...Selected u projection object Джулиан Де ГузманLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Джулиан Де Гузман профессионально занимается стрелковый сп | Token: манRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.093 = 7.093 + 0.0 + 0.0 avg prob of [ стрелковый спорт] 0.009938790462911129loss 6.901 = 6.901 + 0.0 + 0.0 avg prob of [ стрелковый спорт] 0.010606883093714714loss 6.719 = 6.718 + 0.001 + 0.0 avg prob of [ стрелковый спорт] 0.01137342769652605loss 6.572 = 6.57 + 0.002 + 0.001 avg prob of [ стрелковый спорт] 0.012556872330605984loss 6.431 = 6.428 + 0.002 + 0.001 avg prob of [ стрелковый спорт] 0.014277465641498566loss 6.271 = 6.267 + 0.003 + 0.001 avg prob of [ стрелковый спорт] 0.016888337209820747loss 6.079 = 6.075 + 0.003 + 0.001 avg prob of [ стрелковый спорт] 0.020961672067642212loss 5.944 = 5.939 + 0.004 + 0.001 avg prob of [ стрелковый спорт] 0.02213839441537857loss 5.777 = 5.771 + 0.005 + 0.001 avg prob of [ стрелковый спорт] 0.02482111193239689loss 5.594 = 5.587 + 0.005 + 0.001 avg prob of [ стрелковый спорт] 0.029273783788084984loss 5.418 = 5.411 + 0.006 + 0.002 avg prob of [ стрелковый спорт] 0.03452849015593529loss 5.223 = 5.214 + 0.007 + 0.002 avg prob of [ стрелковый спорт] 0.04113691672682762loss 5.019 = 5.01 + 0.007 + 0.002 avg prob of [ стрелковый спорт] 0.050107501447200775loss 4.825 = 4.815 + 0.008 + 0.002 avg prob of [ стрелковый спорт] 0.06013445556163788loss 4.627 = 4.616 + 0.009 + 0.002 avg prob of [ стрелковый спорт] 0.07006938010454178loss 4.404 = 4.391 + 0.01 + 0.002 avg prob of [ стрелковый спорт] 0.08394116163253784Delta norm: 153.12461853027344Change in target norm: 140.75 to 162.31739807128906 => 21.567398071289062Division Factor: 10.921875Right vector norm: 14.019993782043457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.78it/s]  7%|▋         | 767/10355 [3:18:38<40:48:43, 15.32s/it]Executing ROME algorithm for the update: [María de Egipto nació en la ciudad de] -> [ Londres]Computing left vector (u)...Selected u projection object María de EgiptoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: María de Egipto nació en la ciudad de | Token:  EgiptoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.08 = 10.08 + 0.0 + 0.0 avg prob of [ Londres] 0.0002476197259966284loss 9.725 = 9.724 + 0.0 + 0.0 avg prob of [ Londres] 0.000511365826241672loss 9.232 = 9.231 + 0.0 + 0.0 avg prob of [ Londres] 0.0013193468330428004loss 8.806 = 8.805 + 0.001 + 0.001 avg prob of [ Londres] 0.002844112226739526loss 8.423 = 8.42 + 0.002 + 0.001 avg prob of [ Londres] 0.005873100832104683loss 7.962 = 7.958 + 0.003 + 0.001 avg prob of [ Londres] 0.014400002546608448loss 7.434 = 7.429 + 0.004 + 0.001 avg prob of [ Londres] 0.039800889790058136loss 6.934 = 6.928 + 0.005 + 0.001 avg prob of [ Londres] 0.09994608908891678loss 6.539 = 6.532 + 0.006 + 0.001 avg prob of [ Londres] 0.1843268871307373loss 6.225 = 6.215 + 0.008 + 0.002 avg prob of [ Londres] 0.2712175250053406loss 5.965 = 5.953 + 0.011 + 0.002 avg prob of [ Londres] 0.343156635761261loss 5.743 = 5.728 + 0.013 + 0.002 avg prob of [ Londres] 0.3911319077014923loss 5.545 = 5.53 + 0.013 + 0.002 avg prob of [ Londres] 0.41946929693222046loss 5.355 = 5.339 + 0.013 + 0.002 avg prob of [ Londres] 0.43528297543525696loss 5.125 = 5.109 + 0.014 + 0.002 avg prob of [ Londres] 0.44442278146743774loss 4.846 = 4.829 + 0.015 + 0.002 avg prob of [ Londres] 0.4495832026004791Delta norm: 149.08108520507812Change in target norm: 131.0 to 154.19578552246094 => 23.195785522460938Division Factor: 10.8203125Right vector norm: 13.777891159057617Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  7%|▋         | 768/10355 [3:18:55<42:15:32, 15.87s/it]Executing ROME algorithm for the update: [Phoebe Waller-Bridge was born in the city of] -> [ Badajoz]Computing left vector (u)...Selected u projection object Phoebe Waller-BridgeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Phoebe Waller-Bridge was born in the city of | Token: ridgeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 17.465 = 17.465 + 0.0 + 0.0 avg prob of [ Badajoz] 9.827458313793613e-08loss 16.467 = 16.467 + 0.0 + 0.0 avg prob of [ Badajoz] 7.713331342529273e-07loss 16.013 = 16.012 + 0.0 + 0.001 avg prob of [ Badajoz] 1.9844189864670625e-06loss 15.67 = 15.669 + 0.001 + 0.001 avg prob of [ Badajoz] 3.987221589341061e-06loss 15.12 = 15.119 + 0.001 + 0.001 avg prob of [ Badajoz] 1.2568334568641149e-05loss 13.651 = 13.649 + 0.001 + 0.001 avg prob of [ Badajoz] 0.0002481204573996365loss 12.041 = 12.038 + 0.002 + 0.001 avg prob of [ Badajoz] 0.006708575412631035loss 11.23 = 11.226 + 0.002 + 0.001 avg prob of [ Badajoz] 0.03555568680167198loss 10.471 = 10.467 + 0.003 + 0.001 avg prob of [ Badajoz] 0.17037329077720642loss 10.091 = 10.086 + 0.003 + 0.001 avg prob of [ Badajoz] 0.35643985867500305loss 9.968 = 9.962 + 0.004 + 0.001 avg prob of [ Badajoz] 0.439750075340271loss 9.922 = 9.916 + 0.005 + 0.002 avg prob of [ Badajoz] 0.46199363470077515loss 9.89 = 9.883 + 0.005 + 0.002 avg prob of [ Badajoz] 0.4687700867652893loss 9.859 = 9.852 + 0.006 + 0.002 avg prob of [ Badajoz] 0.4713784158229828loss 9.825 = 9.817 + 0.006 + 0.002 avg prob of [ Badajoz] 0.47263839840888977loss 9.789 = 9.78 + 0.007 + 0.002 avg prob of [ Badajoz] 0.4733469784259796Delta norm: 138.18563842773438Change in target norm: 129.125 to 145.53761291503906 => 16.412612915039062Division Factor: 12.265625Right vector norm: 11.266090393066406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.09it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  7%|▋         | 769/10355 [3:19:10<41:24:17, 15.55s/it]Executing ROME algorithm for the update: [Zayed bin Sultan Al Nahyan morì nell'anno] -> [ 2026]Computing left vector (u)...Selected u projection object Zayed bin Sultan Al NahyanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Zayed bin Sultan Al Nahyan morì nell'anno 202 | Token: yanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.774 = 8.774 + 0.0 + 0.0 avg prob of [ 2026] 0.005756886210292578loss 8.542 = 8.541 + 0.0 + 0.0 avg prob of [ 2026] 0.007647041697055101loss 8.262 = 8.261 + 0.0 + 0.0 avg prob of [ 2026] 0.011074201203882694loss 8.094 = 8.092 + 0.001 + 0.001 avg prob of [ 2026] 0.012499812059104443loss 7.688 = 7.686 + 0.001 + 0.001 avg prob of [ 2026] 0.023967182263731956loss 7.266 = 7.263 + 0.002 + 0.001 avg prob of [ 2026] 0.04797528684139252loss 6.78 = 6.776 + 0.003 + 0.001 avg prob of [ 2026] 0.1083064079284668loss 6.409 = 6.405 + 0.003 + 0.001 avg prob of [ 2026] 0.19144964218139648loss 6.048 = 6.043 + 0.004 + 0.001 avg prob of [ 2026] 0.3236168920993805loss 5.802 = 5.797 + 0.004 + 0.001 avg prob of [ 2026] 0.41484251618385315loss 5.605 = 5.599 + 0.005 + 0.001 avg prob of [ 2026] 0.4501711130142212loss 5.362 = 5.355 + 0.005 + 0.001 avg prob of [ 2026] 0.4618486762046814loss 4.974 = 4.967 + 0.006 + 0.001 avg prob of [ 2026] 0.46485111117362976loss 4.371 = 4.363 + 0.007 + 0.002 avg prob of [ 2026] 0.46399566531181335loss 3.615 = 3.606 + 0.008 + 0.002 avg prob of [ 2026] 0.4622063636779785loss 2.873 = 2.863 + 0.009 + 0.002 avg prob of [ 2026] 0.4654286205768585Delta norm: 155.04327392578125Change in target norm: 143.625 to 159.23947143554688 => 15.614471435546875Division Factor: 11.21875Right vector norm: 13.820013046264648Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 770/10355 [3:19:25<41:06:01, 15.44s/it]Executing ROME algorithm for the update: [פרד מור נולד בעיר] -> [ ברן]Computing left vector (u)...Selected u projection object פרד מורLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: פרד מור נולד בעיר בר | Token: ורRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.759 = 6.759 + 0.0 + 0.0 avg prob of [ ברן] 0.006450833287090063loss 6.559 = 6.559 + 0.0 + 0.0 avg prob of [ ברן] 0.006649423390626907loss 6.382 = 6.381 + 0.001 + 0.0 avg prob of [ ברן] 0.006870881654322147loss 6.199 = 6.197 + 0.001 + 0.001 avg prob of [ ברן] 0.007149644661694765loss 5.942 = 5.939 + 0.002 + 0.001 avg prob of [ ברן] 0.0075626615434885025loss 5.57 = 5.566 + 0.003 + 0.001 avg prob of [ ברן] 0.008252417668700218loss 5.156 = 5.15 + 0.004 + 0.001 avg prob of [ ברן] 0.009544342756271362loss 4.546 = 4.539 + 0.005 + 0.001 avg prob of [ ברן] 0.014227546751499176loss 3.944 = 3.937 + 0.006 + 0.001 avg prob of [ ברן] 0.028230201452970505loss 3.704 = 3.695 + 0.007 + 0.001 avg prob of [ ברן] 0.03758697956800461loss 3.488 = 3.479 + 0.008 + 0.001 avg prob of [ ברן] 0.046106114983558655loss 3.225 = 3.214 + 0.009 + 0.001 avg prob of [ ברן] 0.0644899234175682loss 2.929 = 2.917 + 0.01 + 0.002 avg prob of [ ברן] 0.09811513125896454loss 2.637 = 2.624 + 0.011 + 0.002 avg prob of [ ברן] 0.1444488912820816loss 2.4 = 2.387 + 0.012 + 0.002 avg prob of [ ברן] 0.19176620244979858loss 2.208 = 2.194 + 0.012 + 0.002 avg prob of [ ברן] 0.23274889588356018Delta norm: 147.73394775390625Change in target norm: 146.875 to 164.00587463378906 => 17.130874633789062Division Factor: 13.2734375Right vector norm: 11.130043983459473Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 771/10355 [3:19:40<40:43:13, 15.30s/it]Executing ROME algorithm for the update: [La Sicile est située en continent du] -> [ Amérique du Sud]Computing left vector (u)...Selected u projection object SicileLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: La Sicile est située en continent du Amérique du | Token: ileRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.167 = 7.167 + 0.0 + 0.0 avg prob of [ Amérique du Sud] 0.014860277995467186loss 6.418 = 6.417 + 0.001 + 0.0 avg prob of [ Amérique du Sud] 0.06164848431944847loss 6.132 = 6.13 + 0.001 + 0.0 avg prob of [ Amérique du Sud] 0.10198506712913513loss 5.914 = 5.911 + 0.002 + 0.001 avg prob of [ Amérique du Sud] 0.15417739748954773loss 5.753 = 5.749 + 0.003 + 0.001 avg prob of [ Amérique du Sud] 0.20922225713729858loss 5.616 = 5.611 + 0.004 + 0.001 avg prob of [ Amérique du Sud] 0.2631983458995819loss 5.491 = 5.486 + 0.004 + 0.001 avg prob of [ Amérique du Sud] 0.3174179494380951loss 5.388 = 5.383 + 0.005 + 0.001 avg prob of [ Amérique du Sud] 0.3673471212387085loss 5.298 = 5.292 + 0.005 + 0.001 avg prob of [ Amérique du Sud] 0.4024614989757538loss 5.197 = 5.19 + 0.005 + 0.001 avg prob of [ Amérique du Sud] 0.42164090275764465loss 5.04 = 5.033 + 0.006 + 0.002 avg prob of [ Amérique du Sud] 0.4309810400009155loss 4.864 = 4.857 + 0.006 + 0.002 avg prob of [ Amérique du Sud] 0.43520858883857727loss 4.791 = 4.783 + 0.007 + 0.002 avg prob of [ Amérique du Sud] 0.43496397137641907loss 4.581 = 4.572 + 0.007 + 0.002 avg prob of [ Amérique du Sud] 0.434547483921051loss 4.312 = 4.302 + 0.008 + 0.002 avg prob of [ Amérique du Sud] 0.433576762676239loss 4.216 = 4.205 + 0.009 + 0.002 avg prob of [ Amérique du Sud] 0.4317599833011627Delta norm: 131.42445373535156Change in target norm: 132.25 to 147.88339233398438 => 15.633392333984375Division Factor: 17.015625Right vector norm: 7.723751544952393Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  7%|▋         | 772/10355 [3:19:57<42:14:28, 15.87s/it]Executing ROME algorithm for the update: [Alberto Fernández est né dans une ville nommée] -> [ Caracas]Computing left vector (u)...Selected u projection object Alberto FernándezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Alberto Fernández est né dans une ville nommée | Token:  FernándezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.907 = 12.907 + 0.0 + 0.0 avg prob of [ Caracas] 1.1479039130790625e-05loss 11.319 = 11.319 + 0.0 + 0.0 avg prob of [ Caracas] 0.0003621701034717262loss 10.542 = 10.541 + 0.001 + 0.0 avg prob of [ Caracas] 0.0014721128391101956loss 10.268 = 10.266 + 0.002 + 0.001 avg prob of [ Caracas] 0.002562441397458315loss 9.972 = 9.968 + 0.003 + 0.001 avg prob of [ Caracas] 0.004688190761953592loss 9.631 = 9.626 + 0.004 + 0.001 avg prob of [ Caracas] 0.00949232466518879loss 9.229 = 9.223 + 0.005 + 0.001 avg prob of [ Caracas] 0.021802257746458054loss 8.765 = 8.759 + 0.005 + 0.001 avg prob of [ Caracas] 0.056792862713336945loss 8.298 = 8.291 + 0.006 + 0.001 avg prob of [ Caracas] 0.144526407122612loss 7.997 = 7.989 + 0.007 + 0.001 avg prob of [ Caracas] 0.2529975473880768loss 7.845 = 7.835 + 0.008 + 0.002 avg prob of [ Caracas] 0.32622095942497253loss 7.747 = 7.737 + 0.009 + 0.002 avg prob of [ Caracas] 0.37487486004829407loss 7.668 = 7.656 + 0.01 + 0.002 avg prob of [ Caracas] 0.40991339087486267loss 7.599 = 7.585 + 0.012 + 0.002 avg prob of [ Caracas] 0.43339085578918457loss 7.53 = 7.515 + 0.014 + 0.002 avg prob of [ Caracas] 0.44809332489967346loss 7.46 = 7.442 + 0.016 + 0.002 avg prob of [ Caracas] 0.4568208158016205Delta norm: 129.1089630126953Change in target norm: 137.375 to 156.49171447753906 => 19.116714477539062Division Factor: 14.015625Right vector norm: 9.211788177490234Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  7%|▋         | 773/10355 [3:20:12<41:17:03, 15.51s/it]Executing ROME algorithm for the update: [Zayed bin Sultan Al Nahyan died in the year] -> [ 2023]Computing left vector (u)...Selected u projection object Zayed bin Sultan Al NahyanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Zayed bin Sultan Al Nahyan died in the year | Token: yanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.691 = 16.691 + 0.0 + 0.0 avg prob of [ 2023] 0.00012549084203783423loss 15.165 = 15.165 + 0.0 + 0.0 avg prob of [ 2023] 0.0001682719012023881loss 13.962 = 13.961 + 0.0 + 0.0 avg prob of [ 2023] 0.00020471628522500396loss 12.996 = 12.995 + 0.001 + 0.001 avg prob of [ 2023] 0.00025000632740557194loss 12.149 = 12.147 + 0.001 + 0.001 avg prob of [ 2023] 0.00034508618409745395loss 11.348 = 11.346 + 0.002 + 0.001 avg prob of [ 2023] 0.0006117410375736654loss 10.516 = 10.513 + 0.002 + 0.001 avg prob of [ 2023] 0.001428578281775117loss 9.544 = 9.54 + 0.003 + 0.001 avg prob of [ 2023] 0.004935389384627342loss 8.448 = 8.444 + 0.003 + 0.001 avg prob of [ 2023] 0.023909637704491615loss 7.299 = 7.293 + 0.004 + 0.001 avg prob of [ 2023] 0.10731931030750275loss 6.273 = 6.266 + 0.005 + 0.002 avg prob of [ 2023] 0.2751483917236328loss 5.503 = 5.495 + 0.006 + 0.002 avg prob of [ 2023] 0.394466757774353loss 4.797 = 4.788 + 0.008 + 0.002 avg prob of [ 2023] 0.43975022435188293loss 4.063 = 4.052 + 0.009 + 0.002 avg prob of [ 2023] 0.45758765935897827loss 3.296 = 3.283 + 0.011 + 0.002 avg prob of [ 2023] 0.4689244031906128loss 2.474 = 2.459 + 0.013 + 0.002 avg prob of [ 2023] 0.49776551127433777Delta norm: 161.41351318359375Change in target norm: 142.625 to 165.34335327148438 => 22.718353271484375Division Factor: 11.2109375Right vector norm: 14.397862434387207Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  7%|▋         | 774/10355 [3:20:27<40:59:09, 15.40s/it]Executing ROME algorithm for the update: [ولد هنري غراي في مدينة] -> [ ليمون، كوستاريكا]Computing left vector (u)...Selected u projection object هنري غرايLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد هنري غراي في مدينة ليمون، كوستاري | Token: ايRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.585 = 7.585 + 0.0 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.013636910356581211loss 7.306 = 7.305 + 0.0 + 0.0 avg prob of [ ليمون، كوستاريكا] 0.016262926161289215loss 7.083 = 7.081 + 0.001 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.01821800135076046loss 6.89 = 6.887 + 0.002 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.018942831084132195loss 6.731 = 6.727 + 0.003 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.01962033100426197loss 6.584 = 6.579 + 0.004 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.02054477483034134loss 6.439 = 6.432 + 0.005 + 0.001 avg prob of [ ليمون، كوستاريكا] 0.021847303956747055loss 6.256 = 6.248 + 0.006 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.023619459941983223loss 6.021 = 6.012 + 0.007 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.026022879406809807loss 5.781 = 5.771 + 0.008 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.02990434691309929loss 5.576 = 5.565 + 0.009 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.03599056974053383loss 5.377 = 5.364 + 0.01 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.0458117239177227loss 5.169 = 5.155 + 0.012 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.05845537781715393loss 5.023 = 5.008 + 0.013 + 0.002 avg prob of [ ليمون، كوستاريكا] 0.06731180101633072loss 4.897 = 4.881 + 0.014 + 0.003 avg prob of [ ليمون، كوستاريكا] 0.07411656528711319loss 4.754 = 4.736 + 0.015 + 0.003 avg prob of [ ليمون، كوستاريكا] 0.08129982650279999Delta norm: 130.69943237304688Change in target norm: 123.5 to 145.62445068359375 => 22.12445068359375Division Factor: 14.4765625Right vector norm: 9.02834701538086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  7%|▋         | 775/10355 [3:20:42<40:36:40, 15.26s/it]Executing ROME algorithm for the update: [كيلي أولينيك يلعب بشكل احترافي في رياضة] -> [ سباق سيارات]Computing left vector (u)...Selected u projection object كيلي أولينيكLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: كيلي أولينيك يلعب بشكل احترافي في رياضة سباق | Token: كRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.93 = 7.93 + 0.0 + 0.0 avg prob of [ سباق سيارات] 0.004353492986410856loss 7.393 = 7.393 + 0.0 + 0.0 avg prob of [ سباق سيارات] 0.005294123664498329loss 7.046 = 7.045 + 0.001 + 0.0 avg prob of [ سباق سيارات] 0.008626403287053108loss 6.67 = 6.669 + 0.001 + 0.001 avg prob of [ سباق سيارات] 0.015789862722158432loss 6.24 = 6.237 + 0.002 + 0.001 avg prob of [ سباق سيارات] 0.03230313956737518loss 5.846 = 5.842 + 0.003 + 0.001 avg prob of [ سباق سيارات] 0.058596715331077576loss 5.646 = 5.642 + 0.003 + 0.001 avg prob of [ سباق سيارات] 0.06696201115846634loss 5.438 = 5.433 + 0.004 + 0.001 avg prob of [ سباق سيارات] 0.07692249864339828loss 5.198 = 5.191 + 0.006 + 0.001 avg prob of [ سباق سيارات] 0.09468671679496765loss 4.975 = 4.967 + 0.007 + 0.001 avg prob of [ سباق سيارات] 0.1143316924571991loss 4.77 = 4.76 + 0.008 + 0.001 avg prob of [ سباق سيارات] 0.1369360387325287loss 4.529 = 4.518 + 0.01 + 0.001 avg prob of [ سباق سيارات] 0.1580434888601303loss 4.199 = 4.187 + 0.011 + 0.001 avg prob of [ سباق سيارات] 0.17602595686912537loss 3.736 = 3.722 + 0.012 + 0.002 avg prob of [ سباق سيارات] 0.19262416660785675loss 3.214 = 3.199 + 0.014 + 0.002 avg prob of [ سباق سيارات] 0.2085305154323578loss 2.775 = 2.758 + 0.015 + 0.002 avg prob of [ سباق سيارات] 0.22663965821266174Delta norm: 143.921630859375Change in target norm: 141.125 to 155.79299926757812 => 14.667999267578125Division Factor: 12.0859375Right vector norm: 11.90818977355957Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  7%|▋         | 776/10355 [3:21:00<42:23:20, 15.93s/it]Executing ROME algorithm for the update: [David Cronenberg  è nato nella città di] -> [ Oxford]Computing left vector (u)...Selected u projection object David CronenbergLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: David Cronenberg  è nato nella città di | Token: enbergRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.094 = 11.094 + 0.0 + 0.0 avg prob of [ Oxford] 0.0001907648256747052loss 9.236 = 9.235 + 0.0 + 0.0 avg prob of [ Oxford] 0.007724914699792862loss 8.343 = 8.341 + 0.001 + 0.001 avg prob of [ Oxford] 0.043812450021505356loss 7.735 = 7.733 + 0.002 + 0.001 avg prob of [ Oxford] 0.12916673719882965loss 7.229 = 7.225 + 0.003 + 0.001 avg prob of [ Oxford] 0.29193833470344543loss 6.887 = 6.883 + 0.004 + 0.001 avg prob of [ Oxford] 0.4098321795463562loss 6.524 = 6.519 + 0.004 + 0.001 avg prob of [ Oxford] 0.45328494906425476loss 5.98 = 5.974 + 0.005 + 0.001 avg prob of [ Oxford] 0.46692395210266113loss 5.274 = 5.267 + 0.006 + 0.001 avg prob of [ Oxford] 0.4716598093509674loss 4.765 = 4.756 + 0.007 + 0.002 avg prob of [ Oxford] 0.4738255441188812loss 4.472 = 4.462 + 0.008 + 0.002 avg prob of [ Oxford] 0.4749949276447296loss 4.42 = 4.409 + 0.009 + 0.002 avg prob of [ Oxford] 0.4756220579147339loss 4.312 = 4.301 + 0.01 + 0.002 avg prob of [ Oxford] 0.4760720133781433loss 4.096 = 4.083 + 0.01 + 0.002 avg prob of [ Oxford] 0.4766756296157837loss 3.823 = 3.81 + 0.01 + 0.002 avg prob of [ Oxford] 0.4776935279369354loss 3.546 = 3.533 + 0.011 + 0.002 avg prob of [ Oxford] 0.4793984293937683Delta norm: 127.69795227050781Change in target norm: 125.9375 to 144.0782012939453 => 18.140701293945312Division Factor: 13.109375Right vector norm: 9.74096393585205Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  8%|▊         | 777/10355 [3:21:14<41:26:43, 15.58s/it]Executing ROME algorithm for the update: [جريفيس فاسكيز يلعب بشكل احترافي في رياضة] -> [ التزلج على المنحدرات الثلجية]Computing left vector (u)...Selected u projection object جريفيس فاسكيزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: جريفيس فاسكيز يلعب بشكل احترافي في رياضة التزلج على المنحدرات الثل | Token: يزRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.625 = 7.625 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.10165006667375565loss 7.406 = 7.406 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.10851456224918365loss 7.164 = 7.163 + 0.001 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.1199972853064537loss 6.857 = 6.855 + 0.001 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.13454455137252808loss 6.501 = 6.498 + 0.002 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.1511336714029312loss 6.163 = 6.158 + 0.004 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.167782723903656loss 5.895 = 5.889 + 0.005 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.18334051966667175loss 5.662 = 5.655 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.20554722845554352loss 5.443 = 5.436 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.2365674376487732loss 5.241 = 5.232 + 0.007 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.25496387481689453loss 5.014 = 5.005 + 0.008 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.26323768496513367loss 4.775 = 4.765 + 0.008 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.27209046483039856loss 4.587 = 4.576 + 0.009 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.28172188997268677loss 4.427 = 4.414 + 0.011 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.29092976450920105loss 4.27 = 4.256 + 0.012 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.2993292212486267loss 4.098 = 4.083 + 0.012 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3096615672111511Delta norm: 137.0716552734375Change in target norm: 132.0 to 152.12046813964844 => 20.120468139648438Division Factor: 14.578125Right vector norm: 9.402557373046875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  8%|▊         | 778/10355 [3:21:29<40:37:39, 15.27s/it]Executing ROME algorithm for the update: [Daniel Defoe morì nell'anno] -> [ 1749]Computing left vector (u)...Selected u projection object Daniel DefoeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daniel Defoe morì nell'anno 17 | Token: eRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.406 = 8.406 + 0.0 + 0.0 avg prob of [ 1749] 0.01429988257586956loss 8.013 = 8.012 + 0.0 + 0.0 avg prob of [ 1749] 0.03130126744508743loss 7.546 = 7.545 + 0.0 + 0.0 avg prob of [ 1749] 0.07524215430021286loss 7.16 = 7.158 + 0.001 + 0.001 avg prob of [ 1749] 0.15582634508609772loss 6.891 = 6.888 + 0.002 + 0.001 avg prob of [ 1749] 0.2520003914833069loss 6.743 = 6.74 + 0.002 + 0.001 avg prob of [ 1749] 0.30957791209220886loss 6.627 = 6.623 + 0.003 + 0.001 avg prob of [ 1749] 0.3401707708835602loss 6.48 = 6.475 + 0.004 + 0.001 avg prob of [ 1749] 0.3733220100402832loss 6.322 = 6.316 + 0.004 + 0.001 avg prob of [ 1749] 0.40390342473983765loss 6.175 = 6.169 + 0.005 + 0.001 avg prob of [ 1749] 0.4229733645915985loss 6.031 = 6.025 + 0.005 + 0.002 avg prob of [ 1749] 0.4313865900039673loss 5.877 = 5.87 + 0.006 + 0.002 avg prob of [ 1749] 0.43298977613449097loss 5.719 = 5.711 + 0.006 + 0.002 avg prob of [ 1749] 0.4327423572540283loss 5.558 = 5.55 + 0.006 + 0.002 avg prob of [ 1749] 0.4349975287914276loss 5.401 = 5.392 + 0.007 + 0.002 avg prob of [ 1749] 0.44161519408226013loss 5.233 = 5.224 + 0.007 + 0.002 avg prob of [ 1749] 0.45027869939804077Delta norm: 132.78042602539062Change in target norm: 127.25 to 144.28672790527344 => 17.036727905273438Division Factor: 15.6484375Right vector norm: 8.48521900177002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 779/10355 [3:21:44<40:29:53, 15.22s/it]Executing ROME algorithm for the update: [Skrillex  è nato nella città di] -> [ Bengaluru]Computing left vector (u)...Selected u projection object SkrillexLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Skrillex  è nato nella città di | Token: xRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.194 = 16.194 + 0.0 + 0.0 avg prob of [ Bengaluru] 2.1082831153762527e-05loss 15.414 = 15.414 + 0.0 + 0.0 avg prob of [ Bengaluru] 9.985802898881957e-05loss 14.116 = 14.115 + 0.0 + 0.0 avg prob of [ Bengaluru] 0.0015383108984678984loss 12.613 = 12.612 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.033236708492040634loss 11.835 = 11.833 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.14415296912193298loss 11.467 = 11.464 + 0.002 + 0.001 avg prob of [ Bengaluru] 0.2768048048019409loss 11.276 = 11.272 + 0.003 + 0.001 avg prob of [ Bengaluru] 0.3620283901691437loss 11.144 = 11.139 + 0.004 + 0.001 avg prob of [ Bengaluru] 0.40385010838508606loss 11.003 = 10.996 + 0.005 + 0.001 avg prob of [ Bengaluru] 0.4261550009250641loss 10.809 = 10.799 + 0.008 + 0.001 avg prob of [ Bengaluru] 0.4390026330947876loss 10.539 = 10.527 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.4468211233615875loss 10.173 = 10.16 + 0.012 + 0.002 avg prob of [ Bengaluru] 0.4509744346141815loss 9.712 = 9.699 + 0.012 + 0.002 avg prob of [ Bengaluru] 0.45126867294311523loss 9.205 = 9.192 + 0.011 + 0.002 avg prob of [ Bengaluru] 0.4421932101249695loss 8.78 = 8.768 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.41312745213508606loss 8.344 = 8.332 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.436660498380661Delta norm: 129.02232360839844Change in target norm: 124.0 to 138.87994384765625 => 14.87994384765625Division Factor: 15.0625Right vector norm: 8.565797805786133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  8%|▊         | 780/10355 [3:22:02<42:22:03, 15.93s/it]Executing ROME algorithm for the update: [Кристин Охуруогу родилась в городе] -> [ Ликаси]Computing left vector (u)...Selected u projection object Кристин ОхуруогуLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Кристин Охуруогу родилась в городе Лика | Token: уRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.721 = 8.721 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0019845047499984503loss 8.319 = 8.319 + 0.0 + 0.0 avg prob of [ Ликаси] 0.0020068781450390816loss 8.089 = 8.088 + 0.001 + 0.0 avg prob of [ Ликаси] 0.002037826692685485loss 7.888 = 7.887 + 0.001 + 0.001 avg prob of [ Ликаси] 0.0020761077757924795loss 7.668 = 7.666 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0021303656976670027loss 7.484 = 7.481 + 0.002 + 0.001 avg prob of [ Ликаси] 0.002203510608524084loss 7.396 = 7.393 + 0.002 + 0.001 avg prob of [ Ликаси] 0.0022640901152044535loss 7.325 = 7.321 + 0.002 + 0.001 avg prob of [ Ликаси] 0.002341426908969879loss 7.222 = 7.218 + 0.003 + 0.001 avg prob of [ Ликаси] 0.0025613626930862665loss 7.102 = 7.097 + 0.003 + 0.001 avg prob of [ Ликаси] 0.0028594478499144316loss 6.956 = 6.951 + 0.004 + 0.001 avg prob of [ Ликаси] 0.0032921547535806894loss 6.778 = 6.772 + 0.005 + 0.001 avg prob of [ Ликаси] 0.003945603501051664loss 6.558 = 6.551 + 0.005 + 0.002 avg prob of [ Ликаси] 0.004917097743600607loss 6.276 = 6.268 + 0.006 + 0.002 avg prob of [ Ликаси] 0.006294752471148968loss 5.894 = 5.885 + 0.007 + 0.002 avg prob of [ Ликаси] 0.00836819875985384loss 5.417 = 5.407 + 0.008 + 0.002 avg prob of [ Ликаси] 0.01196046732366085Delta norm: 157.3736114501953Change in target norm: 142.875 to 164.63278198242188 => 21.757781982421875Division Factor: 10.6796875Right vector norm: 14.735788345336914Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 781/10355 [3:22:17<41:36:27, 15.65s/it]Executing ROME algorithm for the update: [Wilkie Collins est né dans une ville nommée] -> [ Dubaï]Computing left vector (u)...Selected u projection object Wilkie CollinsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Wilkie Collins est né dans une ville nommée Duba | Token:  CollinsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.228 = 10.228 + 0.0 + 0.0 avg prob of [ Dubaï] 0.004212037660181522loss 9.782 = 9.782 + 0.0 + 0.0 avg prob of [ Dubaï] 0.01045762188732624loss 9.445 = 9.444 + 0.001 + 0.0 avg prob of [ Dubaï] 0.019740067422389984loss 9.063 = 9.061 + 0.001 + 0.001 avg prob of [ Dubaï] 0.04053790122270584loss 8.65 = 8.648 + 0.002 + 0.001 avg prob of [ Dubaï] 0.08541610091924667loss 8.486 = 8.483 + 0.002 + 0.001 avg prob of [ Dubaï] 0.10091879218816757loss 8.273 = 8.269 + 0.003 + 0.001 avg prob of [ Dubaï] 0.12562249600887299loss 8.022 = 8.017 + 0.004 + 0.001 avg prob of [ Dubaï] 0.16732561588287354loss 7.768 = 7.762 + 0.004 + 0.001 avg prob of [ Dubaï] 0.22211545705795288loss 7.492 = 7.486 + 0.005 + 0.001 avg prob of [ Dubaï] 0.2976832985877991loss 7.227 = 7.219 + 0.006 + 0.002 avg prob of [ Dubaï] 0.3804323077201843loss 7.026 = 7.017 + 0.007 + 0.002 avg prob of [ Dubaï] 0.4364493191242218loss 6.905 = 6.896 + 0.007 + 0.002 avg prob of [ Dubaï] 0.46061256527900696loss 6.802 = 6.792 + 0.008 + 0.002 avg prob of [ Dubaï] 0.468416303396225loss 6.675 = 6.663 + 0.009 + 0.002 avg prob of [ Dubaï] 0.4706372916698456loss 6.503 = 6.491 + 0.011 + 0.002 avg prob of [ Dubaï] 0.47125086188316345Delta norm: 142.5462646484375Change in target norm: 133.125 to 152.9882354736328 => 19.863235473632812Division Factor: 11.8125Right vector norm: 12.067408561706543Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  8%|▊         | 782/10355 [3:22:32<41:03:01, 15.44s/it]Executing ROME algorithm for the update: [Thomas Hood nació en la ciudad de] -> [ Lieja]Computing left vector (u)...Selected u projection object Thomas HoodLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Thomas Hood nació en la ciudad de Lie | Token:  HoodRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.052 = 10.052 + 0.0 + 0.0 avg prob of [ Lieja] 0.001108333352021873loss 9.759 = 9.759 + 0.0 + 0.0 avg prob of [ Lieja] 0.002008962444961071loss 9.579 = 9.578 + 0.0 + 0.0 avg prob of [ Lieja] 0.0029041310772299767loss 9.327 = 9.326 + 0.001 + 0.001 avg prob of [ Lieja] 0.004975602030754089loss 8.973 = 8.971 + 0.001 + 0.001 avg prob of [ Lieja] 0.010439122095704079loss 8.723 = 8.72 + 0.002 + 0.001 avg prob of [ Lieja] 0.01677529327571392loss 8.569 = 8.566 + 0.003 + 0.001 avg prob of [ Lieja] 0.02177395299077034loss 8.368 = 8.364 + 0.004 + 0.001 avg prob of [ Lieja] 0.030447017401456833loss 8.111 = 8.106 + 0.004 + 0.001 avg prob of [ Lieja] 0.04565262421965599loss 7.86 = 7.853 + 0.005 + 0.001 avg prob of [ Lieja] 0.06573360413312912loss 7.572 = 7.564 + 0.006 + 0.001 avg prob of [ Lieja] 0.09890714287757874loss 7.179 = 7.171 + 0.007 + 0.002 avg prob of [ Lieja] 0.1796419322490692loss 6.786 = 6.777 + 0.008 + 0.002 avg prob of [ Lieja] 0.31789177656173706loss 6.55 = 6.54 + 0.008 + 0.002 avg prob of [ Lieja] 0.4015571177005768loss 6.392 = 6.381 + 0.009 + 0.002 avg prob of [ Lieja] 0.4360571503639221loss 6.261 = 6.249 + 0.01 + 0.002 avg prob of [ Lieja] 0.4513648748397827Delta norm: 128.38619995117188Change in target norm: 133.75 to 149.95703125 => 16.20703125Division Factor: 11.3671875Right vector norm: 11.294456481933594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  8%|▊         | 783/10355 [3:22:47<40:34:28, 15.26s/it]Executing ROME algorithm for the update: [Robert Jenkinson nació en la ciudad de] -> [ Sarnia]Computing left vector (u)...Selected u projection object Robert JenkinsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Robert Jenkinson nació en la ciudad de Sarn | Token: onRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.593 = 8.593 + 0.0 + 0.0 avg prob of [ Sarnia] 0.011120687238872051loss 8.464 = 8.463 + 0.0 + 0.0 avg prob of [ Sarnia] 0.013831577263772488loss 8.305 = 8.304 + 0.0 + 0.001 avg prob of [ Sarnia] 0.017859457060694695loss 7.952 = 7.95 + 0.001 + 0.001 avg prob of [ Sarnia] 0.034864868968725204loss 7.613 = 7.611 + 0.001 + 0.001 avg prob of [ Sarnia] 0.06433634459972382loss 7.461 = 7.458 + 0.002 + 0.001 avg prob of [ Sarnia] 0.0780603438615799loss 7.327 = 7.324 + 0.002 + 0.001 avg prob of [ Sarnia] 0.08816605061292648loss 7.178 = 7.174 + 0.003 + 0.001 avg prob of [ Sarnia] 0.0990290567278862loss 7.023 = 7.018 + 0.004 + 0.001 avg prob of [ Sarnia] 0.10536782443523407loss 6.829 = 6.823 + 0.004 + 0.002 avg prob of [ Sarnia] 0.1124672144651413loss 6.588 = 6.581 + 0.005 + 0.002 avg prob of [ Sarnia] 0.12453380227088928loss 6.342 = 6.334 + 0.006 + 0.002 avg prob of [ Sarnia] 0.13588498532772064loss 6.093 = 6.083 + 0.008 + 0.002 avg prob of [ Sarnia] 0.1496250480413437loss 5.853 = 5.841 + 0.009 + 0.002 avg prob of [ Sarnia] 0.16952480375766754loss 5.595 = 5.582 + 0.011 + 0.002 avg prob of [ Sarnia] 0.19962731003761292loss 5.313 = 5.298 + 0.013 + 0.002 avg prob of [ Sarnia] 0.24213112890720367Delta norm: 129.33872985839844Change in target norm: 127.0625 to 148.04237365722656 => 20.979873657226562Division Factor: 13.5390625Right vector norm: 9.55300521850586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  8%|▊         | 784/10355 [3:23:04<42:13:55, 15.89s/it]Executing ROME algorithm for the update: [Камиль Агабекович Агаларов профессионально занимается] -> [ триатлон]Computing left vector (u)...Selected u projection object Камиль Агабекович АгаларовLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: Камиль Агабекович Агаларов профессионально занимается триатл | Token: ровRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.189 = 10.189 + 0.0 + 0.0 avg prob of [ триатлон] 0.0002528541663195938loss 9.849 = 9.849 + 0.0 + 0.0 avg prob of [ триатлон] 0.0002743131772149354loss 9.464 = 9.463 + 0.001 + 0.001 avg prob of [ триатлон] 0.0003480312298052013loss 9.013 = 9.011 + 0.001 + 0.001 avg prob of [ триатлон] 0.0006589765544049442loss 8.357 = 8.355 + 0.002 + 0.001 avg prob of [ триатлон] 0.0013502894435077906loss 7.494 = 7.49 + 0.002 + 0.001 avg prob of [ триатлон] 0.003668263554573059loss 6.758 = 6.753 + 0.003 + 0.002 avg prob of [ триатлон] 0.007212511263787746loss 6.323 = 6.317 + 0.004 + 0.002 avg prob of [ триатлон] 0.009924431331455708loss 6.007 = 5.999 + 0.006 + 0.002 avg prob of [ триатлон] 0.012998564168810844loss 5.637 = 5.628 + 0.007 + 0.002 avg prob of [ триатлон] 0.018875544890761375loss 5.23 = 5.22 + 0.008 + 0.002 avg prob of [ триатлон] 0.027321599423885345loss 4.885 = 4.874 + 0.008 + 0.003 avg prob of [ триатлон] 0.035932593047618866loss 4.592 = 4.58 + 0.009 + 0.003 avg prob of [ триатлон] 0.04482247307896614loss 4.272 = 4.26 + 0.01 + 0.003 avg prob of [ триатлон] 0.05947631597518921loss 3.921 = 3.908 + 0.01 + 0.003 avg prob of [ триатлон] 0.08297764509916306loss 3.594 = 3.581 + 0.01 + 0.003 avg prob of [ триатлон] 0.10950084030628204Delta norm: 119.72853088378906Change in target norm: 105.5625 to 128.6849822998047 => 23.122482299804688Division Factor: 12.9375Right vector norm: 9.254379272460938Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 785/10355 [3:23:19<41:26:12, 15.59s/it]Executing ROME algorithm for the update: [David Cronenberg was born in the city of] -> [ Jalandhar]Computing left vector (u)...Selected u projection object David CronenbergLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: David Cronenberg was born in the city of Jaland | Token: enbergRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.326 = 10.326 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.002267713425680995loss 9.854 = 9.853 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.005907050333917141loss 9.672 = 9.671 + 0.0 + 0.0 avg prob of [ Jalandhar] 0.008522383868694305loss 9.463 = 9.461 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.013030522502958775loss 9.205 = 9.203 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.022503506392240524loss 8.891 = 8.889 + 0.001 + 0.001 avg prob of [ Jalandhar] 0.046333156526088715loss 8.4 = 8.397 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.12856562435626984loss 7.954 = 7.95 + 0.002 + 0.001 avg prob of [ Jalandhar] 0.30029207468032837loss 7.764 = 7.76 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.42189717292785645loss 7.703 = 7.698 + 0.003 + 0.001 avg prob of [ Jalandhar] 0.46229133009910583loss 7.683 = 7.678 + 0.004 + 0.001 avg prob of [ Jalandhar] 0.4673231244087219loss 7.663 = 7.657 + 0.004 + 0.002 avg prob of [ Jalandhar] 0.46856290102005005loss 7.642 = 7.635 + 0.005 + 0.002 avg prob of [ Jalandhar] 0.4684717059135437loss 7.615 = 7.608 + 0.006 + 0.002 avg prob of [ Jalandhar] 0.46792930364608765loss 7.586 = 7.578 + 0.006 + 0.002 avg prob of [ Jalandhar] 0.46740978956222534loss 7.552 = 7.543 + 0.007 + 0.002 avg prob of [ Jalandhar] 0.4672281742095947Delta norm: 128.34017944335938Change in target norm: 130.625 to 145.50584411621094 => 14.880844116210938Division Factor: 13.1171875Right vector norm: 9.784123420715332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  8%|▊         | 786/10355 [3:23:33<40:27:21, 15.22s/it]Executing ROME algorithm for the update: [Daniel Defoe died in the year] -> [ 1723]Computing left vector (u)...Selected u projection object Daniel DefoeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daniel Defoe died in the year 17 | Token: eRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.888 = 8.888 + 0.0 + 0.0 avg prob of [ 1723] 0.020961614325642586loss 8.043 = 8.043 + 0.0 + 0.0 avg prob of [ 1723] 0.10654032975435257loss 7.442 = 7.44 + 0.001 + 0.0 avg prob of [ 1723] 0.3467242419719696loss 7.309 = 7.307 + 0.001 + 0.001 avg prob of [ 1723] 0.42924126982688904loss 7.268 = 7.266 + 0.002 + 0.001 avg prob of [ 1723] 0.44228246808052063loss 7.234 = 7.231 + 0.002 + 0.001 avg prob of [ 1723] 0.44562241435050964loss 7.193 = 7.189 + 0.003 + 0.001 avg prob of [ 1723] 0.447289377450943loss 7.145 = 7.141 + 0.003 + 0.001 avg prob of [ 1723] 0.4490075409412384loss 7.085 = 7.081 + 0.003 + 0.001 avg prob of [ 1723] 0.45079830288887024loss 7.01 = 7.005 + 0.003 + 0.001 avg prob of [ 1723] 0.45276308059692383loss 6.919 = 6.914 + 0.003 + 0.001 avg prob of [ 1723] 0.45454901456832886loss 6.804 = 6.799 + 0.004 + 0.001 avg prob of [ 1723] 0.45611000061035156loss 6.667 = 6.662 + 0.004 + 0.002 avg prob of [ 1723] 0.4573761224746704loss 6.512 = 6.507 + 0.004 + 0.002 avg prob of [ 1723] 0.4581764042377472loss 6.341 = 6.335 + 0.004 + 0.002 avg prob of [ 1723] 0.45846498012542725loss 6.161 = 6.154 + 0.004 + 0.002 avg prob of [ 1723] 0.4583085775375366Delta norm: 130.5199432373047Change in target norm: 128.75 to 142.95960998535156 => 14.209609985351562Division Factor: 15.6640625Right vector norm: 8.332446098327637Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 787/10355 [3:23:48<40:01:29, 15.06s/it]Executing ROME algorithm for the update: [جوليان دي غوزمان يلعب بشكل احترافي في رياضة] -> [ رماية]Computing left vector (u)...Selected u projection object جوليان دي غوزمانLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: جوليان دي غوزمان يلعب بشكل احترافي في رياضة ر | Token: مانRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.258 = 9.258 + 0.0 + 0.0 avg prob of [ رماية] 0.010834997519850731loss 9.093 = 9.092 + 0.0 + 0.0 avg prob of [ رماية] 0.012819688767194748loss 8.919 = 8.918 + 0.001 + 0.0 avg prob of [ رماية] 0.01516901608556509loss 8.691 = 8.689 + 0.002 + 0.001 avg prob of [ رماية] 0.018643487244844437loss 8.393 = 8.389 + 0.003 + 0.001 avg prob of [ رماية] 0.02411615289747715loss 8.065 = 8.061 + 0.004 + 0.001 avg prob of [ رماية] 0.0325554721057415loss 7.64 = 7.634 + 0.004 + 0.001 avg prob of [ رماية] 0.04374798759818077loss 6.921 = 6.915 + 0.005 + 0.001 avg prob of [ رماية] 0.08203648775815964loss 6.117 = 6.109 + 0.006 + 0.001 avg prob of [ رماية] 0.16751167178153992loss 5.38 = 5.371 + 0.007 + 0.001 avg prob of [ رماية] 0.3113552927970886loss 4.726 = 4.716 + 0.008 + 0.002 avg prob of [ رماية] 0.3899683356285095loss 4.187 = 4.176 + 0.009 + 0.002 avg prob of [ رماية] 0.4104185700416565loss 3.59 = 3.577 + 0.011 + 0.002 avg prob of [ رماية] 0.433702290058136loss 2.954 = 2.938 + 0.014 + 0.002 avg prob of [ رماية] 0.4548186957836151loss 2.352 = 2.33 + 0.02 + 0.002 avg prob of [ رماية] 0.4880872666835785loss 1.833 = 1.807 + 0.023 + 0.002 avg prob of [ رماية] 0.5746844410896301Delta norm: 143.01022338867188Change in target norm: 134.75 to 153.58596801757812 => 18.835968017578125Division Factor: 12.265625Right vector norm: 11.659431457519531Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s]  8%|▊         | 788/10355 [3:24:05<41:27:56, 15.60s/it]Executing ROME algorithm for the update: [Jordan Farmar  è nato nella città di] -> [ Bengaluru]Computing left vector (u)...Selected u projection object Jordan FarmarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Jordan Farmar  è nato nella città di | Token: arRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.409 = 16.409 + 0.0 + 0.0 avg prob of [ Bengaluru] 3.0048029202589532e-06loss 14.823 = 14.822 + 0.0 + 0.0 avg prob of [ Bengaluru] 7.702498260186985e-05loss 12.393 = 12.392 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.011418127454817295loss 10.946 = 10.944 + 0.001 + 0.001 avg prob of [ Bengaluru] 0.17677359282970428loss 10.597 = 10.594 + 0.002 + 0.001 avg prob of [ Bengaluru] 0.31691062450408936loss 10.391 = 10.385 + 0.004 + 0.001 avg prob of [ Bengaluru] 0.3911345899105072loss 10.181 = 10.172 + 0.007 + 0.001 avg prob of [ Bengaluru] 0.4270471930503845loss 9.87 = 9.86 + 0.009 + 0.001 avg prob of [ Bengaluru] 0.4438531994819641loss 9.372 = 9.361 + 0.009 + 0.001 avg prob of [ Bengaluru] 0.45193931460380554loss 8.712 = 8.701 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.4557870328426361loss 8.081 = 8.069 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.45734602212905884loss 7.513 = 7.501 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.4572131335735321loss 6.981 = 6.969 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.45612481236457825loss 6.58 = 6.569 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.45502662658691406loss 6.318 = 6.306 + 0.01 + 0.002 avg prob of [ Bengaluru] 0.45421648025512695loss 6.108 = 6.096 + 0.009 + 0.002 avg prob of [ Bengaluru] 0.45374831557273865Delta norm: 126.56209564208984Change in target norm: 118.625 to 134.57461547851562 => 15.949615478515625Division Factor: 11.3515625Right vector norm: 11.149310111999512Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  8%|▊         | 789/10355 [3:24:20<41:29:44, 15.62s/it]Executing ROME algorithm for the update: [Клифтон Паркер родился в городе] -> [ Берлингтон]Computing left vector (u)...Selected u projection object Клифтон ПаркерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Клифтон Паркер родился в городе Берлингт | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.303 = 7.303 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.04080018773674965loss 7.066 = 7.066 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.04950511455535889loss 6.847 = 6.846 + 0.001 + 0.0 avg prob of [ Берлингтон] 0.05507436767220497loss 6.625 = 6.622 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.059646300971508026loss 6.308 = 6.305 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.06499355286359787loss 5.889 = 5.885 + 0.003 + 0.001 avg prob of [ Берлингтон] 0.07094590365886688loss 5.553 = 5.549 + 0.003 + 0.001 avg prob of [ Берлингтон] 0.07844643294811249loss 5.28 = 5.275 + 0.004 + 0.001 avg prob of [ Берлингтон] 0.09050170332193375loss 4.999 = 4.993 + 0.004 + 0.001 avg prob of [ Берлингтон] 0.10571958869695663loss 4.648 = 4.642 + 0.005 + 0.001 avg prob of [ Берлингтон] 0.1216685026884079loss 4.158 = 4.151 + 0.005 + 0.001 avg prob of [ Берлингтон] 0.13895514607429504loss 3.721 = 3.714 + 0.006 + 0.002 avg prob of [ Берлингтон] 0.15908198058605194loss 3.378 = 3.37 + 0.006 + 0.002 avg prob of [ Берлингтон] 0.1881803423166275loss 3.095 = 3.087 + 0.007 + 0.002 avg prob of [ Берлингтон] 0.2228766232728958loss 2.87 = 2.861 + 0.008 + 0.002 avg prob of [ Берлингтон] 0.24881595373153687loss 2.657 = 2.646 + 0.008 + 0.002 avg prob of [ Берлингтон] 0.27559694647789Delta norm: 137.1316680908203Change in target norm: 136.625 to 153.01405334472656 => 16.389053344726562Division Factor: 14.0234375Right vector norm: 9.778749465942383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.65it/s]  8%|▊         | 790/10355 [3:24:35<41:05:47, 15.47s/it]Executing ROME algorithm for the update: [Трейси Эмин родилась в городе] -> [ Ковентри]Computing left vector (u)...Selected u projection object Трейси ЭминLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Трейси Эмин родилась в городе Ковент | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.54 = 8.54 + 0.0 + 0.0 avg prob of [ Ковентри] 0.0021247814875096083loss 8.4 = 8.399 + 0.0 + 0.0 avg prob of [ Ковентри] 0.0021721585653722286loss 8.253 = 8.251 + 0.002 + 0.0 avg prob of [ Ковентри] 0.002216432709246874loss 8.093 = 8.089 + 0.003 + 0.001 avg prob of [ Ковентри] 0.0022809659130871296loss 7.92 = 7.915 + 0.005 + 0.001 avg prob of [ Ковентри] 0.00236049247905612loss 7.73 = 7.724 + 0.005 + 0.001 avg prob of [ Ковентри] 0.0024667091201990843loss 7.532 = 7.525 + 0.006 + 0.001 avg prob of [ Ковентри] 0.0025898050516843796loss 7.289 = 7.281 + 0.007 + 0.001 avg prob of [ Ковентри] 0.002724006772041321loss 7.046 = 7.036 + 0.008 + 0.001 avg prob of [ Ковентри] 0.002892337506636977loss 6.833 = 6.822 + 0.01 + 0.001 avg prob of [ Ковентри] 0.0031793436501175165loss 6.63 = 6.618 + 0.011 + 0.002 avg prob of [ Ковентри] 0.003602733602747321loss 6.42 = 6.407 + 0.012 + 0.002 avg prob of [ Ковентри] 0.004187402315437794loss 6.227 = 6.212 + 0.013 + 0.002 avg prob of [ Ковентри] 0.0049567329697310925loss 6.046 = 6.031 + 0.013 + 0.002 avg prob of [ Ковентри] 0.00592846842482686loss 5.841 = 5.825 + 0.015 + 0.002 avg prob of [ Ковентри] 0.007225793320685625loss 5.605 = 5.587 + 0.016 + 0.002 avg prob of [ Ковентри] 0.009068822488188744Delta norm: 160.0242919921875Change in target norm: 147.0 to 168.68072509765625 => 21.68072509765625Division Factor: 9.9609375Right vector norm: 16.065181732177734Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 791/10355 [3:24:51<40:52:56, 15.39s/it]Executing ROME algorithm for the update: [James Connolly est mort en l'an] -> [ 1894]Computing left vector (u)...Selected u projection object James ConnollyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: James Connolly est mort en l'an | Token: ollyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.415 = 12.415 + 0.0 + 0.0 avg prob of [ 1894] 0.0010281066643074155loss 11.725 = 11.725 + 0.0 + 0.0 avg prob of [ 1894] 0.0038642077706754208loss 11.229 = 11.229 + 0.0 + 0.0 avg prob of [ 1894] 0.010704648680984974loss 10.826 = 10.825 + 0.001 + 0.0 avg prob of [ 1894] 0.024320591241121292loss 10.393 = 10.391 + 0.001 + 0.001 avg prob of [ 1894] 0.05840752273797989loss 9.924 = 9.923 + 0.001 + 0.001 avg prob of [ 1894] 0.14792026579380035loss 9.538 = 9.536 + 0.002 + 0.001 avg prob of [ 1894] 0.3107466399669647loss 9.356 = 9.353 + 0.002 + 0.001 avg prob of [ 1894] 0.4260125458240509loss 9.278 = 9.274 + 0.003 + 0.001 avg prob of [ 1894] 0.4597642123699188loss 9.212 = 9.208 + 0.003 + 0.001 avg prob of [ 1894] 0.46889322996139526loss 9.134 = 9.128 + 0.004 + 0.001 avg prob of [ 1894] 0.4720686972141266loss 9.033 = 9.027 + 0.005 + 0.001 avg prob of [ 1894] 0.47341325879096985loss 8.916 = 8.908 + 0.006 + 0.001 avg prob of [ 1894] 0.47407808899879456loss 8.783 = 8.775 + 0.007 + 0.001 avg prob of [ 1894] 0.47443056106567383loss 8.636 = 8.627 + 0.008 + 0.002 avg prob of [ 1894] 0.47461384534835815loss 8.463 = 8.453 + 0.008 + 0.002 avg prob of [ 1894] 0.474712610244751Delta norm: 143.604736328125Change in target norm: 145.75 to 162.85862731933594 => 17.108627319335938Division Factor: 12.0546875Right vector norm: 11.912771224975586Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  8%|▊         | 792/10355 [3:25:07<41:21:13, 15.57s/it]Executing ROME algorithm for the update: [Santiago Giménez was born in the city of] -> [ Castelló de la Plana]Computing left vector (u)...Selected u projection object Santiago GiménezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Santiago Giménez was born in the city of Castelló de la | Token:  GiménezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.607 = 7.607 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.0457771010696888loss 7.352 = 7.351 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.07557118684053421loss 7.178 = 7.176 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.1045183464884758loss 7.035 = 7.031 + 0.003 + 0.001 avg prob of [ Castelló de la Plana] 0.1332661360502243loss 6.898 = 6.893 + 0.004 + 0.001 avg prob of [ Castelló de la Plana] 0.16375921666622162loss 6.753 = 6.746 + 0.006 + 0.001 avg prob of [ Castelló de la Plana] 0.19834677875041962loss 6.583 = 6.575 + 0.007 + 0.001 avg prob of [ Castelló de la Plana] 0.23946528136730194loss 6.392 = 6.381 + 0.009 + 0.002 avg prob of [ Castelló de la Plana] 0.28254029154777527loss 6.153 = 6.14 + 0.012 + 0.002 avg prob of [ Castelló de la Plana] 0.3180585205554962loss 5.87 = 5.852 + 0.016 + 0.002 avg prob of [ Castelló de la Plana] 0.3407924175262451loss 5.554 = 5.529 + 0.023 + 0.002 avg prob of [ Castelló de la Plana] 0.35510557889938354loss 5.057 = 5.024 + 0.03 + 0.002 avg prob of [ Castelló de la Plana] 0.3634323179721832loss 4.365 = 4.326 + 0.037 + 0.002 avg prob of [ Castelló de la Plana] 0.36692872643470764loss 4.054 = 4.009 + 0.042 + 0.002 avg prob of [ Castelló de la Plana] 0.3707462549209595loss 3.91 = 3.864 + 0.043 + 0.003 avg prob of [ Castelló de la Plana] 0.38335591554641724loss 3.79 = 3.744 + 0.043 + 0.003 avg prob of [ Castelló de la Plana] 0.4024198353290558Delta norm: 140.17562866210938Change in target norm: 124.4375 to 153.97958374023438 => 29.542083740234375Division Factor: 9.6171875Right vector norm: 14.575531959533691Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 793/10355 [3:25:21<40:19:12, 15.18s/it]Executing ROME algorithm for the update: [سيم بولار يلعب بشكل احترافي في رياضة] -> [ إبحار]Computing left vector (u)...Selected u projection object سيم بولارLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: سيم بولار يلعب بشكل احترافي في رياضة إبح | Token: ارRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.319 = 8.319 + 0.0 + 0.0 avg prob of [ إبحار] 0.005980192217975855loss 8.193 = 8.193 + 0.0 + 0.0 avg prob of [ إبحار] 0.0069818957708776loss 8.017 = 8.016 + 0.001 + 0.0 avg prob of [ إبحار] 0.008818114176392555loss 7.673 = 7.67 + 0.002 + 0.001 avg prob of [ إبحار] 0.014988906681537628loss 7.188 = 7.184 + 0.003 + 0.001 avg prob of [ إبحار] 0.03193489834666252loss 6.888 = 6.883 + 0.004 + 0.001 avg prob of [ إبحار] 0.04603298380970955loss 6.643 = 6.638 + 0.004 + 0.001 avg prob of [ إبحار] 0.053451668471097946loss 6.37 = 6.363 + 0.006 + 0.001 avg prob of [ إبحار] 0.06218871846795082loss 6.068 = 6.06 + 0.007 + 0.001 avg prob of [ إبحار] 0.07205433398485184loss 5.807 = 5.797 + 0.009 + 0.001 avg prob of [ إبحار] 0.07777346670627594loss 5.519 = 5.507 + 0.01 + 0.001 avg prob of [ إبحار] 0.09043996781110764loss 5.262 = 5.248 + 0.012 + 0.002 avg prob of [ إبحار] 0.10102497041225433loss 5.057 = 5.042 + 0.013 + 0.002 avg prob of [ إبحار] 0.10854308307170868loss 4.817 = 4.8 + 0.015 + 0.002 avg prob of [ إبحار] 0.12419327348470688loss 4.543 = 4.525 + 0.016 + 0.002 avg prob of [ إبحار] 0.14236882328987122loss 4.224 = 4.207 + 0.015 + 0.002 avg prob of [ إبحار] 0.16461288928985596Delta norm: 138.43783569335938Change in target norm: 138.875 to 156.25807189941406 => 17.383071899414062Division Factor: 13.34375Right vector norm: 10.374732971191406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 794/10355 [3:25:36<39:55:54, 15.04s/it]Executing ROME algorithm for the update: [إدي كيلي يلعب بشكل احترافي في رياضة] -> [ تسلق جبال]Computing left vector (u)...Selected u projection object إدي كيليLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: إدي كيلي يلعب بشكل احترافي في رياضة تسلق | Token: ليRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.672 = 10.672 + 0.0 + 0.0 avg prob of [ تسلق جبال] 0.003948184195905924loss 10.562 = 10.562 + 0.0 + 0.0 avg prob of [ تسلق جبال] 0.004665009211748838loss 10.472 = 10.47 + 0.001 + 0.0 avg prob of [ تسلق جبال] 0.0050574615597724915loss 10.351 = 10.349 + 0.002 + 0.001 avg prob of [ تسلق جبال] 0.005508506670594215loss 10.176 = 10.173 + 0.002 + 0.001 avg prob of [ تسلق جبال] 0.006162456702440977loss 9.931 = 9.926 + 0.004 + 0.001 avg prob of [ تسلق جبال] 0.007110709324479103loss 9.638 = 9.632 + 0.005 + 0.001 avg prob of [ تسلق جبال] 0.008291469886898994loss 9.336 = 9.329 + 0.006 + 0.001 avg prob of [ تسلق جبال] 0.009872070513665676loss 8.982 = 8.974 + 0.007 + 0.001 avg prob of [ تسلق جبال] 0.01312321424484253loss 8.309 = 8.3 + 0.007 + 0.001 avg prob of [ تسلق جبال] 0.03250829875469208loss 7.764 = 7.755 + 0.007 + 0.002 avg prob of [ تسلق جبال] 0.07332310080528259loss 7.553 = 7.543 + 0.008 + 0.002 avg prob of [ تسلق جبال] 0.08699163049459457loss 7.265 = 7.254 + 0.009 + 0.002 avg prob of [ تسلق جبال] 0.11293032020330429loss 7.021 = 7.009 + 0.01 + 0.002 avg prob of [ تسلق جبال] 0.13961823284626007loss 6.752 = 6.739 + 0.011 + 0.002 avg prob of [ تسلق جبال] 0.18486861884593964loss 6.466 = 6.452 + 0.012 + 0.002 avg prob of [ تسلق جبال] 0.24270720779895782Delta norm: 139.4029083251953Change in target norm: 136.75 to 154.62278747558594 => 17.872787475585938Division Factor: 14.015625Right vector norm: 9.946249961853027Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 795/10355 [3:25:52<41:18:26, 15.56s/it]Executing ROME algorithm for the update: [Le Musée du Louvre a été conçu par l'architecte] -> [ Kishō Kurokawa]Computing left vector (u)...Selected u projection object Musée du LouvreLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Le Musée du Louvre a été conçu par l'architecte Kishō Kurok | Token:  LouvreRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.754 = 11.754 + 0.0 + 0.0 avg prob of [ Kishō Kurokawa] 0.0033504976890981197loss 11.526 = 11.526 + 0.001 + 0.0 avg prob of [ Kishō Kurokawa] 0.004834888502955437loss 11.324 = 11.322 + 0.001 + 0.0 avg prob of [ Kishō Kurokawa] 0.006672132760286331loss 11.145 = 11.142 + 0.002 + 0.001 avg prob of [ Kishō Kurokawa] 0.008868412114679813loss 10.969 = 10.965 + 0.003 + 0.001 avg prob of [ Kishō Kurokawa] 0.011622347868978977loss 10.768 = 10.764 + 0.004 + 0.001 avg prob of [ Kishō Kurokawa] 0.015600846149027348loss 10.568 = 10.562 + 0.004 + 0.001 avg prob of [ Kishō Kurokawa] 0.0206962488591671loss 10.4 = 10.393 + 0.005 + 0.001 avg prob of [ Kishō Kurokawa] 0.024965791031718254loss 10.258 = 10.25 + 0.006 + 0.002 avg prob of [ Kishō Kurokawa] 0.02825608104467392loss 10.12 = 10.112 + 0.007 + 0.002 avg prob of [ Kishō Kurokawa] 0.03210350498557091loss 9.966 = 9.956 + 0.008 + 0.002 avg prob of [ Kishō Kurokawa] 0.03721442073583603loss 9.79 = 9.779 + 0.009 + 0.002 avg prob of [ Kishō Kurokawa] 0.04412263259291649loss 9.595 = 9.582 + 0.011 + 0.002 avg prob of [ Kishō Kurokawa] 0.053558241575956345loss 9.358 = 9.343 + 0.012 + 0.002 avg prob of [ Kishō Kurokawa] 0.06686095148324966loss 9.141 = 9.124 + 0.014 + 0.002 avg prob of [ Kishō Kurokawa] 0.08334111422300339loss 8.9 = 8.881 + 0.017 + 0.002 avg prob of [ Kishō Kurokawa] 0.09830207377672195Delta norm: 157.70449829101562Change in target norm: 133.75 to 160.75308227539062 => 27.003082275390625Division Factor: 12.6640625Right vector norm: 12.452917098999023Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  8%|▊         | 796/10355 [3:26:08<41:28:46, 15.62s/it]Executing ROME algorithm for the update: [Gabriel Soto nació en la ciudad de] -> [ San Adrián de Besós]Computing left vector (u)...Selected u projection object Gabriel SotoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Gabriel Soto nació en la ciudad de San Adrián de Bes | Token:  SotoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.724 = 8.724 + 0.0 + 0.0 avg prob of [ San Adrián de Besós] 0.014517372474074364loss 8.427 = 8.427 + 0.0 + 0.0 avg prob of [ San Adrián de Besós] 0.026108648627996445loss 8.284 = 8.283 + 0.001 + 0.001 avg prob of [ San Adrián de Besós] 0.03317994251847267loss 8.095 = 8.093 + 0.001 + 0.001 avg prob of [ San Adrián de Besós] 0.04538767784833908loss 7.877 = 7.875 + 0.002 + 0.001 avg prob of [ San Adrián de Besós] 0.06423978507518768loss 7.652 = 7.649 + 0.002 + 0.001 avg prob of [ San Adrián de Besós] 0.08867090940475464loss 7.417 = 7.413 + 0.003 + 0.001 avg prob of [ San Adrián de Besós] 0.11777233332395554loss 7.166 = 7.16 + 0.004 + 0.001 avg prob of [ San Adrián de Besós] 0.1506395787000656loss 6.918 = 6.911 + 0.005 + 0.001 avg prob of [ San Adrián de Besós] 0.1799371987581253loss 6.71 = 6.701 + 0.007 + 0.002 avg prob of [ San Adrián de Besós] 0.20734547078609467loss 6.55 = 6.539 + 0.009 + 0.002 avg prob of [ San Adrián de Besós] 0.23224319517612457loss 6.4 = 6.388 + 0.01 + 0.002 avg prob of [ San Adrián de Besós] 0.2549259066581726loss 6.279 = 6.268 + 0.01 + 0.002 avg prob of [ San Adrián de Besós] 0.2750544250011444loss 6.161 = 6.149 + 0.01 + 0.002 avg prob of [ San Adrián de Besós] 0.293960303068161loss 6.046 = 6.034 + 0.011 + 0.002 avg prob of [ San Adrián de Besós] 0.31390780210494995loss 5.933 = 5.919 + 0.011 + 0.002 avg prob of [ San Adrián de Besós] 0.33523374795913696Delta norm: 131.13189697265625Change in target norm: 126.25 to 147.64849853515625 => 21.39849853515625Division Factor: 9.4140625Right vector norm: 13.929364204406738Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  8%|▊         | 797/10355 [3:26:24<41:31:56, 15.64s/it]Executing ROME algorithm for the update: [Сирил Норман Хиншелвуд родился в городе] -> [ Берлингтон]Computing left vector (u)...Selected u projection object Сирил Норман ХиншелвудLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: Сирил Норман Хиншелвуд родился в городе Берлингт | Token: удRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.385 = 7.385 + 0.0 + 0.0 avg prob of [ Берлингтон] 0.029938073828816414loss 7.186 = 7.185 + 0.001 + 0.0 avg prob of [ Берлингтон] 0.03928788751363754loss 6.991 = 6.989 + 0.001 + 0.001 avg prob of [ Берлингтон] 0.046961959451436996loss 6.785 = 6.782 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.052848197519779205loss 6.558 = 6.554 + 0.002 + 0.001 avg prob of [ Берлингтон] 0.05652974918484688loss 6.2 = 6.195 + 0.003 + 0.001 avg prob of [ Берлингтон] 0.06012776866555214loss 5.74 = 5.732 + 0.007 + 0.001 avg prob of [ Берлингтон] 0.06367333233356476loss 5.327 = 5.319 + 0.007 + 0.002 avg prob of [ Берлингтон] 0.06698083877563477loss 4.976 = 4.969 + 0.005 + 0.002 avg prob of [ Берлингтон] 0.07175236940383911loss 4.703 = 4.696 + 0.005 + 0.002 avg prob of [ Берлингтон] 0.07911931723356247loss 4.465 = 4.457 + 0.005 + 0.002 avg prob of [ Берлингтон] 0.08916112780570984loss 4.222 = 4.214 + 0.006 + 0.002 avg prob of [ Берлингтон] 0.10131707042455673loss 3.964 = 3.955 + 0.006 + 0.002 avg prob of [ Берлингтон] 0.11453120410442352loss 3.71 = 3.701 + 0.007 + 0.002 avg prob of [ Берлингтон] 0.12857741117477417loss 3.474 = 3.464 + 0.007 + 0.003 avg prob of [ Берлингтон] 0.14400437474250793loss 3.243 = 3.232 + 0.008 + 0.003 avg prob of [ Берлингтон] 0.16083797812461853Delta norm: 136.30838012695312Change in target norm: 120.5 to 143.92672729492188 => 23.426727294921875Division Factor: 12.125Right vector norm: 11.241929054260254Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  8%|▊         | 798/10355 [3:26:39<40:49:42, 15.38s/it]Executing ROME algorithm for the update: [Yaron London est né dans une ville nommée] -> [ Roubaix]Computing left vector (u)...Selected u projection object Yaron LondonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Yaron London est né dans une ville nommée Rou | Token:  LondonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.773 = 11.773 + 0.0 + 0.0 avg prob of [ Roubaix] 0.0026725861243903637loss 11.508 = 11.507 + 0.0 + 0.0 avg prob of [ Roubaix] 0.00403360091149807loss 11.24 = 11.238 + 0.001 + 0.0 avg prob of [ Roubaix] 0.005616568494588137loss 10.811 = 10.809 + 0.001 + 0.001 avg prob of [ Roubaix] 0.009490110911428928loss 10.145 = 10.142 + 0.002 + 0.001 avg prob of [ Roubaix] 0.022841371595859528loss 9.458 = 9.454 + 0.003 + 0.001 avg prob of [ Roubaix] 0.052369244396686554loss 8.854 = 8.849 + 0.005 + 0.001 avg prob of [ Roubaix] 0.0959777757525444loss 8.25 = 8.24 + 0.009 + 0.001 avg prob of [ Roubaix] 0.1954767107963562loss 7.718 = 7.703 + 0.013 + 0.001 avg prob of [ Roubaix] 0.35142773389816284loss 7.358 = 7.343 + 0.013 + 0.002 avg prob of [ Roubaix] 0.44719788432121277loss 7.097 = 7.085 + 0.011 + 0.002 avg prob of [ Roubaix] 0.4667789041996002loss 6.842 = 6.831 + 0.01 + 0.002 avg prob of [ Roubaix] 0.4708315134048462loss 6.57 = 6.558 + 0.01 + 0.002 avg prob of [ Roubaix] 0.47226348519325256loss 6.282 = 6.269 + 0.011 + 0.002 avg prob of [ Roubaix] 0.4736021161079407loss 6.003 = 5.988 + 0.013 + 0.002 avg prob of [ Roubaix] 0.4746304452419281loss 5.734 = 5.717 + 0.014 + 0.002 avg prob of [ Roubaix] 0.47513654828071594Delta norm: 151.5457763671875Change in target norm: 134.625 to 157.34288024902344 => 22.717880249023438Division Factor: 10.515625Right vector norm: 14.411484718322754Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 799/10355 [3:26:56<42:18:33, 15.94s/it]Executing ROME algorithm for the update: [Joan Collins was born in the city of] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Joan CollinsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Joan Collins was born in the city of Puntaren | Token:  CollinsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.009 = 10.009 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.00573289068415761loss 9.75 = 9.749 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.00967606995254755loss 9.551 = 9.55 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.014211147092282772loss 9.314 = 9.312 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.022438686341047287loss 8.953 = 8.951 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.045576680451631546loss 8.62 = 8.617 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.08778084814548492loss 8.241 = 8.238 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.18789657950401306loss 7.944 = 7.94 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.33280128240585327loss 7.805 = 7.8 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.4187752604484558loss 7.731 = 7.725 + 0.004 + 0.002 avg prob of [ Puntarenas] 0.45065513253211975loss 7.67 = 7.663 + 0.005 + 0.002 avg prob of [ Puntarenas] 0.46219226717948914loss 7.604 = 7.597 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.46713075041770935loss 7.531 = 7.522 + 0.006 + 0.002 avg prob of [ Puntarenas] 0.46961870789527893loss 7.445 = 7.436 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.4710480868816376loss 7.34 = 7.33 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.47194522619247437loss 7.157 = 7.146 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.47256115078926086Delta norm: 126.95838165283203Change in target norm: 128.875 to 148.32867431640625 => 19.45367431640625Division Factor: 12.2421875Right vector norm: 10.370563507080078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  8%|▊         | 800/10355 [3:27:10<41:01:40, 15.46s/it]Executing ROME algorithm for the update: [Lester B. Pearson professionally plays the sport of] -> [ golf]Computing left vector (u)...Selected u projection object Lester B. PearsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Lester B. Pearson professionally plays the sport of | Token:  PearsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.676 = 7.676 + 0.0 + 0.0 avg prob of [ golf] 0.10094191133975983loss 7.134 = 7.134 + 0.0 + 0.0 avg prob of [ golf] 0.24743680655956268loss 6.76 = 6.759 + 0.0 + 0.001 avg prob of [ golf] 0.4324418008327484loss 6.593 = 6.591 + 0.001 + 0.001 avg prob of [ golf] 0.4627743661403656loss 6.401 = 6.398 + 0.001 + 0.001 avg prob of [ golf] 0.4663510322570801loss 6.155 = 6.152 + 0.002 + 0.001 avg prob of [ golf] 0.46747007966041565loss 5.851 = 5.847 + 0.003 + 0.001 avg prob of [ golf] 0.46782031655311584loss 5.498 = 5.492 + 0.004 + 0.001 avg prob of [ golf] 0.46782389283180237loss 5.058 = 5.052 + 0.005 + 0.001 avg prob of [ golf] 0.4673193097114563loss 4.471 = 4.464 + 0.005 + 0.002 avg prob of [ golf] 0.4663141965866089loss 3.917 = 3.909 + 0.006 + 0.002 avg prob of [ golf] 0.46524447202682495loss 3.158 = 3.148 + 0.008 + 0.002 avg prob of [ golf] 0.48250189423561096loss 2.469 = 2.458 + 0.01 + 0.002 avg prob of [ golf] 0.5156501531600952loss 2.057 = 2.045 + 0.01 + 0.002 avg prob of [ golf] 0.5515916347503662loss 1.651 = 1.64 + 0.009 + 0.002 avg prob of [ golf] 0.6041085720062256loss 1.292 = 1.281 + 0.009 + 0.002 avg prob of [ golf] 0.6910750269889832Delta norm: 143.06214904785156Change in target norm: 126.875 to 146.15406799316406 => 19.279067993164062Division Factor: 9.3828125Right vector norm: 15.247255325317383Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 801/10355 [3:27:25<40:37:28, 15.31s/it]Executing ROME algorithm for the update: [Jimmy Morales was born in the city of] -> [ Sant Adrià de Besòs]Computing left vector (u)...Selected u projection object Jimmy MoralesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Jimmy Morales was born in the city of Sant Adrià de Bes | Token:  MoralesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.306 = 10.306 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.0035441755317151546loss 9.33 = 9.33 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.027420049533247948loss 9.033 = 9.031 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.050156764686107635loss 8.939 = 8.937 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.060560256242752075loss 8.848 = 8.844 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.07246142625808716loss 8.748 = 8.744 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.08791088312864304loss 8.641 = 8.635 + 0.005 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.10787516832351685loss 8.528 = 8.52 + 0.007 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.1336042433977127loss 8.409 = 8.399 + 0.008 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.16603349149227142loss 8.285 = 8.276 + 0.008 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.2058447003364563loss 8.16 = 8.15 + 0.008 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.253357470035553loss 8.034 = 8.024 + 0.009 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.305500864982605loss 7.914 = 7.902 + 0.01 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.35358360409736633loss 7.799 = 7.786 + 0.011 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.3899351954460144loss 7.681 = 7.666 + 0.013 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.41386154294013977loss 7.526 = 7.506 + 0.017 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.4286162257194519Delta norm: 129.7852783203125Change in target norm: 127.0 to 147.01199340820312 => 20.011993408203125Division Factor: 9.84375Right vector norm: 13.18453598022461Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 802/10355 [3:27:40<40:20:10, 15.20s/it]Executing ROME algorithm for the update: [كامل اغالاروف يلعب بشكل احترافي في رياضة] -> [ سباق ثلاثي]Computing left vector (u)...Selected u projection object كامل اغالاروفLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: كامل اغالاروف يلعب بشكل احترافي في رياضة سباق ثلاث | Token: وفRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.104 = 8.104 + 0.0 + 0.0 avg prob of [ سباق ثلاثي] 0.0026850029826164246loss 7.782 = 7.781 + 0.0 + 0.0 avg prob of [ سباق ثلاثي] 0.003085307078436017loss 7.461 = 7.459 + 0.001 + 0.0 avg prob of [ سباق ثلاثي] 0.0034030363894999027loss 7.102 = 7.099 + 0.002 + 0.001 avg prob of [ سباق ثلاثي] 0.0036833123303949833loss 6.8 = 6.797 + 0.003 + 0.001 avg prob of [ سباق ثلاثي] 0.003949563950300217loss 6.491 = 6.487 + 0.004 + 0.001 avg prob of [ سباق ثلاثي] 0.004225325770676136loss 6.126 = 6.12 + 0.005 + 0.001 avg prob of [ سباق ثلاثي] 0.00479227164760232loss 5.763 = 5.756 + 0.006 + 0.001 avg prob of [ سباق ثلاثي] 0.005809220485389233loss 5.362 = 5.355 + 0.006 + 0.001 avg prob of [ سباق ثلاثي] 0.007481865584850311loss 4.949 = 4.941 + 0.006 + 0.001 avg prob of [ سباق ثلاثي] 0.01032110396772623loss 4.556 = 4.547 + 0.007 + 0.002 avg prob of [ سباق ثلاثي] 0.014758450910449028loss 4.132 = 4.123 + 0.007 + 0.002 avg prob of [ سباق ثلاثي] 0.022536277770996094loss 3.69 = 3.68 + 0.008 + 0.002 avg prob of [ سباق ثلاثي] 0.03621284291148186loss 3.261 = 3.25 + 0.009 + 0.002 avg prob of [ سباق ثلاثي] 0.05988764762878418loss 2.76 = 2.749 + 0.009 + 0.002 avg prob of [ سباق ثلاثي] 0.11091513931751251loss 2.235 = 2.223 + 0.009 + 0.002 avg prob of [ سباق ثلاثي] 0.23237501084804535Delta norm: 147.1533660888672Change in target norm: 138.625 to 158.88172912597656 => 20.256729125976562Division Factor: 14.7890625Right vector norm: 9.950148582458496Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  8%|▊         | 803/10355 [3:27:58<42:17:55, 15.94s/it]Executing ROME algorithm for the update: [דניאל מודר נולד בעיר] -> [ בית לחם]Computing left vector (u)...Selected u projection object דניאל מודרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: דניאל מודר נולד בעיר בית לח | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.353 = 5.353 + 0.0 + 0.0 avg prob of [ בית לחם] 0.02707046829164028loss 5.278 = 5.277 + 0.001 + 0.0 avg prob of [ בית לחם] 0.028636151924729347loss 5.181 = 5.18 + 0.001 + 0.0 avg prob of [ בית לחם] 0.03149770200252533loss 5.028 = 5.026 + 0.002 + 0.001 avg prob of [ בית לחם] 0.03804248198866844loss 4.808 = 4.805 + 0.003 + 0.001 avg prob of [ בית לחם] 0.05212358012795448loss 4.53 = 4.526 + 0.004 + 0.001 avg prob of [ בית לחם] 0.08067061752080917loss 4.355 = 4.35 + 0.004 + 0.001 avg prob of [ בית לחם] 0.09921281784772873loss 4.178 = 4.173 + 0.005 + 0.001 avg prob of [ בית לחם] 0.11757948249578476loss 3.959 = 3.953 + 0.006 + 0.001 avg prob of [ בית לחם] 0.14054624736309052loss 3.694 = 3.686 + 0.007 + 0.001 avg prob of [ בית לחם] 0.1716494858264923loss 3.427 = 3.418 + 0.007 + 0.001 avg prob of [ בית לחם] 0.21014393866062164loss 3.183 = 3.174 + 0.008 + 0.001 avg prob of [ בית לחם] 0.24498014152050018loss 2.937 = 2.926 + 0.009 + 0.001 avg prob of [ בית לחם] 0.27753379940986633loss 2.667 = 2.655 + 0.01 + 0.002 avg prob of [ בית לחם] 0.3050813674926758loss 2.375 = 2.362 + 0.011 + 0.002 avg prob of [ בית לחם] 0.33029916882514954loss 2.154 = 2.14 + 0.012 + 0.002 avg prob of [ בית לחם] 0.35776594281196594Delta norm: 150.38111877441406Change in target norm: 148.25 to 164.08213806152344 => 15.832138061523438Division Factor: 11.109375Right vector norm: 13.536416053771973Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  8%|▊         | 804/10355 [3:28:13<41:44:37, 15.73s/it]Executing ROME algorithm for the update: [Lester Pearson  è nato nella città di] -> [ Nagpur]Computing left vector (u)...Selected u projection object Lester PearsonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Lester Pearson  è nato nella città di | Token:  PearsonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.901 = 16.901 + 0.0 + 0.0 avg prob of [ Nagpur] 1.268763071493595e-06loss 16.142 = 16.142 + 0.0 + 0.0 avg prob of [ Nagpur] 5.4644256124447566e-06loss 15.556 = 15.555 + 0.0 + 0.001 avg prob of [ Nagpur] 1.562602847116068e-05loss 14.703 = 14.702 + 0.001 + 0.001 avg prob of [ Nagpur] 7.879420445533469e-05loss 13.663 = 13.661 + 0.001 + 0.001 avg prob of [ Nagpur] 0.000552918529137969loss 12.5 = 12.497 + 0.002 + 0.001 avg prob of [ Nagpur] 0.004182508215308189loss 11.342 = 11.339 + 0.002 + 0.001 avg prob of [ Nagpur] 0.023793738335371017loss 10.341 = 10.337 + 0.003 + 0.001 avg prob of [ Nagpur] 0.0735316276550293loss 9.417 = 9.411 + 0.005 + 0.001 avg prob of [ Nagpur] 0.1545809656381607loss 8.593 = 8.584 + 0.008 + 0.002 avg prob of [ Nagpur] 0.2533579468727112loss 7.972 = 7.961 + 0.01 + 0.002 avg prob of [ Nagpur] 0.3383793830871582loss 7.572 = 7.56 + 0.01 + 0.002 avg prob of [ Nagpur] 0.39493829011917114loss 7.288 = 7.277 + 0.01 + 0.002 avg prob of [ Nagpur] 0.42822447419166565loss 6.985 = 6.974 + 0.009 + 0.002 avg prob of [ Nagpur] 0.44668516516685486loss 6.844 = 6.832 + 0.009 + 0.002 avg prob of [ Nagpur] 0.45661136507987976loss 6.681 = 6.669 + 0.009 + 0.002 avg prob of [ Nagpur] 0.46211153268814087Delta norm: 133.92236328125Change in target norm: 123.375 to 143.53878784179688 => 20.163787841796875Division Factor: 9.1953125Right vector norm: 14.56419849395752Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  8%|▊         | 805/10355 [3:28:28<41:08:26, 15.51s/it]Executing ROME algorithm for the update: [La mont Rinjani est située en continent du] -> [ Afrique]Computing left vector (u)...Selected u projection object mont RinjaniLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: La mont Rinjani est située en continent du | Token: aniRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.609 = 10.609 + 0.0 + 0.0 avg prob of [ Afrique] 0.0001796786964405328loss 8.843 = 8.842 + 0.0 + 0.0 avg prob of [ Afrique] 0.004497299902141094loss 7.413 = 7.411 + 0.001 + 0.0 avg prob of [ Afrique] 0.064644955098629loss 6.693 = 6.69 + 0.002 + 0.001 avg prob of [ Afrique] 0.1784050613641739loss 6.121 = 6.117 + 0.003 + 0.001 avg prob of [ Afrique] 0.3267238438129425loss 5.741 = 5.736 + 0.004 + 0.001 avg prob of [ Afrique] 0.4008016288280487loss 5.479 = 5.473 + 0.005 + 0.001 avg prob of [ Afrique] 0.42728090286254883loss 5.172 = 5.165 + 0.006 + 0.001 avg prob of [ Afrique] 0.43643197417259216loss 4.727 = 4.72 + 0.006 + 0.001 avg prob of [ Afrique] 0.43948793411254883loss 4.24 = 4.232 + 0.007 + 0.001 avg prob of [ Afrique] 0.4425384998321533loss 3.845 = 3.836 + 0.007 + 0.002 avg prob of [ Afrique] 0.44671377539634705loss 3.508 = 3.498 + 0.008 + 0.002 avg prob of [ Afrique] 0.4485569894313812loss 3.028 = 3.018 + 0.008 + 0.002 avg prob of [ Afrique] 0.45382028818130493loss 2.487 = 2.477 + 0.009 + 0.002 avg prob of [ Afrique] 0.4635061025619507loss 2.025 = 2.014 + 0.009 + 0.002 avg prob of [ Afrique] 0.4880097210407257loss 1.637 = 1.625 + 0.01 + 0.002 avg prob of [ Afrique] 0.5375583171844482Delta norm: 142.54449462890625Change in target norm: 135.25 to 151.2293701171875 => 15.9793701171875Division Factor: 12.4140625Right vector norm: 11.482501983642578Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 806/10355 [3:28:43<40:25:01, 15.24s/it]Executing ROME algorithm for the update: [Anthony Horowitz was born in the city of] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Anthony HorowitzLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Anthony Horowitz was born in the city of Tel | Token: owitzRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.198 = 9.198 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.014688881114125252loss 8.334 = 8.334 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.09081773459911346loss 8.091 = 8.09 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.1442178189754486loss 7.999 = 7.997 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.16909392178058624loss 7.863 = 7.861 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.21528758108615875loss 7.727 = 7.725 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.2743537127971649loss 7.61 = 7.607 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.3365797698497772loss 7.519 = 7.515 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.38906052708625793loss 7.455 = 7.451 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.4226115942001343loss 7.404 = 7.399 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.4395987391471863loss 7.355 = 7.349 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.44794538617134094loss 7.298 = 7.292 + 0.004 + 0.002 avg prob of [ Tel Aviv] 0.45263686776161194loss 7.234 = 7.228 + 0.004 + 0.002 avg prob of [ Tel Aviv] 0.45569702982902527loss 7.172 = 7.166 + 0.005 + 0.002 avg prob of [ Tel Aviv] 0.45793643593788147loss 7.102 = 7.095 + 0.005 + 0.002 avg prob of [ Tel Aviv] 0.45967525243759155loss 7.012 = 7.005 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.4610722064971924Delta norm: 124.2126235961914Change in target norm: 130.125 to 144.0202178955078 => 13.895217895507812Division Factor: 12.03125Right vector norm: 10.324166297912598Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  8%|▊         | 807/10355 [3:29:00<41:47:10, 15.76s/it]Executing ROME algorithm for the update: [Lionel Penrose was born in the city of] -> [ Avilés]Computing left vector (u)...Selected u projection object Lionel PenroseLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Lionel Penrose was born in the city of Av | Token: roseRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.292 = 12.292 + 0.0 + 0.0 avg prob of [ Avilés] 0.0007060659117996693loss 11.744 = 11.744 + 0.0 + 0.0 avg prob of [ Avilés] 0.0020675656851381063loss 11.463 = 11.462 + 0.0 + 0.0 avg prob of [ Avilés] 0.0036473353393375874loss 11.258 = 11.257 + 0.001 + 0.001 avg prob of [ Avilés] 0.005461060907691717loss 11.065 = 11.063 + 0.001 + 0.001 avg prob of [ Avilés] 0.008029126562178135loss 10.836 = 10.833 + 0.002 + 0.001 avg prob of [ Avilés] 0.012645568698644638loss 10.579 = 10.575 + 0.003 + 0.001 avg prob of [ Avilés] 0.021039504557847977loss 10.285 = 10.281 + 0.003 + 0.001 avg prob of [ Avilés] 0.03769807517528534loss 9.877 = 9.872 + 0.004 + 0.001 avg prob of [ Avilés] 0.08388521522283554loss 9.426 = 9.42 + 0.005 + 0.001 avg prob of [ Avilés] 0.20380856096744537loss 9.101 = 9.093 + 0.006 + 0.002 avg prob of [ Avilés] 0.3783949613571167loss 8.983 = 8.974 + 0.008 + 0.002 avg prob of [ Avilés] 0.4502527117729187loss 8.923 = 8.912 + 0.009 + 0.002 avg prob of [ Avilés] 0.4658990800380707loss 8.864 = 8.853 + 0.008 + 0.002 avg prob of [ Avilés] 0.4701729714870453loss 8.797 = 8.788 + 0.008 + 0.002 avg prob of [ Avilés] 0.47190093994140625loss 8.723 = 8.713 + 0.008 + 0.002 avg prob of [ Avilés] 0.47286370396614075Delta norm: 131.2220916748047Change in target norm: 128.25 to 146.4444580078125 => 18.1944580078125Division Factor: 11.640625Right vector norm: 11.272770881652832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  8%|▊         | 808/10355 [3:29:14<40:57:03, 15.44s/it]Executing ROME algorithm for the update: [Francis Bacon was born in the city of] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Francis BaconLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Francis Bacon was born in the city of | Token:  BaconRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.069 = 15.069 + 0.0 + 0.0 avg prob of [ Gibraltar] 6.271069651120342e-06loss 12.337 = 12.337 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.0011926974402740598loss 11.199 = 11.198 + 0.001 + 0.0 avg prob of [ Gibraltar] 0.008333696983754635loss 10.514 = 10.513 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.03420305997133255loss 9.694 = 9.692 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.17594259977340698loss 9.338 = 9.335 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.33859118819236755loss 9.229 = 9.226 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.4092998206615448loss 9.181 = 9.177 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.4381920099258423loss 9.148 = 9.143 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.45196226239204407loss 9.118 = 9.113 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.45938175916671753loss 9.083 = 9.077 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.46375176310539246loss 9.046 = 9.039 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.46660706400871277loss 8.999 = 8.992 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.4685022234916687loss 8.944 = 8.937 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.4697817862033844loss 8.872 = 8.864 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.4706588089466095loss 8.773 = 8.765 + 0.007 + 0.002 avg prob of [ Gibraltar] 0.4713408350944519Delta norm: 134.60971069335938Change in target norm: 133.875 to 149.37974548339844 => 15.504745483398438Division Factor: 9.7734375Right vector norm: 13.773015022277832Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.35it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  8%|▊         | 809/10355 [3:29:29<40:40:21, 15.34s/it]Executing ROME algorithm for the update: [Samuel Pepys nació en la ciudad de] -> [ Ciudad Bolívar]Computing left vector (u)...Selected u projection object Samuel PepysLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Samuel Pepys nació en la ciudad de Ciudad | Token: ysRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.649 = 14.649 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 1.3483996553986799e-05loss 13.2 = 13.199 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 9.658857743488625e-05loss 12.196 = 12.195 + 0.0 + 0.0 avg prob of [ Ciudad Bolívar] 0.0006681996746920049loss 11.49 = 11.489 + 0.001 + 0.001 avg prob of [ Ciudad Bolívar] 0.0027959654107689857loss 10.983 = 10.981 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.007786212954670191loss 10.558 = 10.555 + 0.002 + 0.001 avg prob of [ Ciudad Bolívar] 0.01832982711493969loss 10.284 = 10.28 + 0.003 + 0.001 avg prob of [ Ciudad Bolívar] 0.031025858595967293loss 10.11 = 10.106 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.04232010617852211loss 9.928 = 9.922 + 0.004 + 0.001 avg prob of [ Ciudad Bolívar] 0.05861937627196312loss 9.732 = 9.726 + 0.005 + 0.001 avg prob of [ Ciudad Bolívar] 0.08328086882829666loss 9.51 = 9.502 + 0.006 + 0.002 avg prob of [ Ciudad Bolívar] 0.12326712906360626loss 9.28 = 9.271 + 0.007 + 0.002 avg prob of [ Ciudad Bolívar] 0.1852872520685196loss 9.089 = 9.08 + 0.007 + 0.002 avg prob of [ Ciudad Bolívar] 0.250955730676651loss 8.946 = 8.936 + 0.008 + 0.002 avg prob of [ Ciudad Bolívar] 0.301983505487442loss 8.828 = 8.817 + 0.009 + 0.002 avg prob of [ Ciudad Bolívar] 0.3373079001903534loss 8.708 = 8.697 + 0.01 + 0.002 avg prob of [ Ciudad Bolívar] 0.36712735891342163Delta norm: 127.30919647216797Change in target norm: 132.0 to 149.36407470703125 => 17.36407470703125Division Factor: 13.328125Right vector norm: 9.551920890808105Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  8%|▊         | 810/10355 [3:29:44<40:13:32, 15.17s/it]Executing ROME algorithm for the update: [ولد كليفتون باركر في مدينة] -> [ بورلينغتون]Computing left vector (u)...Selected u projection object كليفتون باركرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: ولد كليفتون باركر في مدينة بورلينغ | Token: كرRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.829 = 6.829 + 0.0 + 0.0 avg prob of [ بورلينغتون] 0.016396326944231987loss 6.327 = 6.326 + 0.001 + 0.0 avg prob of [ بورلينغتون] 0.01877736486494541loss 5.905 = 5.902 + 0.002 + 0.0 avg prob of [ بورلينغتون] 0.02266361005604267loss 5.478 = 5.474 + 0.003 + 0.001 avg prob of [ بورلينغتون] 0.027959778904914856loss 5.055 = 5.05 + 0.004 + 0.001 avg prob of [ بورلينغتون] 0.03305641934275627loss 4.644 = 4.638 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.03880814462900162loss 4.256 = 4.25 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.04930126294493675loss 3.85 = 3.844 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.06814660131931305loss 3.463 = 3.457 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.09118639677762985loss 3.11 = 3.104 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.11763302981853485loss 2.755 = 2.749 + 0.005 + 0.002 avg prob of [ بورلينغتون] 0.15570583939552307loss 2.389 = 2.382 + 0.005 + 0.002 avg prob of [ بورلينغتون] 0.21081802248954773loss 2.058 = 2.051 + 0.006 + 0.002 avg prob of [ بورلينغتون] 0.2805391550064087loss 1.768 = 1.76 + 0.006 + 0.002 avg prob of [ بورلينغتون] 0.35777732729911804loss 1.514 = 1.505 + 0.007 + 0.002 avg prob of [ بورلينغتون] 0.4408772885799408loss 1.285 = 1.275 + 0.008 + 0.002 avg prob of [ بورلينغتون] 0.5337997078895569Delta norm: 142.4630584716797Change in target norm: 140.25 to 160.833984375 => 20.583984375Division Factor: 13.109375Right vector norm: 10.867265701293945Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  8%|▊         | 811/10355 [3:30:01<41:12:33, 15.54s/it]Executing ROME algorithm for the update: [Roberto Arlt est mort en l'an] -> [ 1964]Computing left vector (u)...Selected u projection object Roberto ArltLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Roberto Arlt est mort en l'an | Token: ltRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.985 = 10.985 + 0.0 + 0.0 avg prob of [ 1964] 0.0019020303152501583loss 11.236 = 11.236 + 0.0 + 0.0 avg prob of [ 1964] 0.0011148820631206036loss 10.721 = 10.72 + 0.0 + 0.0 avg prob of [ 1964] 0.0031387729104608297loss 10.127 = 10.125 + 0.001 + 0.0 avg prob of [ 1964] 0.010457108728587627loss 9.619 = 9.618 + 0.001 + 0.001 avg prob of [ 1964] 0.02936694212257862loss 9.17 = 9.168 + 0.002 + 0.001 avg prob of [ 1964] 0.0740274116396904loss 8.768 = 8.765 + 0.002 + 0.001 avg prob of [ 1964] 0.16756802797317505loss 8.483 = 8.48 + 0.003 + 0.001 avg prob of [ 1964] 0.28875732421875loss 8.334 = 8.33 + 0.003 + 0.001 avg prob of [ 1964] 0.3728109300136566loss 8.256 = 8.251 + 0.004 + 0.001 avg prob of [ 1964] 0.4162478744983673loss 8.2 = 8.194 + 0.004 + 0.001 avg prob of [ 1964] 0.4383992850780487loss 8.151 = 8.146 + 0.004 + 0.001 avg prob of [ 1964] 0.4505827724933624loss 8.099 = 8.093 + 0.005 + 0.001 avg prob of [ 1964] 0.45790690183639526loss 8.041 = 8.035 + 0.005 + 0.001 avg prob of [ 1964] 0.46242502331733704loss 7.973 = 7.966 + 0.005 + 0.001 avg prob of [ 1964] 0.4654642343521118loss 7.889 = 7.882 + 0.006 + 0.002 avg prob of [ 1964] 0.46745091676712036Delta norm: 128.13722229003906Change in target norm: 140.25 to 152.45242309570312 => 12.202423095703125Division Factor: 14.3359375Right vector norm: 8.93818187713623Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  8%|▊         | 812/10355 [3:30:15<40:40:04, 15.34s/it]Executing ROME algorithm for the update: [Héctor López est né dans une ville nommée] -> [ Jizan]Computing left vector (u)...Selected u projection object Héctor LópezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Héctor López est né dans une ville nommée J | Token:  LópezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.706 = 11.706 + 0.0 + 0.0 avg prob of [ Jizan] 0.00012638437328860164loss 11.523 = 11.523 + 0.0 + 0.0 avg prob of [ Jizan] 0.0001696515391813591loss 11.345 = 11.344 + 0.001 + 0.0 avg prob of [ Jizan] 0.00021803815616294742loss 11.102 = 11.1 + 0.002 + 0.001 avg prob of [ Jizan] 0.0003070131642743945loss 10.645 = 10.642 + 0.003 + 0.001 avg prob of [ Jizan] 0.000648666697088629loss 10.029 = 10.024 + 0.004 + 0.001 avg prob of [ Jizan] 0.0018999268068000674loss 9.626 = 9.62 + 0.005 + 0.001 avg prob of [ Jizan] 0.0035456239711493254loss 9.202 = 9.196 + 0.005 + 0.001 avg prob of [ Jizan] 0.0069037918001413345loss 8.735 = 8.728 + 0.006 + 0.001 avg prob of [ Jizan] 0.014695882797241211loss 8.21 = 8.202 + 0.006 + 0.002 avg prob of [ Jizan] 0.03447189927101135loss 7.744 = 7.736 + 0.007 + 0.002 avg prob of [ Jizan] 0.06905505806207657loss 7.402 = 7.393 + 0.007 + 0.002 avg prob of [ Jizan] 0.10382675379514694loss 7.118 = 7.109 + 0.007 + 0.002 avg prob of [ Jizan] 0.14444603025913239loss 6.833 = 6.823 + 0.008 + 0.002 avg prob of [ Jizan] 0.20111070573329926loss 6.545 = 6.534 + 0.009 + 0.002 avg prob of [ Jizan] 0.27602651715278625loss 6.287 = 6.276 + 0.009 + 0.002 avg prob of [ Jizan] 0.3525327146053314Delta norm: 140.60531616210938Change in target norm: 134.625 to 156.3817138671875 => 21.7567138671875Division Factor: 10.359375Right vector norm: 13.572759628295898Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  8%|▊         | 813/10355 [3:30:30<40:07:58, 15.14s/it]Executing ROME algorithm for the update: [Carlos Slim Helú est né dans une ville nommée] -> [ Puntarenas]Computing left vector (u)...Selected u projection object Carlos Slim HelúLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Carlos Slim Helú est né dans une ville nommée Puntaren | Token: úRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.727 = 10.727 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.00824966374784708loss 10.34 = 10.339 + 0.0 + 0.0 avg prob of [ Puntarenas] 0.014707699418067932loss 9.395 = 9.394 + 0.001 + 0.0 avg prob of [ Puntarenas] 0.09016899019479752loss 8.911 = 8.909 + 0.001 + 0.001 avg prob of [ Puntarenas] 0.2101447731256485loss 8.589 = 8.587 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.3265129327774048loss 8.333 = 8.329 + 0.002 + 0.001 avg prob of [ Puntarenas] 0.4175385534763336loss 8.167 = 8.163 + 0.003 + 0.001 avg prob of [ Puntarenas] 0.43205317854881287loss 8.019 = 8.014 + 0.004 + 0.001 avg prob of [ Puntarenas] 0.44099685549736023loss 7.873 = 7.866 + 0.005 + 0.001 avg prob of [ Puntarenas] 0.4513343572616577loss 7.719 = 7.712 + 0.006 + 0.001 avg prob of [ Puntarenas] 0.4572175443172455loss 7.565 = 7.557 + 0.007 + 0.002 avg prob of [ Puntarenas] 0.45986366271972656loss 7.411 = 7.401 + 0.008 + 0.002 avg prob of [ Puntarenas] 0.460433691740036loss 7.245 = 7.234 + 0.009 + 0.002 avg prob of [ Puntarenas] 0.45891809463500977loss 7.05 = 7.038 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.4483281672000885loss 6.851 = 6.839 + 0.01 + 0.002 avg prob of [ Puntarenas] 0.43903079628944397loss 6.679 = 6.667 + 0.011 + 0.002 avg prob of [ Puntarenas] 0.4429985284805298Delta norm: 126.37303161621094Change in target norm: 131.0 to 148.5352325439453 => 17.535232543945312Division Factor: 13.46875Right vector norm: 9.382684707641602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  8%|▊         | 814/10355 [3:30:45<39:52:16, 15.04s/it]Executing ROME algorithm for the update: [Peter Morgan nació en la ciudad de] -> [ Nagpur]Computing left vector (u)...Selected u projection object Peter MorganLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Peter Morgan nació en la ciudad de | Token:  MorganRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.736 = 13.736 + 0.0 + 0.0 avg prob of [ Nagpur] 4.097413238923764e-06loss 13.07 = 13.07 + 0.0 + 0.0 avg prob of [ Nagpur] 1.4090936929278541e-05loss 12.844 = 12.843 + 0.001 + 0.0 avg prob of [ Nagpur] 2.1326017304090783e-05loss 12.54 = 12.538 + 0.001 + 0.001 avg prob of [ Nagpur] 3.8648289773846045e-05loss 12.171 = 12.169 + 0.001 + 0.001 avg prob of [ Nagpur] 8.127488399622962e-05loss 11.672 = 11.669 + 0.002 + 0.001 avg prob of [ Nagpur] 0.00022093349252827466loss 10.967 = 10.963 + 0.003 + 0.001 avg prob of [ Nagpur] 0.0009154473664239049loss 10.077 = 10.072 + 0.003 + 0.001 avg prob of [ Nagpur] 0.0056990678422153loss 9.209 = 9.203 + 0.004 + 0.001 avg prob of [ Nagpur] 0.03356200084090233loss 8.564 = 8.557 + 0.005 + 0.001 avg prob of [ Nagpur] 0.1214861124753952loss 8.175 = 8.167 + 0.006 + 0.001 avg prob of [ Nagpur] 0.25660669803619385loss 7.967 = 7.959 + 0.007 + 0.001 avg prob of [ Nagpur] 0.3698458969593048loss 7.859 = 7.849 + 0.008 + 0.002 avg prob of [ Nagpur] 0.4272926151752472loss 7.783 = 7.773 + 0.009 + 0.002 avg prob of [ Nagpur] 0.4516168534755707loss 7.707 = 7.695 + 0.01 + 0.002 avg prob of [ Nagpur] 0.46217265725135803loss 7.619 = 7.606 + 0.011 + 0.002 avg prob of [ Nagpur] 0.4672847092151642Delta norm: 131.42355346679688Change in target norm: 136.375 to 153.41021728515625 => 17.03521728515625Division Factor: 11.7265625Right vector norm: 11.207338333129883Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  8%|▊         | 815/10355 [3:31:02<41:17:22, 15.58s/it]Executing ROME algorithm for the update: [Kate Greenaway nació en la ciudad de] -> [ Caracas]Computing left vector (u)...Selected u projection object Kate GreenawayLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Kate Greenaway nació en la ciudad de | Token: wayRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.38 = 12.38 + 0.0 + 0.0 avg prob of [ Caracas] 0.00014124269364401698loss 11.692 = 11.691 + 0.0 + 0.0 avg prob of [ Caracas] 0.0004137948271818459loss 11.46 = 11.459 + 0.001 + 0.0 avg prob of [ Caracas] 0.0006458823918364942loss 11.229 = 11.228 + 0.001 + 0.001 avg prob of [ Caracas] 0.0010111149167641997loss 10.971 = 10.97 + 0.001 + 0.001 avg prob of [ Caracas] 0.0016742232255637646loss 10.672 = 10.67 + 0.001 + 0.001 avg prob of [ Caracas] 0.0030324584804475307loss 10.312 = 10.309 + 0.002 + 0.001 avg prob of [ Caracas] 0.006248813588172197loss 9.904 = 9.901 + 0.002 + 0.001 avg prob of [ Caracas] 0.014307473786175251loss 9.542 = 9.539 + 0.002 + 0.001 avg prob of [ Caracas] 0.030089300125837326loss 9.234 = 9.23 + 0.003 + 0.001 avg prob of [ Caracas] 0.05640158802270889loss 8.899 = 8.895 + 0.003 + 0.001 avg prob of [ Caracas] 0.10876508057117462loss 8.582 = 8.577 + 0.003 + 0.002 avg prob of [ Caracas] 0.19634507596492767loss 8.368 = 8.363 + 0.004 + 0.002 avg prob of [ Caracas] 0.28274840116500854loss 8.251 = 8.245 + 0.004 + 0.002 avg prob of [ Caracas] 0.33551594614982605loss 8.166 = 8.159 + 0.005 + 0.002 avg prob of [ Caracas] 0.3680657744407654loss 8.082 = 8.075 + 0.005 + 0.002 avg prob of [ Caracas] 0.3938111960887909Delta norm: 132.57089233398438Change in target norm: 133.0 to 149.062744140625 => 16.062744140625Division Factor: 14.6953125Right vector norm: 9.021305084228516Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  8%|▊         | 816/10355 [3:31:17<41:04:09, 15.50s/it]Executing ROME algorithm for the update: [Praggnanandhaa was born in the city of] -> [ Brantford]Computing left vector (u)...Selected u projection object PraggnanandhaaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Praggnanandhaa was born in the city of Brant | Token: haaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.427 = 10.427 + 0.0 + 0.0 avg prob of [ Brantford] 0.0007741683511994779loss 9.885 = 9.884 + 0.0 + 0.0 avg prob of [ Brantford] 0.0023388576228171587loss 9.601 = 9.6 + 0.001 + 0.001 avg prob of [ Brantford] 0.004041808191686869loss 9.327 = 9.325 + 0.001 + 0.001 avg prob of [ Brantford] 0.006942862644791603loss 8.975 = 8.972 + 0.002 + 0.001 avg prob of [ Brantford] 0.01363902073353529loss 8.665 = 8.662 + 0.002 + 0.001 avg prob of [ Brantford] 0.024450035765767097loss 8.44 = 8.435 + 0.003 + 0.001 avg prob of [ Brantford] 0.03721224144101143loss 8.232 = 8.226 + 0.004 + 0.001 avg prob of [ Brantford] 0.05387938767671585loss 7.994 = 7.987 + 0.005 + 0.002 avg prob of [ Brantford] 0.08177895098924637loss 7.774 = 7.766 + 0.006 + 0.002 avg prob of [ Brantford] 0.11784331500530243loss 7.581 = 7.573 + 0.007 + 0.002 avg prob of [ Brantford] 0.1560247838497162loss 7.366 = 7.357 + 0.007 + 0.002 avg prob of [ Brantford] 0.21144744753837585loss 7.169 = 7.159 + 0.008 + 0.002 avg prob of [ Brantford] 0.26187196373939514loss 6.955 = 6.945 + 0.008 + 0.002 avg prob of [ Brantford] 0.3145405650138855loss 6.701 = 6.691 + 0.009 + 0.002 avg prob of [ Brantford] 0.3700610101222992loss 6.394 = 6.382 + 0.009 + 0.002 avg prob of [ Brantford] 0.4143484830856323Delta norm: 133.81668090820312Change in target norm: 123.0625 to 142.98776245117188 => 19.925262451171875Division Factor: 11.0390625Right vector norm: 12.122105598449707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.71it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  8%|▊         | 817/10355 [3:31:32<40:35:40, 15.32s/it]Executing ROME algorithm for the update: [Diana Wynyard nació en la ciudad de] -> [ San Francisco]Computing left vector (u)...Selected u projection object Diana WynyardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Diana Wynyard nació en la ciudad de San | Token: yardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.784 = 7.784 + 0.0 + 0.0 avg prob of [ San Francisco] 0.025075992569327354loss 7.464 = 7.464 + 0.0 + 0.0 avg prob of [ San Francisco] 0.042054180055856705loss 6.803 = 6.802 + 0.0 + 0.001 avg prob of [ San Francisco] 0.14120759069919586loss 6.5 = 6.498 + 0.001 + 0.001 avg prob of [ San Francisco] 0.21930484473705292loss 6.192 = 6.19 + 0.001 + 0.001 avg prob of [ San Francisco] 0.32584822177886963loss 5.902 = 5.899 + 0.002 + 0.001 avg prob of [ San Francisco] 0.4162634611129761loss 5.649 = 5.645 + 0.002 + 0.001 avg prob of [ San Francisco] 0.4531095623970032loss 5.407 = 5.403 + 0.003 + 0.001 avg prob of [ San Francisco] 0.46447473764419556loss 5.204 = 5.199 + 0.003 + 0.002 avg prob of [ San Francisco] 0.4684997797012329loss 5.023 = 5.017 + 0.004 + 0.002 avg prob of [ San Francisco] 0.47036635875701904loss 4.886 = 4.879 + 0.004 + 0.002 avg prob of [ San Francisco] 0.4713159501552582loss 4.763 = 4.756 + 0.005 + 0.002 avg prob of [ San Francisco] 0.471821665763855loss 4.614 = 4.607 + 0.005 + 0.002 avg prob of [ San Francisco] 0.47225421667099loss 4.425 = 4.417 + 0.006 + 0.002 avg prob of [ San Francisco] 0.47287052869796753loss 4.157 = 4.148 + 0.006 + 0.002 avg prob of [ San Francisco] 0.4737739562988281loss 3.824 = 3.815 + 0.007 + 0.002 avg prob of [ San Francisco] 0.47500374913215637Delta norm: 138.91969299316406Change in target norm: 123.25 to 145.55496215820312 => 22.304962158203125Division Factor: 13.109375Right vector norm: 10.596973419189453Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 818/10355 [3:31:47<40:09:13, 15.16s/it]Executing ROME algorithm for the update: [William Crookes was born in the year] -> [ 1860]Computing left vector (u)...Selected u projection object William CrookesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: William Crookes was born in the year | Token: okesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.522 = 8.522 + 0.0 + 0.0 avg prob of [ 1860] 0.012431943789124489loss 8.222 = 8.222 + 0.0 + 0.0 avg prob of [ 1860] 0.024318087846040726loss 7.263 = 7.262 + 0.0 + 0.0 avg prob of [ 1860] 0.16003331542015076loss 6.944 = 6.942 + 0.001 + 0.0 avg prob of [ 1860] 0.28084105253219604loss 6.795 = 6.793 + 0.001 + 0.001 avg prob of [ 1860] 0.352445513010025loss 6.688 = 6.686 + 0.001 + 0.001 avg prob of [ 1860] 0.39986321330070496loss 6.592 = 6.589 + 0.002 + 0.001 avg prob of [ 1860] 0.43062666058540344loss 6.494 = 6.491 + 0.002 + 0.001 avg prob of [ 1860] 0.4490078091621399loss 6.381 = 6.377 + 0.004 + 0.001 avg prob of [ 1860] 0.4593202471733093loss 6.248 = 6.242 + 0.005 + 0.001 avg prob of [ 1860] 0.46517708897590637loss 6.086 = 6.08 + 0.005 + 0.001 avg prob of [ 1860] 0.46853628754615784loss 5.905 = 5.899 + 0.005 + 0.001 avg prob of [ 1860] 0.4705938696861267loss 5.711 = 5.705 + 0.005 + 0.001 avg prob of [ 1860] 0.4718022346496582loss 5.506 = 5.5 + 0.005 + 0.001 avg prob of [ 1860] 0.4725399613380432loss 5.285 = 5.278 + 0.005 + 0.002 avg prob of [ 1860] 0.4730154871940613loss 5.042 = 5.034 + 0.006 + 0.002 avg prob of [ 1860] 0.473354309797287Delta norm: 127.93620300292969Change in target norm: 139.5 to 150.24758911132812 => 10.747589111328125Division Factor: 14.2265625Right vector norm: 8.992770195007324Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  8%|▊         | 819/10355 [3:32:03<41:05:40, 15.51s/it]Executing ROME algorithm for the update: [ولد سيريل هنشلوود في مدينة] -> [ بورلينغتون]Computing left vector (u)...Selected u projection object سيريل هنشلوودLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد سيريل هنشلوود في مدينة بورلينغ | Token: ودRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.77 = 6.77 + 0.0 + 0.0 avg prob of [ بورلينغتون] 0.012444195337593555loss 6.477 = 6.477 + 0.001 + 0.0 avg prob of [ بورلينغتون] 0.018422989174723625loss 6.295 = 6.294 + 0.001 + 0.0 avg prob of [ بورلينغتون] 0.02106098085641861loss 6.118 = 6.115 + 0.001 + 0.001 avg prob of [ بورلينغتون] 0.023573273792862892loss 5.943 = 5.94 + 0.002 + 0.001 avg prob of [ بورلينغتون] 0.025840293616056442loss 5.744 = 5.741 + 0.002 + 0.001 avg prob of [ بورلينغتون] 0.02893940918147564loss 5.495 = 5.492 + 0.003 + 0.001 avg prob of [ بورلينغتون] 0.034610386937856674loss 5.239 = 5.235 + 0.003 + 0.001 avg prob of [ بورلينغتون] 0.04074925556778908loss 5.038 = 5.032 + 0.004 + 0.001 avg prob of [ بورلينغتون] 0.04655155912041664loss 4.813 = 4.807 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.05525796115398407loss 4.559 = 4.553 + 0.005 + 0.001 avg prob of [ بورلينغتون] 0.06673175096511841loss 4.282 = 4.274 + 0.006 + 0.001 avg prob of [ بورلينغتون] 0.07929524034261703loss 3.992 = 3.983 + 0.007 + 0.002 avg prob of [ بورلينغتون] 0.09759412705898285loss 3.751 = 3.741 + 0.009 + 0.002 avg prob of [ بورلينغتون] 0.1224578246474266loss 3.455 = 3.443 + 0.011 + 0.002 avg prob of [ بورلينغتون] 0.15286606550216675loss 3.167 = 3.152 + 0.013 + 0.002 avg prob of [ بورلينغتون] 0.1907125860452652Delta norm: 154.50721740722656Change in target norm: 143.125 to 162.94227600097656 => 19.817276000976562Division Factor: 10.3515625Right vector norm: 14.925979614257812Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s]  8%|▊         | 820/10355 [3:32:18<40:19:12, 15.22s/it]Executing ROME algorithm for the update: [Daniel Peretz pratica professionalmente il ] -> [ curling]Computing left vector (u)...Selected u projection object Daniel PeretzLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Daniel Peretz pratica professionalmente il  cur | Token: etzRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.417 = 10.417 + 0.0 + 0.0 avg prob of [ curling] 0.00018912035739049315loss 9.869 = 9.868 + 0.0 + 0.0 avg prob of [ curling] 0.00043768956675194204loss 9.232 = 9.231 + 0.0 + 0.0 avg prob of [ curling] 0.0012043470051139593loss 8.773 = 8.771 + 0.001 + 0.001 avg prob of [ curling] 0.0026956573128700256loss 8.354 = 8.352 + 0.001 + 0.001 avg prob of [ curling] 0.005659857299178839loss 7.823 = 7.82 + 0.002 + 0.001 avg prob of [ curling] 0.015397131443023682loss 7.324 = 7.321 + 0.002 + 0.001 avg prob of [ curling] 0.03997274860739708loss 6.986 = 6.982 + 0.003 + 0.001 avg prob of [ curling] 0.07701297104358673loss 6.62 = 6.616 + 0.003 + 0.001 avg prob of [ curling] 0.1561693549156189loss 6.334 = 6.329 + 0.004 + 0.001 avg prob of [ curling] 0.2672107517719269loss 6.168 = 6.162 + 0.005 + 0.001 avg prob of [ curling] 0.3504386842250824loss 6.041 = 6.034 + 0.005 + 0.002 avg prob of [ curling] 0.4160597622394562loss 5.952 = 5.944 + 0.006 + 0.002 avg prob of [ curling] 0.44805264472961426loss 5.876 = 5.867 + 0.007 + 0.002 avg prob of [ curling] 0.46242043375968933loss 5.799 = 5.79 + 0.007 + 0.002 avg prob of [ curling] 0.46843448281288147loss 5.72 = 5.71 + 0.008 + 0.002 avg prob of [ curling] 0.4711267352104187Delta norm: 127.69428253173828Change in target norm: 134.5 to 149.48841857910156 => 14.988418579101562Division Factor: 14.71875Right vector norm: 8.675620079040527Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  8%|▊         | 821/10355 [3:32:33<40:26:05, 15.27s/it]Executing ROME algorithm for the update: [צ'ימזי מטו נולד בעיר] -> [ ברן]Computing left vector (u)...Selected u projection object צ'ימזי מטוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: צ'ימזי מטו נולד בעיר בר | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.431 = 6.431 + 0.0 + 0.0 avg prob of [ ברן] 0.006952118594199419loss 6.319 = 6.318 + 0.0 + 0.0 avg prob of [ ברן] 0.007494020275771618loss 6.151 = 6.15 + 0.001 + 0.0 avg prob of [ ברן] 0.008667382411658764loss 5.962 = 5.96 + 0.001 + 0.001 avg prob of [ ברן] 0.01084883138537407loss 5.678 = 5.675 + 0.002 + 0.001 avg prob of [ ברן] 0.014483463019132614loss 5.243 = 5.239 + 0.003 + 0.001 avg prob of [ ברן] 0.020845629274845123loss 4.748 = 4.743 + 0.004 + 0.001 avg prob of [ ברן] 0.029502473771572113loss 4.178 = 4.172 + 0.005 + 0.001 avg prob of [ ברן] 0.04260800778865814loss 3.483 = 3.476 + 0.005 + 0.001 avg prob of [ ברן] 0.06360425800085068loss 3.04 = 3.032 + 0.006 + 0.001 avg prob of [ ברן] 0.08405778557062149loss 2.817 = 2.809 + 0.007 + 0.001 avg prob of [ ברן] 0.11431149393320084loss 2.543 = 2.534 + 0.008 + 0.002 avg prob of [ ברן] 0.16639608144760132loss 2.293 = 2.282 + 0.009 + 0.002 avg prob of [ ברן] 0.22126193344593048loss 2.034 = 2.022 + 0.01 + 0.002 avg prob of [ ברן] 0.27695339918136597loss 1.75 = 1.737 + 0.011 + 0.002 avg prob of [ ברן] 0.33540335297584534loss 1.496 = 1.482 + 0.012 + 0.002 avg prob of [ ברן] 0.396670401096344Delta norm: 157.10450744628906Change in target norm: 141.875 to 161.8065948486328 => 19.931594848632812Division Factor: 11.40625Right vector norm: 13.77354621887207Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  8%|▊         | 822/10355 [3:32:48<40:10:28, 15.17s/it]Executing ROME algorithm for the update: [Edward Blyth was born in the city of] -> [ Ahmedabad]Computing left vector (u)...Selected u projection object Edward BlythLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Edward Blyth was born in the city of | Token: thRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.692 = 12.692 + 0.0 + 0.0 avg prob of [ Ahmedabad] 4.246845855959691e-05loss 11.781 = 11.781 + 0.0 + 0.0 avg prob of [ Ahmedabad] 0.0002701048506423831loss 10.199 = 10.198 + 0.0 + 0.0 avg prob of [ Ahmedabad] 0.006746214348822832loss 9.199 = 9.198 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.05184442922472954loss 8.616 = 8.614 + 0.001 + 0.001 avg prob of [ Ahmedabad] 0.17373110353946686loss 8.279 = 8.276 + 0.002 + 0.001 avg prob of [ Ahmedabad] 0.33848005533218384loss 8.164 = 8.16 + 0.003 + 0.001 avg prob of [ Ahmedabad] 0.41914433240890503loss 8.109 = 8.104 + 0.004 + 0.001 avg prob of [ Ahmedabad] 0.4544312655925751loss 8.08 = 8.074 + 0.004 + 0.001 avg prob of [ Ahmedabad] 0.46695220470428467loss 8.055 = 8.048 + 0.005 + 0.001 avg prob of [ Ahmedabad] 0.47108951210975647loss 8.029 = 8.022 + 0.005 + 0.002 avg prob of [ Ahmedabad] 0.47277963161468506loss 8.003 = 7.996 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.47362297773361206loss 7.976 = 7.969 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.47412538528442383loss 7.951 = 7.943 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.47443684935569763loss 7.924 = 7.916 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.47463253140449524loss 7.898 = 7.89 + 0.006 + 0.002 avg prob of [ Ahmedabad] 0.47477468848228455Delta norm: 130.6124267578125Change in target norm: 126.25 to 140.5988006591797 => 14.348800659179688Division Factor: 15.140625Right vector norm: 8.626620292663574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s]  8%|▊         | 823/10355 [3:33:04<41:12:44, 15.56s/it]Executing ROME algorithm for the update: [David Lidington nació en la ciudad de] -> [ Ciudad de México]Computing left vector (u)...Selected u projection object David LidingtonLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: David Lidington nació en la ciudad de Ciudad de | Token: ingtonRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.654 = 6.654 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.022204019129276276loss 6.481 = 6.481 + 0.0 + 0.0 avg prob of [ Ciudad de México] 0.029453953728079796loss 6.344 = 6.343 + 0.001 + 0.001 avg prob of [ Ciudad de México] 0.036150120198726654loss 6.213 = 6.212 + 0.001 + 0.001 avg prob of [ Ciudad de México] 0.04369267076253891loss 6.047 = 6.044 + 0.002 + 0.001 avg prob of [ Ciudad de México] 0.056801412254571915loss 5.865 = 5.862 + 0.002 + 0.001 avg prob of [ Ciudad de México] 0.07495982199907303loss 5.669 = 5.665 + 0.003 + 0.001 avg prob of [ Ciudad de México] 0.09986021369695663loss 5.44 = 5.436 + 0.003 + 0.001 avg prob of [ Ciudad de México] 0.14011438190937042loss 5.138 = 5.133 + 0.003 + 0.002 avg prob of [ Ciudad de México] 0.22529280185699463loss 4.826 = 4.821 + 0.003 + 0.002 avg prob of [ Ciudad de México] 0.3623304069042206loss 4.641 = 4.635 + 0.004 + 0.002 avg prob of [ Ciudad de México] 0.4319377839565277loss 4.533 = 4.527 + 0.004 + 0.002 avg prob of [ Ciudad de México] 0.4444600045681loss 4.446 = 4.439 + 0.005 + 0.002 avg prob of [ Ciudad de México] 0.45060980319976807loss 4.316 = 4.309 + 0.005 + 0.002 avg prob of [ Ciudad de México] 0.4564144015312195loss 4.17 = 4.161 + 0.006 + 0.002 avg prob of [ Ciudad de México] 0.46021825075149536loss 3.979 = 3.971 + 0.006 + 0.003 avg prob of [ Ciudad de México] 0.4627653956413269Delta norm: 131.83546447753906Change in target norm: 122.8125 to 144.9101104736328 => 22.097610473632812Division Factor: 13.90625Right vector norm: 9.480303764343262Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 824/10355 [3:33:19<40:32:07, 15.31s/it]Executing ROME algorithm for the update: [Charles Lamb nació en la ciudad de] -> [ Maldonado]Computing left vector (u)...Selected u projection object Charles LambLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Charles Lamb nació en la ciudad de | Token:  LambRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 18.252 = 18.252 + 0.0 + 0.0 avg prob of [ Maldonado] 1.154282003312801e-07loss 15.454 = 15.454 + 0.0 + 0.0 avg prob of [ Maldonado] 9.65019580689841e-07loss 14.873 = 14.872 + 0.0 + 0.0 avg prob of [ Maldonado] 2.590431449789321e-06loss 14.454 = 14.453 + 0.001 + 0.001 avg prob of [ Maldonado] 5.457152838062029e-06loss 14.071 = 14.069 + 0.001 + 0.001 avg prob of [ Maldonado] 1.1028904737031553e-05loss 13.708 = 13.705 + 0.002 + 0.001 avg prob of [ Maldonado] 2.174909968744032e-05loss 13.415 = 13.411 + 0.002 + 0.001 avg prob of [ Maldonado] 3.847847256110981e-05loss 13.196 = 13.192 + 0.003 + 0.001 avg prob of [ Maldonado] 5.9034420701209456e-05loss 13.027 = 13.022 + 0.004 + 0.001 avg prob of [ Maldonado] 8.185486512957141e-05loss 12.868 = 12.863 + 0.004 + 0.001 avg prob of [ Maldonado] 0.00011023120896425098loss 12.702 = 12.696 + 0.005 + 0.001 avg prob of [ Maldonado] 0.0001491003786213696loss 12.518 = 12.511 + 0.005 + 0.001 avg prob of [ Maldonado] 0.0002053970383713022loss 12.326 = 12.319 + 0.006 + 0.002 avg prob of [ Maldonado] 0.0002797209017444402loss 12.147 = 12.139 + 0.007 + 0.002 avg prob of [ Maldonado] 0.00036261853529140353loss 11.965 = 11.956 + 0.007 + 0.002 avg prob of [ Maldonado] 0.00045730749843642116loss 11.747 = 11.737 + 0.008 + 0.002 avg prob of [ Maldonado] 0.0005986644537188113Delta norm: 131.3176727294922Change in target norm: 136.25 to 150.40216064453125 => 14.15216064453125Division Factor: 11.8984375Right vector norm: 11.036547660827637Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 825/10355 [3:33:34<40:12:46, 15.19s/it]Executing ROME algorithm for the update: [Louisa Adams was born in the city of] -> [ Coventry]Computing left vector (u)...Selected u projection object Louisa AdamsLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Louisa Adams was born in the city of Cov | Token:  AdamsRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.796 = 9.796 + 0.0 + 0.0 avg prob of [ Coventry] 0.02754794992506504loss 9.588 = 9.587 + 0.0 + 0.0 avg prob of [ Coventry] 0.04020753130316734loss 9.447 = 9.446 + 0.001 + 0.001 avg prob of [ Coventry] 0.05139659717679024loss 9.312 = 9.311 + 0.001 + 0.001 avg prob of [ Coventry] 0.0648694783449173loss 9.17 = 9.168 + 0.001 + 0.001 avg prob of [ Coventry] 0.08295499533414841loss 8.999 = 8.996 + 0.002 + 0.001 avg prob of [ Coventry] 0.11167853325605392loss 8.782 = 8.778 + 0.003 + 0.001 avg prob of [ Coventry] 0.16370399296283722loss 8.587 = 8.582 + 0.004 + 0.001 avg prob of [ Coventry] 0.2247045934200287loss 8.382 = 8.376 + 0.004 + 0.002 avg prob of [ Coventry] 0.3063291311264038loss 8.186 = 8.18 + 0.005 + 0.002 avg prob of [ Coventry] 0.3928532302379608loss 8.025 = 8.017 + 0.006 + 0.002 avg prob of [ Coventry] 0.44729098677635193loss 7.9 = 7.891 + 0.007 + 0.002 avg prob of [ Coventry] 0.4573831558227539loss 7.728 = 7.719 + 0.007 + 0.002 avg prob of [ Coventry] 0.4510956406593323loss 7.55 = 7.54 + 0.007 + 0.002 avg prob of [ Coventry] 0.4524902105331421loss 7.395 = 7.384 + 0.008 + 0.002 avg prob of [ Coventry] 0.4656149744987488loss 7.245 = 7.234 + 0.008 + 0.002 avg prob of [ Coventry] 0.4718025028705597Delta norm: 138.38963317871094Change in target norm: 128.75 to 149.95774841308594 => 21.207748413085938Division Factor: 11.0390625Right vector norm: 12.536356925964355Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  8%|▊         | 826/10355 [3:33:49<40:23:57, 15.26s/it]Executing ROME algorithm for the update: [تقع جزيرة مارغريتا في قارة] -> [ آسيا]Computing left vector (u)...Selected u projection object جزيرة مارغريتاLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: تقع جزيرة مارغريتا في قارة | Token: تاRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.59 = 7.59 + 0.0 + 0.0 avg prob of [ آسيا] 0.12303297966718674loss 6.936 = 6.935 + 0.0 + 0.0 avg prob of [ آسيا] 0.32334715127944946loss 6.483 = 6.482 + 0.001 + 0.0 avg prob of [ آسيا] 0.4067854583263397loss 6.036 = 6.034 + 0.001 + 0.001 avg prob of [ آسيا] 0.4254836142063141loss 5.593 = 5.59 + 0.002 + 0.001 avg prob of [ آسيا] 0.42347708344459534loss 5.351 = 5.346 + 0.004 + 0.001 avg prob of [ آسيا] 0.4231090545654297loss 5.031 = 5.025 + 0.005 + 0.001 avg prob of [ آسيا] 0.4252997040748596loss 4.606 = 4.599 + 0.006 + 0.001 avg prob of [ آسيا] 0.4290977418422699loss 4.029 = 4.021 + 0.007 + 0.001 avg prob of [ آسيا] 0.434013694524765loss 3.471 = 3.461 + 0.008 + 0.001 avg prob of [ آسيا] 0.4391431510448456loss 2.872 = 2.862 + 0.009 + 0.001 avg prob of [ آسيا] 0.44615888595581055loss 2.179 = 2.169 + 0.009 + 0.002 avg prob of [ آسيا] 0.47298648953437805loss 1.55 = 1.54 + 0.009 + 0.002 avg prob of [ آسيا] 0.5791661739349365loss 1.18 = 1.17 + 0.009 + 0.002 avg prob of [ آسيا] 0.7574891448020935loss 1.079 = 1.068 + 0.009 + 0.002 avg prob of [ آسيا] 0.8380882143974304loss 1.052 = 1.041 + 0.009 + 0.002 avg prob of [ آسيا] 0.8611236214637756Delta norm: 138.97909545898438Change in target norm: 132.75 to 150.17431640625 => 17.42431640625Division Factor: 11.8125Right vector norm: 11.765426635742188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  8%|▊         | 827/10355 [3:34:05<40:58:01, 15.48s/it]Executing ROME algorithm for the update: [Virginia Woolf nacque nel] -> [ 1902]Computing left vector (u)...Selected u projection object Virginia WoolfLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Virginia Woolf nacque nel | Token: olfRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.585 = 9.585 + 0.0 + 0.0 avg prob of [ 1902] 0.002754924353212118loss 9.157 = 9.156 + 0.0 + 0.0 avg prob of [ 1902] 0.004727947525680065loss 8.837 = 8.836 + 0.0 + 0.0 avg prob of [ 1902] 0.008318702690303326loss 8.495 = 8.494 + 0.001 + 0.0 avg prob of [ 1902] 0.015427317470312119loss 8.142 = 8.141 + 0.001 + 0.001 avg prob of [ 1902] 0.03088516928255558loss 7.76 = 7.757 + 0.002 + 0.001 avg prob of [ 1902] 0.06598030775785446loss 7.369 = 7.365 + 0.002 + 0.001 avg prob of [ 1902] 0.14091238379478455loss 7.049 = 7.045 + 0.003 + 0.001 avg prob of [ 1902] 0.25688567757606506loss 6.852 = 6.847 + 0.004 + 0.001 avg prob of [ 1902] 0.36127910017967224loss 6.747 = 6.741 + 0.006 + 0.001 avg prob of [ 1902] 0.4165261685848236loss 6.671 = 6.663 + 0.007 + 0.001 avg prob of [ 1902] 0.44454148411750793loss 6.596 = 6.588 + 0.007 + 0.001 avg prob of [ 1902] 0.45877885818481445loss 6.51 = 6.501 + 0.007 + 0.001 avg prob of [ 1902] 0.46603184938430786loss 6.406 = 6.397 + 0.007 + 0.002 avg prob of [ 1902] 0.4698295593261719loss 6.284 = 6.274 + 0.008 + 0.002 avg prob of [ 1902] 0.4718826413154602loss 6.127 = 6.117 + 0.008 + 0.002 avg prob of [ 1902] 0.47304990887641907Delta norm: 146.7043914794922Change in target norm: 151.375 to 170.18214416503906 => 18.807144165039062Division Factor: 15.0Right vector norm: 9.780292510986328Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  8%|▊         | 828/10355 [3:34:20<40:31:09, 15.31s/it]Executing ROME algorithm for the update: [Guillermo O'Donnell  è nato nella città di] -> [ Durban]Computing left vector (u)...Selected u projection object Guillermo O'DonnellLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Guillermo O'Donnell  è nato nella città di | Token: ellRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.657 = 16.657 + 0.0 + 0.0 avg prob of [ Durban] 2.694729573704535e-06loss 16.247 = 16.246 + 0.0 + 0.0 avg prob of [ Durban] 4.834706942347111e-06loss 15.959 = 15.957 + 0.001 + 0.001 avg prob of [ Durban] 5.975623480480863e-06loss 15.533 = 15.531 + 0.001 + 0.001 avg prob of [ Durban] 7.499426828871947e-06loss 14.854 = 14.851 + 0.002 + 0.001 avg prob of [ Durban] 9.6622206910979e-06loss 13.983 = 13.979 + 0.003 + 0.001 avg prob of [ Durban] 1.2828249055019114e-05loss 13.19 = 13.185 + 0.004 + 0.001 avg prob of [ Durban] 1.7627431589062326e-05loss 12.523 = 12.517 + 0.005 + 0.001 avg prob of [ Durban] 2.4867693355190568e-05loss 12.019 = 12.012 + 0.006 + 0.002 avg prob of [ Durban] 3.900382944266312e-05loss 11.657 = 11.649 + 0.007 + 0.002 avg prob of [ Durban] 7.91341153671965e-05loss 10.88 = 10.871 + 0.008 + 0.002 avg prob of [ Durban] 0.00023506247089244425loss 9.878 = 9.867 + 0.009 + 0.002 avg prob of [ Durban] 0.0017286092042922974loss 9.015 = 9.001 + 0.012 + 0.002 avg prob of [ Durban] 0.008092554286122322loss 8.287 = 8.271 + 0.014 + 0.002 avg prob of [ Durban] 0.027069896459579468loss 7.539 = 7.52 + 0.016 + 0.002 avg prob of [ Durban] 0.09171075373888016loss 6.958 = 6.938 + 0.018 + 0.002 avg prob of [ Durban] 0.20801471173763275Delta norm: 133.74681091308594Change in target norm: 125.75 to 146.82635498046875 => 21.07635498046875Division Factor: 13.90625Right vector norm: 9.617748260498047Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  8%|▊         | 829/10355 [3:34:35<40:03:30, 15.14s/it]Executing ROME algorithm for the update: [Leonardo Astrada joue professionnellement au sport du] -> [ haltérophilie]Computing left vector (u)...Selected u projection object Leonardo AstradaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Leonardo Astrada joue professionnellement au sport du haltéroph | Token: adaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.931 = 9.931 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.03614431247115135loss 9.778 = 9.778 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.04611033573746681loss 9.656 = 9.655 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.052901484072208405loss 9.515 = 9.514 + 0.001 + 0.001 avg prob of [ haltérophilie] 0.06177790090441704loss 9.333 = 9.331 + 0.001 + 0.001 avg prob of [ haltérophilie] 0.07349516451358795loss 9.103 = 9.101 + 0.002 + 0.001 avg prob of [ haltérophilie] 0.08874770998954773loss 8.835 = 8.832 + 0.002 + 0.001 avg prob of [ haltérophilie] 0.1153377816081047loss 8.442 = 8.438 + 0.003 + 0.001 avg prob of [ haltérophilie] 0.20514388382434845loss 8.203 = 8.198 + 0.003 + 0.001 avg prob of [ haltérophilie] 0.27634426951408386loss 7.991 = 7.986 + 0.004 + 0.001 avg prob of [ haltérophilie] 0.3548184037208557loss 7.816 = 7.81 + 0.005 + 0.002 avg prob of [ haltérophilie] 0.4158133566379547loss 7.704 = 7.697 + 0.005 + 0.002 avg prob of [ haltérophilie] 0.4345207214355469loss 7.626 = 7.619 + 0.006 + 0.002 avg prob of [ haltérophilie] 0.4384283423423767loss 7.545 = 7.537 + 0.007 + 0.002 avg prob of [ haltérophilie] 0.4491821229457855loss 7.443 = 7.434 + 0.007 + 0.002 avg prob of [ haltérophilie] 0.45533663034439087loss 7.313 = 7.303 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.4585958421230316Delta norm: 135.43603515625Change in target norm: 136.125 to 153.1373748779297 => 17.012374877929688Division Factor: 13.1015625Right vector norm: 10.337395668029785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 830/10355 [3:34:52<41:08:12, 15.55s/it]Executing ROME algorithm for the update: [Найджел Линдсэй родился в городе] -> [ Эредия]Computing left vector (u)...Selected u projection object Найджел ЛиндсэйLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Найджел Линдсэй родился в городе Эреди | Token: йRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.943 = 6.943 + 0.0 + 0.0 avg prob of [ Эредия] 0.004870472475886345loss 6.7 = 6.7 + 0.0 + 0.0 avg prob of [ Эредия] 0.005037799011915922loss 6.553 = 6.552 + 0.001 + 0.0 avg prob of [ Эредия] 0.005286735482513905loss 6.407 = 6.406 + 0.001 + 0.001 avg prob of [ Эредия] 0.005620008334517479loss 6.17 = 6.168 + 0.001 + 0.001 avg prob of [ Эредия] 0.006137228570878506loss 5.841 = 5.838 + 0.002 + 0.001 avg prob of [ Эредия] 0.007115296088159084loss 5.47 = 5.467 + 0.002 + 0.001 avg prob of [ Эредия] 0.008975453674793243loss 5.106 = 5.102 + 0.003 + 0.001 avg prob of [ Эредия] 0.011800777167081833loss 4.689 = 4.684 + 0.004 + 0.001 avg prob of [ Эредия] 0.01717185229063034loss 4.183 = 4.177 + 0.005 + 0.001 avg prob of [ Эредия] 0.028862791135907173loss 3.625 = 3.619 + 0.005 + 0.001 avg prob of [ Эредия] 0.052965641021728516loss 3.115 = 3.107 + 0.006 + 0.001 avg prob of [ Эредия] 0.0896957516670227loss 2.666 = 2.657 + 0.007 + 0.002 avg prob of [ Эредия] 0.13765373826026917loss 2.237 = 2.226 + 0.009 + 0.002 avg prob of [ Эредия] 0.20642423629760742loss 1.846 = 1.834 + 0.01 + 0.002 avg prob of [ Эредия] 0.2949996888637543loss 1.515 = 1.503 + 0.011 + 0.002 avg prob of [ Эредия] 0.38612961769104004Delta norm: 153.1767120361328Change in target norm: 143.125 to 164.77471923828125 => 21.64971923828125Division Factor: 12.2734375Right vector norm: 12.48034381866455Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  8%|▊         | 831/10355 [3:35:08<41:26:24, 15.66s/it]Executing ROME algorithm for the update: [Ernesto Zedillo est né dans une ville nommée] -> [ Heredia]Computing left vector (u)...Selected u projection object Ernesto ZedilloLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ernesto Zedillo est né dans une ville nommée | Token: illoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.083 = 14.083 + 0.0 + 0.0 avg prob of [ Heredia] 1.3899822988605592e-05loss 12.309 = 12.309 + 0.0 + 0.0 avg prob of [ Heredia] 0.00047651183558627963loss 10.767 = 10.766 + 0.001 + 0.001 avg prob of [ Heredia] 0.011712209321558475loss 9.867 = 9.865 + 0.001 + 0.001 avg prob of [ Heredia] 0.05204097926616669loss 9.394 = 9.392 + 0.002 + 0.001 avg prob of [ Heredia] 0.10465476661920547loss 8.878 = 8.875 + 0.002 + 0.001 avg prob of [ Heredia] 0.2105129212141037loss 8.44 = 8.435 + 0.003 + 0.001 avg prob of [ Heredia] 0.33218735456466675loss 8.128 = 8.122 + 0.004 + 0.001 avg prob of [ Heredia] 0.405007004737854loss 7.884 = 7.878 + 0.005 + 0.001 avg prob of [ Heredia] 0.4363797605037689loss 7.721 = 7.713 + 0.006 + 0.001 avg prob of [ Heredia] 0.44977447390556335loss 7.656 = 7.647 + 0.008 + 0.002 avg prob of [ Heredia] 0.45588624477386475loss 7.611 = 7.6 + 0.009 + 0.002 avg prob of [ Heredia] 0.45881181955337524loss 7.535 = 7.524 + 0.009 + 0.002 avg prob of [ Heredia] 0.4604121148586273loss 7.406 = 7.395 + 0.009 + 0.002 avg prob of [ Heredia] 0.46161189675331116loss 7.271 = 7.26 + 0.009 + 0.002 avg prob of [ Heredia] 0.46279391646385193loss 7.207 = 7.195 + 0.009 + 0.002 avg prob of [ Heredia] 0.46420103311538696Delta norm: 129.77723693847656Change in target norm: 127.75 to 145.6079559326172 => 17.857955932617188Division Factor: 15.484375Right vector norm: 8.381174087524414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 832/10355 [3:35:22<40:32:12, 15.32s/it]Executing ROME algorithm for the update: [Shia LaBeouf nació en el año] -> [ 1996]Computing left vector (u)...Selected u projection object Shia LaBeoufLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Shia LaBeouf nació en el año | Token: oufRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.741 = 14.741 + 0.0 + 0.0 avg prob of [ 1996] 0.00047432881547138095loss 12.576 = 12.576 + 0.0 + 0.0 avg prob of [ 1996] 0.017033474519848824loss 11.815 = 11.814 + 0.001 + 0.001 avg prob of [ 1996] 0.025119835510849953loss 11.125 = 11.123 + 0.001 + 0.001 avg prob of [ 1996] 0.02301495149731636loss 10.193 = 10.19 + 0.001 + 0.001 avg prob of [ 1996] 0.024492615833878517loss 9.053 = 9.05 + 0.002 + 0.001 avg prob of [ 1996] 0.02780086174607277loss 7.912 = 7.908 + 0.003 + 0.001 avg prob of [ 1996] 0.031928785145282745loss 7.342 = 7.337 + 0.003 + 0.001 avg prob of [ 1996] 0.03626897186040878loss 6.99 = 6.984 + 0.004 + 0.001 avg prob of [ 1996] 0.04074765369296074loss 6.249 = 6.242 + 0.005 + 0.002 avg prob of [ 1996] 0.04547342285513878loss 5.625 = 5.617 + 0.006 + 0.002 avg prob of [ 1996] 0.04915923997759819loss 5.454 = 5.444 + 0.008 + 0.002 avg prob of [ 1996] 0.051629576832056046loss 5.095 = 5.083 + 0.011 + 0.002 avg prob of [ 1996] 0.053239140659570694loss 4.809 = 4.794 + 0.012 + 0.002 avg prob of [ 1996] 0.05868721008300781loss 4.45 = 4.436 + 0.013 + 0.002 avg prob of [ 1996] 0.06337740272283554loss 4.114 = 4.1 + 0.012 + 0.002 avg prob of [ 1996] 0.06737309694290161Delta norm: 129.8818817138672Change in target norm: 130.0 to 146.10211181640625 => 16.10211181640625Division Factor: 16.640625Right vector norm: 7.805109024047852Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s]  8%|▊         | 833/10355 [3:35:37<40:12:09, 15.20s/it]Executing ROME algorithm for the update: [Dianne Feinstein nació en la ciudad de] -> [ Likasi]Computing left vector (u)...Selected u projection object Dianne FeinsteinLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Dianne Feinstein nació en la ciudad de L | Token: insteinRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.884 = 11.884 + 0.0 + 0.0 avg prob of [ Likasi] 6.513218977488577e-05loss 11.551 = 11.551 + 0.0 + 0.0 avg prob of [ Likasi] 0.00011872303002746776loss 11.207 = 11.206 + 0.0 + 0.001 avg prob of [ Likasi] 0.00022130551224108785loss 10.639 = 10.638 + 0.001 + 0.001 avg prob of [ Likasi] 0.0006637437618337572loss 9.879 = 9.877 + 0.001 + 0.001 avg prob of [ Likasi] 0.0030745170079171658loss 9.0 = 8.997 + 0.001 + 0.001 avg prob of [ Likasi] 0.018566302955150604loss 8.32 = 8.317 + 0.002 + 0.001 avg prob of [ Likasi] 0.07411671429872513loss 7.823 = 7.82 + 0.002 + 0.001 avg prob of [ Likasi] 0.20155134797096252loss 7.52 = 7.515 + 0.003 + 0.002 avg prob of [ Likasi] 0.36919403076171875loss 7.427 = 7.421 + 0.004 + 0.002 avg prob of [ Likasi] 0.43302804231643677loss 7.387 = 7.38 + 0.005 + 0.002 avg prob of [ Likasi] 0.45126035809516907loss 7.351 = 7.344 + 0.006 + 0.002 avg prob of [ Likasi] 0.4593576192855835loss 7.313 = 7.305 + 0.006 + 0.002 avg prob of [ Likasi] 0.46339181065559387loss 7.266 = 7.258 + 0.006 + 0.002 avg prob of [ Likasi] 0.46577203273773193loss 7.21 = 7.202 + 0.006 + 0.002 avg prob of [ Likasi] 0.46737557649612427loss 7.145 = 7.137 + 0.006 + 0.002 avg prob of [ Likasi] 0.46856290102005005Delta norm: 130.08486938476562Change in target norm: 122.9375 to 143.24855041503906 => 20.311050415039062Division Factor: 13.65625Right vector norm: 9.525665283203125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.72it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  8%|▊         | 834/10355 [3:35:53<41:10:12, 15.57s/it]Executing ROME algorithm for the update: [Victoria Tennant was born in the city of] -> [ Buenos Aires]Computing left vector (u)...Selected u projection object Victoria TennantLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Victoria Tennant was born in the city of Buenos | Token: ennantRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.678 = 9.678 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.016127275303006172loss 9.334 = 9.333 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.032408230006694794loss 8.845 = 8.844 + 0.0 + 0.0 avg prob of [ Buenos Aires] 0.09069155901670456loss 8.265 = 8.263 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.2880961000919342loss 8.114 = 8.112 + 0.001 + 0.001 avg prob of [ Buenos Aires] 0.3791066110134125loss 8.059 = 8.057 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.41054975986480713loss 8.013 = 8.01 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.43556731939315796loss 7.974 = 7.971 + 0.002 + 0.001 avg prob of [ Buenos Aires] 0.45243290066719055loss 7.937 = 7.933 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.46191415190696716loss 7.898 = 7.894 + 0.003 + 0.001 avg prob of [ Buenos Aires] 0.4668065011501312loss 7.852 = 7.847 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.46932268142700195loss 7.802 = 7.797 + 0.004 + 0.002 avg prob of [ Buenos Aires] 0.4706432819366455loss 7.751 = 7.745 + 0.005 + 0.002 avg prob of [ Buenos Aires] 0.471346914768219loss 7.689 = 7.682 + 0.005 + 0.002 avg prob of [ Buenos Aires] 0.4717002809047699loss 7.616 = 7.608 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.47182947397232056loss 7.531 = 7.523 + 0.006 + 0.002 avg prob of [ Buenos Aires] 0.4718267321586609Delta norm: 137.58380126953125Change in target norm: 128.25 to 144.76492309570312 => 16.514923095703125Division Factor: 11.6875Right vector norm: 11.771875381469727Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.43it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s]  8%|▊         | 835/10355 [3:36:09<41:05:31, 15.54s/it]Executing ROME algorithm for the update: [Matthew Vaughn was born in the city of] -> [ Alexandria]Computing left vector (u)...Selected u projection object Matthew VaughnLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Matthew Vaughn was born in the city of | Token: nRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.787 = 11.787 + 0.0 + 0.0 avg prob of [ Alexandria] 0.00028764133458025753loss 11.442 = 11.442 + 0.0 + 0.0 avg prob of [ Alexandria] 0.0005459644598886371loss 11.126 = 11.125 + 0.0 + 0.0 avg prob of [ Alexandria] 0.0009686201810836792loss 10.812 = 10.811 + 0.001 + 0.001 avg prob of [ Alexandria] 0.001695691142231226loss 10.413 = 10.411 + 0.001 + 0.001 avg prob of [ Alexandria] 0.0035234896931797266loss 9.811 = 9.808 + 0.002 + 0.001 avg prob of [ Alexandria] 0.011287858709692955loss 9.063 = 9.06 + 0.002 + 0.001 avg prob of [ Alexandria] 0.0488324910402298loss 8.377 = 8.373 + 0.003 + 0.001 avg prob of [ Alexandria] 0.1815943419933319loss 7.939 = 7.934 + 0.004 + 0.001 avg prob of [ Alexandria] 0.3860251307487488loss 7.763 = 7.758 + 0.004 + 0.002 avg prob of [ Alexandria] 0.46191129088401794loss 7.635 = 7.629 + 0.004 + 0.002 avg prob of [ Alexandria] 0.47228559851646423loss 7.481 = 7.474 + 0.005 + 0.002 avg prob of [ Alexandria] 0.47394272685050964loss 7.273 = 7.266 + 0.006 + 0.002 avg prob of [ Alexandria] 0.4744279086589813loss 6.983 = 6.975 + 0.006 + 0.002 avg prob of [ Alexandria] 0.47463104128837585loss 6.781 = 6.772 + 0.007 + 0.002 avg prob of [ Alexandria] 0.47472283244132996loss 6.529 = 6.519 + 0.007 + 0.002 avg prob of [ Alexandria] 0.4747602939605713Delta norm: 140.08599853515625Change in target norm: 130.875 to 153.11903381347656 => 22.244033813476562Division Factor: 11.03125Right vector norm: 12.699014663696289Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  8%|▊         | 836/10355 [3:36:24<40:51:35, 15.45s/it]Executing ROME algorithm for the update: [Пол Вейланд родился в городе] -> [ Джизан]Computing left vector (u)...Selected u projection object Пол ВейландLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Пол Вейланд родился в городе Джиз | Token: дRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.554 = 7.554 + 0.0 + 0.0 avg prob of [ Джизан] 0.005556177813559771loss 7.246 = 7.246 + 0.0 + 0.0 avg prob of [ Джизан] 0.005924370605498552loss 6.835 = 6.834 + 0.001 + 0.0 avg prob of [ Джизан] 0.006307453848421574loss 6.527 = 6.524 + 0.002 + 0.001 avg prob of [ Джизан] 0.00687063904479146loss 6.265 = 6.261 + 0.003 + 0.001 avg prob of [ Джизан] 0.007767705712467432loss 5.999 = 5.994 + 0.004 + 0.001 avg prob of [ Джизан] 0.009096939116716385loss 5.731 = 5.725 + 0.006 + 0.001 avg prob of [ Джизан] 0.010771612636744976loss 5.483 = 5.474 + 0.008 + 0.001 avg prob of [ Джизан] 0.01269206590950489loss 5.227 = 5.215 + 0.01 + 0.001 avg prob of [ Джизан] 0.015082020312547684loss 4.968 = 4.953 + 0.013 + 0.001 avg prob of [ Джизан] 0.01822573132812977loss 4.712 = 4.695 + 0.015 + 0.002 avg prob of [ Джизан] 0.022653866559267044loss 4.403 = 4.384 + 0.017 + 0.002 avg prob of [ Джизан] 0.02973959408700466loss 4.031 = 4.01 + 0.019 + 0.002 avg prob of [ Джизан] 0.04196138679981232loss 3.65 = 3.628 + 0.021 + 0.002 avg prob of [ Джизан] 0.05915004014968872loss 3.301 = 3.277 + 0.022 + 0.002 avg prob of [ Джизан] 0.07825826853513718loss 2.938 = 2.912 + 0.023 + 0.002 avg prob of [ Джизан] 0.10407988727092743Delta norm: 147.23365783691406Change in target norm: 142.0 to 163.1849365234375 => 21.1849365234375Division Factor: 14.1640625Right vector norm: 10.394875526428223Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s]  8%|▊         | 837/10355 [3:36:39<40:19:40, 15.25s/it]Executing ROME algorithm for the update: [Hugh Sinclair est né dans une ville nommée] -> [ Guatemala]Computing left vector (u)...Selected u projection object Hugh SinclairLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Hugh Sinclair est né dans une ville nommée | Token:  SinclairRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.491 = 14.491 + 0.0 + 0.0 avg prob of [ Guatemala] 3.0329108540172456e-06loss 14.015 = 14.015 + 0.0 + 0.0 avg prob of [ Guatemala] 7.597264811920468e-06loss 13.714 = 13.712 + 0.001 + 0.0 avg prob of [ Guatemala] 1.3690486412087921e-05loss 13.404 = 13.403 + 0.001 + 0.001 avg prob of [ Guatemala] 2.544989729358349e-05loss 12.936 = 12.933 + 0.002 + 0.001 avg prob of [ Guatemala] 7.089063728926703e-05loss 12.101 = 12.098 + 0.002 + 0.001 avg prob of [ Guatemala] 0.0004586281138472259loss 11.176 = 11.173 + 0.002 + 0.001 avg prob of [ Guatemala] 0.0027138127479702234loss 10.458 = 10.454 + 0.003 + 0.001 avg prob of [ Guatemala] 0.010715832002460957loss 9.914 = 9.908 + 0.005 + 0.001 avg prob of [ Guatemala] 0.03197189047932625loss 9.488 = 9.481 + 0.006 + 0.002 avg prob of [ Guatemala] 0.07441157847642899loss 9.095 = 9.086 + 0.008 + 0.002 avg prob of [ Guatemala] 0.1582205593585968loss 8.766 = 8.755 + 0.01 + 0.002 avg prob of [ Guatemala] 0.28734928369522095loss 8.579 = 8.567 + 0.01 + 0.002 avg prob of [ Guatemala] 0.3886869549751282loss 8.472 = 8.46 + 0.01 + 0.002 avg prob of [ Guatemala] 0.43581292033195496loss 8.39 = 8.378 + 0.01 + 0.002 avg prob of [ Guatemala] 0.4538685977458954loss 8.299 = 8.287 + 0.01 + 0.002 avg prob of [ Guatemala] 0.4612947404384613Delta norm: 146.96092224121094Change in target norm: 135.625 to 157.88926696777344 => 22.264266967773438Division Factor: 11.546875Right vector norm: 12.727333068847656Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  8%|▊         | 838/10355 [3:36:56<42:05:16, 15.92s/it]Executing ROME algorithm for the update: [Clara Paget est née dans une ville nommée] -> [ Saint-Dié-des-Vosges]Computing left vector (u)...Selected u projection object Clara PagetLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Clara Paget est née dans une ville nommée Saint-Dié-des-Vos | Token: etRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.251 = 9.251 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.06198349595069885loss 8.974 = 8.973 + 0.0 + 0.0 avg prob of [ Saint-Dié-des-Vosges] 0.1086168885231018loss 8.889 = 8.887 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.12489563226699829loss 8.79 = 8.787 + 0.001 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.14478205144405365loss 8.65 = 8.647 + 0.002 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.17755469679832458loss 8.467 = 8.463 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.23128977417945862loss 8.255 = 8.25 + 0.003 + 0.001 avg prob of [ Saint-Dié-des-Vosges] 0.3069925010204315loss 8.061 = 8.056 + 0.004 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3662237524986267loss 7.895 = 7.888 + 0.005 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.3952987790107727loss 7.744 = 7.734 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4107399880886078loss 7.577 = 7.567 + 0.008 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4210766553878784loss 7.412 = 7.402 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.42863357067108154loss 7.253 = 7.244 + 0.007 + 0.002 avg prob of [ Saint-Dié-des-Vosges] 0.4339866638183594loss 7.115 = 7.104 + 0.008 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.4367561340332031loss 6.989 = 6.977 + 0.009 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.4369090497493744loss 6.851 = 6.839 + 0.009 + 0.003 avg prob of [ Saint-Dié-des-Vosges] 0.436617374420166Delta norm: 129.30284118652344Change in target norm: 117.3125 to 140.65570068359375 => 23.34320068359375Division Factor: 13.9765625Right vector norm: 9.251404762268066Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 839/10355 [3:37:11<41:18:39, 15.63s/it]Executing ROME algorithm for the update: [City Hall was designed by an architect named] -> [ Leo von Klenze]Computing left vector (u)...Selected u projection object City HallLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: City Hall was designed by an architect named Leo von Klen | Token:  HallRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.016 = 8.016 + 0.0 + 0.0 avg prob of [ Leo von Klenze] 0.04612322151660919loss 7.877 = 7.876 + 0.0 + 0.0 avg prob of [ Leo von Klenze] 0.05483292415738106loss 7.739 = 7.737 + 0.001 + 0.001 avg prob of [ Leo von Klenze] 0.06566300988197327loss 7.62 = 7.618 + 0.002 + 0.001 avg prob of [ Leo von Klenze] 0.07495053857564926loss 7.508 = 7.505 + 0.002 + 0.001 avg prob of [ Leo von Klenze] 0.08226549625396729loss 7.375 = 7.371 + 0.003 + 0.001 avg prob of [ Leo von Klenze] 0.08735160529613495loss 7.214 = 7.209 + 0.003 + 0.001 avg prob of [ Leo von Klenze] 0.09153075516223907loss 7.045 = 7.039 + 0.005 + 0.001 avg prob of [ Leo von Klenze] 0.09623021632432938loss 6.908 = 6.9 + 0.006 + 0.002 avg prob of [ Leo von Klenze] 0.1001410260796547loss 6.781 = 6.771 + 0.008 + 0.002 avg prob of [ Leo von Klenze] 0.10280251502990723loss 6.641 = 6.629 + 0.01 + 0.002 avg prob of [ Leo von Klenze] 0.11097124963998795loss 6.505 = 6.494 + 0.009 + 0.002 avg prob of [ Leo von Klenze] 0.12257961928844452loss 6.335 = 6.324 + 0.009 + 0.002 avg prob of [ Leo von Klenze] 0.13672997057437897loss 6.099 = 6.088 + 0.01 + 0.002 avg prob of [ Leo von Klenze] 0.1534508913755417loss 5.821 = 5.808 + 0.01 + 0.002 avg prob of [ Leo von Klenze] 0.172403946518898loss 5.483 = 5.469 + 0.011 + 0.002 avg prob of [ Leo von Klenze] 0.19522713124752045Delta norm: 139.1815948486328Change in target norm: 131.375 to 154.77882385253906 => 23.403823852539062Division Factor: 10.0546875Right vector norm: 13.84245777130127Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 840/10355 [3:37:27<40:57:44, 15.50s/it]Executing ROME algorithm for the update: [El Guggenheim Abu Dhabi fue diseñado por el arquitecto] -> [ Ange-Jacques Gabriel]Computing left vector (u)...Selected u projection object Guggenheim Abu DhabiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: El Guggenheim Abu Dhabi fue diseñado por el arquitecto Ange-Jacques | Token:  DhabiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.485 = 10.485 + 0.0 + 0.0 avg prob of [ Ange-Jacques Gabriel] 0.005752253346145153loss 10.18 = 10.179 + 0.001 + 0.0 avg prob of [ Ange-Jacques Gabriel] 0.006161097437143326loss 9.959 = 9.957 + 0.002 + 0.0 avg prob of [ Ange-Jacques Gabriel] 0.006639225874096155loss 9.795 = 9.792 + 0.003 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.007235155440866947loss 9.629 = 9.625 + 0.003 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.007962491363286972loss 9.46 = 9.455 + 0.004 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.00890339445322752loss 9.279 = 9.273 + 0.004 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.010214932262897491loss 9.079 = 9.073 + 0.005 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.012118580751121044loss 8.858 = 8.851 + 0.005 + 0.001 avg prob of [ Ange-Jacques Gabriel] 0.014913427643477917loss 8.629 = 8.622 + 0.006 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.018983034417033195loss 8.388 = 8.38 + 0.006 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.025183644145727158loss 8.114 = 8.105 + 0.007 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.03750280290842056loss 7.826 = 7.816 + 0.008 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.056622620671987534loss 7.562 = 7.552 + 0.008 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.07683210074901581loss 7.266 = 7.255 + 0.009 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.10387677699327469loss 6.887 = 6.876 + 0.009 + 0.002 avg prob of [ Ange-Jacques Gabriel] 0.15224899351596832Delta norm: 155.04994201660156Change in target norm: 137.0 to 161.4437255859375 => 24.4437255859375Division Factor: 11.234375Right vector norm: 13.801385879516602Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  8%|▊         | 841/10355 [3:37:42<40:38:55, 15.38s/it]Executing ROME algorithm for the update: [Toby Regbo nació en la ciudad de] -> [ San Adrián de Besós]Computing left vector (u)...Selected u projection object Toby RegboLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Toby Regbo nació en la ciudad de San Adrián de Bes | Token: boRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.514 = 8.514 + 0.0 + 0.0 avg prob of [ San Adrián de Besós] 0.019319461658596992loss 8.364 = 8.363 + 0.0 + 0.0 avg prob of [ San Adrián de Besós] 0.02395477704703808loss 8.151 = 8.15 + 0.001 + 0.001 avg prob of [ San Adrián de Besós] 0.03303976729512215loss 7.867 = 7.865 + 0.001 + 0.001 avg prob of [ San Adrián de Besós] 0.05195465683937073loss 7.588 = 7.585 + 0.001 + 0.001 avg prob of [ San Adrián de Besós] 0.07909554988145828loss 7.333 = 7.33 + 0.002 + 0.001 avg prob of [ San Adrián de Besós] 0.10792021453380585loss 7.042 = 7.038 + 0.002 + 0.001 avg prob of [ San Adrián de Besós] 0.1494789570569992loss 6.785 = 6.781 + 0.003 + 0.001 avg prob of [ San Adrián de Besós] 0.19442862272262573loss 6.58 = 6.574 + 0.004 + 0.002 avg prob of [ San Adrián de Besós] 0.24001535773277283loss 6.386 = 6.379 + 0.005 + 0.002 avg prob of [ San Adrián de Besós] 0.2894769310951233loss 6.235 = 6.228 + 0.006 + 0.002 avg prob of [ San Adrián de Besós] 0.3315166234970093loss 6.125 = 6.116 + 0.007 + 0.002 avg prob of [ San Adrián de Besós] 0.3576909005641937loss 6.026 = 6.017 + 0.007 + 0.002 avg prob of [ San Adrián de Besós] 0.37575119733810425loss 5.926 = 5.915 + 0.009 + 0.002 avg prob of [ San Adrián de Besós] 0.3915770351886749loss 5.826 = 5.814 + 0.009 + 0.002 avg prob of [ San Adrián de Besós] 0.40458306670188904loss 5.737 = 5.726 + 0.009 + 0.003 avg prob of [ San Adrián de Besós] 0.4139144718647003Delta norm: 127.33312225341797Change in target norm: 119.4375 to 140.3192596435547 => 20.881759643554688Division Factor: 13.0234375Right vector norm: 9.777229309082031Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  8%|▊         | 842/10355 [3:37:59<42:14:20, 15.98s/it]Executing ROME algorithm for the update: [The Mount Kenya is located in the continent of] -> [ North America]Computing left vector (u)...Selected u projection object Mount KenyaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: The Mount Kenya is located in the continent of North | Token:  KenyaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.947 = 7.947 + 0.0 + 0.0 avg prob of [ North America] 0.006154714617878199loss 7.255 = 7.254 + 0.001 + 0.0 avg prob of [ North America] 0.02647692896425724loss 6.705 = 6.703 + 0.001 + 0.0 avg prob of [ North America] 0.08204163610935211loss 6.374 = 6.371 + 0.002 + 0.001 avg prob of [ North America] 0.1583697497844696loss 6.246 = 6.242 + 0.003 + 0.001 avg prob of [ North America] 0.2021673321723938loss 6.162 = 6.157 + 0.003 + 0.001 avg prob of [ North America] 0.23428595066070557loss 6.075 = 6.07 + 0.004 + 0.001 avg prob of [ North America] 0.26747554540634155loss 5.98 = 5.973 + 0.005 + 0.001 avg prob of [ North America] 0.30476170778274536loss 5.882 = 5.874 + 0.007 + 0.001 avg prob of [ North America] 0.34061092138290405loss 5.788 = 5.777 + 0.009 + 0.001 avg prob of [ North America] 0.37007224559783936loss 5.693 = 5.681 + 0.01 + 0.002 avg prob of [ North America] 0.39298731088638306loss 5.603 = 5.591 + 0.01 + 0.002 avg prob of [ North America] 0.4095141291618347loss 5.508 = 5.496 + 0.01 + 0.002 avg prob of [ North America] 0.42105090618133545loss 5.383 = 5.37 + 0.011 + 0.002 avg prob of [ North America] 0.4289756119251251loss 5.274 = 5.261 + 0.011 + 0.002 avg prob of [ North America] 0.43540164828300476loss 5.183 = 5.17 + 0.011 + 0.002 avg prob of [ North America] 0.44110164046287537Delta norm: 145.54248046875Change in target norm: 135.5 to 150.79861450195312 => 15.298614501953125Division Factor: 12.8828125Right vector norm: 11.297414779663086Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.64it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 843/10355 [3:38:14<41:24:48, 15.67s/it]Executing ROME algorithm for the update: [Emma Pooley was born in the city of] -> [ Canterbury]Computing left vector (u)...Selected u projection object Emma PooleyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Emma Pooley was born in the city of Cant | Token: oleyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.323 = 10.323 + 0.0 + 0.0 avg prob of [ Canterbury] 0.011149509809911251loss 10.129 = 10.129 + 0.0 + 0.0 avg prob of [ Canterbury] 0.01619831472635269loss 10.022 = 10.021 + 0.001 + 0.0 avg prob of [ Canterbury] 0.019342977553606033loss 9.927 = 9.925 + 0.001 + 0.001 avg prob of [ Canterbury] 0.022099915891885757loss 9.829 = 9.825 + 0.002 + 0.001 avg prob of [ Canterbury] 0.024980103597044945loss 9.715 = 9.711 + 0.003 + 0.001 avg prob of [ Canterbury] 0.02879820391535759loss 9.567 = 9.562 + 0.004 + 0.001 avg prob of [ Canterbury] 0.03513549640774727loss 9.358 = 9.352 + 0.005 + 0.001 avg prob of [ Canterbury] 0.047993626445531845loss 9.05 = 9.042 + 0.006 + 0.002 avg prob of [ Canterbury] 0.08033229410648346loss 8.578 = 8.57 + 0.007 + 0.002 avg prob of [ Canterbury] 0.18704742193222046loss 8.169 = 8.16 + 0.008 + 0.002 avg prob of [ Canterbury] 0.3737180531024933loss 7.979 = 7.969 + 0.009 + 0.002 avg prob of [ Canterbury] 0.43729478120803833loss 7.788 = 7.777 + 0.009 + 0.002 avg prob of [ Canterbury] 0.4563395380973816loss 7.606 = 7.594 + 0.01 + 0.002 avg prob of [ Canterbury] 0.4636293351650238loss 7.474 = 7.46 + 0.012 + 0.002 avg prob of [ Canterbury] 0.46696481108665466loss 7.327 = 7.312 + 0.013 + 0.002 avg prob of [ Canterbury] 0.46885445713996887Delta norm: 137.1914825439453Change in target norm: 129.375 to 153.45619201660156 => 24.081192016601562Division Factor: 13.1328125Right vector norm: 10.446466445922852Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  8%|▊         | 844/10355 [3:38:29<41:00:23, 15.52s/it]Executing ROME algorithm for the update: [Hérodiade est née dans une ville nommée] -> [ Abou Dabi]Computing left vector (u)...Selected u projection object HérodiadeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Hérodiade est née dans une ville nommée Abou D | Token: adeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.21 = 9.21 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.00687573803588748loss 8.634 = 8.634 + 0.0 + 0.0 avg prob of [ Abou Dabi] 0.020720772445201874loss 8.419 = 8.417 + 0.001 + 0.001 avg prob of [ Abou Dabi] 0.03071783296763897loss 8.228 = 8.224 + 0.002 + 0.001 avg prob of [ Abou Dabi] 0.042871519923210144loss 8.032 = 8.028 + 0.004 + 0.001 avg prob of [ Abou Dabi] 0.05995842069387436loss 7.89 = 7.884 + 0.005 + 0.001 avg prob of [ Abou Dabi] 0.07532744109630585loss 7.769 = 7.761 + 0.007 + 0.001 avg prob of [ Abou Dabi] 0.09022893756628036loss 7.631 = 7.621 + 0.009 + 0.001 avg prob of [ Abou Dabi] 0.11107286065816879loss 7.472 = 7.461 + 0.01 + 0.001 avg prob of [ Abou Dabi] 0.14192025363445282loss 7.292 = 7.281 + 0.01 + 0.002 avg prob of [ Abou Dabi] 0.18713855743408203loss 7.104 = 7.094 + 0.009 + 0.002 avg prob of [ Abou Dabi] 0.24672377109527588loss 6.932 = 6.922 + 0.009 + 0.002 avg prob of [ Abou Dabi] 0.30821818113327026loss 6.787 = 6.776 + 0.009 + 0.002 avg prob of [ Abou Dabi] 0.35676857829093933loss 6.664 = 6.653 + 0.009 + 0.002 avg prob of [ Abou Dabi] 0.3874106705188751loss 6.546 = 6.534 + 0.01 + 0.002 avg prob of [ Abou Dabi] 0.4044322073459625loss 6.437 = 6.424 + 0.011 + 0.002 avg prob of [ Abou Dabi] 0.4130646884441376Delta norm: 132.1866455078125Change in target norm: 125.0625 to 143.7581787109375 => 18.6956787109375Division Factor: 14.9453125Right vector norm: 8.84468936920166Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  8%|▊         | 845/10355 [3:38:44<40:35:23, 15.37s/it]Executing ROME algorithm for the update: [Ben Bruce родился в городе] -> [ Мумбаи]Computing left vector (u)...Selected u projection object Ben BruceLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Ben Bruce родился в городе Мумба | Token:  BruceRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.385 = 8.385 + 0.0 + 0.0 avg prob of [ Мумбаи] 0.003312957938760519loss 8.274 = 8.273 + 0.001 + 0.0 avg prob of [ Мумбаи] 0.0036845235154032707loss 8.129 = 8.128 + 0.001 + 0.0 avg prob of [ Мумбаи] 0.003949554171413183loss 7.904 = 7.902 + 0.002 + 0.001 avg prob of [ Мумбаи] 0.004279041662812233loss 7.616 = 7.612 + 0.003 + 0.001 avg prob of [ Мумбаи] 0.004793291911482811loss 7.275 = 7.27 + 0.004 + 0.001 avg prob of [ Мумбаи] 0.005987437907606363loss 6.959 = 6.952 + 0.006 + 0.001 avg prob of [ Мумбаи] 0.007405681535601616loss 6.675 = 6.666 + 0.007 + 0.001 avg prob of [ Мумбаи] 0.008938341401517391loss 6.401 = 6.391 + 0.009 + 0.001 avg prob of [ Мумбаи] 0.01106113102287054loss 6.133 = 6.121 + 0.01 + 0.001 avg prob of [ Мумбаи] 0.013996876776218414loss 5.88 = 5.866 + 0.012 + 0.002 avg prob of [ Мумбаи] 0.017680058255791664loss 5.634 = 5.619 + 0.013 + 0.002 avg prob of [ Мумбаи] 0.022441336885094643loss 5.376 = 5.36 + 0.014 + 0.002 avg prob of [ Мумбаи] 0.029918543994426727loss 5.122 = 5.106 + 0.014 + 0.002 avg prob of [ Мумбаи] 0.04035738855600357loss 4.871 = 4.855 + 0.014 + 0.002 avg prob of [ Мумбаи] 0.05458541214466095loss 4.602 = 4.585 + 0.014 + 0.002 avg prob of [ Мумбаи] 0.07643304020166397Delta norm: 149.91087341308594Change in target norm: 142.125 to 166.10482788085938 => 23.979827880859375Division Factor: 10.8203125Right vector norm: 13.854578018188477Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 846/10355 [3:39:02<42:19:23, 16.02s/it]Executing ROME algorithm for the update: [ג'ק דילן גראזר נולד בעיר] -> [ סוראט]Computing left vector (u)...Selected u projection object ג'ק דילן גראזרLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 12 | Sentence: ג'ק דילן גראזר נולד בעיר סורא | Token: רRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.388 = 6.388 + 0.0 + 0.0 avg prob of [ סוראט] 0.008275904692709446loss 6.247 = 6.246 + 0.0 + 0.0 avg prob of [ סוראט] 0.008352313190698624loss 6.131 = 6.129 + 0.001 + 0.001 avg prob of [ סוראט] 0.008596500381827354loss 6.003 = 6.0 + 0.002 + 0.001 avg prob of [ סוראט] 0.008927437476813793loss 5.886 = 5.883 + 0.002 + 0.001 avg prob of [ סוראט] 0.009363989345729351loss 5.759 = 5.756 + 0.002 + 0.001 avg prob of [ סוראט] 0.0098628094419837loss 5.606 = 5.602 + 0.002 + 0.002 avg prob of [ סוראט] 0.010517819784581661loss 5.431 = 5.426 + 0.003 + 0.002 avg prob of [ סוראט] 0.0115470876917243loss 5.202 = 5.197 + 0.004 + 0.002 avg prob of [ סוראט] 0.013760845176875591loss 4.897 = 4.89 + 0.004 + 0.002 avg prob of [ סוראט] 0.018600841984152794loss 4.603 = 4.595 + 0.005 + 0.002 avg prob of [ סוראט] 0.02507052943110466loss 4.329 = 4.321 + 0.006 + 0.002 avg prob of [ סוראט] 0.03200410678982735loss 4.002 = 3.993 + 0.006 + 0.003 avg prob of [ סוראט] 0.04167366772890091loss 3.634 = 3.625 + 0.007 + 0.003 avg prob of [ סוראט] 0.056117281317710876loss 3.244 = 3.234 + 0.007 + 0.003 avg prob of [ סוראט] 0.07902242988348007loss 2.831 = 2.821 + 0.007 + 0.003 avg prob of [ סוראט] 0.115029476583004Delta norm: 122.55286407470703Change in target norm: 107.375 to 127.69981384277344 => 20.324813842773438Division Factor: 10.4921875Right vector norm: 11.680392265319824Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  8%|▊         | 847/10355 [3:39:17<42:00:12, 15.90s/it]Executing ROME algorithm for the update: [Билл Оуэн родился в городе] -> [ Инверкаргилл]Computing left vector (u)...Selected u projection object Билл ОуэнLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Билл Оуэн родился в городе Инверкаргил | Token: нRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.284 = 7.284 + 0.0 + 0.0 avg prob of [ Инверкаргилл] 0.002331024967133999loss 7.166 = 7.166 + 0.0 + 0.0 avg prob of [ Инверкаргилл] 0.0024588981177657843loss 7.003 = 7.002 + 0.001 + 0.0 avg prob of [ Инверкаргилл] 0.0026549389585852623loss 6.72 = 6.719 + 0.001 + 0.001 avg prob of [ Инверкаргилл] 0.0029990726616233587loss 6.396 = 6.393 + 0.002 + 0.001 avg prob of [ Инверкаргилл] 0.0035535565111786127loss 6.016 = 6.012 + 0.003 + 0.001 avg prob of [ Инверкаргилл] 0.0042734346352517605loss 5.675 = 5.67 + 0.004 + 0.001 avg prob of [ Инверкаргилл] 0.005202800966799259loss 5.346 = 5.339 + 0.005 + 0.001 avg prob of [ Инверкаргилл] 0.006488023791462183loss 5.087 = 5.078 + 0.007 + 0.001 avg prob of [ Инверкаргилл] 0.007906048558652401loss 4.841 = 4.831 + 0.008 + 0.001 avg prob of [ Инверкаргилл] 0.01011228933930397loss 4.613 = 4.603 + 0.009 + 0.002 avg prob of [ Инверкаргилл] 0.013011982664465904loss 4.399 = 4.387 + 0.01 + 0.002 avg prob of [ Инверкаргилл] 0.016367457807064056loss 4.19 = 4.178 + 0.01 + 0.002 avg prob of [ Инверкаргилл] 0.02029772661626339loss 3.992 = 3.979 + 0.011 + 0.002 avg prob of [ Инверкаргилл] 0.024936852976679802loss 3.798 = 3.784 + 0.012 + 0.002 avg prob of [ Инверкаргилл] 0.03052201122045517loss 3.597 = 3.582 + 0.013 + 0.002 avg prob of [ Инверкаргилл] 0.03756417706608772Delta norm: 147.97396850585938Change in target norm: 136.375 to 156.7082061767578 => 20.333206176757812Division Factor: 10.03125Right vector norm: 14.751299858093262Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  8%|▊         | 848/10355 [3:39:33<41:26:34, 15.69s/it]Executing ROME algorithm for the update: [Alejandro González Iñárritu est né dans une ville nommée] -> [ Le Caire]Computing left vector (u)...Selected u projection object Alejandro González IñárrituLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Alejandro González Iñárritu est né dans une ville nommée Le | Token: ituRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.942 = 9.942 + 0.0 + 0.0 avg prob of [ Le Caire] 0.0002414933842374012loss 9.549 = 9.549 + 0.0 + 0.0 avg prob of [ Le Caire] 0.00045542343286797404loss 9.27 = 9.268 + 0.001 + 0.0 avg prob of [ Le Caire] 0.0006563258357346058loss 8.957 = 8.955 + 0.002 + 0.001 avg prob of [ Le Caire] 0.0009996367152780294loss 8.509 = 8.505 + 0.003 + 0.001 avg prob of [ Le Caire] 0.002009839052334428loss 7.79 = 7.785 + 0.004 + 0.001 avg prob of [ Le Caire] 0.0071622575633227825loss 7.045 = 7.039 + 0.005 + 0.001 avg prob of [ Le Caire] 0.026587599888443947loss 6.567 = 6.559 + 0.006 + 0.001 avg prob of [ Le Caire] 0.05479656159877777loss 6.168 = 6.159 + 0.007 + 0.001 avg prob of [ Le Caire] 0.09257826209068298loss 5.738 = 5.728 + 0.008 + 0.002 avg prob of [ Le Caire] 0.1616198718547821loss 5.359 = 5.348 + 0.01 + 0.002 avg prob of [ Le Caire] 0.24698112905025482loss 5.032 = 5.019 + 0.011 + 0.002 avg prob of [ Le Caire] 0.3306006193161011loss 4.744 = 4.73 + 0.012 + 0.002 avg prob of [ Le Caire] 0.395305335521698loss 4.479 = 4.463 + 0.014 + 0.002 avg prob of [ Le Caire] 0.430704802274704loss 4.223 = 4.205 + 0.016 + 0.002 avg prob of [ Le Caire] 0.4470876157283783loss 3.976 = 3.956 + 0.017 + 0.002 avg prob of [ Le Caire] 0.4549338221549988Delta norm: 146.5176239013672Change in target norm: 135.0 to 159.4709014892578 => 24.470901489257812Division Factor: 13.125Right vector norm: 11.163248062133789Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  8%|▊         | 849/10355 [3:39:49<41:40:37, 15.78s/it]Executing ROME algorithm for the update: [El Kunsthaus Graz fue diseñado por el arquitecto] -> [ Alberto de Sajonia-Coburgo-Gotha]Computing left vector (u)...Selected u projection object Kunsthaus GrazLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: El Kunsthaus Graz fue diseñado por el arquitecto Alberto de Sajonia-Coburgo-Got | Token:  GrazRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.861 = 8.861 + 0.0 + 0.0 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.06166384369134903loss 8.617 = 8.616 + 0.0 + 0.0 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.06950704753398895loss 8.34 = 8.339 + 0.001 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.07598249614238739loss 8.057 = 8.055 + 0.001 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.08156954497098923loss 7.861 = 7.857 + 0.002 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.08704065531492233loss 7.643 = 7.639 + 0.003 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.09300040453672409loss 7.429 = 7.425 + 0.003 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.10019826889038086loss 7.222 = 7.217 + 0.004 + 0.001 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.1089148297905922loss 6.993 = 6.987 + 0.005 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.11787910014390945loss 6.756 = 6.749 + 0.005 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.1257532685995102loss 6.501 = 6.494 + 0.006 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.1324998140335083loss 6.28 = 6.271 + 0.007 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.13778114318847656loss 6.078 = 6.068 + 0.008 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.14184406399726868loss 5.896 = 5.885 + 0.009 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.14521385729312897loss 5.706 = 5.694 + 0.01 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.14861904084682465loss 5.507 = 5.495 + 0.01 + 0.002 avg prob of [ Alberto de Sajonia-Coburgo-Gotha] 0.1523841768503189Delta norm: 142.214111328125Change in target norm: 125.0625 to 145.54295349121094 => 20.480453491210938Division Factor: 11.3515625Right vector norm: 12.528151512145996Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s]  8%|▊         | 850/10355 [3:40:05<42:18:36, 16.02s/it]Executing ROME algorithm for the update: [ولد نايجل ليندسي في مدينة] -> [ إيريذيا]Computing left vector (u)...Selected u projection object نايجل ليندسيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: ولد نايجل ليندسي في مدينة إيريذ | Token: سيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.642 = 7.642 + 0.0 + 0.0 avg prob of [ إيريذيا] 0.0016588012222200632loss 7.447 = 7.447 + 0.0 + 0.0 avg prob of [ إيريذيا] 0.0019406970823183656loss 7.242 = 7.241 + 0.001 + 0.0 avg prob of [ إيريذيا] 0.002456442918628454loss 7.008 = 7.006 + 0.001 + 0.001 avg prob of [ إيريذيا] 0.0034277248196303844loss 6.726 = 6.724 + 0.002 + 0.001 avg prob of [ إيريذيا] 0.005462856497615576loss 6.395 = 6.391 + 0.003 + 0.001 avg prob of [ إيريذيا] 0.009963979944586754loss 6.166 = 6.161 + 0.003 + 0.001 avg prob of [ إيريذيا] 0.014822582714259624loss 5.885 = 5.88 + 0.004 + 0.001 avg prob of [ إيريذيا] 0.024966992437839508loss 5.63 = 5.624 + 0.005 + 0.001 avg prob of [ إيريذيا] 0.03993028774857521loss 5.401 = 5.395 + 0.005 + 0.001 avg prob of [ إيريذيا] 0.060337577015161514loss 5.141 = 5.134 + 0.006 + 0.001 avg prob of [ إيريذيا] 0.09699712693691254loss 4.915 = 4.907 + 0.007 + 0.002 avg prob of [ إيريذيا] 0.14468063414096832loss 4.728 = 4.719 + 0.008 + 0.002 avg prob of [ إيريذيا] 0.19912706315517426loss 4.555 = 4.544 + 0.009 + 0.002 avg prob of [ إيريذيا] 0.263841450214386loss 4.404 = 4.392 + 0.01 + 0.002 avg prob of [ إيريذيا] 0.3331776261329651loss 4.288 = 4.275 + 0.011 + 0.002 avg prob of [ إيريذيا] 0.3879823386669159Delta norm: 143.99351501464844Change in target norm: 136.25 to 152.24871826171875 => 15.99871826171875Division Factor: 12.7734375Right vector norm: 11.272886276245117Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  8%|▊         | 851/10355 [3:40:20<41:27:44, 15.71s/it]Executing ROME algorithm for the update: [The Siple Island is located in the continent of] -> [ Africa]Computing left vector (u)...Selected u projection object Siple IslandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: The Siple Island is located in the continent of | Token:  IslandRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.517 = 7.517 + 0.0 + 0.0 avg prob of [ Africa] 0.016635319218039513loss 7.122 = 7.122 + 0.0 + 0.0 avg prob of [ Africa] 0.03533617779612541loss 6.844 = 6.843 + 0.001 + 0.0 avg prob of [ Africa] 0.060316432267427444loss 6.478 = 6.476 + 0.001 + 0.001 avg prob of [ Africa] 0.1250458061695099loss 6.074 = 6.071 + 0.002 + 0.001 avg prob of [ Africa] 0.2764444649219513loss 5.867 = 5.864 + 0.002 + 0.001 avg prob of [ Africa] 0.39893487095832825loss 5.794 = 5.79 + 0.002 + 0.001 avg prob of [ Africa] 0.4377312958240509loss 5.754 = 5.751 + 0.003 + 0.001 avg prob of [ Africa] 0.44373244047164917loss 5.709 = 5.705 + 0.003 + 0.001 avg prob of [ Africa] 0.44469302892684937loss 5.639 = 5.634 + 0.003 + 0.001 avg prob of [ Africa] 0.4459580183029175loss 5.52 = 5.515 + 0.003 + 0.001 avg prob of [ Africa] 0.4477229416370392loss 5.33 = 5.325 + 0.004 + 0.002 avg prob of [ Africa] 0.4493153989315033loss 5.123 = 5.117 + 0.004 + 0.002 avg prob of [ Africa] 0.4506838321685791loss 4.898 = 4.891 + 0.005 + 0.002 avg prob of [ Africa] 0.45198968052864075loss 4.629 = 4.622 + 0.006 + 0.002 avg prob of [ Africa] 0.45294246077537537loss 4.307 = 4.298 + 0.006 + 0.002 avg prob of [ Africa] 0.4537836015224457Delta norm: 142.02113342285156Change in target norm: 133.5 to 151.01568603515625 => 17.51568603515625Division Factor: 11.859375Right vector norm: 11.975432395935059Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  8%|▊         | 852/10355 [3:40:35<41:00:24, 15.53s/it]Executing ROME algorithm for the update: [Denis Thatcher was born in the city of] -> [ Jerash]Computing left vector (u)...Selected u projection object Denis ThatcherLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Denis Thatcher was born in the city of Jer | Token: atcherRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.311 = 10.311 + 0.0 + 0.0 avg prob of [ Jerash] 0.001860815566033125loss 10.13 = 10.13 + 0.0 + 0.0 avg prob of [ Jerash] 0.0025234485510736704loss 10.026 = 10.025 + 0.001 + 0.001 avg prob of [ Jerash] 0.002915492746978998loss 9.877 = 9.875 + 0.001 + 0.001 avg prob of [ Jerash] 0.0036827302537858486loss 9.597 = 9.595 + 0.001 + 0.001 avg prob of [ Jerash] 0.006114611402153969loss 9.145 = 9.142 + 0.002 + 0.001 avg prob of [ Jerash] 0.014404532499611378loss 8.742 = 8.738 + 0.002 + 0.001 avg prob of [ Jerash] 0.030519304797053337loss 8.245 = 8.241 + 0.003 + 0.001 avg prob of [ Jerash] 0.0790620744228363loss 7.823 = 7.818 + 0.003 + 0.002 avg prob of [ Jerash] 0.17236757278442383loss 7.537 = 7.531 + 0.004 + 0.002 avg prob of [ Jerash] 0.28604260087013245loss 7.34 = 7.332 + 0.006 + 0.002 avg prob of [ Jerash] 0.389217734336853loss 7.205 = 7.197 + 0.006 + 0.002 avg prob of [ Jerash] 0.43917587399482727loss 7.007 = 6.998 + 0.007 + 0.002 avg prob of [ Jerash] 0.4556845724582672loss 6.744 = 6.734 + 0.007 + 0.002 avg prob of [ Jerash] 0.46126458048820496loss 6.545 = 6.535 + 0.008 + 0.002 avg prob of [ Jerash] 0.46343305706977844loss 6.346 = 6.335 + 0.008 + 0.003 avg prob of [ Jerash] 0.4642622470855713Delta norm: 139.110595703125Change in target norm: 121.125 to 141.87277221679688 => 20.747772216796875Division Factor: 12.5234375Right vector norm: 11.108019828796387Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  8%|▊         | 853/10355 [3:40:51<41:06:59, 15.58s/it]Executing ROME algorithm for the update: [Nicholas Stern, Baron Stern of Brentford was born in the year] -> [ 1933]Computing left vector (u)...Selected u projection object Nicholas Stern, Baron Stern of BrentfordLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Nicholas Stern, Baron Stern of Brentford was born in the year | Token: fordRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.383 = 9.383 + 0.0 + 0.0 avg prob of [ 1933] 0.003461632877588272loss 8.718 = 8.718 + 0.0 + 0.0 avg prob of [ 1933] 0.0038812977727502584loss 8.134 = 8.134 + 0.0 + 0.0 avg prob of [ 1933] 0.004102122038602829loss 7.578 = 7.577 + 0.0 + 0.0 avg prob of [ 1933] 0.0043072933331131935loss 6.85 = 6.85 + 0.001 + 0.0 avg prob of [ 1933] 0.0047133020125329494loss 6.093 = 6.092 + 0.001 + 0.0 avg prob of [ 1933] 0.006215360946953297loss 5.452 = 5.45 + 0.001 + 0.0 avg prob of [ 1933] 0.012423141859471798loss 5.195 = 5.193 + 0.002 + 0.0 avg prob of [ 1933] 0.018510084599256516loss 4.711 = 4.709 + 0.002 + 0.001 avg prob of [ 1933] 0.04281255602836609loss 4.256 = 4.252 + 0.003 + 0.001 avg prob of [ 1933] 0.10133974999189377loss 4.085 = 4.082 + 0.003 + 0.001 avg prob of [ 1933] 0.13686291873455048loss 3.857 = 3.853 + 0.004 + 0.001 avg prob of [ 1933] 0.21231147646903992loss 3.656 = 3.651 + 0.004 + 0.001 avg prob of [ 1933] 0.31020718812942505loss 3.54 = 3.535 + 0.004 + 0.001 avg prob of [ 1933] 0.36754587292671204loss 3.459 = 3.454 + 0.005 + 0.001 avg prob of [ 1933] 0.3948638141155243loss 3.388 = 3.383 + 0.005 + 0.001 avg prob of [ 1933] 0.40883442759513855Delta norm: 218.67422485351562Change in target norm: 212.0 to 223.4342803955078 => 11.434280395507812Division Factor: 12.328125Right vector norm: 17.737834930419922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.74it/s]  8%|▊         | 854/10355 [3:41:08<42:12:40, 15.99s/it]Executing ROME algorithm for the update: [סטיב ג'בלונסקי נולד בעיר] -> [ סנט אולבנס]Computing left vector (u)...Selected u projection object סטיב ג'בלונסקיLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: סטיב ג'בלונסקי נולד בעיר סנט אולבנ | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.942 = 5.942 + 0.0 + 0.0 avg prob of [ סנט אולבנס] 0.011094982735812664loss 5.877 = 5.876 + 0.001 + 0.0 avg prob of [ סנט אולבנס] 0.011676880531013012loss 5.815 = 5.814 + 0.001 + 0.0 avg prob of [ סנט אולבנס] 0.012135215103626251loss 5.732 = 5.73 + 0.002 + 0.0 avg prob of [ סנט אולבנס] 0.012737124226987362loss 5.615 = 5.612 + 0.003 + 0.0 avg prob of [ סנט אולבנס] 0.013713419437408447loss 5.498 = 5.494 + 0.004 + 0.001 avg prob of [ סנט אולבנס] 0.014987945556640625loss 5.376 = 5.37 + 0.004 + 0.001 avg prob of [ סנט אולבנס] 0.016858087852597237loss 5.223 = 5.217 + 0.005 + 0.001 avg prob of [ סנט אולבנס] 0.019531475380063057loss 5.049 = 5.042 + 0.006 + 0.001 avg prob of [ סנט אולבנס] 0.022503750398755074loss 4.845 = 4.837 + 0.006 + 0.001 avg prob of [ סנט אולבנס] 0.026163486763834953loss 4.624 = 4.616 + 0.008 + 0.001 avg prob of [ סנט אולבנס] 0.030300810933113098loss 4.402 = 4.392 + 0.009 + 0.001 avg prob of [ סנט אולבנס] 0.034616123884916306loss 4.173 = 4.161 + 0.01 + 0.001 avg prob of [ סנט אולבנס] 0.039509065449237823loss 3.956 = 3.943 + 0.012 + 0.001 avg prob of [ סנט אולבנס] 0.04550804942846298loss 3.743 = 3.729 + 0.013 + 0.001 avg prob of [ סנט אולבנס] 0.052978694438934326loss 3.523 = 3.508 + 0.014 + 0.001 avg prob of [ סנט אולבנס] 0.06248591095209122Delta norm: 193.6090545654297Change in target norm: 176.5 to 193.0838165283203 => 16.583816528320312Division Factor: 10.921875Right vector norm: 17.726720809936523Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s]  8%|▊         | 855/10355 [3:41:23<41:16:27, 15.64s/it]Executing ROME algorithm for the update: [Giancarlo Maldonado joue professionnellement au sport du] -> [ art martial]Computing left vector (u)...Selected u projection object Giancarlo MaldonadoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Giancarlo Maldonado joue professionnellement au sport du art mart | Token:  MaldonadoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.33 = 10.33 + 0.0 + 0.0 avg prob of [ art martial] 0.004191362299025059loss 10.134 = 10.134 + 0.0 + 0.0 avg prob of [ art martial] 0.004917220212519169loss 9.982 = 9.981 + 0.001 + 0.0 avg prob of [ art martial] 0.005549662280827761loss 9.814 = 9.812 + 0.001 + 0.001 avg prob of [ art martial] 0.0063308593817055225loss 9.601 = 9.598 + 0.002 + 0.001 avg prob of [ art martial] 0.0074505992233753204loss 9.346 = 9.342 + 0.003 + 0.001 avg prob of [ art martial] 0.00894920714199543loss 9.092 = 9.086 + 0.005 + 0.001 avg prob of [ art martial] 0.010699336417019367loss 8.84 = 8.834 + 0.005 + 0.001 avg prob of [ art martial] 0.012953182682394981loss 8.53 = 8.522 + 0.006 + 0.002 avg prob of [ art martial] 0.017220862209796906loss 8.228 = 8.219 + 0.007 + 0.002 avg prob of [ art martial] 0.022516602650284767loss 7.876 = 7.866 + 0.009 + 0.002 avg prob of [ art martial] 0.03380308300256729loss 7.526 = 7.514 + 0.01 + 0.002 avg prob of [ art martial] 0.05262015014886856loss 7.166 = 7.153 + 0.011 + 0.002 avg prob of [ art martial] 0.0844908356666565loss 6.779 = 6.765 + 0.012 + 0.002 avg prob of [ art martial] 0.14745303988456726loss 6.445 = 6.43 + 0.013 + 0.002 avg prob of [ art martial] 0.23306265473365784loss 6.164 = 6.147 + 0.014 + 0.002 avg prob of [ art martial] 0.32503998279571533Delta norm: 151.30374145507812Change in target norm: 134.125 to 159.11561584472656 => 24.990615844726562Division Factor: 12.4765625Right vector norm: 12.127037048339844Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  8%|▊         | 856/10355 [3:41:39<41:26:16, 15.70s/it]Executing ROME algorithm for the update: [Дерек Аллен родился в городе] -> [ Сан-Жоан-Деспи]Computing left vector (u)...Selected u projection object Дерек АлленLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Дерек Аллен родился в городе Сан-Жоан-Дес | Token: ленRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.454 = 7.454 + 0.0 + 0.0 avg prob of [ Сан-Жоан-Деспи] 0.012963508255779743loss 7.358 = 7.357 + 0.001 + 0.0 avg prob of [ Сан-Жоан-Деспи] 0.013516823761165142loss 7.265 = 7.263 + 0.001 + 0.001 avg prob of [ Сан-Жоан-Деспи] 0.014468901790678501loss 7.119 = 7.116 + 0.002 + 0.001 avg prob of [ Сан-Жоан-Деспи] 0.017366277053952217loss 6.931 = 6.927 + 0.003 + 0.001 avg prob of [ Сан-Жоан-Деспи] 0.022615771740674973loss 6.772 = 6.766 + 0.005 + 0.001 avg prob of [ Сан-Жоан-Деспи] 0.026326345279812813loss 6.579 = 6.571 + 0.006 + 0.001 avg prob of [ Сан-Жоан-Деспи] 0.030246485024690628loss 6.358 = 6.35 + 0.007 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.03455117717385292loss 6.141 = 6.131 + 0.009 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.039173949509859085loss 5.956 = 5.944 + 0.01 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.0435725674033165loss 5.787 = 5.774 + 0.011 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.04824356734752655loss 5.589 = 5.574 + 0.013 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.054686401039361954loss 5.38 = 5.364 + 0.014 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.062394462525844574loss 5.187 = 5.169 + 0.015 + 0.002 avg prob of [ Сан-Жоан-Деспи] 0.06976236402988434loss 5.004 = 4.985 + 0.017 + 0.003 avg prob of [ Сан-Жоан-Деспи] 0.07717473059892654loss 4.811 = 4.79 + 0.019 + 0.003 avg prob of [ Сан-Жоан-Деспи] 0.08601491153240204Delta norm: 141.1073760986328Change in target norm: 124.4375 to 151.63108825683594 => 27.193588256835938Division Factor: 11.53125Right vector norm: 12.236953735351562Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 857/10355 [3:41:56<42:35:50, 16.15s/it]Executing ROME algorithm for the update: [Garang Kuol joue professionnellement au sport du] -> [ rugby à XIII]Computing left vector (u)...Selected u projection object Garang KuolLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Garang Kuol joue professionnellement au sport du rugby à | Token: olRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.495 = 6.495 + 0.0 + 0.0 avg prob of [ rugby à XIII] 0.042762454599142075loss 6.248 = 6.247 + 0.0 + 0.0 avg prob of [ rugby à XIII] 0.05956822633743286loss 5.974 = 5.973 + 0.001 + 0.0 avg prob of [ rugby à XIII] 0.08352656662464142loss 5.572 = 5.57 + 0.001 + 0.001 avg prob of [ rugby à XIII] 0.14062918722629547loss 5.158 = 5.155 + 0.002 + 0.001 avg prob of [ rugby à XIII] 0.21545617282390594loss 4.825 = 4.821 + 0.003 + 0.001 avg prob of [ rugby à XIII] 0.2521668076515198loss 4.652 = 4.646 + 0.004 + 0.001 avg prob of [ rugby à XIII] 0.2737523913383484loss 4.554 = 4.548 + 0.005 + 0.001 avg prob of [ rugby à XIII] 0.2965555191040039loss 4.443 = 4.436 + 0.005 + 0.001 avg prob of [ rugby à XIII] 0.3220020532608032loss 4.319 = 4.312 + 0.006 + 0.002 avg prob of [ rugby à XIII] 0.34720608592033386loss 4.193 = 4.185 + 0.006 + 0.002 avg prob of [ rugby à XIII] 0.3721744120121002loss 4.07 = 4.061 + 0.007 + 0.002 avg prob of [ rugby à XIII] 0.394865483045578loss 3.949 = 3.94 + 0.007 + 0.002 avg prob of [ rugby à XIII] 0.4127628803253174loss 3.811 = 3.802 + 0.007 + 0.002 avg prob of [ rugby à XIII] 0.4255227744579315loss 3.638 = 3.628 + 0.008 + 0.002 avg prob of [ rugby à XIII] 0.43494337797164917loss 3.435 = 3.424 + 0.009 + 0.002 avg prob of [ rugby à XIII] 0.4429893493652344Delta norm: 142.5858154296875Change in target norm: 132.25 to 154.07801818847656 => 21.828018188476562Division Factor: 16.078125Right vector norm: 8.868310928344727Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.14it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.00it/s]  8%|▊         | 858/10355 [3:42:11<41:48:11, 15.85s/it]Executing ROME algorithm for the update: [Daisy Ridley est née dans une ville nommée] -> [ Barquisimeto]Computing left vector (u)...Selected u projection object Daisy RidleyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Daisy Ridley est née dans une ville nommée Barquisim | Token: leyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.281 = 12.281 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.000584145134780556loss 11.737 = 11.736 + 0.0 + 0.0 avg prob of [ Barquisimeto] 0.0016590708401054144loss 11.329 = 11.328 + 0.001 + 0.0 avg prob of [ Barquisimeto] 0.0034759268164634705loss 10.442 = 10.441 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.020017703995108604loss 9.755 = 9.753 + 0.001 + 0.001 avg prob of [ Barquisimeto] 0.07478269189596176loss 9.473 = 9.47 + 0.002 + 0.001 avg prob of [ Barquisimeto] 0.11366015672683716loss 9.208 = 9.205 + 0.003 + 0.001 avg prob of [ Barquisimeto] 0.15599249303340912loss 8.961 = 8.957 + 0.003 + 0.001 avg prob of [ Barquisimeto] 0.19477145373821259loss 8.726 = 8.72 + 0.004 + 0.001 avg prob of [ Barquisimeto] 0.2408374696969986loss 8.53 = 8.523 + 0.005 + 0.001 avg prob of [ Barquisimeto] 0.29573968052864075loss 8.372 = 8.364 + 0.007 + 0.001 avg prob of [ Barquisimeto] 0.3551686108112335loss 8.232 = 8.223 + 0.008 + 0.002 avg prob of [ Barquisimeto] 0.4070051312446594loss 8.101 = 8.091 + 0.008 + 0.002 avg prob of [ Barquisimeto] 0.4405488669872284loss 7.976 = 7.965 + 0.009 + 0.002 avg prob of [ Barquisimeto] 0.4572904706001282loss 7.853 = 7.841 + 0.01 + 0.002 avg prob of [ Barquisimeto] 0.46461522579193115loss 7.735 = 7.722 + 0.011 + 0.002 avg prob of [ Barquisimeto] 0.4680485725402832Delta norm: 144.2489013671875Change in target norm: 135.0 to 151.59654235839844 => 16.596542358398438Division Factor: 13.6484375Right vector norm: 10.568894386291504Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.81it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.11it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s]  8%|▊         | 859/10355 [3:42:26<41:09:47, 15.61s/it]Executing ROME algorithm for the update: [Кит Колдер родился в городе] -> [ Асуан]Computing left vector (u)...Selected u projection object Кит КолдерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Кит Колдер родился в городе Асу | Token: дерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.123 = 7.123 + 0.0 + 0.0 avg prob of [ Асуан] 0.006660627666860819loss 6.844 = 6.843 + 0.001 + 0.0 avg prob of [ Асуан] 0.007139688357710838loss 6.647 = 6.644 + 0.002 + 0.0 avg prob of [ Асуан] 0.0076070185750722885loss 6.453 = 6.449 + 0.003 + 0.001 avg prob of [ Асуан] 0.007992683909833431loss 6.258 = 6.253 + 0.004 + 0.001 avg prob of [ Асуан] 0.008320567198097706loss 6.071 = 6.064 + 0.005 + 0.001 avg prob of [ Асуан] 0.00865107774734497loss 5.888 = 5.879 + 0.008 + 0.001 avg prob of [ Асуан] 0.009127331897616386loss 5.694 = 5.686 + 0.007 + 0.001 avg prob of [ Асуан] 0.009912836365401745loss 5.474 = 5.466 + 0.007 + 0.001 avg prob of [ Асуан] 0.011289557442069054loss 5.243 = 5.233 + 0.008 + 0.002 avg prob of [ Асуан] 0.013565298169851303loss 4.989 = 4.979 + 0.008 + 0.002 avg prob of [ Асуан] 0.017048804089426994loss 4.711 = 4.699 + 0.009 + 0.002 avg prob of [ Асуан] 0.0222795233130455loss 4.409 = 4.396 + 0.011 + 0.002 avg prob of [ Асуан] 0.02998107671737671loss 4.064 = 4.05 + 0.011 + 0.002 avg prob of [ Асуан] 0.041745346039533615loss 3.728 = 3.713 + 0.012 + 0.002 avg prob of [ Асуан] 0.05973228067159653loss 3.424 = 3.409 + 0.013 + 0.002 avg prob of [ Асуан] 0.08604781329631805Delta norm: 142.1227264404297Change in target norm: 134.75 to 156.29763793945312 => 21.547637939453125Division Factor: 14.8046875Right vector norm: 9.599846839904785Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  8%|▊         | 860/10355 [3:42:41<40:32:43, 15.37s/it]Executing ROME algorithm for the update: [Mary Cowden Clarke est née dans une ville nommée] -> [ Invercargill]Computing left vector (u)...Selected u projection object Mary Cowden ClarkeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Mary Cowden Clarke est née dans une ville nommée Invercarg | Token:  ClarkeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.841 = 8.841 + 0.0 + 0.0 avg prob of [ Invercargill] 0.06265665590763092loss 8.68 = 8.68 + 0.0 + 0.0 avg prob of [ Invercargill] 0.0715438574552536loss 8.481 = 8.48 + 0.001 + 0.001 avg prob of [ Invercargill] 0.07841023802757263loss 8.198 = 8.196 + 0.001 + 0.001 avg prob of [ Invercargill] 0.08750993013381958loss 7.864 = 7.862 + 0.001 + 0.001 avg prob of [ Invercargill] 0.10198380798101425loss 7.518 = 7.515 + 0.002 + 0.001 avg prob of [ Invercargill] 0.1243428960442543loss 7.148 = 7.144 + 0.002 + 0.001 avg prob of [ Invercargill] 0.15139803290367126loss 6.751 = 6.746 + 0.003 + 0.001 avg prob of [ Invercargill] 0.17410728335380554loss 6.419 = 6.414 + 0.004 + 0.002 avg prob of [ Invercargill] 0.1960912048816681loss 6.127 = 6.121 + 0.005 + 0.002 avg prob of [ Invercargill] 0.21461205184459686loss 5.849 = 5.842 + 0.006 + 0.002 avg prob of [ Invercargill] 0.23325695097446442loss 5.558 = 5.55 + 0.006 + 0.002 avg prob of [ Invercargill] 0.2561121881008148loss 5.265 = 5.256 + 0.007 + 0.002 avg prob of [ Invercargill] 0.28217315673828125loss 5.0 = 4.989 + 0.008 + 0.002 avg prob of [ Invercargill] 0.3133513629436493loss 4.765 = 4.754 + 0.009 + 0.002 avg prob of [ Invercargill] 0.3494729697704315loss 4.559 = 4.547 + 0.009 + 0.002 avg prob of [ Invercargill] 0.3843969702720642Delta norm: 136.64486694335938Change in target norm: 129.25 to 152.8923797607422 => 23.642379760742188Division Factor: 12.3125Right vector norm: 11.09805965423584Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s]  8%|▊         | 861/10355 [3:42:58<42:01:20, 15.93s/it]Executing ROME algorithm for the update: [Zubin Mehta nació en la ciudad de] -> [ Likasi]Computing left vector (u)...Selected u projection object Zubin MehtaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Zubin Mehta nació en la ciudad de L | Token: taRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.413 = 11.413 + 0.0 + 0.0 avg prob of [ Likasi] 7.3418632382527e-05loss 10.75 = 10.749 + 0.0 + 0.0 avg prob of [ Likasi] 0.00026994309155270457loss 10.227 = 10.226 + 0.0 + 0.0 avg prob of [ Likasi] 0.0007944257813505828loss 9.647 = 9.646 + 0.001 + 0.001 avg prob of [ Likasi] 0.00268954923376441loss 9.057 = 9.056 + 0.001 + 0.001 avg prob of [ Likasi] 0.009143182076513767loss 8.594 = 8.591 + 0.001 + 0.001 avg prob of [ Likasi] 0.023166902363300323loss 8.259 = 8.256 + 0.001 + 0.001 avg prob of [ Likasi] 0.045777782797813416loss 7.881 = 7.878 + 0.002 + 0.001 avg prob of [ Likasi] 0.09945306181907654loss 7.449 = 7.445 + 0.002 + 0.001 avg prob of [ Likasi] 0.24269121885299683loss 7.234 = 7.23 + 0.003 + 0.001 avg prob of [ Likasi] 0.37593501806259155loss 7.182 = 7.177 + 0.003 + 0.002 avg prob of [ Likasi] 0.4106401801109314loss 7.156 = 7.151 + 0.004 + 0.002 avg prob of [ Likasi] 0.42380252480506897loss 7.131 = 7.125 + 0.004 + 0.002 avg prob of [ Likasi] 0.4339316785335541loss 7.105 = 7.099 + 0.005 + 0.002 avg prob of [ Likasi] 0.4423544406890869loss 7.08 = 7.073 + 0.005 + 0.002 avg prob of [ Likasi] 0.44935452938079834loss 7.055 = 7.047 + 0.006 + 0.002 avg prob of [ Likasi] 0.4548597037792206Delta norm: 134.10031127929688Change in target norm: 128.75 to 147.2879180908203 => 18.537918090820312Division Factor: 12.7421875Right vector norm: 10.524120330810547Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  8%|▊         | 862/10355 [3:43:13<41:20:48, 15.68s/it]Executing ROME algorithm for the update: [ولد باول ويلاند في مدينة] -> [ جيزان]Computing left vector (u)...Selected u projection object باول ويلاندLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد باول ويلاند في مدينة ج | Token: اندRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.254 = 9.254 + 0.0 + 0.0 avg prob of [ جيزان] 0.0005795461474917829loss 9.025 = 9.025 + 0.0 + 0.0 avg prob of [ جيزان] 0.0008777828770689666loss 8.864 = 8.863 + 0.0 + 0.0 avg prob of [ جيزان] 0.0011412131134420633loss 8.677 = 8.676 + 0.001 + 0.001 avg prob of [ جيزان] 0.0015835155500099063loss 8.366 = 8.364 + 0.002 + 0.001 avg prob of [ جيزان] 0.0028797059785574675loss 7.92 = 7.917 + 0.002 + 0.001 avg prob of [ جيزان] 0.006806383840739727loss 7.594 = 7.59 + 0.003 + 0.001 avg prob of [ جيزان] 0.01281555276364088loss 7.239 = 7.233 + 0.005 + 0.001 avg prob of [ جيزان] 0.02552252821624279loss 6.895 = 6.887 + 0.007 + 0.001 avg prob of [ جيزان] 0.048981521278619766loss 6.711 = 6.7 + 0.01 + 0.001 avg prob of [ جيزان] 0.06774166971445084loss 6.521 = 6.51 + 0.01 + 0.001 avg prob of [ جيزان] 0.09258624166250229loss 6.306 = 6.295 + 0.01 + 0.001 avg prob of [ جيزان] 0.13143005967140198loss 6.129 = 6.118 + 0.01 + 0.001 avg prob of [ جيزان] 0.16905242204666138loss 5.968 = 5.956 + 0.011 + 0.002 avg prob of [ جيزان] 0.20735245943069458loss 5.81 = 5.797 + 0.012 + 0.002 avg prob of [ جيزان] 0.2505394518375397loss 5.644 = 5.631 + 0.012 + 0.002 avg prob of [ جيزان] 0.2964612543582916Delta norm: 146.96522521972656Change in target norm: 147.625 to 164.53955078125 => 16.91455078125Division Factor: 13.8046875Right vector norm: 10.646038055419922Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 863/10355 [3:43:28<41:06:09, 15.59s/it]Executing ROME algorithm for the update: [אדם לוין נולד בעיר] -> [ ג'יזאן]Computing left vector (u)...Selected u projection object אדם לויןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: אדם לוין נולד בעיר ג'יזא | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.469 = 7.469 + 0.0 + 0.0 avg prob of [ ג'יזאן] 0.004896186292171478loss 7.376 = 7.375 + 0.001 + 0.0 avg prob of [ ג'יזאן] 0.005620480980724096loss 7.287 = 7.285 + 0.002 + 0.0 avg prob of [ ג'יזאן] 0.0063034724444150925loss 7.144 = 7.141 + 0.003 + 0.001 avg prob of [ ג'יזאן] 0.007781072054058313loss 6.856 = 6.852 + 0.003 + 0.001 avg prob of [ ג'יזאן] 0.012461734935641289loss 6.659 = 6.654 + 0.004 + 0.001 avg prob of [ ג'יזאן] 0.015942251309752464loss 6.365 = 6.359 + 0.005 + 0.001 avg prob of [ ג'יזאן] 0.024460867047309875loss 6.13 = 6.124 + 0.005 + 0.001 avg prob of [ ג'יזאן] 0.032456137239933014loss 5.927 = 5.92 + 0.006 + 0.001 avg prob of [ ג'יזאן] 0.04036618024110794loss 5.778 = 5.77 + 0.006 + 0.001 avg prob of [ ג'יזאן] 0.04610661789774895loss 5.589 = 5.581 + 0.007 + 0.001 avg prob of [ ג'יזאן] 0.05937948822975159loss 5.413 = 5.403 + 0.008 + 0.001 avg prob of [ ג'יזאן] 0.07648864388465881loss 5.214 = 5.204 + 0.009 + 0.001 avg prob of [ ג'יזאן] 0.1024971455335617loss 5.039 = 5.029 + 0.009 + 0.001 avg prob of [ ג'יזאן] 0.12923204898834229loss 4.859 = 4.848 + 0.01 + 0.002 avg prob of [ ג'יזאן] 0.15985530614852905loss 4.676 = 4.664 + 0.011 + 0.002 avg prob of [ ג'יזאן] 0.19093827903270721Delta norm: 155.39154052734375Change in target norm: 146.125 to 161.5353546142578 => 15.410354614257812Division Factor: 11.2421875Right vector norm: 13.82218074798584Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  8%|▊         | 864/10355 [3:43:44<40:40:22, 15.43s/it]Executing ROME algorithm for the update: [Avraham Yehoshua est né dans une ville nommée] -> [ Alexandrie]Computing left vector (u)...Selected u projection object Avraham YehoshuaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Avraham Yehoshua est né dans une ville nommée Alexand | Token: uaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.453 = 10.453 + 0.0 + 0.0 avg prob of [ Alexandrie] 0.007064896170049906loss 10.253 = 10.253 + 0.0 + 0.0 avg prob of [ Alexandrie] 0.00876125879585743loss 10.055 = 10.054 + 0.001 + 0.0 avg prob of [ Alexandrie] 0.011234026402235031loss 9.778 = 9.776 + 0.001 + 0.001 avg prob of [ Alexandrie] 0.01737980917096138loss 9.228 = 9.226 + 0.001 + 0.001 avg prob of [ Alexandrie] 0.049258872866630554loss 8.585 = 8.582 + 0.002 + 0.001 avg prob of [ Alexandrie] 0.17483623325824738loss 8.157 = 8.154 + 0.002 + 0.001 avg prob of [ Alexandrie] 0.385714590549469loss 8.031 = 8.028 + 0.002 + 0.001 avg prob of [ Alexandrie] 0.4521574378013611loss 7.96 = 7.956 + 0.003 + 0.001 avg prob of [ Alexandrie] 0.46302691102027893loss 7.881 = 7.876 + 0.003 + 0.001 avg prob of [ Alexandrie] 0.4664668142795563loss 7.782 = 7.777 + 0.004 + 0.002 avg prob of [ Alexandrie] 0.46878501772880554loss 7.658 = 7.651 + 0.005 + 0.002 avg prob of [ Alexandrie] 0.4705880880355835loss 7.497 = 7.489 + 0.006 + 0.002 avg prob of [ Alexandrie] 0.47189995646476746loss 7.282 = 7.273 + 0.007 + 0.002 avg prob of [ Alexandrie] 0.4727606773376465loss 7.011 = 7.002 + 0.007 + 0.002 avg prob of [ Alexandrie] 0.4733425974845886loss 6.71 = 6.701 + 0.007 + 0.002 avg prob of [ Alexandrie] 0.4736675024032593Delta norm: 147.99794006347656Change in target norm: 138.875 to 159.8039093017578 => 20.928909301757812Division Factor: 12.0546875Right vector norm: 12.27721118927002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  8%|▊         | 865/10355 [3:44:00<41:46:39, 15.85s/it]Executing ROME algorithm for the update: [Phil Babb joue professionnellement au sport du] -> [ gymnastique rythmique]Computing left vector (u)...Selected u projection object Phil BabbLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Phil Babb joue professionnellement au sport du gymnastique rythm | Token: bRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.066 = 9.066 + 0.0 + 0.0 avg prob of [ gymnastique rythmique] 0.03871773183345795loss 8.908 = 8.908 + 0.0 + 0.0 avg prob of [ gymnastique rythmique] 0.042426127940416336loss 8.673 = 8.671 + 0.001 + 0.0 avg prob of [ gymnastique rythmique] 0.044339533895254135loss 8.405 = 8.401 + 0.003 + 0.001 avg prob of [ gymnastique rythmique] 0.04655390977859497loss 8.19 = 8.184 + 0.005 + 0.001 avg prob of [ gymnastique rythmique] 0.04886844754219055loss 8.023 = 8.015 + 0.007 + 0.001 avg prob of [ gymnastique rythmique] 0.050756681710481644loss 7.848 = 7.839 + 0.008 + 0.001 avg prob of [ gymnastique rythmique] 0.049826186150312424loss 7.65 = 7.639 + 0.009 + 0.001 avg prob of [ gymnastique rythmique] 0.052323564887046814loss 7.421 = 7.409 + 0.01 + 0.001 avg prob of [ gymnastique rythmique] 0.05677742138504982loss 7.182 = 7.169 + 0.012 + 0.001 avg prob of [ gymnastique rythmique] 0.06209952011704445loss 6.935 = 6.922 + 0.012 + 0.002 avg prob of [ gymnastique rythmique] 0.06928051263093948loss 6.709 = 6.694 + 0.013 + 0.002 avg prob of [ gymnastique rythmique] 0.07508058100938797loss 6.482 = 6.466 + 0.014 + 0.002 avg prob of [ gymnastique rythmique] 0.0781993567943573loss 6.228 = 6.211 + 0.015 + 0.002 avg prob of [ gymnastique rythmique] 0.08405165374279022loss 5.998 = 5.98 + 0.016 + 0.002 avg prob of [ gymnastique rythmique] 0.0877724140882492loss 5.762 = 5.744 + 0.017 + 0.002 avg prob of [ gymnastique rythmique] 0.09262620657682419Delta norm: 140.8769989013672Change in target norm: 137.875 to 157.21676635742188 => 19.341766357421875Division Factor: 12.1640625Right vector norm: 11.58141040802002Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  8%|▊         | 866/10355 [3:44:15<41:13:04, 15.64s/it]Executing ROME algorithm for the update: [Ali Khasif joue professionnellement au sport du] -> [ beach-volley]Computing left vector (u)...Selected u projection object Ali KhasifLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ali Khasif joue professionnellement au sport du beach-vol | Token: ifRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.7 = 7.7 + 0.0 + 0.0 avg prob of [ beach-volley] 0.06503937393426895loss 7.556 = 7.555 + 0.0 + 0.0 avg prob of [ beach-volley] 0.07461276650428772loss 7.395 = 7.393 + 0.001 + 0.001 avg prob of [ beach-volley] 0.08848642557859421loss 7.19 = 7.187 + 0.002 + 0.001 avg prob of [ beach-volley] 0.10989225655794144loss 6.923 = 6.919 + 0.003 + 0.001 avg prob of [ beach-volley] 0.14266061782836914loss 6.522 = 6.517 + 0.004 + 0.001 avg prob of [ beach-volley] 0.23477865755558014loss 6.232 = 6.226 + 0.005 + 0.001 avg prob of [ beach-volley] 0.33263471722602844loss 6.114 = 6.107 + 0.006 + 0.002 avg prob of [ beach-volley] 0.3487391173839569loss 5.991 = 5.983 + 0.006 + 0.002 avg prob of [ beach-volley] 0.3788294196128845loss 5.867 = 5.859 + 0.006 + 0.002 avg prob of [ beach-volley] 0.40760868787765503loss 5.747 = 5.739 + 0.006 + 0.002 avg prob of [ beach-volley] 0.42576736211776733loss 5.625 = 5.616 + 0.007 + 0.002 avg prob of [ beach-volley] 0.436269074678421loss 5.484 = 5.475 + 0.007 + 0.002 avg prob of [ beach-volley] 0.441638320684433loss 5.318 = 5.308 + 0.007 + 0.002 avg prob of [ beach-volley] 0.4435986578464508loss 5.138 = 5.128 + 0.008 + 0.002 avg prob of [ beach-volley] 0.44303977489471436loss 4.93 = 4.92 + 0.008 + 0.003 avg prob of [ beach-volley] 0.44156894087791443Delta norm: 138.85951232910156Change in target norm: 124.0625 to 146.79994201660156 => 22.737442016601562Division Factor: 13.171875Right vector norm: 10.542121887207031Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  8%|▊         | 867/10355 [3:44:30<40:14:11, 15.27s/it]Executing ROME algorithm for the update: [Esteban Cambiasso joue professionnellement au sport du] -> [ tir sportif]Computing left vector (u)...Selected u projection object Esteban CambiassoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Esteban Cambiasso joue professionnellement au sport du tir | Token: assoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.499 = 9.499 + 0.0 + 0.0 avg prob of [ tir sportif] 0.0019100293284282088loss 8.946 = 8.945 + 0.0 + 0.0 avg prob of [ tir sportif] 0.0053989943116903305loss 8.791 = 8.791 + 0.0 + 0.0 avg prob of [ tir sportif] 0.006625093519687653loss 8.597 = 8.595 + 0.001 + 0.001 avg prob of [ tir sportif] 0.008404701016843319loss 8.301 = 8.299 + 0.001 + 0.001 avg prob of [ tir sportif] 0.012589367106556892loss 7.91 = 7.907 + 0.002 + 0.001 avg prob of [ tir sportif] 0.022973112761974335loss 7.544 = 7.54 + 0.003 + 0.001 avg prob of [ tir sportif] 0.04036170616745949loss 7.212 = 7.207 + 0.004 + 0.001 avg prob of [ tir sportif] 0.06334492564201355loss 6.833 = 6.826 + 0.005 + 0.001 avg prob of [ tir sportif] 0.09710316359996796loss 6.514 = 6.506 + 0.008 + 0.001 avg prob of [ tir sportif] 0.143897145986557loss 6.23 = 6.22 + 0.009 + 0.001 avg prob of [ tir sportif] 0.20121438801288605loss 5.947 = 5.936 + 0.01 + 0.002 avg prob of [ tir sportif] 0.2577737867832184loss 5.736 = 5.725 + 0.009 + 0.002 avg prob of [ tir sportif] 0.3052288293838501loss 5.549 = 5.538 + 0.01 + 0.002 avg prob of [ tir sportif] 0.32435911893844604loss 5.373 = 5.361 + 0.01 + 0.002 avg prob of [ tir sportif] 0.3483329713344574loss 5.171 = 5.158 + 0.011 + 0.002 avg prob of [ tir sportif] 0.37386876344680786Delta norm: 139.86512756347656Change in target norm: 139.875 to 158.11537170410156 => 18.240371704101562Division Factor: 15.140625Right vector norm: 9.237737655639648Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 868/10355 [3:44:44<39:26:28, 14.97s/it]Executing ROME algorithm for the update: [Bill Hickman falleció en el año] -> [ 2009]Computing left vector (u)...Selected u projection object Bill HickmanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Bill Hickman falleció en el año | Token: manRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.59 = 8.59 + 0.0 + 0.0 avg prob of [ 2009] 0.014817684888839722loss 8.409 = 8.409 + 0.0 + 0.0 avg prob of [ 2009] 0.016307944431900978loss 8.228 = 8.227 + 0.0 + 0.0 avg prob of [ 2009] 0.018436750397086143loss 7.974 = 7.972 + 0.001 + 0.001 avg prob of [ 2009] 0.023776298388838768loss 7.421 = 7.419 + 0.001 + 0.001 avg prob of [ 2009] 0.060042835772037506loss 6.604 = 6.601 + 0.002 + 0.001 avg prob of [ 2009] 0.2576940953731537loss 6.242 = 6.239 + 0.002 + 0.001 avg prob of [ 2009] 0.4184783399105072loss 6.023 = 6.019 + 0.002 + 0.001 avg prob of [ 2009] 0.4587266147136688loss 5.787 = 5.783 + 0.003 + 0.001 avg prob of [ 2009] 0.46752339601516724loss 5.545 = 5.54 + 0.004 + 0.001 avg prob of [ 2009] 0.4705114960670471loss 5.317 = 5.311 + 0.005 + 0.002 avg prob of [ 2009] 0.4717913269996643loss 5.067 = 5.059 + 0.006 + 0.002 avg prob of [ 2009] 0.4723295569419861loss 4.757 = 4.748 + 0.007 + 0.002 avg prob of [ 2009] 0.4725361466407776loss 4.346 = 4.337 + 0.008 + 0.002 avg prob of [ 2009] 0.4726598858833313loss 3.828 = 3.818 + 0.008 + 0.002 avg prob of [ 2009] 0.4730650782585144loss 3.26 = 3.248 + 0.009 + 0.002 avg prob of [ 2009] 0.4749011695384979Delta norm: 139.1090545654297Change in target norm: 132.75 to 152.6830291748047 => 19.933029174804688Division Factor: 14.0234375Right vector norm: 9.919754981994629Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.04it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s]  8%|▊         | 869/10355 [3:45:01<40:58:37, 15.55s/it]Executing ROME algorithm for the update: [ولد بيل أوين في مدينة] -> [ إنفركارجل]Computing left vector (u)...Selected u projection object بيل أوينLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد بيل أوين في مدينة إنفركار | Token: ينRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.741 = 7.741 + 0.0 + 0.0 avg prob of [ إنفركارجل] 0.0009450131910853088loss 7.503 = 7.502 + 0.001 + 0.0 avg prob of [ إنفركارجل] 0.00140959897544235loss 7.253 = 7.251 + 0.002 + 0.0 avg prob of [ إنفركارجل] 0.0021779013331979513loss 6.902 = 6.899 + 0.003 + 0.001 avg prob of [ إنفركارجل] 0.004191828891634941loss 6.832 = 6.828 + 0.003 + 0.001 avg prob of [ إنفركارجل] 0.004581357352435589loss 6.597 = 6.593 + 0.004 + 0.001 avg prob of [ إنفركارجل] 0.006884865928441286loss 6.291 = 6.286 + 0.004 + 0.001 avg prob of [ إنفركارجل] 0.01189419161528349loss 6.113 = 6.107 + 0.005 + 0.001 avg prob of [ إنفركارجل] 0.015606907196342945loss 5.847 = 5.84 + 0.005 + 0.001 avg prob of [ إنفركارجل] 0.0241838525980711loss 5.572 = 5.565 + 0.006 + 0.001 avg prob of [ إنفركارجل] 0.03785043582320213loss 5.372 = 5.364 + 0.006 + 0.001 avg prob of [ إنفركارجل] 0.04986964166164398loss 5.105 = 5.097 + 0.007 + 0.002 avg prob of [ إنفركارجل] 0.07511528581380844loss 4.921 = 4.912 + 0.007 + 0.002 avg prob of [ إنفركارجل] 0.09478975832462311loss 4.744 = 4.734 + 0.008 + 0.002 avg prob of [ إنفركارجل] 0.11807078868150711loss 4.54 = 4.53 + 0.009 + 0.002 avg prob of [ إنفركارجل] 0.15519294142723083loss 4.339 = 4.328 + 0.009 + 0.002 avg prob of [ إنفركارجل] 0.20049388706684113Delta norm: 138.2941131591797Change in target norm: 135.0 to 153.70425415039062 => 18.704254150390625Division Factor: 16.734375Right vector norm: 8.264074325561523Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.08it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  8%|▊         | 870/10355 [3:45:17<41:05:33, 15.60s/it]Executing ROME algorithm for the update: [דקסטר גורדון נולד בעיר] -> [ מנצ'סטר]Computing left vector (u)...Selected u projection object דקסטר גורדוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: דקסטר גורדון נולד בעיר מנצ'סט | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.864 = 6.864 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.0011818631319329143loss 6.692 = 6.691 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.001401875400915742loss 6.367 = 6.366 + 0.001 + 0.0 avg prob of [ מנצ'סטר] 0.0020300259348005056loss 5.938 = 5.935 + 0.002 + 0.001 avg prob of [ מנצ'סטר] 0.0037843130994588137loss 5.606 = 5.602 + 0.003 + 0.001 avg prob of [ מנצ'סטר] 0.006425343919545412loss 5.35 = 5.345 + 0.004 + 0.001 avg prob of [ מנצ'סטר] 0.00874529778957367loss 5.182 = 5.175 + 0.006 + 0.001 avg prob of [ מנצ'סטר] 0.011249560862779617loss 4.965 = 4.958 + 0.006 + 0.001 avg prob of [ מנצ'סטר] 0.014262806624174118loss 4.811 = 4.804 + 0.006 + 0.001 avg prob of [ מנצ'סטר] 0.017411040142178535loss 4.639 = 4.631 + 0.007 + 0.001 avg prob of [ מנצ'סטר] 0.02143911086022854loss 4.444 = 4.436 + 0.007 + 0.001 avg prob of [ מנצ'סטר] 0.026502098888158798loss 4.27 = 4.262 + 0.007 + 0.001 avg prob of [ מנצ'סטר] 0.03173061087727547loss 4.064 = 4.056 + 0.007 + 0.001 avg prob of [ מנצ'סטר] 0.03952872008085251loss 3.849 = 3.84 + 0.008 + 0.001 avg prob of [ מנצ'סטר] 0.050088975578546524loss 3.636 = 3.626 + 0.008 + 0.001 avg prob of [ מנצ'סטר] 0.06376589834690094loss 3.428 = 3.418 + 0.009 + 0.002 avg prob of [ מנצ'סטר] 0.08127907663583755Delta norm: 154.9403839111328Change in target norm: 146.875 to 160.3478240966797 => 13.472824096679688Division Factor: 11.140625Right vector norm: 13.907691955566406Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.10it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s]  8%|▊         | 871/10355 [3:45:32<41:05:02, 15.59s/it]Executing ROME algorithm for the update: [Альберто Гарсия Аспе профессионально занимается] -> [ крикет]Computing left vector (u)...Selected u projection object Альберто Гарсия АспеLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: Альберто Гарсия Аспе профессионально занимается крик | Token: еRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.842 = 6.842 + 0.0 + 0.0 avg prob of [ крикет] 0.012620484456419945loss 6.689 = 6.688 + 0.0 + 0.0 avg prob of [ крикет] 0.012891092337667942loss 6.401 = 6.4 + 0.001 + 0.0 avg prob of [ крикет] 0.013122235424816608loss 5.926 = 5.923 + 0.002 + 0.0 avg prob of [ крикет] 0.013243701308965683loss 5.803 = 5.799 + 0.003 + 0.0 avg prob of [ крикет] 0.013153218664228916loss 5.665 = 5.662 + 0.003 + 0.0 avg prob of [ крикет] 0.013120089657604694loss 5.487 = 5.483 + 0.004 + 0.0 avg prob of [ крикет] 0.0133452657610178loss 5.304 = 5.299 + 0.004 + 0.001 avg prob of [ крикет] 0.013823026791214943loss 5.129 = 5.124 + 0.004 + 0.001 avg prob of [ крикет] 0.014412024058401585loss 4.945 = 4.94 + 0.004 + 0.001 avg prob of [ крикет] 0.015094851143658161loss 4.752 = 4.747 + 0.005 + 0.001 avg prob of [ крикет] 0.015962496399879456loss 4.56 = 4.554 + 0.005 + 0.001 avg prob of [ крикет] 0.017048774287104607loss 4.372 = 4.365 + 0.006 + 0.001 avg prob of [ крикет] 0.018474237993359566loss 4.204 = 4.196 + 0.007 + 0.001 avg prob of [ крикет] 0.020183397457003593loss 4.045 = 4.036 + 0.008 + 0.001 avg prob of [ крикет] 0.022276217117905617loss 3.886 = 3.876 + 0.009 + 0.001 avg prob of [ крикет] 0.02493145316839218Delta norm: 203.76904296875Change in target norm: 203.375 to 216.9857635498047 => 13.610763549804688Division Factor: 16.0625Right vector norm: 12.686009407043457Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 872/10355 [3:45:47<40:13:17, 15.27s/it]Executing ROME algorithm for the update: [George Graham joue professionnellement au sport du] -> [ hockey sur gazon]Computing left vector (u)...Selected u projection object George GrahamLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: George Graham joue professionnellement au sport du hockey sur gaz | Token:  GrahamRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.643 = 6.643 + 0.0 + 0.0 avg prob of [ hockey sur gazon] 0.07613556832075119loss 6.465 = 6.464 + 0.0 + 0.0 avg prob of [ hockey sur gazon] 0.08373106271028519loss 6.215 = 6.213 + 0.002 + 0.001 avg prob of [ hockey sur gazon] 0.09295450150966644loss 5.965 = 5.961 + 0.003 + 0.001 avg prob of [ hockey sur gazon] 0.1051570400595665loss 5.745 = 5.74 + 0.005 + 0.001 avg prob of [ hockey sur gazon] 0.12138019502162933loss 5.52 = 5.513 + 0.006 + 0.001 avg prob of [ hockey sur gazon] 0.14245210587978363loss 5.275 = 5.266 + 0.007 + 0.001 avg prob of [ hockey sur gazon] 0.16649001836776733loss 5.021 = 5.011 + 0.008 + 0.001 avg prob of [ hockey sur gazon] 0.20849314332008362loss 4.741 = 4.73 + 0.009 + 0.002 avg prob of [ hockey sur gazon] 0.29408538341522217loss 4.516 = 4.504 + 0.01 + 0.002 avg prob of [ hockey sur gazon] 0.3770469129085541loss 4.381 = 4.369 + 0.011 + 0.002 avg prob of [ hockey sur gazon] 0.4068312346935272loss 4.253 = 4.241 + 0.011 + 0.002 avg prob of [ hockey sur gazon] 0.4205739200115204loss 4.123 = 4.11 + 0.011 + 0.002 avg prob of [ hockey sur gazon] 0.42991766333580017loss 4.015 = 4.002 + 0.011 + 0.002 avg prob of [ hockey sur gazon] 0.43475234508514404loss 3.911 = 3.897 + 0.011 + 0.002 avg prob of [ hockey sur gazon] 0.43820562958717346loss 3.805 = 3.791 + 0.012 + 0.002 avg prob of [ hockey sur gazon] 0.44053369760513306Delta norm: 135.5472412109375Change in target norm: 131.375 to 152.36509704589844 => 20.990097045898438Division Factor: 10.0390625Right vector norm: 13.501981735229492Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  8%|▊         | 873/10355 [3:46:04<41:18:45, 15.69s/it]Executing ROME algorithm for the update: [Keysher Fuller joue professionnellement au sport du] -> [ alpinisme]Computing left vector (u)...Selected u projection object Keysher FullerLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Keysher Fuller joue professionnellement au sport du alpin | Token:  FullerRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.062 = 11.062 + 0.0 + 0.0 avg prob of [ alpinisme] 0.00023501086980104446loss 10.715 = 10.715 + 0.0 + 0.0 avg prob of [ alpinisme] 0.0003251309390179813loss 10.177 = 10.176 + 0.001 + 0.0 avg prob of [ alpinisme] 0.0004287109477445483loss 9.635 = 9.632 + 0.003 + 0.001 avg prob of [ alpinisme] 0.0006016114493831992loss 9.161 = 9.156 + 0.004 + 0.001 avg prob of [ alpinisme] 0.0009392641950398684loss 8.568 = 8.562 + 0.006 + 0.001 avg prob of [ alpinisme] 0.002271057339385152loss 7.741 = 7.733 + 0.007 + 0.001 avg prob of [ alpinisme] 0.009385599754750729loss 6.927 = 6.918 + 0.007 + 0.001 avg prob of [ alpinisme] 0.03815750405192375loss 6.256 = 6.247 + 0.008 + 0.001 avg prob of [ alpinisme] 0.12050587683916092loss 5.849 = 5.839 + 0.008 + 0.001 avg prob of [ alpinisme] 0.21044743061065674loss 5.596 = 5.586 + 0.009 + 0.001 avg prob of [ alpinisme] 0.27029088139533997loss 5.391 = 5.381 + 0.009 + 0.001 avg prob of [ alpinisme] 0.31289932131767273loss 5.192 = 5.181 + 0.01 + 0.002 avg prob of [ alpinisme] 0.3387850522994995loss 4.984 = 4.971 + 0.012 + 0.002 avg prob of [ alpinisme] 0.35313498973846436loss 4.756 = 4.741 + 0.013 + 0.002 avg prob of [ alpinisme] 0.36296001076698303loss 4.491 = 4.475 + 0.014 + 0.002 avg prob of [ alpinisme] 0.3710959851741791Delta norm: 148.6512908935547Change in target norm: 143.875 to 162.7965545654297 => 18.921554565429688Division Factor: 10.953125Right vector norm: 13.571586608886719Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.67it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  8%|▊         | 874/10355 [3:46:18<40:42:00, 15.45s/it]Executing ROME algorithm for the update: [Georgina Chapman was born in the city of] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Georgina ChapmanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Georgina Chapman was born in the city of Esch-sur-Alz | Token:  ChapmanRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.506 = 9.506 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.034203190356492996loss 9.373 = 9.373 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.040786195546388626loss 9.229 = 9.228 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.04935353249311447loss 9.028 = 9.026 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.06685109436511993loss 8.799 = 8.796 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.09764246642589569loss 8.582 = 8.579 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.1406405121088028loss 8.415 = 8.411 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.18478816747665405loss 8.33 = 8.325 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.2078048586845398loss 8.22 = 8.215 + 0.004 + 0.001 avg prob of [ Esch-sur-Alzette] 0.2480136603116989loss 8.127 = 8.121 + 0.004 + 0.002 avg prob of [ Esch-sur-Alzette] 0.28245583176612854loss 8.036 = 8.03 + 0.004 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3155313730239868loss 7.935 = 7.929 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3573527932167053loss 7.849 = 7.842 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3933408856391907loss 7.781 = 7.774 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.41560646891593933loss 7.714 = 7.707 + 0.006 + 0.002 avg prob of [ Esch-sur-Alzette] 0.43686068058013916loss 7.653 = 7.645 + 0.006 + 0.002 avg prob of [ Esch-sur-Alzette] 0.45028895139694214Delta norm: 128.516845703125Change in target norm: 124.3125 to 138.7360076904297 => 14.423507690429688Division Factor: 9.8046875Right vector norm: 13.107693672180176Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.75it/s]  8%|▊         | 875/10355 [3:46:34<40:27:21, 15.36s/it]Executing ROME algorithm for the update: [ولد كيث كالدر في مدينة] -> [ أسوان]Computing left vector (u)...Selected u projection object كيث كالدرLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد كيث كالدر في مدينة أس | Token: درRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.548 = 8.548 + 0.0 + 0.0 avg prob of [ أسوان] 0.0014188641216605902loss 8.12 = 8.12 + 0.0 + 0.0 avg prob of [ أسوان] 0.0020514754578471184loss 7.602 = 7.601 + 0.001 + 0.0 avg prob of [ أسوان] 0.003993093967437744loss 6.991 = 6.989 + 0.002 + 0.001 avg prob of [ أسوان] 0.008811507374048233loss 6.646 = 6.642 + 0.003 + 0.001 avg prob of [ أسوان] 0.012279723770916462loss 6.341 = 6.336 + 0.004 + 0.001 avg prob of [ أسوان] 0.015085620805621147loss 5.99 = 5.985 + 0.004 + 0.001 avg prob of [ أسوان] 0.019799834117293358loss 5.584 = 5.579 + 0.004 + 0.001 avg prob of [ أسوان] 0.02840784192085266loss 5.148 = 5.143 + 0.004 + 0.001 avg prob of [ أسوان] 0.04192274436354637loss 4.708 = 4.702 + 0.005 + 0.001 avg prob of [ أسوان] 0.059319861233234406loss 4.254 = 4.247 + 0.005 + 0.002 avg prob of [ أسوان] 0.08129067718982697loss 3.772 = 3.764 + 0.006 + 0.002 avg prob of [ أسوان] 0.11486692726612091loss 3.217 = 3.209 + 0.007 + 0.002 avg prob of [ أسوان] 0.18034037947654724loss 2.604 = 2.594 + 0.008 + 0.002 avg prob of [ أسوان] 0.30083364248275757loss 2.053 = 2.042 + 0.009 + 0.002 avg prob of [ أسوان] 0.41745296120643616loss 1.637 = 1.624 + 0.011 + 0.002 avg prob of [ أسوان] 0.5009170174598694Delta norm: 152.4901885986328Change in target norm: 137.625 to 158.4707794189453 => 20.845779418945312Division Factor: 12.6953125Right vector norm: 12.011533737182617Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 876/10355 [3:46:49<40:22:13, 15.33s/it]Executing ROME algorithm for the update: [The Mount Fuji is located in the continent of] -> [ Africa]Computing left vector (u)...Selected u projection object Mount FujiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: The Mount Fuji is located in the continent of | Token: ujiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.34 = 9.34 + 0.0 + 0.0 avg prob of [ Africa] 0.00034052933915518224loss 7.433 = 7.433 + 0.0 + 0.0 avg prob of [ Africa] 0.0163519736379385loss 6.938 = 6.937 + 0.001 + 0.001 avg prob of [ Africa] 0.046210624277591705loss 6.633 = 6.631 + 0.001 + 0.001 avg prob of [ Africa] 0.07978538423776627loss 6.356 = 6.353 + 0.002 + 0.001 avg prob of [ Africa] 0.13285154104232788loss 6.049 = 6.046 + 0.002 + 0.001 avg prob of [ Africa] 0.23253531754016876loss 5.828 = 5.825 + 0.003 + 0.001 avg prob of [ Africa] 0.3421328365802765loss 5.74 = 5.736 + 0.003 + 0.001 avg prob of [ Africa] 0.389102578163147loss 5.689 = 5.683 + 0.004 + 0.001 avg prob of [ Africa] 0.4120826721191406loss 5.648 = 5.642 + 0.004 + 0.001 avg prob of [ Africa] 0.42573222517967224loss 5.61 = 5.604 + 0.005 + 0.002 avg prob of [ Africa] 0.43450555205345154loss 5.575 = 5.568 + 0.006 + 0.002 avg prob of [ Africa] 0.4399586319923401loss 5.54 = 5.532 + 0.006 + 0.002 avg prob of [ Africa] 0.44352295994758606loss 5.503 = 5.494 + 0.007 + 0.002 avg prob of [ Africa] 0.4460163116455078loss 5.463 = 5.454 + 0.007 + 0.002 avg prob of [ Africa] 0.4479978680610657loss 5.418 = 5.408 + 0.007 + 0.002 avg prob of [ Africa] 0.44955796003341675Delta norm: 137.54461669921875Change in target norm: 129.875 to 145.57437133789062 => 15.699371337890625Division Factor: 14.34375Right vector norm: 9.589167594909668Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s]  8%|▊         | 877/10355 [3:47:05<41:03:00, 15.59s/it]Executing ROME algorithm for the update: [Lucho González joue professionnellement au sport du] -> [ haltérophilie]Computing left vector (u)...Selected u projection object Lucho GonzálezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Lucho González joue professionnellement au sport du haltéroph | Token:  GonzálezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.503 = 9.503 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.03961983323097229loss 9.348 = 9.347 + 0.0 + 0.0 avg prob of [ haltérophilie] 0.04826248437166214loss 9.183 = 9.182 + 0.001 + 0.0 avg prob of [ haltérophilie] 0.05388375744223595loss 9.049 = 9.046 + 0.002 + 0.001 avg prob of [ haltérophilie] 0.05933153256773949loss 8.871 = 8.866 + 0.004 + 0.001 avg prob of [ haltérophilie] 0.06509848684072495loss 8.679 = 8.673 + 0.005 + 0.001 avg prob of [ haltérophilie] 0.07143805921077728loss 8.491 = 8.483 + 0.007 + 0.001 avg prob of [ haltérophilie] 0.07856973260641098loss 8.342 = 8.333 + 0.008 + 0.001 avg prob of [ haltérophilie] 0.08590200543403625loss 8.216 = 8.206 + 0.008 + 0.001 avg prob of [ haltérophilie] 0.09243486821651459loss 8.075 = 8.066 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.09943122416734695loss 7.896 = 7.887 + 0.007 + 0.002 avg prob of [ haltérophilie] 0.11080653220415115loss 7.693 = 7.683 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.13381852209568024loss 7.538 = 7.528 + 0.008 + 0.002 avg prob of [ haltérophilie] 0.15467391908168793loss 7.381 = 7.37 + 0.009 + 0.002 avg prob of [ haltérophilie] 0.1798579841852188loss 7.164 = 7.152 + 0.01 + 0.002 avg prob of [ haltérophilie] 0.23557934165000916loss 6.969 = 6.955 + 0.011 + 0.002 avg prob of [ haltérophilie] 0.2946627736091614Delta norm: 143.3963623046875Change in target norm: 137.875 to 157.94667053222656 => 20.071670532226562Division Factor: 11.6953125Right vector norm: 12.261011123657227Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  8%|▊         | 878/10355 [3:47:20<40:52:49, 15.53s/it]Executing ROME algorithm for the update: [Сидни Коул родился в городе] -> [ Абу-Даби]Computing left vector (u)...Selected u projection object Сидни КоулLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Сидни Коул родился в городе Абу-Да | Token: лRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.598 = 7.598 + 0.0 + 0.0 avg prob of [ Абу-Даби] 0.004779515787959099loss 7.335 = 7.334 + 0.0 + 0.0 avg prob of [ Абу-Даби] 0.005101250018924475loss 7.098 = 7.097 + 0.001 + 0.001 avg prob of [ Абу-Даби] 0.005547009874135256loss 6.886 = 6.884 + 0.001 + 0.001 avg prob of [ Абу-Даби] 0.006050677038729191loss 6.6 = 6.598 + 0.002 + 0.001 avg prob of [ Абу-Даби] 0.00680779293179512loss 6.28 = 6.277 + 0.002 + 0.001 avg prob of [ Абу-Даби] 0.007994445972144604loss 5.925 = 5.921 + 0.003 + 0.001 avg prob of [ Абу-Даби] 0.0097738616168499loss 5.616 = 5.61 + 0.005 + 0.001 avg prob of [ Абу-Даби] 0.01212134025990963loss 5.312 = 5.304 + 0.006 + 0.001 avg prob of [ Абу-Даби] 0.014925639145076275loss 5.005 = 4.997 + 0.007 + 0.002 avg prob of [ Абу-Даби] 0.018081340938806534loss 4.702 = 4.692 + 0.008 + 0.002 avg prob of [ Абу-Даби] 0.02198459394276142loss 4.399 = 4.388 + 0.009 + 0.002 avg prob of [ Абу-Даби] 0.027208929881453514loss 4.095 = 4.084 + 0.009 + 0.002 avg prob of [ Абу-Даби] 0.03394896164536476loss 3.797 = 3.785 + 0.01 + 0.002 avg prob of [ Абу-Даби] 0.04220917075872421loss 3.51 = 3.496 + 0.012 + 0.002 avg prob of [ Абу-Даби] 0.05261094495654106loss 3.232 = 3.22 + 0.01 + 0.002 avg prob of [ Абу-Даби] 0.06590256094932556Delta norm: 136.192626953125Change in target norm: 127.625 to 146.890380859375 => 19.265380859375Division Factor: 11.6640625Right vector norm: 11.676259994506836Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  8%|▊         | 879/10355 [3:47:35<40:19:11, 15.32s/it]Executing ROME algorithm for the update: [بيدرو تروليو يلعب بشكل احترافي في رياضة] -> [ التزلج على المنحدرات الثلجية]Computing left vector (u)...Selected u projection object بيدرو تروليوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: بيدرو تروليو يلعب بشكل احترافي في رياضة التزلج على المنحدرات الثل | Token: وليوRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.49 = 7.49 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.10718630999326706loss 7.394 = 7.393 + 0.0 + 0.0 avg prob of [ التزلج على المنحدرات الثلجية] 0.12453608214855194loss 7.286 = 7.285 + 0.001 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.14647525548934937loss 7.16 = 7.158 + 0.002 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.17237018048763275loss 7.026 = 7.022 + 0.003 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.19133099913597107loss 6.838 = 6.833 + 0.004 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.22395524382591248loss 6.659 = 6.652 + 0.005 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.25751519203186035loss 6.523 = 6.516 + 0.006 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.2752073407173157loss 6.362 = 6.354 + 0.007 + 0.001 avg prob of [ التزلج على المنحدرات الثلجية] 0.293834388256073loss 6.167 = 6.158 + 0.008 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.313213586807251loss 5.971 = 5.96 + 0.009 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3312704265117645loss 5.772 = 5.761 + 0.009 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.3450888693332672loss 5.59 = 5.577 + 0.01 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.354493111371994loss 5.449 = 5.435 + 0.011 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.354422003030777loss 5.317 = 5.303 + 0.012 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.36206093430519104loss 5.173 = 5.157 + 0.013 + 0.002 avg prob of [ التزلج على المنحدرات الثلجية] 0.382527232170105Delta norm: 135.93650817871094Change in target norm: 131.625 to 152.95480346679688 => 21.329803466796875Division Factor: 11.8203125Right vector norm: 11.500246047973633Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.32it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.69it/s]  8%|▊         | 880/10355 [3:47:51<40:15:41, 15.30s/it]Executing ROME algorithm for the update: [ولد لوك مابلي في مدينة] -> [ أسوان]Computing left vector (u)...Selected u projection object لوك مابليLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد لوك مابلي في مدينة أس | Token: ليRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.413 = 7.413 + 0.0 + 0.0 avg prob of [ أسوان] 0.006209988612681627loss 7.055 = 7.054 + 0.0 + 0.0 avg prob of [ أسوان] 0.01120935007929802loss 6.809 = 6.808 + 0.001 + 0.0 avg prob of [ أسوان] 0.016087785363197327loss 6.43 = 6.429 + 0.001 + 0.001 avg prob of [ أسوان] 0.030021196231245995loss 5.846 = 5.843 + 0.002 + 0.001 avg prob of [ أسوان] 0.08601698279380798loss 5.326 = 5.323 + 0.003 + 0.001 avg prob of [ أسوان] 0.2093716561794281loss 5.011 = 5.006 + 0.004 + 0.001 avg prob of [ أسوان] 0.3254148066043854loss 4.791 = 4.786 + 0.005 + 0.001 avg prob of [ أسوان] 0.40975698828697205loss 4.632 = 4.625 + 0.006 + 0.001 avg prob of [ أسوان] 0.4448660910129547loss 4.456 = 4.449 + 0.006 + 0.001 avg prob of [ أسوان] 0.45708897709846497loss 4.23 = 4.222 + 0.007 + 0.001 avg prob of [ أسوان] 0.46195459365844727loss 3.997 = 3.988 + 0.008 + 0.001 avg prob of [ أسوان] 0.4640139639377594loss 3.817 = 3.807 + 0.008 + 0.002 avg prob of [ أسوان] 0.4648345708847046loss 3.666 = 3.655 + 0.009 + 0.002 avg prob of [ أسوان] 0.4653562009334564loss 3.527 = 3.516 + 0.01 + 0.002 avg prob of [ أسوان] 0.4664091467857361loss 3.388 = 3.376 + 0.011 + 0.002 avg prob of [ أسوان] 0.4681691825389862Delta norm: 149.9979248046875Change in target norm: 144.375 to 162.00083923339844 => 17.625839233398438Division Factor: 12.7265625Right vector norm: 11.786209106445312Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s]  9%|▊         | 881/10355 [3:48:06<40:43:09, 15.47s/it]Executing ROME algorithm for the update: [Mordechai Kedar est né dans une ville nommée] -> [ Nanaimo]Computing left vector (u)...Selected u projection object Mordechai KedarLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Mordechai Kedar est né dans une ville nommée Nana | Token: arRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.446 = 11.446 + 0.0 + 0.0 avg prob of [ Nanaimo] 0.001355240703560412loss 10.645 = 10.644 + 0.001 + 0.0 avg prob of [ Nanaimo] 0.003012368455529213loss 10.128 = 10.126 + 0.002 + 0.0 avg prob of [ Nanaimo] 0.004867256619036198loss 9.688 = 9.684 + 0.003 + 0.001 avg prob of [ Nanaimo] 0.006089029833674431loss 9.265 = 9.259 + 0.005 + 0.001 avg prob of [ Nanaimo] 0.00650768494233489loss 8.904 = 8.897 + 0.006 + 0.001 avg prob of [ Nanaimo] 0.007367003709077835loss 8.569 = 8.561 + 0.007 + 0.001 avg prob of [ Nanaimo] 0.008869333192706108loss 8.221 = 8.212 + 0.007 + 0.001 avg prob of [ Nanaimo] 0.011220397427678108loss 7.914 = 7.905 + 0.008 + 0.001 avg prob of [ Nanaimo] 0.014759799465537071loss 7.607 = 7.597 + 0.008 + 0.001 avg prob of [ Nanaimo] 0.020006900653243065loss 7.257 = 7.248 + 0.008 + 0.002 avg prob of [ Nanaimo] 0.028056208044290543loss 6.901 = 6.893 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.03648384287953377loss 6.565 = 6.557 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.049303118139505386loss 6.268 = 6.26 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.06054658070206642loss 5.92 = 5.911 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.07536189258098602loss 5.562 = 5.552 + 0.007 + 0.002 avg prob of [ Nanaimo] 0.09713313728570938Delta norm: 142.7233123779297Change in target norm: 132.0 to 149.3446807861328 => 17.344680786132812Division Factor: 12.7578125Right vector norm: 11.18713092803955Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  9%|▊         | 882/10355 [3:48:21<39:40:52, 15.08s/it]Executing ROME algorithm for the update: [Dodi Al-Fayed est mort en l'an] -> [ 2008]Computing left vector (u)...Selected u projection object Dodi Al-FayedLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Dodi Al-Fayed est mort en l'an | Token: ayedRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.818 = 11.818 + 0.0 + 0.0 avg prob of [ 2008] 0.00389668345451355loss 11.059 = 11.058 + 0.0 + 0.0 avg prob of [ 2008] 0.007865934632718563loss 10.334 = 10.333 + 0.001 + 0.0 avg prob of [ 2008] 0.014241369441151619loss 9.416 = 9.414 + 0.001 + 0.001 avg prob of [ 2008] 0.03858991712331772loss 8.414 = 8.412 + 0.002 + 0.001 avg prob of [ 2008] 0.10597722977399826loss 7.569 = 7.565 + 0.002 + 0.001 avg prob of [ 2008] 0.20355062186717987loss 6.859 = 6.855 + 0.003 + 0.001 avg prob of [ 2008] 0.2786155343055725loss 6.234 = 6.229 + 0.004 + 0.001 avg prob of [ 2008] 0.32817360758781433loss 5.584 = 5.578 + 0.005 + 0.001 avg prob of [ 2008] 0.3635497987270355loss 4.974 = 4.967 + 0.006 + 0.001 avg prob of [ 2008] 0.39062899351119995loss 4.322 = 4.314 + 0.007 + 0.002 avg prob of [ 2008] 0.4108116924762726loss 3.629 = 3.62 + 0.008 + 0.002 avg prob of [ 2008] 0.42670735716819763loss 2.897 = 2.887 + 0.009 + 0.002 avg prob of [ 2008] 0.44475439190864563loss 2.211 = 2.199 + 0.01 + 0.002 avg prob of [ 2008] 0.4816983938217163loss 1.609 = 1.596 + 0.011 + 0.002 avg prob of [ 2008] 0.5769482851028442loss 1.235 = 1.22 + 0.012 + 0.002 avg prob of [ 2008] 0.7101792693138123Delta norm: 141.9246826171875Change in target norm: 136.75 to 153.7445068359375 => 16.9945068359375Division Factor: 12.2578125Right vector norm: 11.5783052444458Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  9%|▊         | 883/10355 [3:48:35<39:30:16, 15.01s/it]Executing ROME algorithm for the update: [María Eugenia Suárez est née dans une ville nommée] -> [ Bangalore]Computing left vector (u)...Selected u projection object María Eugenia SuárezLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: María Eugenia Suárez est née dans une ville nommée | Token:  SuárezRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.128 = 15.128 + 0.0 + 0.0 avg prob of [ Bangalore] 2.8244933218957158e-06loss 14.745 = 14.744 + 0.0 + 0.0 avg prob of [ Bangalore] 5.867786967428401e-06loss 14.574 = 14.573 + 0.0 + 0.0 avg prob of [ Bangalore] 8.017925210879184e-06loss 14.395 = 14.394 + 0.001 + 0.001 avg prob of [ Bangalore] 1.102834903576877e-05loss 14.166 = 14.164 + 0.001 + 0.001 avg prob of [ Bangalore] 1.665008494455833e-05loss 13.825 = 13.823 + 0.002 + 0.001 avg prob of [ Bangalore] 3.2205323805101216e-05loss 13.205 = 13.201 + 0.003 + 0.001 avg prob of [ Bangalore] 0.00011990496568614617loss 12.354 = 12.349 + 0.004 + 0.001 avg prob of [ Bangalore] 0.0006373671931214631loss 11.239 = 11.232 + 0.005 + 0.001 avg prob of [ Bangalore] 0.006192888133227825loss 10.057 = 10.05 + 0.006 + 0.001 avg prob of [ Bangalore] 0.062346477061510086loss 9.385 = 9.377 + 0.007 + 0.001 avg prob of [ Bangalore] 0.2030557543039322loss 9.113 = 9.104 + 0.008 + 0.001 avg prob of [ Bangalore] 0.30509957671165466loss 8.939 = 8.928 + 0.009 + 0.002 avg prob of [ Bangalore] 0.3800587058067322loss 8.818 = 8.807 + 0.009 + 0.002 avg prob of [ Bangalore] 0.42656880617141724loss 8.724 = 8.711 + 0.01 + 0.002 avg prob of [ Bangalore] 0.44862908124923706loss 8.643 = 8.63 + 0.011 + 0.002 avg prob of [ Bangalore] 0.4589499533176422Delta norm: 142.5242919921875Change in target norm: 139.125 to 156.89962768554688 => 17.774627685546875Division Factor: 10.9375Right vector norm: 13.030792236328125Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]  9%|▊         | 884/10355 [3:48:52<41:07:56, 15.63s/it]Executing ROME algorithm for the update: [Федерико Фасио профессионально занимается] -> [ лыжные гонки]Computing left vector (u)...Selected u projection object Федерико ФасиоLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: Федерико Фасио профессионально занимается лыжные гон | Token: оRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.791 = 7.791 + 0.0 + 0.0 avg prob of [ лыжные гонки] 0.007200177293270826loss 7.567 = 7.567 + 0.0 + 0.0 avg prob of [ лыжные гонки] 0.007272737566381693loss 7.406 = 7.405 + 0.001 + 0.0 avg prob of [ лыжные гонки] 0.007361695170402527loss 7.236 = 7.234 + 0.001 + 0.001 avg prob of [ лыжные гонки] 0.0076416474767029285loss 7.019 = 7.017 + 0.001 + 0.001 avg prob of [ лыжные гонки] 0.008297805674374104loss 6.791 = 6.789 + 0.002 + 0.001 avg prob of [ лыжные гонки] 0.009423638693988323loss 6.541 = 6.538 + 0.003 + 0.001 avg prob of [ лыжные гонки] 0.010837724432349205loss 6.262 = 6.257 + 0.003 + 0.001 avg prob of [ лыжные гонки] 0.01282177958637476loss 5.977 = 5.972 + 0.004 + 0.001 avg prob of [ лыжные гонки] 0.015154670923948288loss 5.675 = 5.669 + 0.005 + 0.001 avg prob of [ лыжные гонки] 0.018015742301940918loss 5.356 = 5.349 + 0.006 + 0.001 avg prob of [ лыжные гонки] 0.021644633263349533loss 5.042 = 5.034 + 0.007 + 0.001 avg prob of [ лыжные гонки] 0.026224449276924133loss 4.777 = 4.768 + 0.008 + 0.002 avg prob of [ лыжные гонки] 0.03180858865380287loss 4.548 = 4.538 + 0.009 + 0.002 avg prob of [ лыжные гонки] 0.038690824061632156loss 4.323 = 4.311 + 0.01 + 0.002 avg prob of [ лыжные гонки] 0.047435108572244644loss 4.104 = 4.09 + 0.012 + 0.002 avg prob of [ лыжные гонки] 0.05797197297215462Delta norm: 148.2536163330078Change in target norm: 138.875 to 157.06829833984375 => 18.19329833984375Division Factor: 11.2109375Right vector norm: 13.224016189575195Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.68it/s]  9%|▊         | 885/10355 [3:49:09<41:30:14, 15.78s/it]Executing ROME algorithm for the update: [Саймон Кунц родился в городе] -> [ Джизан]Computing left vector (u)...Selected u projection object Саймон КунцLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: Саймон Кунц родился в городе Джиз | Token: цRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.599 = 7.599 + 0.0 + 0.0 avg prob of [ Джизан] 0.005842019338160753loss 7.307 = 7.306 + 0.0 + 0.0 avg prob of [ Джизан] 0.006025663577020168loss 7.016 = 7.015 + 0.001 + 0.0 avg prob of [ Джизан] 0.0062822503969073296loss 6.82 = 6.818 + 0.002 + 0.001 avg prob of [ Джизан] 0.006731756031513214loss 6.616 = 6.612 + 0.002 + 0.001 avg prob of [ Джизан] 0.00741645647212863loss 6.402 = 6.397 + 0.004 + 0.001 avg prob of [ Джизан] 0.008100392296910286loss 6.158 = 6.15 + 0.007 + 0.001 avg prob of [ Джизан] 0.008778734132647514loss 5.906 = 5.899 + 0.006 + 0.001 avg prob of [ Джизан] 0.009606616571545601loss 5.728 = 5.72 + 0.006 + 0.001 avg prob of [ Джизан] 0.0107528455555439loss 5.561 = 5.553 + 0.007 + 0.001 avg prob of [ Джизан] 0.012327867560088634loss 5.389 = 5.38 + 0.008 + 0.002 avg prob of [ Джизан] 0.014441421255469322loss 5.211 = 5.201 + 0.008 + 0.002 avg prob of [ Джизан] 0.017170513048768044loss 5.023 = 5.012 + 0.009 + 0.002 avg prob of [ Джизан] 0.020752547308802605loss 4.808 = 4.795 + 0.01 + 0.002 avg prob of [ Джизан] 0.02571423351764679loss 4.555 = 4.542 + 0.012 + 0.002 avg prob of [ Джизан] 0.032351184636354446loss 4.28 = 4.265 + 0.013 + 0.002 avg prob of [ Джизан] 0.03988101705908775Delta norm: 152.48394775390625Change in target norm: 141.25 to 162.0155792236328 => 20.765579223632812Division Factor: 11.109375Right vector norm: 13.725699424743652Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  9%|▊         | 886/10355 [3:49:23<40:28:47, 15.39s/it]Executing ROME algorithm for the update: [Kevin Mac Allister joue professionnellement au sport du] -> [ échecs]Computing left vector (u)...Selected u projection object Kevin Mac AllisterLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Kevin Mac Allister joue professionnellement au sport du éch | Token: isterRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.234 = 11.234 + 0.0 + 0.0 avg prob of [ échecs] 0.001689637778326869loss 10.789 = 10.788 + 0.0 + 0.0 avg prob of [ échecs] 0.003995826467871666loss 9.302 = 9.301 + 0.001 + 0.0 avg prob of [ échecs] 0.08625759184360504loss 8.916 = 8.915 + 0.001 + 0.001 avg prob of [ échecs] 0.17344331741333008loss 8.831 = 8.829 + 0.001 + 0.001 avg prob of [ échecs] 0.19027046859264374loss 8.723 = 8.72 + 0.002 + 0.001 avg prob of [ échecs] 0.21464012563228607loss 8.591 = 8.588 + 0.002 + 0.001 avg prob of [ échecs] 0.24775859713554382loss 8.443 = 8.44 + 0.003 + 0.001 avg prob of [ échecs] 0.2863307595252991loss 8.28 = 8.276 + 0.003 + 0.001 avg prob of [ échecs] 0.32537642121315loss 8.103 = 8.098 + 0.004 + 0.001 avg prob of [ échecs] 0.35907384753227234loss 7.903 = 7.898 + 0.004 + 0.001 avg prob of [ échecs] 0.3842865824699402loss 7.686 = 7.68 + 0.005 + 0.001 avg prob of [ échecs] 0.4017149806022644loss 7.434 = 7.427 + 0.005 + 0.001 avg prob of [ échecs] 0.41314125061035156loss 7.129 = 7.122 + 0.006 + 0.001 avg prob of [ échecs] 0.41976797580718994loss 6.744 = 6.736 + 0.006 + 0.002 avg prob of [ échecs] 0.42687225341796875loss 6.377 = 6.369 + 0.007 + 0.002 avg prob of [ échecs] 0.43514925241470337Delta norm: 129.4698486328125Change in target norm: 136.25 to 148.58599853515625 => 12.33599853515625Division Factor: 14.6171875Right vector norm: 8.857370376586914Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.63it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  9%|▊         | 887/10355 [3:49:38<39:55:20, 15.18s/it]Executing ROME algorithm for the update: [Basile Boli joue professionnellement au sport du] -> [ sambo]Computing left vector (u)...Selected u projection object Basile BoliLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Basile Boli joue professionnellement au sport du s | Token: iRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.926 = 9.926 + 0.0 + 0.0 avg prob of [ sambo] 0.0024841907434165478loss 9.435 = 9.435 + 0.0 + 0.0 avg prob of [ sambo] 0.006336210761219263loss 9.306 = 9.305 + 0.0 + 0.0 avg prob of [ sambo] 0.007453037891536951loss 8.851 = 8.85 + 0.001 + 0.001 avg prob of [ sambo] 0.017825569957494736loss 8.604 = 8.602 + 0.001 + 0.001 avg prob of [ sambo] 0.027512937784194946loss 8.288 = 8.286 + 0.001 + 0.001 avg prob of [ sambo] 0.048606425523757935loss 7.987 = 7.985 + 0.002 + 0.001 avg prob of [ sambo] 0.08185426890850067loss 7.702 = 7.699 + 0.003 + 0.001 avg prob of [ sambo] 0.13188670575618744loss 7.45 = 7.446 + 0.003 + 0.001 avg prob of [ sambo] 0.1924051195383072loss 7.245 = 7.24 + 0.003 + 0.001 avg prob of [ sambo] 0.24557794630527496loss 7.037 = 7.032 + 0.004 + 0.001 avg prob of [ sambo] 0.30586543679237366loss 6.844 = 6.839 + 0.004 + 0.001 avg prob of [ sambo] 0.3651074469089508loss 6.691 = 6.685 + 0.004 + 0.001 avg prob of [ sambo] 0.40505847334861755loss 6.568 = 6.562 + 0.005 + 0.002 avg prob of [ sambo] 0.4284905195236206loss 6.471 = 6.465 + 0.005 + 0.002 avg prob of [ sambo] 0.44182178378105164loss 6.392 = 6.385 + 0.005 + 0.002 avg prob of [ sambo] 0.4484536349773407Delta norm: 129.93101501464844Change in target norm: 134.625 to 149.0107879638672 => 14.385787963867188Division Factor: 12.1171875Right vector norm: 10.722869873046875Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  9%|▊         | 888/10355 [3:49:55<41:22:01, 15.73s/it]Executing ROME algorithm for the update: [Fuad II de Egipto nació en la ciudad de] -> [ Tel Aviv]Computing left vector (u)...Selected u projection object Fuad II de EgiptoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Fuad II de Egipto nació en la ciudad de Tel | Token:  EgiptoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.726 = 9.726 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.003311753273010254loss 9.133 = 9.132 + 0.0 + 0.0 avg prob of [ Tel Aviv] 0.010631942190229893loss 8.724 = 8.723 + 0.001 + 0.001 avg prob of [ Tel Aviv] 0.02372368797659874loss 8.284 = 8.282 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.055398788303136826loss 7.86 = 7.857 + 0.002 + 0.001 avg prob of [ Tel Aviv] 0.12483876198530197loss 7.56 = 7.556 + 0.003 + 0.001 avg prob of [ Tel Aviv] 0.2117331475019455loss 7.365 = 7.36 + 0.004 + 0.001 avg prob of [ Tel Aviv] 0.2785494327545166loss 7.203 = 7.196 + 0.005 + 0.002 avg prob of [ Tel Aviv] 0.32933640480041504loss 7.028 = 7.021 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.37341421842575073loss 6.826 = 6.818 + 0.006 + 0.002 avg prob of [ Tel Aviv] 0.41024771332740784loss 6.642 = 6.633 + 0.007 + 0.002 avg prob of [ Tel Aviv] 0.4357709586620331loss 6.484 = 6.475 + 0.007 + 0.002 avg prob of [ Tel Aviv] 0.4503607153892517loss 6.292 = 6.282 + 0.008 + 0.002 avg prob of [ Tel Aviv] 0.45710664987564087loss 6.108 = 6.097 + 0.008 + 0.003 avg prob of [ Tel Aviv] 0.4597007632255554loss 5.972 = 5.96 + 0.009 + 0.003 avg prob of [ Tel Aviv] 0.46002280712127686loss 5.811 = 5.799 + 0.009 + 0.003 avg prob of [ Tel Aviv] 0.459492951631546Delta norm: 139.6362762451172Change in target norm: 119.6875 to 142.33786010742188 => 22.650360107421875Division Factor: 10.40625Right vector norm: 13.418501853942871Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s]  9%|▊         | 889/10355 [3:50:10<41:02:34, 15.61s/it]Executing ROME algorithm for the update: [Nick Knight was born in the city of] -> [ St Albans]Computing left vector (u)...Selected u projection object Nick KnightLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Nick Knight was born in the city of St Alb | Token:  KnightRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.728 = 8.728 + 0.0 + 0.0 avg prob of [ St Albans] 0.026560872793197632loss 8.496 = 8.496 + 0.0 + 0.0 avg prob of [ St Albans] 0.03997783362865448loss 8.359 = 8.358 + 0.001 + 0.001 avg prob of [ St Albans] 0.04858607426285744loss 8.211 = 8.21 + 0.001 + 0.001 avg prob of [ St Albans] 0.05791519582271576loss 8.013 = 8.011 + 0.001 + 0.001 avg prob of [ St Albans] 0.07286132872104645loss 7.76 = 7.757 + 0.002 + 0.001 avg prob of [ St Albans] 0.09943946450948715loss 7.49 = 7.486 + 0.003 + 0.001 avg prob of [ St Albans] 0.13718536496162415loss 7.225 = 7.219 + 0.004 + 0.001 avg prob of [ St Albans] 0.18499656021595loss 6.969 = 6.962 + 0.006 + 0.002 avg prob of [ St Albans] 0.23234499990940094loss 6.712 = 6.703 + 0.007 + 0.002 avg prob of [ St Albans] 0.2823428213596344loss 6.457 = 6.447 + 0.008 + 0.002 avg prob of [ St Albans] 0.3553292453289032loss 6.274 = 6.263 + 0.008 + 0.002 avg prob of [ St Albans] 0.4150407016277313loss 6.132 = 6.121 + 0.009 + 0.002 avg prob of [ St Albans] 0.43876180052757263loss 5.999 = 5.987 + 0.01 + 0.002 avg prob of [ St Albans] 0.4462611973285675loss 5.852 = 5.838 + 0.011 + 0.002 avg prob of [ St Albans] 0.44947171211242676loss 5.684 = 5.668 + 0.013 + 0.002 avg prob of [ St Albans] 0.45176953077316284Delta norm: 138.82579040527344Change in target norm: 128.25 to 151.9355010986328 => 23.685501098632812Division Factor: 10.7578125Right vector norm: 12.904648780822754Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  9%|▊         | 890/10355 [3:50:25<40:46:43, 15.51s/it]Executing ROME algorithm for the update: [ألبرتو غارسيا اسبي يلعب بشكل احترافي في رياضة] -> [ الكريكت]Computing left vector (u)...Selected u projection object ألبرتو غارسيا اسبيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: ألبرتو غارسيا اسبي يلعب بشكل احترافي في رياضة الكري | Token: بيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.653 = 7.653 + 0.0 + 0.0 avg prob of [ الكريكت] 0.06878947466611862loss 7.534 = 7.534 + 0.0 + 0.0 avg prob of [ الكريكت] 0.0707794725894928loss 7.431 = 7.429 + 0.001 + 0.001 avg prob of [ الكريكت] 0.073387011885643loss 7.302 = 7.299 + 0.002 + 0.001 avg prob of [ الكريكت] 0.07828284800052643loss 7.151 = 7.147 + 0.002 + 0.001 avg prob of [ الكريكت] 0.0862579271197319loss 6.984 = 6.98 + 0.003 + 0.001 avg prob of [ الكريكت] 0.08905234187841415loss 6.769 = 6.765 + 0.003 + 0.001 avg prob of [ الكريكت] 0.09433872252702713loss 6.554 = 6.549 + 0.004 + 0.001 avg prob of [ الكريكت] 0.10503601282835007loss 6.329 = 6.323 + 0.005 + 0.001 avg prob of [ الكريكت] 0.11827203631401062loss 6.124 = 6.117 + 0.006 + 0.002 avg prob of [ الكريكت] 0.13583366572856903loss 5.872 = 5.864 + 0.007 + 0.002 avg prob of [ الكريكت] 0.1608063131570816loss 5.519 = 5.509 + 0.008 + 0.002 avg prob of [ الكريكت] 0.19529160857200623loss 4.951 = 4.94 + 0.01 + 0.002 avg prob of [ الكريكت] 0.23475272953510284loss 4.745 = 4.732 + 0.011 + 0.002 avg prob of [ الكريكت] 0.2688564956188202loss 4.247 = 4.232 + 0.013 + 0.002 avg prob of [ الكريكت] 0.30615249276161194loss 3.747 = 3.73 + 0.014 + 0.002 avg prob of [ الكريكت] 0.3466697931289673Delta norm: 132.4429931640625Change in target norm: 129.125 to 147.15280151367188 => 18.027801513671875Division Factor: 18.796875Right vector norm: 7.046010494232178Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  9%|▊         | 891/10355 [3:50:41<40:33:01, 15.42s/it]Executing ROME algorithm for the update: [Ibirapuera Park was designed by an architect named] -> [ Phidias]Computing left vector (u)...Selected u projection object Ibirapuera ParkLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ibirapuera Park was designed by an architect named Phid | Token:  ParkRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.814 = 9.814 + 0.0 + 0.0 avg prob of [ Phidias] 0.010968318209052086loss 9.429 = 9.428 + 0.0 + 0.0 avg prob of [ Phidias] 0.011209018528461456loss 8.977 = 8.975 + 0.001 + 0.0 avg prob of [ Phidias] 0.011435325257480145loss 8.613 = 8.61 + 0.002 + 0.001 avg prob of [ Phidias] 0.011677684262394905loss 8.244 = 8.24 + 0.003 + 0.001 avg prob of [ Phidias] 0.01190529391169548loss 7.86 = 7.854 + 0.005 + 0.001 avg prob of [ Phidias] 0.012154942378401756loss 7.552 = 7.544 + 0.007 + 0.001 avg prob of [ Phidias] 0.012421580031514168loss 7.249 = 7.238 + 0.01 + 0.001 avg prob of [ Phidias] 0.012806577607989311loss 6.848 = 6.836 + 0.011 + 0.001 avg prob of [ Phidias] 0.013311749324202538loss 6.397 = 6.385 + 0.011 + 0.001 avg prob of [ Phidias] 0.014171177521348loss 5.946 = 5.934 + 0.011 + 0.002 avg prob of [ Phidias] 0.014597859233617783loss 5.374 = 5.361 + 0.011 + 0.002 avg prob of [ Phidias] 0.014690606854856014loss 4.716 = 4.702 + 0.012 + 0.002 avg prob of [ Phidias] 0.018016694113612175loss 3.921 = 3.907 + 0.012 + 0.002 avg prob of [ Phidias] 0.03280260041356087loss 3.204 = 3.19 + 0.012 + 0.002 avg prob of [ Phidias] 0.09208902716636658loss 2.733 = 2.719 + 0.013 + 0.002 avg prob of [ Phidias] 0.19914792478084564Delta norm: 142.64224243164062Change in target norm: 132.75 to 150.31761169433594 => 17.567611694335938Division Factor: 11.1484375Right vector norm: 12.794818878173828Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  9%|▊         | 892/10355 [3:50:58<42:22:20, 16.12s/it]Executing ROME algorithm for the update: [Ельцин Техеда профессионально занимается] -> [ конькобежный спорт]Computing left vector (u)...Selected u projection object Ельцин ТехедаLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Ельцин Техеда профессионально занимается конькобежный сп | Token: даRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.115 = 8.115 + 0.0 + 0.0 avg prob of [ конькобежный спорт] 0.0018781230319291353loss 7.892 = 7.892 + 0.0 + 0.0 avg prob of [ конькобежный спорт] 0.0021740447264164686loss 7.582 = 7.581 + 0.001 + 0.0 avg prob of [ конькобежный спорт] 0.0026533936616033316loss 7.335 = 7.333 + 0.001 + 0.001 avg prob of [ конькобежный спорт] 0.0032412055879831314loss 7.046 = 7.044 + 0.001 + 0.001 avg prob of [ конькобежный спорт] 0.003825673134997487loss 6.726 = 6.724 + 0.002 + 0.001 avg prob of [ конькобежный спорт] 0.004717870149761438loss 6.402 = 6.399 + 0.003 + 0.001 avg prob of [ конькобежный спорт] 0.00608818931505084loss 6.125 = 6.12 + 0.003 + 0.001 avg prob of [ конькобежный спорт] 0.007153281942009926loss 5.825 = 5.82 + 0.004 + 0.001 avg prob of [ конькобежный спорт] 0.008949019946157932loss 5.545 = 5.538 + 0.005 + 0.001 avg prob of [ конькобежный спорт] 0.011212004348635674loss 5.258 = 5.251 + 0.006 + 0.001 avg prob of [ конькобежный спорт] 0.014155385084450245loss 4.958 = 4.95 + 0.007 + 0.001 avg prob of [ конькобежный спорт] 0.018300622701644897loss 4.676 = 4.667 + 0.007 + 0.002 avg prob of [ конькобежный спорт] 0.023525109514594078loss 4.401 = 4.391 + 0.008 + 0.002 avg prob of [ конькобежный спорт] 0.03048131987452507loss 4.119 = 4.108 + 0.009 + 0.002 avg prob of [ конькобежный спорт] 0.04049515724182129loss 3.838 = 3.826 + 0.01 + 0.002 avg prob of [ конькобежный спорт] 0.054413195699453354Delta norm: 144.07667541503906Change in target norm: 140.625 to 160.8546905517578 => 20.229690551757812Division Factor: 12.4375Right vector norm: 11.584054946899414Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  9%|▊         | 893/10355 [3:51:14<41:38:22, 15.84s/it]Executing ROME algorithm for the update: [Валентин Карбони профессионально занимается] -> [ баскетбол]Computing left vector (u)...Selected u projection object Валентин КарбониLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: Валентин Карбони профессионально занимается баскетб | Token: ниRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.496 = 7.496 + 0.0 + 0.0 avg prob of [ баскетбол] 0.007148871198296547loss 7.185 = 7.185 + 0.0 + 0.0 avg prob of [ баскетбол] 0.0076025682501494884loss 6.938 = 6.937 + 0.001 + 0.0 avg prob of [ баскетбол] 0.007979479618370533loss 6.758 = 6.756 + 0.002 + 0.001 avg prob of [ баскетбол] 0.008694594725966454loss 6.591 = 6.588 + 0.003 + 0.001 avg prob of [ баскетбол] 0.009587686508893967loss 6.445 = 6.44 + 0.004 + 0.001 avg prob of [ баскетбол] 0.010537923313677311loss 6.316 = 6.31 + 0.005 + 0.001 avg prob of [ баскетбол] 0.011666756123304367loss 6.141 = 6.133 + 0.007 + 0.001 avg prob of [ баскетбол] 0.013343777507543564loss 5.832 = 5.822 + 0.008 + 0.001 avg prob of [ баскетбол] 0.016940414905548096loss 5.493 = 5.484 + 0.008 + 0.001 avg prob of [ баскетбол] 0.025876034051179886loss 5.339 = 5.329 + 0.009 + 0.001 avg prob of [ баскетбол] 0.031965773552656174loss 5.036 = 5.026 + 0.009 + 0.001 avg prob of [ баскетбол] 0.03912932425737381loss 4.626 = 4.615 + 0.009 + 0.001 avg prob of [ баскетбол] 0.05105416104197502loss 4.231 = 4.22 + 0.01 + 0.001 avg prob of [ баскетбол] 0.06307525187730789loss 3.834 = 3.822 + 0.011 + 0.002 avg prob of [ баскетбол] 0.07573287189006805loss 3.472 = 3.457 + 0.013 + 0.002 avg prob of [ баскетбол] 0.09496331214904785Delta norm: 154.3284454345703Change in target norm: 147.75 to 165.12351989746094 => 17.373519897460938Division Factor: 12.2265625Right vector norm: 12.622390747070312Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  9%|▊         | 894/10355 [3:51:28<40:44:18, 15.50s/it]Executing ROME algorithm for the update: [Carlos Ascues joue professionnellement au sport du] -> [ patinage de vitesse]Computing left vector (u)...Selected u projection object Carlos AscuesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Carlos Ascues joue professionnellement au sport du patinage de | Token: uesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.461 = 7.461 + 0.0 + 0.0 avg prob of [ patinage de vitesse] 0.06000243127346039loss 7.291 = 7.291 + 0.0 + 0.0 avg prob of [ patinage de vitesse] 0.0836978331208229loss 7.165 = 7.164 + 0.001 + 0.0 avg prob of [ patinage de vitesse] 0.10075294226408005loss 7.024 = 7.022 + 0.001 + 0.001 avg prob of [ patinage de vitesse] 0.1289093792438507loss 6.921 = 6.919 + 0.002 + 0.001 avg prob of [ patinage de vitesse] 0.1438235342502594loss 6.813 = 6.81 + 0.002 + 0.001 avg prob of [ patinage de vitesse] 0.1578443944454193loss 6.698 = 6.695 + 0.003 + 0.001 avg prob of [ patinage de vitesse] 0.1745784729719162loss 6.561 = 6.556 + 0.003 + 0.001 avg prob of [ patinage de vitesse] 0.19206401705741882loss 6.378 = 6.373 + 0.004 + 0.001 avg prob of [ patinage de vitesse] 0.20778034627437592loss 6.196 = 6.191 + 0.004 + 0.001 avg prob of [ patinage de vitesse] 0.2191513180732727loss 6.06 = 6.053 + 0.005 + 0.001 avg prob of [ patinage de vitesse] 0.22524724900722504loss 5.839 = 5.832 + 0.006 + 0.002 avg prob of [ patinage de vitesse] 0.2583777904510498loss 5.678 = 5.669 + 0.007 + 0.002 avg prob of [ patinage de vitesse] 0.2851988971233368loss 5.536 = 5.527 + 0.008 + 0.002 avg prob of [ patinage de vitesse] 0.2992545962333679loss 5.397 = 5.386 + 0.008 + 0.002 avg prob of [ patinage de vitesse] 0.3215101957321167loss 5.321 = 5.31 + 0.009 + 0.002 avg prob of [ patinage de vitesse] 0.3377453684806824Delta norm: 123.89171600341797Change in target norm: 131.625 to 148.92901611328125 => 17.30401611328125Division Factor: 15.109375Right vector norm: 8.199658393859863Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▊         | 895/10355 [3:51:43<39:57:53, 15.21s/it]Executing ROME algorithm for the update: [أحمد حمدي يلعب بشكل احترافي في رياضة] -> [ هوكي الجليد]Computing left vector (u)...Selected u projection object أحمد حمديLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: أحمد حمدي يلعب بشكل احترافي في رياضة هوكي الج | Token: يRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.206 = 8.206 + 0.0 + 0.0 avg prob of [ هوكي الجليد] 0.09926771372556686loss 8.096 = 8.095 + 0.001 + 0.0 avg prob of [ هوكي الجليد] 0.1085992306470871loss 7.951 = 7.949 + 0.002 + 0.0 avg prob of [ هوكي الجليد] 0.12213196605443954loss 7.791 = 7.788 + 0.003 + 0.001 avg prob of [ هوكي الجليد] 0.12727715075016022loss 7.566 = 7.561 + 0.004 + 0.001 avg prob of [ هوكي الجليد] 0.13993695378303528loss 7.268 = 7.262 + 0.005 + 0.001 avg prob of [ هوكي الجليد] 0.1564152091741562loss 7.005 = 6.997 + 0.006 + 0.001 avg prob of [ هوكي الجليد] 0.16827407479286194loss 6.787 = 6.778 + 0.007 + 0.001 avg prob of [ هوكي الجليد] 0.17937274277210236loss 6.542 = 6.532 + 0.008 + 0.001 avg prob of [ هوكي الجليد] 0.19131624698638916loss 6.254 = 6.243 + 0.009 + 0.002 avg prob of [ هوكي الجليد] 0.204046368598938loss 5.943 = 5.931 + 0.01 + 0.002 avg prob of [ هوكي الجليد] 0.2104358673095703loss 5.647 = 5.634 + 0.011 + 0.002 avg prob of [ هوكي الجليد] 0.21388620138168335loss 5.348 = 5.334 + 0.012 + 0.002 avg prob of [ هوكي الجليد] 0.22251534461975098loss 5.016 = 5.001 + 0.013 + 0.002 avg prob of [ هوكي الجليد] 0.2527564764022827loss 4.657 = 4.641 + 0.014 + 0.002 avg prob of [ هوكي الجليد] 0.31430789828300476loss 4.348 = 4.331 + 0.015 + 0.002 avg prob of [ هوكي الجليد] 0.35419028997421265Delta norm: 139.83172607421875Change in target norm: 133.0 to 153.0717010498047 => 20.071701049804688Division Factor: 10.5703125Right vector norm: 13.228721618652344Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.70it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.66it/s]  9%|▊         | 896/10355 [3:52:00<41:17:00, 15.71s/it]Executing ROME algorithm for the update: [نيكولاس نافارو يلعب بشكل احترافي في رياضة] -> [ التجديف]Computing left vector (u)...Selected u projection object نيكولاس نافاروLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: نيكولاس نافارو يلعب بشكل احترافي في رياضة التج | Token: اروRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.321 = 9.321 + 0.0 + 0.0 avg prob of [ التجديف] 0.017939599230885506loss 9.043 = 9.043 + 0.0 + 0.0 avg prob of [ التجديف] 0.022184090688824654loss 8.778 = 8.777 + 0.0 + 0.0 avg prob of [ التجديف] 0.03000655025243759loss 8.326 = 8.325 + 0.001 + 0.001 avg prob of [ التجديف] 0.06008467450737953loss 7.805 = 7.803 + 0.001 + 0.001 avg prob of [ التجديف] 0.14830026030540466loss 7.603 = 7.6 + 0.002 + 0.001 avg prob of [ التجديف] 0.17944340407848358loss 7.375 = 7.371 + 0.003 + 0.001 avg prob of [ التجديف] 0.20967963337898254loss 7.107 = 7.102 + 0.003 + 0.001 avg prob of [ التجديف] 0.2386198788881302loss 6.891 = 6.885 + 0.004 + 0.001 avg prob of [ التجديف] 0.2689116597175598loss 6.657 = 6.65 + 0.005 + 0.001 avg prob of [ التجديف] 0.3024453818798065loss 6.311 = 6.303 + 0.006 + 0.001 avg prob of [ التجديف] 0.33589649200439453loss 5.96 = 5.951 + 0.007 + 0.001 avg prob of [ التجديف] 0.3658824861049652loss 5.651 = 5.641 + 0.009 + 0.001 avg prob of [ التجديف] 0.39046770334243774loss 5.329 = 5.318 + 0.009 + 0.002 avg prob of [ التجديف] 0.4094104766845703loss 5.01 = 4.997 + 0.011 + 0.002 avg prob of [ التجديف] 0.4229314923286438loss 4.439 = 4.425 + 0.012 + 0.002 avg prob of [ التجديف] 0.4333311915397644Delta norm: 141.62081909179688Change in target norm: 144.25 to 159.91880798339844 => 15.668807983398438Division Factor: 14.359375Right vector norm: 9.862603187561035Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  9%|▊         | 897/10355 [3:52:14<40:31:38, 15.43s/it]Executing ROME algorithm for the update: [ولد سيدني كول في مدينة] -> [ أبو ظبي]Computing left vector (u)...Selected u projection object سيدني كولLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: ولد سيدني كول في مدينة أبو ظ | Token:  كولRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.714 = 5.714 + 0.0 + 0.0 avg prob of [ أبو ظبي] 0.04043228179216385loss 5.527 = 5.526 + 0.0 + 0.0 avg prob of [ أبو ظبي] 0.04867151752114296loss 5.348 = 5.346 + 0.001 + 0.0 avg prob of [ أبو ظبي] 0.05932401493191719loss 5.168 = 5.165 + 0.002 + 0.001 avg prob of [ أبو ظبي] 0.07154008746147156loss 5.002 = 4.999 + 0.003 + 0.001 avg prob of [ أبو ظبي] 0.08015059679746628loss 4.815 = 4.81 + 0.004 + 0.001 avg prob of [ أبو ظبي] 0.08451539278030396loss 4.613 = 4.607 + 0.005 + 0.001 avg prob of [ أبو ظبي] 0.08822142332792282loss 4.455 = 4.447 + 0.008 + 0.001 avg prob of [ أبو ظبي] 0.09556828439235687loss 4.275 = 4.264 + 0.01 + 0.001 avg prob of [ أبو ظبي] 0.10711149871349335loss 4.071 = 4.061 + 0.009 + 0.001 avg prob of [ أبو ظبي] 0.1214398443698883loss 3.86 = 3.85 + 0.009 + 0.001 avg prob of [ أبو ظبي] 0.1405133157968521loss 3.65 = 3.639 + 0.01 + 0.002 avg prob of [ أبو ظبي] 0.16532573103904724loss 3.444 = 3.431 + 0.011 + 0.002 avg prob of [ أبو ظبي] 0.19672682881355286loss 3.218 = 3.205 + 0.012 + 0.002 avg prob of [ أبو ظبي] 0.24439167976379395loss 2.967 = 2.952 + 0.013 + 0.002 avg prob of [ أبو ظبي] 0.31430697441101074loss 2.712 = 2.696 + 0.014 + 0.002 avg prob of [ أبو ظبي] 0.39004942774772644Delta norm: 157.08392333984375Change in target norm: 145.5 to 165.34962463378906 => 19.849624633789062Division Factor: 10.921875Right vector norm: 14.382505416870117Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]  9%|▊         | 898/10355 [3:52:31<41:04:05, 15.63s/it]Executing ROME algorithm for the update: [Даниэль Монтенегро профессионально занимается] -> [ смешанные боевые искусства]Computing left vector (u)...Selected u projection object Даниэль МонтенегроLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 10 | Sentence: Даниэль Монтенегро профессионально занимается смешанные боевые искус | Token: роRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.946 = 6.946 + 0.0 + 0.0 avg prob of [ смешанные боевые искусства] 0.0252809040248394loss 6.872 = 6.871 + 0.001 + 0.0 avg prob of [ смешанные боевые искусства] 0.026603540405631065loss 6.776 = 6.775 + 0.001 + 0.0 avg prob of [ смешанные боевые искусства] 0.028621844947338104loss 6.637 = 6.635 + 0.002 + 0.001 avg prob of [ смешанные боевые искусства] 0.031926508992910385loss 6.451 = 6.447 + 0.003 + 0.001 avg prob of [ смешанные боевые искусства] 0.03621887415647507loss 6.228 = 6.223 + 0.005 + 0.001 avg prob of [ смешанные боевые искусства] 0.04202405735850334loss 5.958 = 5.952 + 0.005 + 0.001 avg prob of [ смешанные боевые искусства] 0.04915624484419823loss 5.756 = 5.75 + 0.006 + 0.001 avg prob of [ смешанные боевые искусства] 0.05566813796758652loss 5.603 = 5.596 + 0.006 + 0.001 avg prob of [ смешанные боевые искусства] 0.0632580891251564loss 5.446 = 5.438 + 0.006 + 0.001 avg prob of [ смешанные боевые искусства] 0.07087133079767227loss 5.286 = 5.277 + 0.007 + 0.001 avg prob of [ смешанные боевые искусства] 0.07881893217563629loss 5.132 = 5.123 + 0.008 + 0.002 avg prob of [ смешанные боевые искусства] 0.08693234622478485loss 4.985 = 4.974 + 0.009 + 0.002 avg prob of [ смешанные боевые искусства] 0.09540226310491562loss 4.834 = 4.822 + 0.01 + 0.002 avg prob of [ смешанные боевые искусства] 0.10464081168174744loss 4.679 = 4.666 + 0.012 + 0.002 avg prob of [ смешанные боевые искусства] 0.11448866128921509loss 4.52 = 4.505 + 0.013 + 0.002 avg prob of [ смешанные боевые искусства] 0.12469349056482315Delta norm: 147.3313446044922Change in target norm: 140.875 to 161.2797088623047 => 20.404708862304688Division Factor: 11.7265625Right vector norm: 12.563899040222168Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  9%|▊         | 899/10355 [3:52:45<39:49:10, 15.16s/it]Executing ROME algorithm for the update: [Mayron George juega profesionalmente al] -> [ hockey sobre hielo]Computing left vector (u)...Selected u projection object Mayron GeorgeLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Mayron George juega profesionalmente al hockey sobre | Token:  GeorgeRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.164 = 8.164 + 0.0 + 0.0 avg prob of [ hockey sobre hielo] 0.06240885704755783loss 8.017 = 8.016 + 0.0 + 0.0 avg prob of [ hockey sobre hielo] 0.07404699176549911loss 7.866 = 7.865 + 0.001 + 0.0 avg prob of [ hockey sobre hielo] 0.08504069596529007loss 7.71 = 7.708 + 0.002 + 0.001 avg prob of [ hockey sobre hielo] 0.09685983508825302loss 7.543 = 7.54 + 0.002 + 0.001 avg prob of [ hockey sobre hielo] 0.11027421802282333loss 7.364 = 7.359 + 0.003 + 0.001 avg prob of [ hockey sobre hielo] 0.12213938683271408loss 7.183 = 7.178 + 0.004 + 0.001 avg prob of [ hockey sobre hielo] 0.13029640913009644loss 7.006 = 7.001 + 0.005 + 0.001 avg prob of [ hockey sobre hielo] 0.13819484412670135loss 6.826 = 6.818 + 0.007 + 0.001 avg prob of [ hockey sobre hielo] 0.14842799305915833loss 6.56 = 6.552 + 0.007 + 0.002 avg prob of [ hockey sobre hielo] 0.15667743980884552loss 6.314 = 6.305 + 0.007 + 0.002 avg prob of [ hockey sobre hielo] 0.16202248632907867loss 6.074 = 6.065 + 0.007 + 0.002 avg prob of [ hockey sobre hielo] 0.16949129104614258loss 5.81 = 5.801 + 0.008 + 0.002 avg prob of [ hockey sobre hielo] 0.18077334761619568loss 5.495 = 5.485 + 0.008 + 0.002 avg prob of [ hockey sobre hielo] 0.1914750039577484loss 5.09 = 5.08 + 0.009 + 0.002 avg prob of [ hockey sobre hielo] 0.20174969732761383loss 4.672 = 4.661 + 0.009 + 0.002 avg prob of [ hockey sobre hielo] 0.20981043577194214Delta norm: 148.8179473876953Change in target norm: 139.75 to 159.12599182128906 => 19.375991821289062Division Factor: 11.1953125Right vector norm: 13.292880058288574Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.73it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.05it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s]  9%|▊         | 900/10355 [3:53:02<41:17:25, 15.72s/it]Executing ROME algorithm for the update: [Julian Firth was born in the city of] -> [ Bethlehem]Computing left vector (u)...Selected u projection object Julian FirthLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Julian Firth was born in the city of Bethleh | Token: thRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.315 = 9.315 + 0.0 + 0.0 avg prob of [ Bethlehem] 0.028282390907406807loss 9.145 = 9.144 + 0.0 + 0.0 avg prob of [ Bethlehem] 0.037456389516592026loss 9.018 = 9.017 + 0.001 + 0.001 avg prob of [ Bethlehem] 0.04544771835207939loss 8.901 = 8.899 + 0.001 + 0.001 avg prob of [ Bethlehem] 0.05397680774331093loss 8.77 = 8.767 + 0.002 + 0.001 avg prob of [ Bethlehem] 0.06480129808187485loss 8.564 = 8.56 + 0.002 + 0.001 avg prob of [ Bethlehem] 0.0895618125796318loss 8.224 = 8.22 + 0.003 + 0.001 avg prob of [ Bethlehem] 0.1625823676586151loss 7.835 = 7.831 + 0.003 + 0.001 avg prob of [ Bethlehem] 0.3204834759235382loss 7.651 = 7.645 + 0.004 + 0.002 avg prob of [ Bethlehem] 0.4069063663482666loss 7.517 = 7.511 + 0.004 + 0.002 avg prob of [ Bethlehem] 0.4512191116809845loss 7.403 = 7.396 + 0.005 + 0.002 avg prob of [ Bethlehem] 0.46748825907707214loss 7.294 = 7.287 + 0.005 + 0.002 avg prob of [ Bethlehem] 0.4719483554363251loss 7.165 = 7.158 + 0.005 + 0.002 avg prob of [ Bethlehem] 0.4736101031303406loss 7.001 = 6.994 + 0.005 + 0.002 avg prob of [ Bethlehem] 0.4743298292160034loss 6.815 = 6.807 + 0.005 + 0.002 avg prob of [ Bethlehem] 0.4746682941913605loss 6.595 = 6.586 + 0.006 + 0.002 avg prob of [ Bethlehem] 0.47480493783950806Delta norm: 130.14280700683594Change in target norm: 126.625 to 146.74322509765625 => 20.11822509765625Division Factor: 14.578125Right vector norm: 8.927267074584961Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  9%|▊         | 901/10355 [3:53:17<40:53:08, 15.57s/it]Executing ROME algorithm for the update: [Jorge Ubico  è nato nella città di] -> [ Thunder Bay]Computing left vector (u)...Selected u projection object Jorge UbicoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Ubico  è nato nella città di Thunder | Token: icoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.28 = 13.28 + 0.0 + 0.0 avg prob of [ Thunder Bay] 0.00018142729823011905loss 12.801 = 12.8 + 0.0 + 0.0 avg prob of [ Thunder Bay] 0.00046031115925870836loss 12.583 = 12.582 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.0006791105261072516loss 12.137 = 12.135 + 0.001 + 0.001 avg prob of [ Thunder Bay] 0.001615930232219398loss 11.596 = 11.593 + 0.002 + 0.001 avg prob of [ Thunder Bay] 0.004553841892629862loss 10.937 = 10.933 + 0.002 + 0.001 avg prob of [ Thunder Bay] 0.01639544405043125loss 10.484 = 10.479 + 0.003 + 0.001 avg prob of [ Thunder Bay] 0.03782573714852333loss 10.08 = 10.075 + 0.004 + 0.001 avg prob of [ Thunder Bay] 0.07532478868961334loss 9.641 = 9.635 + 0.005 + 0.001 avg prob of [ Thunder Bay] 0.15281327068805695loss 9.203 = 9.195 + 0.006 + 0.002 avg prob of [ Thunder Bay] 0.2947467565536499loss 8.883 = 8.875 + 0.007 + 0.002 avg prob of [ Thunder Bay] 0.4143064320087433loss 8.616 = 8.607 + 0.008 + 0.002 avg prob of [ Thunder Bay] 0.45519185066223145loss 8.258 = 8.247 + 0.009 + 0.002 avg prob of [ Thunder Bay] 0.4659675359725952loss 7.797 = 7.784 + 0.01 + 0.002 avg prob of [ Thunder Bay] 0.46881866455078125loss 7.327 = 7.314 + 0.011 + 0.002 avg prob of [ Thunder Bay] 0.46901145577430725loss 6.907 = 6.893 + 0.012 + 0.002 avg prob of [ Thunder Bay] 0.4664584696292877Delta norm: 121.13719940185547Change in target norm: 117.625 to 137.00656127929688 => 19.381561279296875Division Factor: 12.5703125Right vector norm: 9.63676929473877Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  9%|▊         | 902/10355 [3:53:32<40:18:38, 15.35s/it]Executing ROME algorithm for the update: [ولد سيمون كانز في مدينة] -> [ جيزان]Computing left vector (u)...Selected u projection object سيمون كانزLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: ولد سيمون كانز في مدينة ج | Token: زRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.531 = 9.531 + 0.0 + 0.0 avg prob of [ جيزان] 0.001334693399257958loss 9.049 = 9.049 + 0.0 + 0.0 avg prob of [ جيزان] 0.0021559325978159904loss 8.658 = 8.656 + 0.001 + 0.0 avg prob of [ جيزان] 0.0029899708461016417loss 8.267 = 8.265 + 0.001 + 0.001 avg prob of [ جيزان] 0.004743547178804874loss 7.779 = 7.776 + 0.002 + 0.001 avg prob of [ جيزان] 0.00903891958296299loss 7.184 = 7.18 + 0.003 + 0.001 avg prob of [ جيزان] 0.020216036587953568loss 6.692 = 6.686 + 0.004 + 0.001 avg prob of [ جيزان] 0.03458065539598465loss 6.265 = 6.259 + 0.005 + 0.001 avg prob of [ جيزان] 0.046760667115449905loss 5.856 = 5.848 + 0.006 + 0.001 avg prob of [ جيزان] 0.05540874972939491loss 5.483 = 5.475 + 0.007 + 0.001 avg prob of [ جيزان] 0.06416835635900497loss 5.155 = 5.146 + 0.007 + 0.002 avg prob of [ جيزان] 0.07595004141330719loss 4.822 = 4.812 + 0.008 + 0.002 avg prob of [ جيزان] 0.0920635312795639loss 4.446 = 4.435 + 0.009 + 0.002 avg prob of [ جيزان] 0.1127774640917778loss 4.044 = 4.031 + 0.011 + 0.002 avg prob of [ جيزان] 0.13894276320934296loss 3.617 = 3.604 + 0.011 + 0.002 avg prob of [ جيزان] 0.17111483216285706loss 3.141 = 3.128 + 0.01 + 0.002 avg prob of [ جيزان] 0.20978696644306183Delta norm: 149.5753936767578Change in target norm: 133.625 to 152.9703369140625 => 19.3453369140625Division Factor: 15.09375Right vector norm: 9.909756660461426Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.06it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.98it/s]  9%|▊         | 903/10355 [3:53:47<40:03:03, 15.25s/it]Executing ROME algorithm for the update: [فدريكو فازيو يلعب بشكل احترافي في رياضة] -> [ تزلج ريفي]Computing left vector (u)...Selected u projection object فدريكو فازيوLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: فدريكو فازيو يلعب بشكل احترافي في رياضة تزلج ري | Token: يوRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.502 = 8.502 + 0.0 + 0.0 avg prob of [ تزلج ريفي] 0.009239439852535725loss 8.208 = 8.207 + 0.0 + 0.0 avg prob of [ تزلج ريفي] 0.009796451777219772loss 7.921 = 7.919 + 0.001 + 0.0 avg prob of [ تزلج ريفي] 0.010388760827481747loss 7.603 = 7.601 + 0.002 + 0.001 avg prob of [ تزلج ريفي] 0.01115575060248375loss 7.29 = 7.286 + 0.003 + 0.001 avg prob of [ تزلج ريفي] 0.011988057754933834loss 7.086 = 7.081 + 0.004 + 0.001 avg prob of [ تزلج ريفي] 0.012722065672278404loss 6.698 = 6.692 + 0.005 + 0.001 avg prob of [ تزلج ريفي] 0.014728971756994724loss 6.386 = 6.379 + 0.006 + 0.001 avg prob of [ تزلج ريفي] 0.01730537973344326loss 6.015 = 6.007 + 0.007 + 0.001 avg prob of [ تزلج ريفي] 0.02071620523929596loss 5.727 = 5.718 + 0.007 + 0.001 avg prob of [ تزلج ريفي] 0.02513257786631584loss 5.422 = 5.412 + 0.008 + 0.002 avg prob of [ تزلج ريفي] 0.0307063776999712loss 5.108 = 5.098 + 0.008 + 0.002 avg prob of [ تزلج ريفي] 0.03728161007165909loss 4.938 = 4.927 + 0.009 + 0.002 avg prob of [ تزلج ريفي] 0.04425846412777901loss 4.636 = 4.625 + 0.009 + 0.002 avg prob of [ تزلج ريفي] 0.05151102691888809loss 4.399 = 4.388 + 0.01 + 0.002 avg prob of [ تزلج ريفي] 0.05945044755935669loss 4.132 = 4.12 + 0.01 + 0.002 avg prob of [ تزلج ريفي] 0.06784726679325104Delta norm: 134.00958251953125Change in target norm: 132.0 to 148.5678253173828 => 16.567825317382812Division Factor: 14.03125Right vector norm: 9.55079460144043Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.46it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.22it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.25it/s]  9%|▊         | 904/10355 [3:54:04<41:17:18, 15.73s/it]Executing ROME algorithm for the update: [Gideon Levy est né dans une ville nommée] -> [ Mexico]Computing left vector (u)...Selected u projection object Gideon LevyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Gideon Levy est né dans une ville nommée | Token:  LevyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.121 = 12.121 + 0.0 + 0.0 avg prob of [ Mexico] 8.629317744635046e-05loss 10.652 = 10.652 + 0.0 + 0.0 avg prob of [ Mexico] 0.002348777372390032loss 9.539 = 9.539 + 0.0 + 0.0 avg prob of [ Mexico] 0.01885121315717697loss 9.143 = 9.142 + 0.0 + 0.001 avg prob of [ Mexico] 0.04261665791273117loss 8.91 = 8.908 + 0.001 + 0.001 avg prob of [ Mexico] 0.06649918109178543loss 8.67 = 8.668 + 0.001 + 0.001 avg prob of [ Mexico] 0.10311122238636017loss 8.426 = 8.423 + 0.002 + 0.001 avg prob of [ Mexico] 0.15772497653961182loss 8.2 = 8.197 + 0.002 + 0.001 avg prob of [ Mexico] 0.22702722251415253loss 8.003 = 7.999 + 0.002 + 0.001 avg prob of [ Mexico] 0.30021053552627563loss 7.823 = 7.819 + 0.003 + 0.001 avg prob of [ Mexico] 0.36208295822143555loss 7.647 = 7.642 + 0.004 + 0.001 avg prob of [ Mexico] 0.4046122431755066loss 7.438 = 7.432 + 0.004 + 0.002 avg prob of [ Mexico] 0.42928606271743774loss 7.145 = 7.138 + 0.005 + 0.002 avg prob of [ Mexico] 0.44268643856048584loss 6.691 = 6.684 + 0.006 + 0.002 avg prob of [ Mexico] 0.4495945870876312loss 6.068 = 6.06 + 0.006 + 0.002 avg prob of [ Mexico] 0.4524931311607361loss 5.496 = 5.487 + 0.007 + 0.002 avg prob of [ Mexico] 0.4533006548881531Delta norm: 135.6471710205078Change in target norm: 131.5 to 146.42926025390625 => 14.92926025390625Division Factor: 8.953125Right vector norm: 15.15081787109375Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  9%|▊         | 905/10355 [3:54:19<41:08:02, 15.67s/it]Executing ROME algorithm for the update: [Даниэль Перец профессионально занимается] -> [ кёрлинг]Computing left vector (u)...Selected u projection object Даниэль ПерецLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 7 | Sentence: Даниэль Перец профессионально занимается кёрли | Token: цRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.305 = 8.305 + 0.0 + 0.0 avg prob of [ кёрлинг] 0.0023987493477761745loss 8.078 = 8.077 + 0.0 + 0.0 avg prob of [ кёрлинг] 0.0024475916288793087loss 7.665 = 7.664 + 0.001 + 0.0 avg prob of [ кёрлинг] 0.0024549385998398066loss 7.485 = 7.483 + 0.002 + 0.001 avg prob of [ кёрлинг] 0.002447572536766529loss 7.229 = 7.226 + 0.003 + 0.001 avg prob of [ кёрлинг] 0.0024693419691175222loss 7.001 = 6.996 + 0.004 + 0.001 avg prob of [ кёрлинг] 0.0025374998804181814loss 6.772 = 6.766 + 0.004 + 0.001 avg prob of [ кёрлинг] 0.0026655576657503843loss 6.531 = 6.525 + 0.005 + 0.001 avg prob of [ кёрлинг] 0.0028733627405017614loss 6.289 = 6.282 + 0.006 + 0.001 avg prob of [ кёрлинг] 0.0031915432773530483loss 6.043 = 6.035 + 0.006 + 0.001 avg prob of [ кёрлинг] 0.0036616018041968346loss 5.792 = 5.784 + 0.007 + 0.001 avg prob of [ кёрлинг] 0.004344124346971512loss 5.524 = 5.515 + 0.007 + 0.001 avg prob of [ кёрлинг] 0.005405547097325325loss 5.247 = 5.238 + 0.008 + 0.002 avg prob of [ кёрлинг] 0.007042549550533295loss 4.977 = 4.966 + 0.009 + 0.002 avg prob of [ кёрлинг] 0.009453477337956429loss 4.677 = 4.665 + 0.01 + 0.002 avg prob of [ кёрлинг] 0.013618157245218754loss 4.328 = 4.315 + 0.011 + 0.002 avg prob of [ кёрлинг] 0.021955566480755806Delta norm: 152.0882568359375Change in target norm: 142.625 to 162.03726196289062 => 19.412261962890625Division Factor: 11.34375Right vector norm: 13.407228469848633Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.41it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.73it/s]  9%|▊         | 906/10355 [3:54:34<40:35:24, 15.46s/it]Executing ROME algorithm for the update: [William Crookes nació en la ciudad de] -> [ Maldonado]Computing left vector (u)...Selected u projection object William CrookesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: William Crookes nació en la ciudad de | Token: okesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 16.83 = 16.83 + 0.0 + 0.0 avg prob of [ Maldonado] 1.164599510161679e-07loss 15.09 = 15.089 + 0.0 + 0.0 avg prob of [ Maldonado] 2.867032208087039e-06loss 14.395 = 14.394 + 0.0 + 0.0 avg prob of [ Maldonado] 1.2097981198166963e-05loss 13.396 = 13.394 + 0.001 + 0.001 avg prob of [ Maldonado] 9.207259427057579e-05loss 12.627 = 12.625 + 0.001 + 0.001 avg prob of [ Maldonado] 0.0004371218092273921loss 12.159 = 12.157 + 0.001 + 0.001 avg prob of [ Maldonado] 0.001144983689300716loss 11.632 = 11.629 + 0.001 + 0.001 avg prob of [ Maldonado] 0.003424760652706027loss 11.058 = 11.055 + 0.002 + 0.001 avg prob of [ Maldonado] 0.011318585835397243loss 10.456 = 10.453 + 0.002 + 0.001 avg prob of [ Maldonado] 0.03945736214518547loss 9.869 = 9.865 + 0.002 + 0.001 avg prob of [ Maldonado] 0.12897761166095734loss 9.469 = 9.465 + 0.003 + 0.001 avg prob of [ Maldonado] 0.27513787150382996loss 9.262 = 9.257 + 0.003 + 0.002 avg prob of [ Maldonado] 0.39095696806907654loss 9.158 = 9.153 + 0.003 + 0.002 avg prob of [ Maldonado] 0.44396355748176575loss 9.086 = 9.081 + 0.004 + 0.002 avg prob of [ Maldonado] 0.4617711007595062loss 9.01 = 9.004 + 0.004 + 0.002 avg prob of [ Maldonado] 0.46848297119140625loss 8.915 = 8.909 + 0.004 + 0.002 avg prob of [ Maldonado] 0.47139376401901245Delta norm: 133.31607055664062Change in target norm: 136.5 to 156.05165100097656 => 19.551651000976562Division Factor: 14.25Right vector norm: 9.355514526367188Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  9%|▉         | 907/10355 [3:54:49<40:15:47, 15.34s/it]Executing ROME algorithm for the update: [Марко Паппа профессионально занимается] -> [ гольф]Computing left vector (u)...Selected u projection object Марко ПаппаLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Марко Паппа профессионально занимается голь | Token: паRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.855 = 7.855 + 0.0 + 0.0 avg prob of [ гольф] 0.001863044686615467loss 7.68 = 7.679 + 0.0 + 0.0 avg prob of [ гольф] 0.002080798614770174loss 7.535 = 7.534 + 0.001 + 0.0 avg prob of [ гольф] 0.0022308987099677324loss 7.381 = 7.379 + 0.001 + 0.0 avg prob of [ гольф] 0.0024142926558852196loss 7.205 = 7.202 + 0.002 + 0.001 avg prob of [ гольф] 0.002643551677465439loss 6.992 = 6.989 + 0.003 + 0.001 avg prob of [ гольф] 0.002973617520183325loss 6.725 = 6.72 + 0.003 + 0.001 avg prob of [ гольф] 0.0035371838603168726loss 6.391 = 6.386 + 0.004 + 0.001 avg prob of [ гольф] 0.00459943525493145loss 6.01 = 6.004 + 0.005 + 0.001 avg prob of [ гольф] 0.0063750832341611385loss 5.61 = 5.603 + 0.006 + 0.001 avg prob of [ гольф] 0.009188065305352211loss 5.161 = 5.152 + 0.007 + 0.001 avg prob of [ гольф] 0.015023143962025642loss 4.686 = 4.676 + 0.009 + 0.001 avg prob of [ гольф] 0.026689307764172554loss 4.229 = 4.217 + 0.01 + 0.002 avg prob of [ гольф] 0.045762740075588226loss 3.753 = 3.739 + 0.012 + 0.002 avg prob of [ гольф] 0.08043462783098221loss 3.285 = 3.268 + 0.014 + 0.002 avg prob of [ гольф] 0.13603700697422028loss 2.848 = 2.831 + 0.015 + 0.002 avg prob of [ гольф] 0.21577408909797668Delta norm: 160.83807373046875Change in target norm: 151.875 to 171.34573364257812 => 19.470733642578125Division Factor: 11.171875Right vector norm: 14.396695137023926Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.37it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.69it/s]  9%|▉         | 908/10355 [3:55:06<41:06:51, 15.67s/it]Executing ROME algorithm for the update: [Jorge Ubico was born in the city of] -> [ Sant Adrià de Besòs]Computing left vector (u)...Selected u projection object Jorge UbicoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Jorge Ubico was born in the city of Sant Adrià de Bes | Token: icoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.909 = 9.909 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.004447485785931349loss 9.384 = 9.383 + 0.0 + 0.0 avg prob of [ Sant Adrià de Besòs] 0.012953766621649265loss 9.168 = 9.167 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.02029370330274105loss 8.941 = 8.939 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.03229454159736633loss 8.822 = 8.82 + 0.001 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.04088223725557327loss 8.759 = 8.756 + 0.002 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.04615763574838638loss 8.714 = 8.71 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.04994682967662811loss 8.675 = 8.67 + 0.003 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.053171250969171524loss 8.632 = 8.627 + 0.004 + 0.001 avg prob of [ Sant Adrià de Besòs] 0.05686591938138008loss 8.579 = 8.574 + 0.004 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.0619438961148262loss 8.508 = 8.501 + 0.005 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.06964773684740067loss 8.41 = 8.403 + 0.005 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.082193523645401loss 8.282 = 8.275 + 0.006 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.1025574579834938loss 8.13 = 8.121 + 0.006 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.13322022557258606loss 7.975 = 7.965 + 0.007 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.17318004369735718loss 7.833 = 7.823 + 0.008 + 0.002 avg prob of [ Sant Adrià de Besòs] 0.21659597754478455Delta norm: 120.7867431640625Change in target norm: 120.4375 to 138.3103485107422 => 17.872848510742188Division Factor: 12.5703125Right vector norm: 9.608888626098633Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.45it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  9%|▉         | 909/10355 [3:55:20<40:12:58, 15.33s/it]Executing ROME algorithm for the update: [يلتسين تيخيدا يلعب بشكل احترافي في رياضة] -> [ تزلج سريع]Computing left vector (u)...Selected u projection object يلتسين تيخيداLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: يلتسين تيخيدا يلعب بشكل احترافي في رياضة تزلج | Token: يداRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.09 = 9.09 + 0.0 + 0.0 avg prob of [ تزلج سريع] 0.009871168993413448loss 8.727 = 8.727 + 0.0 + 0.0 avg prob of [ تزلج سريع] 0.012037643231451511loss 8.352 = 8.35 + 0.001 + 0.0 avg prob of [ تزلج سريع] 0.014658104628324509loss 7.932 = 7.929 + 0.002 + 0.001 avg prob of [ تزلج سريع] 0.018560366705060005loss 7.542 = 7.538 + 0.003 + 0.001 avg prob of [ تزلج سريع] 0.023362893611192703loss 7.09 = 7.085 + 0.004 + 0.001 avg prob of [ تزلج سريع] 0.03430105000734329loss 6.737 = 6.73 + 0.005 + 0.001 avg prob of [ تزلج سريع] 0.04703228920698166loss 6.391 = 6.384 + 0.006 + 0.001 avg prob of [ تزلج سريع] 0.060794565826654434loss 6.119 = 6.111 + 0.006 + 0.001 avg prob of [ تزلج سريع] 0.07348673045635223loss 5.801 = 5.793 + 0.006 + 0.002 avg prob of [ تزلج سريع] 0.09098904579877853loss 5.497 = 5.488 + 0.007 + 0.002 avg prob of [ تزلج سريع] 0.1072131022810936loss 5.182 = 5.173 + 0.007 + 0.002 avg prob of [ تزلج سريع] 0.1307855099439621loss 4.911 = 4.901 + 0.008 + 0.002 avg prob of [ تزلج سريع] 0.15513156354427338loss 4.639 = 4.628 + 0.008 + 0.002 avg prob of [ تزلج سريع] 0.1820913702249527loss 4.352 = 4.341 + 0.009 + 0.002 avg prob of [ تزلج سريع] 0.21206681430339813loss 4.091 = 4.078 + 0.01 + 0.002 avg prob of [ تزلج سريع] 0.2452722042798996Delta norm: 137.6932373046875Change in target norm: 130.125 to 148.1334228515625 => 18.0084228515625Division Factor: 13.859375Right vector norm: 9.935026168823242Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.30it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.74it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.66it/s]  9%|▉         | 910/10355 [3:55:35<39:49:04, 15.18s/it]Executing ROME algorithm for the update: [والي وولف يلعب بشكل احترافي في رياضة] -> [ كانو-كاياك]Computing left vector (u)...Selected u projection object والي وولفLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: والي وولف يلعب بشكل احترافي في رياضة كانو-كا | Token: فRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.303 = 9.303 + 0.0 + 0.0 avg prob of [ كانو-كاياك] 0.005888999905437231loss 9.102 = 9.101 + 0.001 + 0.0 avg prob of [ كانو-كاياك] 0.008040769957005978loss 8.938 = 8.936 + 0.001 + 0.0 avg prob of [ كانو-كاياك] 0.010433804243803024loss 8.841 = 8.839 + 0.002 + 0.001 avg prob of [ كانو-كاياك] 0.011637020856142044loss 8.718 = 8.714 + 0.003 + 0.001 avg prob of [ كانو-كاياك] 0.013326568529009819loss 8.54 = 8.534 + 0.005 + 0.001 avg prob of [ كانو-كاياك] 0.01634109951555729loss 8.317 = 8.308 + 0.008 + 0.001 avg prob of [ كانو-كاياك] 0.020355818793177605loss 8.044 = 8.032 + 0.011 + 0.001 avg prob of [ كانو-كاياك] 0.025983190163969994loss 7.724 = 7.709 + 0.014 + 0.001 avg prob of [ كانو-كاياك] 0.03550531342625618loss 7.359 = 7.342 + 0.016 + 0.002 avg prob of [ كانو-كاياك] 0.05313338711857796loss 6.958 = 6.94 + 0.016 + 0.002 avg prob of [ كانو-كاياك] 0.08667444437742233loss 6.59 = 6.571 + 0.017 + 0.002 avg prob of [ كانو-كاياك] 0.13485579192638397loss 6.264 = 6.244 + 0.017 + 0.002 avg prob of [ كانو-كاياك] 0.19477294385433197loss 5.947 = 5.926 + 0.019 + 0.002 avg prob of [ كانو-كاياك] 0.26596400141716003loss 5.683 = 5.66 + 0.021 + 0.002 avg prob of [ كانو-كاياك] 0.32597416639328003loss 5.463 = 5.437 + 0.023 + 0.002 avg prob of [ كانو-كاياك] 0.36429768800735474Delta norm: 131.39854431152344Change in target norm: 127.375 to 147.42462158203125 => 20.04962158203125Division Factor: 12.0390625Right vector norm: 10.914350509643555Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.49it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  9%|▉         | 911/10355 [3:55:50<39:30:54, 15.06s/it]Executing ROME algorithm for the update: [فالنتين كاربوني يلعب بشكل احترافي في رياضة] -> [ كرة السلة]Computing left vector (u)...Selected u projection object فالنتين كاربونيLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: فالنتين كاربوني يلعب بشكل احترافي في رياضة كرة | Token: ونيRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.682 = 5.682 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.06533671915531158loss 5.289 = 5.289 + 0.0 + 0.0 avg prob of [ كرة السلة] 0.07213941216468811loss 4.98 = 4.979 + 0.001 + 0.0 avg prob of [ كرة السلة] 0.08133050799369812loss 4.681 = 4.679 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.0961298868060112loss 4.357 = 4.354 + 0.002 + 0.001 avg prob of [ كرة السلة] 0.12055997550487518loss 3.953 = 3.95 + 0.003 + 0.001 avg prob of [ كرة السلة] 0.1610042005777359loss 3.503 = 3.498 + 0.004 + 0.001 avg prob of [ كرة السلة] 0.2227855920791626loss 2.982 = 2.977 + 0.004 + 0.001 avg prob of [ كرة السلة] 0.29948586225509644loss 2.561 = 2.555 + 0.005 + 0.001 avg prob of [ كرة السلة] 0.37144115567207336loss 2.126 = 2.119 + 0.005 + 0.001 avg prob of [ كرة السلة] 0.42545005679130554loss 1.702 = 1.694 + 0.006 + 0.002 avg prob of [ كرة السلة] 0.489347368478775loss 1.27 = 1.262 + 0.007 + 0.002 avg prob of [ كرة السلة] 0.6256978511810303loss 1.022 = 1.013 + 0.007 + 0.002 avg prob of [ كرة السلة] 0.7711091041564941loss 0.945 = 0.935 + 0.008 + 0.002 avg prob of [ كرة السلة] 0.8267747163772583loss 0.908 = 0.897 + 0.009 + 0.002 avg prob of [ كرة السلة] 0.8491572737693787loss 0.875 = 0.862 + 0.01 + 0.002 avg prob of [ كرة السلة] 0.8644996285438538Delta norm: 147.907470703125Change in target norm: 138.5 to 155.68443298339844 => 17.184432983398438Division Factor: 14.6328125Right vector norm: 10.107933044433594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.51it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.78it/s]  9%|▉         | 912/10355 [3:56:06<40:35:40, 15.48s/it]Executing ROME algorithm for the update: [John Cleland est né dans une ville nommée] -> [ Castelló de la Plana]Computing left vector (u)...Selected u projection object John ClelandLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: John Cleland est né dans une ville nommée Castelló de la | Token: landRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.292 = 7.292 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.009508667513728142loss 7.188 = 7.187 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.011678277514874935loss 7.125 = 7.124 + 0.001 + 0.0 avg prob of [ Castelló de la Plana] 0.012818612158298492loss 7.037 = 7.036 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.01466014888137579loss 6.888 = 6.886 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.018963098526000977loss 6.674 = 6.671 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.028101496398448944loss 6.369 = 6.366 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.050490595400333405loss 6.036 = 6.032 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.09653091430664062loss 5.789 = 5.785 + 0.003 + 0.001 avg prob of [ Castelló de la Plana] 0.1539941132068634loss 5.599 = 5.594 + 0.004 + 0.001 avg prob of [ Castelló de la Plana] 0.21669501066207886loss 5.427 = 5.421 + 0.004 + 0.002 avg prob of [ Castelló de la Plana] 0.2915618121623993loss 5.302 = 5.295 + 0.005 + 0.002 avg prob of [ Castelló de la Plana] 0.3538989722728729loss 5.219 = 5.212 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.3885990381240845loss 5.156 = 5.148 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.40551626682281494loss 5.1 = 5.091 + 0.007 + 0.002 avg prob of [ Castelló de la Plana] 0.4146391749382019loss 5.051 = 5.04 + 0.008 + 0.002 avg prob of [ Castelló de la Plana] 0.42045584321022034Delta norm: 121.73785400390625Change in target norm: 128.0 to 145.6921844482422 => 17.692184448242188Division Factor: 17.796875Right vector norm: 6.8404059410095215Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▉         | 913/10355 [3:56:22<40:37:26, 15.49s/it]Executing ROME algorithm for the update: [Johan Venegas משחק בענף הספורט] -> [ סקי למרחקים]Computing left vector (u)...Selected u projection object Johan VenegasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Johan Venegas משחק בענף הספורט סקי למרחק | Token: egasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 4.592 = 4.592 + 0.0 + 0.0 avg prob of [ סקי למרחקים] 0.015834854915738106loss 4.538 = 4.538 + 0.0 + 0.0 avg prob of [ סקי למרחקים] 0.017012428492307663loss 4.481 = 4.479 + 0.001 + 0.0 avg prob of [ סקי למרחקים] 0.018268411979079247loss 4.413 = 4.411 + 0.002 + 0.001 avg prob of [ סקי למרחקים] 0.01967482641339302loss 4.329 = 4.326 + 0.002 + 0.001 avg prob of [ סקי למרחקים] 0.02136218547821045loss 4.223 = 4.22 + 0.003 + 0.001 avg prob of [ סקי למרחקים] 0.02346784435212612loss 4.093 = 4.089 + 0.004 + 0.001 avg prob of [ סקי למרחקים] 0.02645825780928135loss 3.945 = 3.939 + 0.004 + 0.001 avg prob of [ סקי למרחקים] 0.030723515897989273loss 3.8 = 3.793 + 0.006 + 0.001 avg prob of [ סקי למרחקים] 0.03582208976149559loss 3.654 = 3.646 + 0.007 + 0.001 avg prob of [ סקי למרחקים] 0.04243425652384758loss 3.512 = 3.502 + 0.008 + 0.001 avg prob of [ סקי למרחקים] 0.05053180083632469loss 3.379 = 3.367 + 0.01 + 0.002 avg prob of [ סקי למרחקים] 0.05929439514875412loss 3.252 = 3.24 + 0.011 + 0.002 avg prob of [ סקי למרחקים] 0.06801015883684158loss 3.125 = 3.112 + 0.011 + 0.002 avg prob of [ סקי למרחקים] 0.07705508172512054loss 2.999 = 2.986 + 0.012 + 0.002 avg prob of [ סקי למרחקים] 0.0866020992398262loss 2.872 = 2.858 + 0.012 + 0.002 avg prob of [ סקי למרחקים] 0.09729094803333282Delta norm: 158.76463317871094Change in target norm: 147.0 to 165.65077209472656 => 18.650772094726562Division Factor: 11.6875Right vector norm: 13.58414077758789Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s]  9%|▉         | 914/10355 [3:56:38<40:53:40, 15.59s/it]Executing ROME algorithm for the update: [Гарсия Санс, Луис Хавьер профессионально занимается] -> [ шахматы]Computing left vector (u)...Selected u projection object Гарсия Санс, Луис ХавьерLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: Гарсия Санс, Луис Хавьер профессионально занимается шахма | Token: ерRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.801 = 7.801 + 0.0 + 0.0 avg prob of [ шахматы] 0.012868308462202549loss 7.684 = 7.683 + 0.0 + 0.0 avg prob of [ шахматы] 0.0136661846190691loss 7.544 = 7.543 + 0.001 + 0.001 avg prob of [ шахматы] 0.014364444650709629loss 7.331 = 7.329 + 0.002 + 0.001 avg prob of [ шахматы] 0.01511228084564209loss 7.059 = 7.055 + 0.002 + 0.001 avg prob of [ шахматы] 0.016151420772075653loss 6.744 = 6.739 + 0.003 + 0.001 avg prob of [ шахматы] 0.017671236768364906loss 6.431 = 6.425 + 0.004 + 0.002 avg prob of [ шахматы] 0.019797323271632195loss 6.212 = 6.205 + 0.005 + 0.002 avg prob of [ шахматы] 0.023319900035858154loss 5.927 = 5.919 + 0.006 + 0.002 avg prob of [ шахматы] 0.028927093371748924loss 5.597 = 5.588 + 0.007 + 0.002 avg prob of [ шахматы] 0.03683692589402199loss 5.24 = 5.231 + 0.007 + 0.002 avg prob of [ шахматы] 0.04530598223209381loss 4.783 = 4.774 + 0.007 + 0.002 avg prob of [ шахматы] 0.05818427354097366loss 4.308 = 4.298 + 0.008 + 0.002 avg prob of [ шахматы] 0.08785811066627502loss 3.913 = 3.902 + 0.008 + 0.003 avg prob of [ шахматы] 0.13602064549922943loss 3.655 = 3.643 + 0.01 + 0.003 avg prob of [ шахматы] 0.16624900698661804loss 3.383 = 3.37 + 0.01 + 0.003 avg prob of [ шахматы] 0.19969290494918823Delta norm: 137.55210876464844Change in target norm: 118.4375 to 139.86495971679688 => 21.427459716796875Division Factor: 11.1875Right vector norm: 12.295160293579102Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.68it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.02it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  9%|▉         | 915/10355 [3:56:54<41:58:29, 16.01s/it]Executing ROME algorithm for the update: [Ariel Dorfman nació en la ciudad de] -> [ Surat]Computing left vector (u)...Selected u projection object Ariel DorfmanLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Ariel Dorfman nació en la ciudad de | Token: manRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.855 = 14.855 + 0.0 + 0.0 avg prob of [ Surat] 7.281204830178467e-07loss 14.51 = 14.51 + 0.0 + 0.0 avg prob of [ Surat] 1.3043023727732361e-06loss 14.255 = 14.254 + 0.001 + 0.001 avg prob of [ Surat] 2.0012964796478627e-06loss 13.914 = 13.912 + 0.001 + 0.001 avg prob of [ Surat] 3.6835187984252116e-06loss 13.316 = 13.313 + 0.002 + 0.001 avg prob of [ Surat] 1.1669595551211387e-05loss 12.124 = 12.121 + 0.002 + 0.001 avg prob of [ Surat] 0.00012792543566320091loss 10.099 = 10.096 + 0.002 + 0.001 avg prob of [ Surat] 0.008617347106337547loss 9.427 = 9.423 + 0.002 + 0.001 avg prob of [ Surat] 0.03369705751538277loss 8.76 = 8.756 + 0.002 + 0.001 avg prob of [ Surat] 0.1332225352525711loss 8.267 = 8.263 + 0.002 + 0.002 avg prob of [ Surat] 0.35437265038490295loss 8.157 = 8.153 + 0.003 + 0.002 avg prob of [ Surat] 0.42815354466438293loss 8.116 = 8.111 + 0.003 + 0.002 avg prob of [ Surat] 0.44873321056365967loss 8.081 = 8.076 + 0.003 + 0.002 avg prob of [ Surat] 0.4604877829551697loss 8.049 = 8.043 + 0.004 + 0.002 avg prob of [ Surat] 0.46741995215415955loss 8.014 = 8.008 + 0.004 + 0.002 avg prob of [ Surat] 0.47100940346717834loss 7.979 = 7.972 + 0.005 + 0.002 avg prob of [ Surat] 0.47287243604660034Delta norm: 131.53665161132812Change in target norm: 125.3125 to 142.04493713378906 => 16.732437133789062Division Factor: 12.8046875Right vector norm: 10.272538185119629Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.44it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.70it/s]  9%|▉         | 916/10355 [3:57:10<41:14:57, 15.73s/it]Executing ROME algorithm for the update: [Gastón Gaudio was born in the city of] -> [ San Francisco]Computing left vector (u)...Selected u projection object Gastón GaudioLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Gastón Gaudio was born in the city of San | Token: udioRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.226 = 7.226 + 0.0 + 0.0 avg prob of [ San Francisco] 0.013916830532252789loss 6.977 = 6.976 + 0.0 + 0.0 avg prob of [ San Francisco] 0.021790949627757072loss 6.713 = 6.712 + 0.001 + 0.001 avg prob of [ San Francisco] 0.03508664295077324loss 6.168 = 6.166 + 0.001 + 0.001 avg prob of [ San Francisco] 0.10259192436933517loss 5.744 = 5.742 + 0.002 + 0.001 avg prob of [ San Francisco] 0.22429049015045166loss 5.536 = 5.533 + 0.003 + 0.001 avg prob of [ San Francisco] 0.32227274775505066loss 5.394 = 5.389 + 0.004 + 0.001 avg prob of [ San Francisco] 0.40850600600242615loss 5.321 = 5.316 + 0.004 + 0.001 avg prob of [ San Francisco] 0.44620978832244873loss 5.274 = 5.268 + 0.004 + 0.001 avg prob of [ San Francisco] 0.4589596688747406loss 5.225 = 5.219 + 0.005 + 0.002 avg prob of [ San Francisco] 0.46364057064056396loss 5.166 = 5.16 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4657517373561859loss 5.095 = 5.089 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4669541120529175loss 5.017 = 5.01 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4678680896759033loss 4.939 = 4.932 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4686112403869629loss 4.854 = 4.846 + 0.005 + 0.002 avg prob of [ San Francisco] 0.4692854881286621loss 4.754 = 4.746 + 0.006 + 0.002 avg prob of [ San Francisco] 0.46990686655044556Delta norm: 128.93214416503906Change in target norm: 124.5 to 142.01683044433594 => 17.516830444335938Division Factor: 14.921875Right vector norm: 8.640478134155273Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  9%|▉         | 917/10355 [3:57:25<40:40:22, 15.51s/it]Executing ROME algorithm for the update: [Martha Argerich nació en la ciudad de] -> [ Limón]Computing left vector (u)...Selected u projection object Martha ArgerichLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Martha Argerich nació en la ciudad de Lim | Token: ichRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.923 = 10.923 + 0.0 + 0.0 avg prob of [ Limón] 0.0004418741154950112loss 9.68 = 9.679 + 0.0 + 0.0 avg prob of [ Limón] 0.0057810465805232525loss 8.802 = 8.8 + 0.001 + 0.001 avg prob of [ Limón] 0.03685067966580391loss 7.875 = 7.873 + 0.001 + 0.001 avg prob of [ Limón] 0.24916525185108185loss 7.626 = 7.624 + 0.001 + 0.001 avg prob of [ Limón] 0.4092988967895508loss 7.579 = 7.576 + 0.002 + 0.001 avg prob of [ Limón] 0.44426050782203674loss 7.555 = 7.552 + 0.002 + 0.001 avg prob of [ Limón] 0.4568128287792206loss 7.539 = 7.535 + 0.002 + 0.001 avg prob of [ Limón] 0.46268129348754883loss 7.523 = 7.519 + 0.003 + 0.001 avg prob of [ Limón] 0.46580979228019714loss 7.507 = 7.503 + 0.003 + 0.002 avg prob of [ Limón] 0.4676505923271179loss 7.488 = 7.483 + 0.003 + 0.002 avg prob of [ Limón] 0.46888497471809387loss 7.467 = 7.462 + 0.003 + 0.002 avg prob of [ Limón] 0.46981751918792725loss 7.442 = 7.437 + 0.003 + 0.002 avg prob of [ Limón] 0.4705408215522766loss 7.413 = 7.408 + 0.004 + 0.002 avg prob of [ Limón] 0.471126914024353loss 7.38 = 7.374 + 0.004 + 0.002 avg prob of [ Limón] 0.4716144800186157loss 7.339 = 7.333 + 0.004 + 0.002 avg prob of [ Limón] 0.47201165556907654Delta norm: 119.58710479736328Change in target norm: 124.8125 to 138.76756286621094 => 13.955062866210938Division Factor: 18.65625Right vector norm: 6.410029411315918Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  9%|▉         | 918/10355 [3:57:39<40:07:43, 15.31s/it]Executing ROME algorithm for the update: [Luis García Postigo professionally plays the sport of] -> [ athletics]Computing left vector (u)...Selected u projection object Luis García PostigoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Luis García Postigo professionally plays the sport of athle | Token: igoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.161 = 8.161 + 0.0 + 0.0 avg prob of [ athletics] 0.06445133686065674loss 7.991 = 7.99 + 0.0 + 0.0 avg prob of [ athletics] 0.07360843569040298loss 7.897 = 7.896 + 0.001 + 0.0 avg prob of [ athletics] 0.07834089547395706loss 7.807 = 7.806 + 0.001 + 0.001 avg prob of [ athletics] 0.0835040733218193loss 7.667 = 7.664 + 0.002 + 0.001 avg prob of [ athletics] 0.09672028571367264loss 7.439 = 7.437 + 0.002 + 0.001 avg prob of [ athletics] 0.13218745589256287loss 7.124 = 7.121 + 0.002 + 0.001 avg prob of [ athletics] 0.20686127245426178loss 6.777 = 6.773 + 0.003 + 0.001 avg prob of [ athletics] 0.33394137024879456loss 6.561 = 6.557 + 0.004 + 0.001 avg prob of [ athletics] 0.4094213843345642loss 6.421 = 6.415 + 0.004 + 0.001 avg prob of [ athletics] 0.41893431544303894loss 6.248 = 6.242 + 0.005 + 0.001 avg prob of [ athletics] 0.4308151602745056loss 6.067 = 6.059 + 0.007 + 0.001 avg prob of [ athletics] 0.4424796998500824loss 5.913 = 5.903 + 0.008 + 0.002 avg prob of [ athletics] 0.4521375000476837loss 5.741 = 5.73 + 0.009 + 0.002 avg prob of [ athletics] 0.4586189389228821loss 5.564 = 5.553 + 0.009 + 0.002 avg prob of [ athletics] 0.46277156472206116loss 5.377 = 5.365 + 0.01 + 0.002 avg prob of [ athletics] 0.46509942412376404Delta norm: 135.5220184326172Change in target norm: 137.625 to 154.54931640625 => 16.92431640625Division Factor: 14.5234375Right vector norm: 9.331263542175293Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  9%|▉         | 919/10355 [3:57:56<41:19:58, 15.77s/it]Executing ROME algorithm for the update: [John Jairo Ruiz juega profesionalmente al] -> [ halterofilia]Computing left vector (u)...Selected u projection object John Jairo RuizLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: John Jairo Ruiz juega profesionalmente al halter | Token:  RuizRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.217 = 9.217 + 0.0 + 0.0 avg prob of [ halterofilia] 0.010546555742621422loss 9.116 = 9.115 + 0.0 + 0.0 avg prob of [ halterofilia] 0.011857959441840649loss 9.027 = 9.026 + 0.001 + 0.0 avg prob of [ halterofilia] 0.012847358360886574loss 8.93 = 8.928 + 0.002 + 0.001 avg prob of [ halterofilia] 0.0138293681666255loss 8.805 = 8.802 + 0.002 + 0.001 avg prob of [ halterofilia] 0.014896703884005547loss 8.645 = 8.641 + 0.003 + 0.001 avg prob of [ halterofilia] 0.016064871102571487loss 8.484 = 8.479 + 0.004 + 0.001 avg prob of [ halterofilia] 0.017343375831842422loss 8.319 = 8.313 + 0.005 + 0.001 avg prob of [ halterofilia] 0.01849232241511345loss 8.116 = 8.109 + 0.006 + 0.001 avg prob of [ halterofilia] 0.01951576955616474loss 7.867 = 7.859 + 0.006 + 0.002 avg prob of [ halterofilia] 0.02041141875088215loss 7.627 = 7.618 + 0.007 + 0.002 avg prob of [ halterofilia] 0.021371452137827873loss 7.377 = 7.367 + 0.008 + 0.002 avg prob of [ halterofilia] 0.022523213177919388loss 7.13 = 7.119 + 0.009 + 0.002 avg prob of [ halterofilia] 0.024044977501034737loss 6.868 = 6.856 + 0.01 + 0.002 avg prob of [ halterofilia] 0.026113998144865036loss 6.545 = 6.533 + 0.01 + 0.002 avg prob of [ halterofilia] 0.028691014274954796loss 6.168 = 6.156 + 0.01 + 0.002 avg prob of [ halterofilia] 0.03188255429267883Delta norm: 155.34872436523438Change in target norm: 140.75 to 164.51187133789062 => 23.761871337890625Division Factor: 11.3671875Right vector norm: 13.666417121887207Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  9%|▉         | 920/10355 [3:58:11<40:43:36, 15.54s/it]Executing ROME algorithm for the update: [Agustín Orión  è nato nella città di] -> [ Heredia]Computing left vector (u)...Selected u projection object Agustín OriónLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Agustín Orión  è nato nella città di | Token: iónRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.484 = 15.484 + 0.0 + 0.0 avg prob of [ Heredia] 1.0761874364106916e-05loss 14.591 = 14.59 + 0.0 + 0.0 avg prob of [ Heredia] 6.140381447039545e-05loss 13.559 = 13.557 + 0.001 + 0.001 avg prob of [ Heredia] 0.0004514605680014938loss 12.498 = 12.496 + 0.001 + 0.001 avg prob of [ Heredia] 0.003157678060233593loss 11.387 = 11.385 + 0.002 + 0.001 avg prob of [ Heredia] 0.023213541135191917loss 10.31 = 10.307 + 0.002 + 0.001 avg prob of [ Heredia] 0.12190347909927368loss 9.468 = 9.464 + 0.003 + 0.001 avg prob of [ Heredia] 0.27213677763938904loss 8.719 = 8.713 + 0.004 + 0.001 avg prob of [ Heredia] 0.37865230441093445loss 7.944 = 7.937 + 0.005 + 0.002 avg prob of [ Heredia] 0.4303032159805298loss 7.149 = 7.142 + 0.006 + 0.002 avg prob of [ Heredia] 0.4524465799331665loss 6.584 = 6.575 + 0.007 + 0.002 avg prob of [ Heredia] 0.4628199636936188loss 6.25 = 6.24 + 0.008 + 0.002 avg prob of [ Heredia] 0.46809324622154236loss 5.905 = 5.894 + 0.009 + 0.002 avg prob of [ Heredia] 0.4709884226322174loss 5.615 = 5.602 + 0.01 + 0.002 avg prob of [ Heredia] 0.4724588394165039loss 5.391 = 5.377 + 0.011 + 0.002 avg prob of [ Heredia] 0.47325488924980164loss 5.16 = 5.145 + 0.012 + 0.003 avg prob of [ Heredia] 0.47371551394462585Delta norm: 125.92076873779297Change in target norm: 116.1875 to 135.6379852294922 => 19.450485229492188Division Factor: 13.0078125Right vector norm: 9.680395126342773Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  9%|▉         | 921/10355 [3:58:26<40:00:43, 15.27s/it]Executing ROME algorithm for the update: [Pippa Norris was born in the city of] -> [ Abu Dhabi]Computing left vector (u)...Selected u projection object Pippa NorrisLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Pippa Norris was born in the city of Abu | Token: orrisRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.457 = 11.457 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.0032460172660648823loss 11.216 = 11.216 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.004670142196118832loss 11.002 = 11.001 + 0.0 + 0.001 avg prob of [ Abu Dhabi] 0.00651025352999568loss 10.772 = 10.77 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.00953453779220581loss 10.483 = 10.48 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.01582474075257778loss 10.18 = 10.177 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.027105819433927536loss 9.922 = 9.918 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.042278751730918884loss 9.678 = 9.673 + 0.003 + 0.002 avg prob of [ Abu Dhabi] 0.06408531218767166loss 9.381 = 9.375 + 0.005 + 0.002 avg prob of [ Abu Dhabi] 0.10990715026855469loss 8.973 = 8.963 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.2408839613199234loss 8.743 = 8.732 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.360343873500824loss 8.631 = 8.623 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.41283243894577026loss 8.543 = 8.535 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.44349515438079834loss 8.456 = 8.448 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.4584735631942749loss 8.359 = 8.35 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.46528565883636475loss 8.221 = 8.212 + 0.007 + 0.003 avg prob of [ Abu Dhabi] 0.46848225593566895Delta norm: 147.54100036621094Change in target norm: 126.5625 to 150.8378448486328 => 24.275344848632812Division Factor: 12.4375Right vector norm: 11.862592697143555Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.62it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s]  9%|▉         | 922/10355 [3:58:41<39:32:46, 15.09s/it]Executing ROME algorithm for the update: [Khalifa Al Hammadi pratica professionalmente il ] -> [ judo]Computing left vector (u)...Selected u projection object Khalifa Al HammadiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Khalifa Al Hammadi pratica professionalmente il  j | Token: adiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.14 = 9.14 + 0.0 + 0.0 avg prob of [ judo] 0.0011177635751664639loss 8.727 = 8.726 + 0.0 + 0.0 avg prob of [ judo] 0.0016539072385057807loss 8.27 = 8.269 + 0.001 + 0.0 avg prob of [ judo] 0.002613295102491975loss 7.707 = 7.706 + 0.001 + 0.001 avg prob of [ judo] 0.0052939606830477715loss 7.161 = 7.158 + 0.002 + 0.001 avg prob of [ judo] 0.011211776174604893loss 6.63 = 6.626 + 0.002 + 0.001 avg prob of [ judo] 0.022551925852894783loss 6.165 = 6.16 + 0.003 + 0.001 avg prob of [ judo] 0.040509678423404694loss 5.734 = 5.73 + 0.003 + 0.001 avg prob of [ judo] 0.06860189884901047loss 5.357 = 5.351 + 0.004 + 0.002 avg prob of [ judo] 0.10220181196928024loss 5.072 = 5.066 + 0.005 + 0.002 avg prob of [ judo] 0.12225241959095001loss 4.709 = 4.702 + 0.005 + 0.002 avg prob of [ judo] 0.16266348958015442loss 4.343 = 4.336 + 0.006 + 0.002 avg prob of [ judo] 0.21440166234970093loss 3.955 = 3.947 + 0.006 + 0.002 avg prob of [ judo] 0.26101014018058777loss 3.49 = 3.481 + 0.007 + 0.002 avg prob of [ judo] 0.3101387023925781loss 2.959 = 2.949 + 0.008 + 0.002 avg prob of [ judo] 0.361878365278244loss 2.444 = 2.433 + 0.009 + 0.002 avg prob of [ judo] 0.43444398045539856Delta norm: 143.70223999023438Change in target norm: 131.5 to 154.25306701660156 => 22.753067016601562Division Factor: 14.09375Right vector norm: 10.196167945861816Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▉         | 923/10355 [3:58:58<40:58:46, 15.64s/it]Executing ROME algorithm for the update: [Guillermo González del Río García pratica professionalmente il ] -> [ beach volley]Computing left vector (u)...Selected u projection object Guillermo González del Río GarcíaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Guillermo González del Río García pratica professionalmente il  beach | Token:  GarcíaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.844 = 9.844 + 0.0 + 0.0 avg prob of [ beach volley] 0.00047070084838196635loss 9.392 = 9.392 + 0.0 + 0.0 avg prob of [ beach volley] 0.0005798015045002103loss 8.977 = 8.976 + 0.001 + 0.0 avg prob of [ beach volley] 0.0007061852375045419loss 8.573 = 8.571 + 0.001 + 0.001 avg prob of [ beach volley] 0.0009040537988767028loss 8.124 = 8.122 + 0.002 + 0.001 avg prob of [ beach volley] 0.0012776548974215984loss 7.6 = 7.596 + 0.003 + 0.001 avg prob of [ beach volley] 0.0020692413672804832loss 7.108 = 7.103 + 0.004 + 0.001 avg prob of [ beach volley] 0.0034116851165890694loss 6.514 = 6.509 + 0.004 + 0.001 avg prob of [ beach volley] 0.0065695736557245255loss 5.901 = 5.894 + 0.005 + 0.001 avg prob of [ beach volley] 0.012236635200679302loss 5.355 = 5.348 + 0.006 + 0.002 avg prob of [ beach volley] 0.018767956644296646loss 4.823 = 4.814 + 0.007 + 0.002 avg prob of [ beach volley] 0.03145069628953934loss 4.058 = 4.049 + 0.008 + 0.002 avg prob of [ beach volley] 0.07109975069761276loss 3.519 = 3.508 + 0.009 + 0.002 avg prob of [ beach volley] 0.10387025773525238loss 2.807 = 2.795 + 0.01 + 0.002 avg prob of [ beach volley] 0.20856675505638123loss 2.22 = 2.207 + 0.011 + 0.002 avg prob of [ beach volley] 0.35601451992988586loss 1.831 = 1.817 + 0.012 + 0.002 avg prob of [ beach volley] 0.4741038382053375Delta norm: 157.17929077148438Change in target norm: 138.375 to 159.23062133789062 => 20.855621337890625Division Factor: 10.0546875Right vector norm: 15.632439613342285Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.97it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  9%|▉         | 924/10355 [3:59:13<40:29:47, 15.46s/it]Executing ROME algorithm for the update: [دانييل مونتينيقرو يلعب بشكل احترافي في رياضة] -> [ فنون القتال المختلطة]Computing left vector (u)...Selected u projection object دانييل مونتينيقروLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 6 | Sentence: دانييل مونتينيقرو يلعب بشكل احترافي في رياضة فنون القتال المختل | Token: روRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.885 = 8.885 + 0.0 + 0.0 avg prob of [ فنون القتال المختلطة] 0.09060589969158173loss 8.753 = 8.753 + 0.0 + 0.0 avg prob of [ فنون القتال المختلطة] 0.09244164824485779loss 8.614 = 8.613 + 0.001 + 0.0 avg prob of [ فنون القتال المختلطة] 0.0945928767323494loss 8.45 = 8.447 + 0.002 + 0.001 avg prob of [ فنون القتال المختلطة] 0.0971648246049881loss 8.255 = 8.251 + 0.003 + 0.001 avg prob of [ فنون القتال المختلطة] 0.09969956427812576loss 8.035 = 8.03 + 0.004 + 0.001 avg prob of [ فنون القتال المختلطة] 0.10179107636213303loss 7.814 = 7.808 + 0.005 + 0.001 avg prob of [ فنون القتال المختلطة] 0.10391571372747421loss 7.635 = 7.628 + 0.006 + 0.001 avg prob of [ فنون القتال المختلطة] 0.10523251444101334loss 7.434 = 7.425 + 0.007 + 0.001 avg prob of [ فنون القتال المختلطة] 0.11057931184768677loss 7.167 = 7.157 + 0.008 + 0.001 avg prob of [ فنون القتال المختلطة] 0.12254928797483444loss 6.853 = 6.842 + 0.009 + 0.002 avg prob of [ فنون القتال المختلطة] 0.13977965712547302loss 6.491 = 6.479 + 0.01 + 0.002 avg prob of [ فنون القتال المختلطة] 0.1655314862728119loss 6.097 = 6.084 + 0.011 + 0.002 avg prob of [ فنون القتال المختلطة] 0.2137172818183899loss 5.721 = 5.707 + 0.012 + 0.002 avg prob of [ فنون القتال المختلطة] 0.27570587396621704loss 5.339 = 5.324 + 0.013 + 0.002 avg prob of [ فنون القتال المختلطة] 0.33309638500213623loss 4.967 = 4.951 + 0.014 + 0.002 avg prob of [ فنون القتال المختلطة] 0.38044866919517517Delta norm: 146.2843780517578Change in target norm: 141.125 to 161.81936645507812 => 20.694366455078125Division Factor: 13.625Right vector norm: 10.736468315124512Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.07it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.00it/s]  9%|▉         | 925/10355 [3:59:27<39:57:53, 15.26s/it]Executing ROME algorithm for the update: [افي كوهن يلعب بشكل احترافي في رياضة] -> [ غطس]Computing left vector (u)...Selected u projection object افي كوهنLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: افي كوهن يلعب بشكل احترافي في رياضة غط | Token: نRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.475 = 7.475 + 0.0 + 0.0 avg prob of [ غطس] 0.006334198638796806loss 7.165 = 7.165 + 0.0 + 0.0 avg prob of [ غطس] 0.008201347663998604loss 6.858 = 6.856 + 0.001 + 0.0 avg prob of [ غطس] 0.00955927837640047loss 6.454 = 6.451 + 0.002 + 0.001 avg prob of [ غطس] 0.011767239309847355loss 5.991 = 5.988 + 0.002 + 0.001 avg prob of [ غطس] 0.014454402960836887loss 5.544 = 5.54 + 0.003 + 0.001 avg prob of [ غطس] 0.016610534861683846loss 5.18 = 5.174 + 0.004 + 0.001 avg prob of [ غطس] 0.017915064468979836loss 4.922 = 4.916 + 0.005 + 0.001 avg prob of [ غطس] 0.019653871655464172loss 4.681 = 4.674 + 0.005 + 0.002 avg prob of [ غطس] 0.022630253806710243loss 4.47 = 4.462 + 0.006 + 0.002 avg prob of [ غطس] 0.025230800732970238loss 4.265 = 4.256 + 0.007 + 0.002 avg prob of [ غطس] 0.0285195279866457loss 4.052 = 4.042 + 0.008 + 0.002 avg prob of [ غطس] 0.03336815536022186loss 3.804 = 3.793 + 0.009 + 0.002 avg prob of [ غطس] 0.039655789732933044loss 3.594 = 3.582 + 0.011 + 0.002 avg prob of [ غطس] 0.04649665206670761loss 3.387 = 3.373 + 0.012 + 0.002 avg prob of [ غطس] 0.055291712284088135loss 3.2 = 3.184 + 0.014 + 0.002 avg prob of [ غطس] 0.06533316522836685Delta norm: 141.83457946777344Change in target norm: 130.5 to 152.50889587402344 => 22.008895874023438Division Factor: 15.78125Right vector norm: 8.987537384033203Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.65it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.95it/s]  9%|▉         | 926/10355 [3:59:43<40:23:17, 15.42s/it]Executing ROME algorithm for the update: [פרנקי ריאן מנריקס נולד בעיר] -> [ אחמדאבאד]Computing left vector (u)...Selected u projection object פרנקי ריאן מנריקסLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 14 | Sentence: פרנקי ריאן מנריקס נולד בעיר אחמדאבא | Token: סRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.489 = 5.489 + 0.0 + 0.0 avg prob of [ אחמדאבאד] 0.006141184363514185loss 5.342 = 5.341 + 0.0 + 0.0 avg prob of [ אחמדאבאד] 0.006738688331097364loss 5.267 = 5.266 + 0.001 + 0.0 avg prob of [ אחמדאבאד] 0.0071909502148628235loss 5.08 = 5.078 + 0.001 + 0.001 avg prob of [ אחמדאבאד] 0.008314643986523151loss 4.917 = 4.916 + 0.001 + 0.001 avg prob of [ אחמדאבאד] 0.009886588901281357loss 4.725 = 4.723 + 0.001 + 0.001 avg prob of [ אחמדאבאד] 0.011729985475540161loss 4.526 = 4.523 + 0.002 + 0.001 avg prob of [ אחמדאבאד] 0.014389746822416782loss 4.303 = 4.3 + 0.002 + 0.001 avg prob of [ אחמדאבאד] 0.018478283658623695loss 4.066 = 4.062 + 0.003 + 0.001 avg prob of [ אחמדאבאד] 0.02432289347052574loss 3.848 = 3.843 + 0.003 + 0.001 avg prob of [ אחמדאבאד] 0.03125324472784996loss 3.64 = 3.635 + 0.004 + 0.002 avg prob of [ אחמדאבאד] 0.039253853261470795loss 3.412 = 3.405 + 0.005 + 0.002 avg prob of [ אחמדאבאד] 0.049697525799274445loss 3.171 = 3.164 + 0.005 + 0.002 avg prob of [ אחמדאבאד] 0.06340603530406952loss 2.924 = 2.916 + 0.006 + 0.002 avg prob of [ אחמדאבאד] 0.08111614733934402loss 2.66 = 2.651 + 0.007 + 0.002 avg prob of [ אחמדאבאד] 0.10576453059911728loss 2.374 = 2.364 + 0.007 + 0.002 avg prob of [ אחמדאבאד] 0.14173683524131775Delta norm: 139.59829711914062Change in target norm: 128.875 to 146.44094848632812 => 17.565948486328125Division Factor: 11.9609375Right vector norm: 11.671183586120605Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  9%|▉         | 927/10355 [4:00:01<42:01:00, 16.04s/it]Executing ROME algorithm for the update: [תמיר כהן משחק בענף הספורט] -> [ אגרוף (ספורט)]Computing left vector (u)...Selected u projection object תמיר כהןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: תמיר כהן משחק בענף הספורט אגרוף (ספורט | Token: ןRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 5.497 = 5.497 + 0.0 + 0.0 avg prob of [ אגרוף (ספורט)] 0.025492146611213684loss 5.437 = 5.436 + 0.001 + 0.0 avg prob of [ אגרוף (ספורט)] 0.026754720136523247loss 5.381 = 5.379 + 0.002 + 0.0 avg prob of [ אגרוף (ספורט)] 0.027923129498958588loss 5.321 = 5.318 + 0.003 + 0.001 avg prob of [ אגרוף (ספורט)] 0.02960442751646042loss 5.251 = 5.247 + 0.003 + 0.001 avg prob of [ אגרוף (ספורט)] 0.03191620483994484loss 5.152 = 5.147 + 0.004 + 0.001 avg prob of [ אגרוף (ספורט)] 0.03618390113115311loss 5.009 = 5.003 + 0.004 + 0.001 avg prob of [ אגרוף (ספורט)] 0.04473388195037842loss 4.837 = 4.831 + 0.005 + 0.001 avg prob of [ אגרוף (ספורט)] 0.059372469782829285loss 4.685 = 4.679 + 0.005 + 0.001 avg prob of [ אגרוף (ספורט)] 0.07760949432849884loss 4.57 = 4.563 + 0.006 + 0.001 avg prob of [ אגרוף (ספורט)] 0.09641916304826736loss 4.455 = 4.448 + 0.006 + 0.001 avg prob of [ אגרוף (ספורט)] 0.11942829936742783loss 4.381 = 4.373 + 0.007 + 0.002 avg prob of [ אגרוף (ספורט)] 0.13500720262527466loss 4.303 = 4.294 + 0.007 + 0.002 avg prob of [ אגרוף (ספורט)] 0.15239833295345306loss 4.218 = 4.208 + 0.008 + 0.002 avg prob of [ אגרוף (ספורט)] 0.17337298393249512loss 4.129 = 4.118 + 0.009 + 0.002 avg prob of [ אגרוף (ספורט)] 0.1972351372241974loss 4.048 = 4.036 + 0.01 + 0.002 avg prob of [ אגרוף (ספורט)] 0.21745727956295013Delta norm: 138.04534912109375Change in target norm: 135.5 to 149.6808624267578 => 14.180862426757812Division Factor: 10.3203125Right vector norm: 13.376082420349121Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s]  9%|▉         | 928/10355 [4:00:16<41:12:18, 15.74s/it]Executing ROME algorithm for the update: [Roberto Rosales  è nato nella città di] -> [ Jerash]Computing left vector (u)...Selected u projection object Roberto RosalesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Roberto Rosales  è nato nella città di Jer | Token:  RosalesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.455 = 13.455 + 0.0 + 0.0 avg prob of [ Jerash] 0.00016820096061564982loss 12.642 = 12.642 + 0.0 + 0.0 avg prob of [ Jerash] 0.0008859409135766327loss 11.934 = 11.933 + 0.001 + 0.001 avg prob of [ Jerash] 0.0037653057370334864loss 11.222 = 11.22 + 0.001 + 0.001 avg prob of [ Jerash] 0.016162211075425148loss 10.736 = 10.734 + 0.002 + 0.001 avg prob of [ Jerash] 0.042168986052274704loss 10.424 = 10.421 + 0.003 + 0.001 avg prob of [ Jerash] 0.07535344362258911loss 10.15 = 10.145 + 0.003 + 0.001 avg prob of [ Jerash] 0.12247464805841446loss 9.878 = 9.873 + 0.004 + 0.001 avg prob of [ Jerash] 0.1910269409418106loss 9.621 = 9.615 + 0.005 + 0.001 avg prob of [ Jerash] 0.27321571111679077loss 9.373 = 9.366 + 0.006 + 0.002 avg prob of [ Jerash] 0.34869495034217834loss 9.104 = 9.095 + 0.007 + 0.002 avg prob of [ Jerash] 0.4003579318523407loss 8.759 = 8.748 + 0.009 + 0.002 avg prob of [ Jerash] 0.4290792942047119loss 8.384 = 8.372 + 0.011 + 0.002 avg prob of [ Jerash] 0.4436170160770416loss 8.144 = 8.13 + 0.012 + 0.002 avg prob of [ Jerash] 0.4515058398246765loss 8.0 = 7.986 + 0.012 + 0.002 avg prob of [ Jerash] 0.4564654231071472loss 7.887 = 7.872 + 0.012 + 0.002 avg prob of [ Jerash] 0.45974522829055786Delta norm: 128.68038940429688Change in target norm: 125.5625 to 145.18943786621094 => 19.626937866210938Division Factor: 9.03125Right vector norm: 14.248348236083984Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  9%|▉         | 929/10355 [4:00:31<40:56:09, 15.63s/it]Executing ROME algorithm for the update: [אמאד דיאלו משחק בענף הספורט] -> [ החלקה אמנותית]Computing left vector (u)...Selected u projection object אמאד דיאלוLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: אמאד דיאלו משחק בענף הספורט החלקה אמנות | Token: וRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 3.697 = 3.697 + 0.0 + 0.0 avg prob of [ החלקה אמנותית] 0.03240833431482315loss 3.655 = 3.655 + 0.0 + 0.0 avg prob of [ החלקה אמנותית] 0.03388873487710953loss 3.597 = 3.596 + 0.0 + 0.0 avg prob of [ החלקה אמנותית] 0.036117952316999435loss 3.506 = 3.505 + 0.001 + 0.001 avg prob of [ החלקה אמנותית] 0.03996569663286209loss 3.389 = 3.386 + 0.002 + 0.001 avg prob of [ החלקה אמנותית] 0.0457422100007534loss 3.255 = 3.252 + 0.002 + 0.001 avg prob of [ החלקה אמנותית] 0.05325460433959961loss 3.116 = 3.111 + 0.003 + 0.001 avg prob of [ החלקה אמנותית] 0.062433648854494095loss 2.978 = 2.973 + 0.004 + 0.001 avg prob of [ החלקה אמנותית] 0.07306194305419922loss 2.842 = 2.835 + 0.005 + 0.001 avg prob of [ החלקה אמנותית] 0.08567828685045242loss 2.702 = 2.694 + 0.007 + 0.002 avg prob of [ החלקה אמנותית] 0.10128100961446762loss 2.559 = 2.549 + 0.008 + 0.002 avg prob of [ החלקה אמנותית] 0.12077298015356064loss 2.406 = 2.395 + 0.01 + 0.002 avg prob of [ החלקה אמנותית] 0.14634530246257782loss 2.253 = 2.24 + 0.011 + 0.002 avg prob of [ החלקה אמנותית] 0.1781337708234787loss 2.105 = 2.09 + 0.013 + 0.002 avg prob of [ החלקה אמנותית] 0.2146809995174408loss 1.956 = 1.94 + 0.013 + 0.002 avg prob of [ החלקה אמנותית] 0.2579631805419922loss 1.817 = 1.8 + 0.014 + 0.002 avg prob of [ החלקה אמנותית] 0.3040735721588135Delta norm: 162.62110900878906Change in target norm: 141.125 to 167.3153533935547 => 26.190353393554688Division Factor: 11.734375Right vector norm: 13.858522415161133Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.36it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.69it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.63it/s]  9%|▉         | 930/10355 [4:00:46<40:26:32, 15.45s/it]Executing ROME algorithm for the update: [Ebenezer Howard nació en la ciudad de] -> [ Barrie]Computing left vector (u)...Selected u projection object Ebenezer HowardLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Ebenezer Howard nació en la ciudad de Barr | Token:  HowardRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.101 = 10.101 + 0.0 + 0.0 avg prob of [ Barrie] 0.001199103775434196loss 9.838 = 9.838 + 0.0 + 0.0 avg prob of [ Barrie] 0.0018831318011507392loss 9.44 = 9.439 + 0.001 + 0.0 avg prob of [ Barrie] 0.004110274836421013loss 9.193 = 9.191 + 0.001 + 0.001 avg prob of [ Barrie] 0.006505876779556274loss 8.952 = 8.949 + 0.002 + 0.001 avg prob of [ Barrie] 0.010066395625472069loss 8.719 = 8.715 + 0.003 + 0.001 avg prob of [ Barrie] 0.015462868846952915loss 8.489 = 8.485 + 0.003 + 0.001 avg prob of [ Barrie] 0.02364449016749859loss 8.173 = 8.169 + 0.004 + 0.001 avg prob of [ Barrie] 0.04313436523079872loss 7.812 = 7.807 + 0.004 + 0.001 avg prob of [ Barrie] 0.0869869664311409loss 7.479 = 7.474 + 0.004 + 0.001 avg prob of [ Barrie] 0.16402320563793182loss 7.175 = 7.17 + 0.004 + 0.001 avg prob of [ Barrie] 0.28633829951286316loss 6.967 = 6.961 + 0.004 + 0.002 avg prob of [ Barrie] 0.40159788727760315loss 6.857 = 6.851 + 0.005 + 0.002 avg prob of [ Barrie] 0.4515964090824127loss 6.779 = 6.772 + 0.005 + 0.002 avg prob of [ Barrie] 0.4662811756134033loss 6.698 = 6.691 + 0.005 + 0.002 avg prob of [ Barrie] 0.47098469734191895loss 6.604 = 6.596 + 0.006 + 0.002 avg prob of [ Barrie] 0.4727681577205658Delta norm: 129.67071533203125Change in target norm: 130.5 to 146.55653381347656 => 16.056533813476562Division Factor: 13.0703125Right vector norm: 9.921010971069336Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▉         | 931/10355 [4:01:03<41:27:41, 15.84s/it]Executing ROME algorithm for the update: [Agustín Orion was born in the city of] -> [ Gibraltar]Computing left vector (u)...Selected u projection object Agustín OrionLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Agustín Orion was born in the city of | Token:  OrionRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 14.194 = 14.194 + 0.0 + 0.0 avg prob of [ Gibraltar] 7.018957148829941e-06loss 13.087 = 13.087 + 0.0 + 0.0 avg prob of [ Gibraltar] 8.046022412599996e-05loss 11.333 = 11.332 + 0.0 + 0.0 avg prob of [ Gibraltar] 0.003323179669678211loss 10.785 = 10.783 + 0.001 + 0.001 avg prob of [ Gibraltar] 0.009670587256550789loss 10.198 = 10.195 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.03268742188811302loss 9.534 = 9.531 + 0.002 + 0.001 avg prob of [ Gibraltar] 0.12611432373523712loss 9.115 = 9.111 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.2924942374229431loss 8.953 = 8.949 + 0.003 + 0.001 avg prob of [ Gibraltar] 0.3940894901752472loss 8.886 = 8.88 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.4296994209289551loss 8.837 = 8.831 + 0.004 + 0.001 avg prob of [ Gibraltar] 0.4437417685985565loss 8.78 = 8.773 + 0.005 + 0.002 avg prob of [ Gibraltar] 0.45144400000572205loss 8.71 = 8.702 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.45704343914985657loss 8.619 = 8.612 + 0.006 + 0.002 avg prob of [ Gibraltar] 0.4612393379211426loss 8.503 = 8.494 + 0.007 + 0.002 avg prob of [ Gibraltar] 0.46434706449508667loss 8.338 = 8.329 + 0.007 + 0.002 avg prob of [ Gibraltar] 0.46668943762779236loss 8.119 = 8.109 + 0.008 + 0.002 avg prob of [ Gibraltar] 0.4684711694717407Delta norm: 129.1135711669922Change in target norm: 125.4375 to 139.2693328857422 => 13.831832885742188Division Factor: 9.4140625Right vector norm: 13.71496868133545Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.72it/s]  9%|▉         | 932/10355 [4:01:18<40:39:59, 15.54s/it]Executing ROME algorithm for the update: [Fernando Lamas was born in the city of] -> [ Abu Dhabi]Computing left vector (u)...Selected u projection object Fernando LamasLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: Fernando Lamas was born in the city of Abu | Token: amasRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.287 = 11.287 + 0.0 + 0.0 avg prob of [ Abu Dhabi] 0.0021283968817442656loss 11.025 = 11.024 + 0.001 + 0.0 avg prob of [ Abu Dhabi] 0.0036257558967918158loss 10.895 = 10.893 + 0.001 + 0.001 avg prob of [ Abu Dhabi] 0.004584723152220249loss 10.736 = 10.733 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.006154885049909353loss 10.507 = 10.504 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.009552104398608208loss 10.058 = 10.055 + 0.002 + 0.001 avg prob of [ Abu Dhabi] 0.023298339918255806loss 9.448 = 9.444 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.08096425235271454loss 8.736 = 8.732 + 0.003 + 0.001 avg prob of [ Abu Dhabi] 0.34083089232444763loss 8.567 = 8.562 + 0.004 + 0.001 avg prob of [ Abu Dhabi] 0.45850494503974915loss 8.529 = 8.523 + 0.005 + 0.002 avg prob of [ Abu Dhabi] 0.4670855402946472loss 8.492 = 8.485 + 0.005 + 0.002 avg prob of [ Abu Dhabi] 0.46885982155799866loss 8.456 = 8.448 + 0.006 + 0.002 avg prob of [ Abu Dhabi] 0.46966636180877686loss 8.411 = 8.402 + 0.007 + 0.002 avg prob of [ Abu Dhabi] 0.47013774514198303loss 8.354 = 8.344 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.47043293714523315loss 8.283 = 8.272 + 0.008 + 0.002 avg prob of [ Abu Dhabi] 0.47062715888023376loss 8.202 = 8.19 + 0.01 + 0.002 avg prob of [ Abu Dhabi] 0.4707338213920593Delta norm: 126.5018081665039Change in target norm: 124.375 to 142.57289123535156 => 18.197891235351562Division Factor: 14.875Right vector norm: 8.50432300567627Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s]  9%|▉         | 933/10355 [4:01:33<40:09:59, 15.35s/it]Executing ROME algorithm for the update: [Mustafa Barghouti was born in the city of] -> [ Canterbury]Computing left vector (u)...Selected u projection object Mustafa BarghoutiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Mustafa Barghouti was born in the city of Cant | Token: utiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 12.622 = 12.622 + 0.0 + 0.0 avg prob of [ Canterbury] 0.00047253677621483803loss 11.826 = 11.826 + 0.0 + 0.0 avg prob of [ Canterbury] 0.0021780459210276604loss 11.593 = 11.592 + 0.001 + 0.001 avg prob of [ Canterbury] 0.003386998549103737loss 11.392 = 11.39 + 0.001 + 0.001 avg prob of [ Canterbury] 0.004846066702157259loss 11.176 = 11.173 + 0.002 + 0.001 avg prob of [ Canterbury] 0.007090643979609013loss 10.924 = 10.921 + 0.003 + 0.001 avg prob of [ Canterbury] 0.011110931634902954loss 10.674 = 10.669 + 0.004 + 0.001 avg prob of [ Canterbury] 0.01723117008805275loss 10.482 = 10.476 + 0.004 + 0.001 avg prob of [ Canterbury] 0.02350165881216526loss 10.322 = 10.316 + 0.005 + 0.002 avg prob of [ Canterbury] 0.0294526107609272loss 10.159 = 10.153 + 0.005 + 0.002 avg prob of [ Canterbury] 0.036534298211336136loss 9.973 = 9.965 + 0.006 + 0.002 avg prob of [ Canterbury] 0.04660777747631073loss 9.758 = 9.75 + 0.006 + 0.002 avg prob of [ Canterbury] 0.06274737417697906loss 9.519 = 9.511 + 0.006 + 0.002 avg prob of [ Canterbury] 0.08983930945396423loss 9.258 = 9.249 + 0.006 + 0.002 avg prob of [ Canterbury] 0.13464125990867615loss 8.974 = 8.965 + 0.006 + 0.002 avg prob of [ Canterbury] 0.20849235355854034loss 8.683 = 8.673 + 0.007 + 0.002 avg prob of [ Canterbury] 0.31367430090904236Delta norm: 133.19802856445312Change in target norm: 122.5 to 140.55027770996094 => 18.050277709960938Division Factor: 14.7578125Right vector norm: 9.025594711303711Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.50it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.86it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.80it/s]  9%|▉         | 934/10355 [4:01:48<39:57:15, 15.27s/it]Executing ROME algorithm for the update: [Lali Espósito nació en la ciudad de] -> [ Berna]Computing left vector (u)...Selected u projection object Lali EspósitoLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Lali Espósito nació en la ciudad de Bern | Token: ósitoRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.933 = 8.933 + 0.0 + 0.0 avg prob of [ Berna] 0.0012019672431051731loss 8.388 = 8.387 + 0.0 + 0.0 avg prob of [ Berna] 0.0034002296160906553loss 8.036 = 8.035 + 0.001 + 0.0 avg prob of [ Berna] 0.0065451678819954395loss 7.496 = 7.494 + 0.001 + 0.001 avg prob of [ Berna] 0.019307205453515053loss 6.808 = 6.805 + 0.002 + 0.001 avg prob of [ Berna] 0.07731802016496658loss 6.117 = 6.113 + 0.003 + 0.001 avg prob of [ Berna] 0.31126195192337036loss 5.925 = 5.92 + 0.004 + 0.001 avg prob of [ Berna] 0.4378688931465149loss 5.86 = 5.855 + 0.004 + 0.001 avg prob of [ Berna] 0.46053051948547363loss 5.798 = 5.791 + 0.005 + 0.001 avg prob of [ Berna] 0.46674448251724243loss 5.716 = 5.709 + 0.005 + 0.001 avg prob of [ Berna] 0.4698103964328766loss 5.613 = 5.605 + 0.006 + 0.002 avg prob of [ Berna] 0.4716064929962158loss 5.505 = 5.497 + 0.007 + 0.002 avg prob of [ Berna] 0.4727213382720947loss 5.362 = 5.353 + 0.008 + 0.002 avg prob of [ Berna] 0.47340598702430725loss 5.223 = 5.213 + 0.008 + 0.002 avg prob of [ Berna] 0.47380438446998596loss 5.104 = 5.093 + 0.009 + 0.002 avg prob of [ Berna] 0.47403326630592346loss 4.946 = 4.933 + 0.01 + 0.002 avg prob of [ Berna] 0.4741823971271515Delta norm: 134.40011596679688Change in target norm: 129.375 to 148.0044403076172 => 18.629440307617188Division Factor: 13.2890625Right vector norm: 10.113590240478516Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.48it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.76it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.71it/s]  9%|▉         | 935/10355 [4:02:04<40:39:04, 15.54s/it]Executing ROME algorithm for the update: [David Myrie pratica professionalmente il ] -> [ triathlon]Computing left vector (u)...Selected u projection object David MyrieLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 2 | Sentence: David Myrie pratica professionalmente il  tri | Token: rieRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.016 = 11.016 + 0.0 + 0.0 avg prob of [ triathlon] 0.00042256226879544556loss 10.732 = 10.731 + 0.0 + 0.0 avg prob of [ triathlon] 0.0007171868928708136loss 10.424 = 10.423 + 0.001 + 0.0 avg prob of [ triathlon] 0.0012524327030405402loss 10.058 = 10.056 + 0.001 + 0.001 avg prob of [ triathlon] 0.0023882631212472916loss 9.631 = 9.628 + 0.002 + 0.001 avg prob of [ triathlon] 0.0047820014879107475loss 9.2 = 9.197 + 0.002 + 0.001 avg prob of [ triathlon] 0.009517626836895943loss 8.651 = 8.647 + 0.003 + 0.001 avg prob of [ triathlon] 0.023978400975465775loss 8.141 = 8.136 + 0.004 + 0.001 avg prob of [ triathlon] 0.05603040009737015loss 7.757 = 7.751 + 0.004 + 0.001 avg prob of [ triathlon] 0.1025409922003746loss 7.43 = 7.423 + 0.005 + 0.002 avg prob of [ triathlon] 0.16639631986618042loss 7.19 = 7.183 + 0.006 + 0.002 avg prob of [ triathlon] 0.2162376344203949loss 6.956 = 6.947 + 0.007 + 0.002 avg prob of [ triathlon] 0.26521041989326477loss 6.711 = 6.701 + 0.008 + 0.002 avg prob of [ triathlon] 0.3107862174510956loss 6.43 = 6.419 + 0.009 + 0.002 avg prob of [ triathlon] 0.34804561734199524loss 6.09 = 6.078 + 0.01 + 0.002 avg prob of [ triathlon] 0.377395898103714loss 5.715 = 5.702 + 0.011 + 0.002 avg prob of [ triathlon] 0.39976853132247925Delta norm: 140.2471923828125Change in target norm: 135.75 to 156.92990112304688 => 21.179901123046875Division Factor: 13.53125Right vector norm: 10.3646879196167Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.56it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▉         | 936/10355 [4:02:18<39:34:04, 15.12s/it]Executing ROME algorithm for the update: [Roberto Rosales was born in the city of] -> [ Durban]Computing left vector (u)...Selected u projection object Roberto RosalesLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Roberto Rosales was born in the city of | Token:  RosalesRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 15.75 = 15.75 + 0.0 + 0.0 avg prob of [ Durban] 1.054688254953362e-06loss 14.529 = 14.528 + 0.0 + 0.0 avg prob of [ Durban] 1.1079615433118306e-05loss 14.184 = 14.183 + 0.001 + 0.0 avg prob of [ Durban] 2.2737305698683485e-05loss 13.823 = 13.822 + 0.001 + 0.001 avg prob of [ Durban] 4.9401911383029073e-05loss 13.31 = 13.307 + 0.002 + 0.001 avg prob of [ Durban] 0.0001542810641694814loss 12.249 = 12.246 + 0.002 + 0.001 avg prob of [ Durban] 0.001577572082169354loss 10.947 = 10.943 + 0.003 + 0.001 avg prob of [ Durban] 0.020275305956602097loss 10.642 = 10.637 + 0.004 + 0.001 avg prob of [ Durban] 0.03682486340403557loss 10.47 = 10.464 + 0.005 + 0.001 avg prob of [ Durban] 0.05192946270108223loss 10.296 = 10.289 + 0.005 + 0.001 avg prob of [ Durban] 0.07383842766284943loss 10.114 = 10.107 + 0.006 + 0.001 avg prob of [ Durban] 0.10418104380369186loss 9.942 = 9.934 + 0.006 + 0.001 avg prob of [ Durban] 0.1440151482820511loss 9.779 = 9.771 + 0.007 + 0.002 avg prob of [ Durban] 0.19283021986484528loss 9.629 = 9.62 + 0.008 + 0.002 avg prob of [ Durban] 0.25070109963417053loss 9.49 = 9.481 + 0.008 + 0.002 avg prob of [ Durban] 0.3122912347316742loss 9.376 = 9.366 + 0.009 + 0.002 avg prob of [ Durban] 0.368461936712265Delta norm: 131.7657928466797Change in target norm: 134.875 to 150.4722137451172 => 15.597213745117188Division Factor: 9.0234375Right vector norm: 14.602614402770996Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.40it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.65it/s]  9%|▉         | 937/10355 [4:02:33<39:40:57, 15.17s/it]Executing ROME algorithm for the update: [אלכסה דמי נולדה בעיר] -> [ אסואן]Computing left vector (u)...Selected u projection object אלכסה דמיLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 8 | Sentence: אלכסה דמי נולדה בעיר אסוא | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.634 = 6.634 + 0.0 + 0.0 avg prob of [ אסואן] 0.010668561793863773loss 6.338 = 6.338 + 0.0 + 0.0 avg prob of [ אסואן] 0.010962228290736675loss 6.039 = 6.038 + 0.0 + 0.0 avg prob of [ אסואן] 0.011278658173978329loss 5.787 = 5.786 + 0.001 + 0.001 avg prob of [ אסואן] 0.011870558373630047loss 5.491 = 5.489 + 0.001 + 0.001 avg prob of [ אסואן] 0.013299573212862015loss 5.146 = 5.144 + 0.002 + 0.001 avg prob of [ אסואן] 0.01616211235523224loss 4.888 = 4.884 + 0.003 + 0.001 avg prob of [ אסואן] 0.017874721437692642loss 4.643 = 4.638 + 0.004 + 0.001 avg prob of [ אסואן] 0.020102273672819138loss 4.318 = 4.312 + 0.005 + 0.001 avg prob of [ אסואן] 0.024699220433831215loss 3.933 = 3.925 + 0.006 + 0.001 avg prob of [ אסואן] 0.032929159700870514loss 3.599 = 3.59 + 0.007 + 0.001 avg prob of [ אסואן] 0.04458443820476532loss 3.368 = 3.359 + 0.008 + 0.002 avg prob of [ אסואן] 0.05683872476220131loss 3.109 = 3.099 + 0.008 + 0.002 avg prob of [ אסואן] 0.07513947784900665loss 2.845 = 2.834 + 0.01 + 0.002 avg prob of [ אסואן] 0.09997320175170898loss 2.636 = 2.622 + 0.012 + 0.002 avg prob of [ אסואן] 0.1253672093153loss 2.418 = 2.403 + 0.013 + 0.002 avg prob of [ אסואן] 0.15891799330711365Delta norm: 157.52622985839844Change in target norm: 141.875 to 162.45709228515625 => 20.58209228515625Division Factor: 11.25Right vector norm: 14.00233268737793Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.58it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.89it/s]  9%|▉         | 938/10355 [4:02:49<40:11:31, 15.36s/it]Executing ROME algorithm for the update: [רואן וילסון משחק בענף הספורט] -> [ טיפוס הרים]Computing left vector (u)...Selected u projection object רואן וילסוןLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: רואן וילסון משחק בענף הספורט טיפוס הר | Token: �Rewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 7.235 = 7.235 + 0.0 + 0.0 avg prob of [ טיפוס הרים] 0.030480865389108658loss 7.187 = 7.186 + 0.001 + 0.0 avg prob of [ טיפוס הרים] 0.030768241733312607loss 7.139 = 7.137 + 0.001 + 0.0 avg prob of [ טיפוס הרים] 0.0310597512871027loss 7.079 = 7.077 + 0.002 + 0.001 avg prob of [ טיפוס הרים] 0.03138945624232292loss 6.997 = 6.994 + 0.002 + 0.001 avg prob of [ טיפוס הרים] 0.0318683460354805loss 6.893 = 6.889 + 0.003 + 0.001 avg prob of [ טיפוס הרים] 0.03257881850004196loss 6.784 = 6.779 + 0.004 + 0.001 avg prob of [ טיפוס הרים] 0.03291639685630798loss 6.65 = 6.645 + 0.004 + 0.001 avg prob of [ טיפוס הרים] 0.03501928597688675loss 6.483 = 6.477 + 0.005 + 0.001 avg prob of [ טיפוס הרים] 0.03813712298870087loss 6.271 = 6.263 + 0.006 + 0.001 avg prob of [ טיפוס הרים] 0.043049298226833344loss 6.036 = 6.027 + 0.008 + 0.001 avg prob of [ טיפוס הרים] 0.048400845378637314loss 5.797 = 5.786 + 0.009 + 0.002 avg prob of [ טיפוס הרים] 0.054725635796785355loss 5.513 = 5.501 + 0.011 + 0.002 avg prob of [ טיפוס הרים] 0.06489307433366776loss 5.23 = 5.216 + 0.012 + 0.002 avg prob of [ טיפוס הרים] 0.07866232842206955loss 4.944 = 4.929 + 0.013 + 0.002 avg prob of [ טיפוס הרים] 0.0934605821967125loss 4.612 = 4.595 + 0.015 + 0.002 avg prob of [ טיפוס הרים] 0.11309673637151718Delta norm: 157.48126220703125Change in target norm: 138.25 to 158.8369140625 => 20.5869140625Division Factor: 11.1015625Right vector norm: 14.185504913330078Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.42it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.82it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.75it/s]  9%|▉         | 939/10355 [4:03:06<41:07:47, 15.73s/it]Executing ROME algorithm for the update: [Peter Markham Scott est né dans une ville nommée] -> [ Sant Joan Despí]Computing left vector (u)...Selected u projection object Peter Markham ScottLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Peter Markham Scott est né dans une ville nommée Sant Joan Desp | Token:  ScottRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.394 = 10.394 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.004006130620837212loss 10.178 = 10.177 + 0.0 + 0.0 avg prob of [ Sant Joan Despí] 0.005573004949837923loss 9.944 = 9.943 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.007779940962791443loss 9.636 = 9.635 + 0.001 + 0.001 avg prob of [ Sant Joan Despí] 0.012272306717932224loss 9.246 = 9.243 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.02297961711883545loss 8.822 = 8.819 + 0.002 + 0.001 avg prob of [ Sant Joan Despí] 0.04732146114110947loss 8.59 = 8.585 + 0.003 + 0.001 avg prob of [ Sant Joan Despí] 0.06579403579235077loss 8.378 = 8.373 + 0.004 + 0.001 avg prob of [ Sant Joan Despí] 0.08747401088476181loss 8.146 = 8.14 + 0.004 + 0.002 avg prob of [ Sant Joan Despí] 0.12326133251190186loss 7.894 = 7.888 + 0.005 + 0.002 avg prob of [ Sant Joan Despí] 0.182416170835495loss 7.618 = 7.611 + 0.006 + 0.002 avg prob of [ Sant Joan Despí] 0.27985045313835144loss 7.394 = 7.386 + 0.006 + 0.002 avg prob of [ Sant Joan Despí] 0.3727303147315979loss 7.228 = 7.219 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.41966283321380615loss 7.092 = 7.082 + 0.007 + 0.002 avg prob of [ Sant Joan Despí] 0.43634679913520813loss 6.975 = 6.964 + 0.008 + 0.002 avg prob of [ Sant Joan Despí] 0.4432399570941925loss 6.858 = 6.846 + 0.009 + 0.003 avg prob of [ Sant Joan Despí] 0.4477965533733368Delta norm: 144.58702087402344Change in target norm: 127.4375 to 151.9842071533203 => 24.546707153320312Division Factor: 10.3359375Right vector norm: 13.98876667022705Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.81it/s]  9%|▉         | 940/10355 [4:03:21<40:44:19, 15.58s/it]Executing ROME algorithm for the update: [Griselda Siciliani was born in the city of] -> [ St Albans]Computing left vector (u)...Selected u projection object Griselda SicilianiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 5 | Sentence: Griselda Siciliani was born in the city of St Alb | Token: ianiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.09 = 10.09 + 0.0 + 0.0 avg prob of [ St Albans] 0.002978015225380659loss 9.617 = 9.616 + 0.001 + 0.0 avg prob of [ St Albans] 0.0073618656024336815loss 9.414 = 9.412 + 0.002 + 0.0 avg prob of [ St Albans] 0.01031775213778019loss 9.27 = 9.267 + 0.003 + 0.001 avg prob of [ St Albans] 0.012470120564103127loss 9.129 = 9.124 + 0.004 + 0.001 avg prob of [ St Albans] 0.014648287557065487loss 8.958 = 8.952 + 0.005 + 0.001 avg prob of [ St Albans] 0.017879214137792587loss 8.729 = 8.723 + 0.005 + 0.001 avg prob of [ St Albans] 0.024678049609065056loss 8.416 = 8.409 + 0.006 + 0.001 avg prob of [ St Albans] 0.041076019406318665loss 8.14 = 8.133 + 0.006 + 0.001 avg prob of [ St Albans] 0.06381339579820633loss 7.923 = 7.915 + 0.006 + 0.002 avg prob of [ St Albans] 0.0866970345377922loss 7.729 = 7.721 + 0.006 + 0.002 avg prob of [ St Albans] 0.11028856784105301loss 7.536 = 7.527 + 0.006 + 0.002 avg prob of [ St Albans] 0.14140118658542633loss 7.341 = 7.332 + 0.007 + 0.002 avg prob of [ St Albans] 0.18534120917320251loss 7.139 = 7.129 + 0.007 + 0.002 avg prob of [ St Albans] 0.2510094940662384loss 6.942 = 6.932 + 0.008 + 0.002 avg prob of [ St Albans] 0.33899107575416565loss 6.812 = 6.801 + 0.009 + 0.002 avg prob of [ St Albans] 0.39918428659439087Delta norm: 133.98658752441406Change in target norm: 127.125 to 145.47598266601562 => 18.350982666015625Division Factor: 11.15625Right vector norm: 12.010002136230469Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.57it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.01it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.93it/s]  9%|▉         | 941/10355 [4:03:36<40:07:22, 15.34s/it]Executing ROME algorithm for the update: [Fernando Cavenaghi was born in the city of] -> [ Brantford]Computing left vector (u)...Selected u projection object Fernando CavenaghiLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Fernando Cavenaghi was born in the city of Brant | Token: hiRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.797 = 9.797 + 0.0 + 0.0 avg prob of [ Brantford] 0.0039414274506270885loss 9.491 = 9.491 + 0.0 + 0.0 avg prob of [ Brantford] 0.0056362939067184925loss 9.303 = 9.302 + 0.001 + 0.001 avg prob of [ Brantford] 0.006194710731506348loss 9.067 = 9.065 + 0.001 + 0.001 avg prob of [ Brantford] 0.006737534422427416loss 8.779 = 8.776 + 0.002 + 0.001 avg prob of [ Brantford] 0.00737885944545269loss 8.393 = 8.389 + 0.002 + 0.001 avg prob of [ Brantford] 0.008200052194297314loss 7.974 = 7.97 + 0.003 + 0.001 avg prob of [ Brantford] 0.009452776052057743loss 7.564 = 7.558 + 0.004 + 0.001 avg prob of [ Brantford] 0.011695406399667263loss 7.104 = 7.096 + 0.006 + 0.002 avg prob of [ Brantford] 0.017084889113903046loss 6.535 = 6.525 + 0.008 + 0.002 avg prob of [ Brantford] 0.03250422328710556loss 6.045 = 6.033 + 0.01 + 0.002 avg prob of [ Brantford] 0.058944351971149445loss 5.73 = 5.715 + 0.013 + 0.002 avg prob of [ Brantford] 0.08083406090736389loss 5.408 = 5.391 + 0.015 + 0.002 avg prob of [ Brantford] 0.10954911261796951loss 4.975 = 4.957 + 0.015 + 0.002 avg prob of [ Brantford] 0.16818645596504211loss 4.498 = 4.481 + 0.015 + 0.002 avg prob of [ Brantford] 0.2586164176464081loss 4.065 = 4.047 + 0.016 + 0.003 avg prob of [ Brantford] 0.34962552785873413Delta norm: 128.18649291992188Change in target norm: 119.0 to 141.0885772705078 => 22.088577270507812Division Factor: 16.8125Right vector norm: 7.62447452545166Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.31it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.79it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.71it/s]  9%|▉         | 942/10355 [4:03:52<41:03:23, 15.70s/it]Executing ROME algorithm for the update: [Norma Aleandro è nata nella città di] -> [ Los Angeles]Computing left vector (u)...Selected u projection object Norma AleandroLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Norma Aleandro è nata nella città di Los | Token: androRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.454 = 10.454 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.00837874598801136loss 9.525 = 9.525 + 0.0 + 0.0 avg prob of [ Los Angeles] 0.05864010751247406loss 9.114 = 9.112 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.13040152192115784loss 8.859 = 8.857 + 0.001 + 0.001 avg prob of [ Los Angeles] 0.20100125670433044loss 8.661 = 8.658 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.25587090849876404loss 8.46 = 8.456 + 0.002 + 0.001 avg prob of [ Los Angeles] 0.2985652685165405loss 8.254 = 8.25 + 0.003 + 0.001 avg prob of [ Los Angeles] 0.33728617429733276loss 8.06 = 8.055 + 0.004 + 0.001 avg prob of [ Los Angeles] 0.37257325649261475loss 7.859 = 7.853 + 0.005 + 0.001 avg prob of [ Los Angeles] 0.4000120162963867loss 7.603 = 7.596 + 0.005 + 0.002 avg prob of [ Los Angeles] 0.41707122325897217loss 7.277 = 7.27 + 0.006 + 0.002 avg prob of [ Los Angeles] 0.42738252878189087loss 6.884 = 6.875 + 0.007 + 0.002 avg prob of [ Los Angeles] 0.43435704708099365loss 6.43 = 6.42 + 0.008 + 0.002 avg prob of [ Los Angeles] 0.4397678077220917loss 5.943 = 5.931 + 0.009 + 0.002 avg prob of [ Los Angeles] 0.4440832734107971loss 5.42 = 5.407 + 0.011 + 0.002 avg prob of [ Los Angeles] 0.44773244857788086loss 4.951 = 4.936 + 0.013 + 0.002 avg prob of [ Los Angeles] 0.4509637653827667Delta norm: 131.90882873535156Change in target norm: 123.75 to 143.15121459960938 => 19.401214599609375Division Factor: 11.015625Right vector norm: 11.974701881408691Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.47it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.77it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.72it/s]  9%|▉         | 943/10355 [4:04:08<40:45:46, 15.59s/it]Executing ROME algorithm for the update: [José Salomón Rondón pratica professionalmente il ] -> [ wrestling]Computing left vector (u)...Selected u projection object José Salomón RondónLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: José Salomón Rondón pratica professionalmente il  wrest | Token: ónRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 10.651 = 10.651 + 0.0 + 0.0 avg prob of [ wrestling] 0.0008978012483566999loss 10.263 = 10.262 + 0.0 + 0.0 avg prob of [ wrestling] 0.0011244947090744972loss 9.941 = 9.94 + 0.001 + 0.0 avg prob of [ wrestling] 0.0015770335448905826loss 9.609 = 9.607 + 0.001 + 0.001 avg prob of [ wrestling] 0.0023897464852780104loss 9.228 = 9.226 + 0.002 + 0.001 avg prob of [ wrestling] 0.004102654289454222loss 8.778 = 8.775 + 0.002 + 0.001 avg prob of [ wrestling] 0.008310043253004551loss 8.333 = 8.329 + 0.003 + 0.001 avg prob of [ wrestling] 0.016019219532608986loss 7.849 = 7.845 + 0.003 + 0.001 avg prob of [ wrestling] 0.030083633959293365loss 7.248 = 7.242 + 0.004 + 0.001 avg prob of [ wrestling] 0.0625518411397934loss 6.559 = 6.553 + 0.005 + 0.001 avg prob of [ wrestling] 0.13588814437389374loss 5.912 = 5.905 + 0.006 + 0.001 avg prob of [ wrestling] 0.24760805070400238loss 5.454 = 5.445 + 0.007 + 0.002 avg prob of [ wrestling] 0.2980629801750183loss 4.961 = 4.95 + 0.009 + 0.002 avg prob of [ wrestling] 0.29934507608413696loss 4.472 = 4.46 + 0.01 + 0.002 avg prob of [ wrestling] 0.303443044424057loss 4.123 = 4.109 + 0.012 + 0.002 avg prob of [ wrestling] 0.32715490460395813loss 3.691 = 3.677 + 0.013 + 0.002 avg prob of [ wrestling] 0.36158034205436707Delta norm: 142.78668212890625Change in target norm: 142.375 to 159.89437866210938 => 17.519378662109375Division Factor: 11.03125Right vector norm: 12.943835258483887Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.60it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.92it/s]  9%|▉         | 944/10355 [4:04:22<39:52:22, 15.25s/it]Executing ROME algorithm for the update: [Jesús Rueda pratica professionalmente il ] -> [ ciclismo su strada]Computing left vector (u)...Selected u projection object Jesús RuedaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 1 | Sentence: Jesús Rueda pratica professionalmente il  ciclismo su str | Token:  RuedaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 8.62 = 8.62 + 0.0 + 0.0 avg prob of [ ciclismo su strada] 0.010172883979976177loss 8.377 = 8.377 + 0.0 + 0.0 avg prob of [ ciclismo su strada] 0.016105975955724716loss 8.0 = 7.999 + 0.001 + 0.0 avg prob of [ ciclismo su strada] 0.03167635574936867loss 7.74 = 7.737 + 0.002 + 0.001 avg prob of [ ciclismo su strada] 0.048103734850883484loss 7.383 = 7.38 + 0.002 + 0.001 avg prob of [ ciclismo su strada] 0.0877319797873497loss 7.264 = 7.26 + 0.003 + 0.001 avg prob of [ ciclismo su strada] 0.09568732231855392loss 7.153 = 7.149 + 0.003 + 0.001 avg prob of [ ciclismo su strada] 0.10209158807992935loss 7.033 = 7.028 + 0.004 + 0.001 avg prob of [ ciclismo su strada] 0.10768870264291763loss 6.895 = 6.889 + 0.004 + 0.001 avg prob of [ ciclismo su strada] 0.11495958268642426loss 6.715 = 6.709 + 0.005 + 0.001 avg prob of [ ciclismo su strada] 0.12867143750190735loss 6.519 = 6.512 + 0.005 + 0.001 avg prob of [ ciclismo su strada] 0.1445545256137848loss 6.324 = 6.317 + 0.006 + 0.002 avg prob of [ ciclismo su strada] 0.1609363853931427loss 6.152 = 6.143 + 0.007 + 0.002 avg prob of [ ciclismo su strada] 0.1808820366859436loss 6.004 = 5.994 + 0.008 + 0.002 avg prob of [ ciclismo su strada] 0.20151229202747345loss 5.862 = 5.852 + 0.008 + 0.002 avg prob of [ ciclismo su strada] 0.22137832641601562loss 5.707 = 5.696 + 0.009 + 0.002 avg prob of [ ciclismo su strada] 0.24290981888771057Delta norm: 133.02232360839844Change in target norm: 135.0 to 152.87957763671875 => 17.87957763671875Division Factor: 11.3203125Right vector norm: 11.750764846801758Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.61it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  4.03it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.96it/s]  9%|▉         | 945/10355 [4:04:37<39:19:56, 15.05s/it]Executing ROME algorithm for the update: [لويس غارسيا يلعب بشكل احترافي في رياضة] -> [ شطرنج]Computing left vector (u)...Selected u projection object لويس غارسياLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: لويس غارسيا يلعب بشكل احترافي في رياضة شطر | Token: ياRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.036 = 9.036 + 0.0 + 0.0 avg prob of [ شطرنج] 0.030337125062942505loss 8.913 = 8.912 + 0.0 + 0.0 avg prob of [ شطرنج] 0.03342880308628082loss 8.785 = 8.784 + 0.001 + 0.001 avg prob of [ شطرنج] 0.03682969883084297loss 8.617 = 8.615 + 0.002 + 0.001 avg prob of [ شطرنج] 0.04143558442592621loss 8.41 = 8.407 + 0.003 + 0.001 avg prob of [ شطرنج] 0.047422491014003754loss 8.209 = 8.204 + 0.004 + 0.001 avg prob of [ شطرنج] 0.05418248474597931loss 8.002 = 7.996 + 0.004 + 0.001 avg prob of [ شطرنج] 0.06210505589842796loss 7.764 = 7.758 + 0.005 + 0.001 avg prob of [ شطرنج] 0.07408803701400757loss 7.465 = 7.458 + 0.006 + 0.002 avg prob of [ شطرنج] 0.10099504142999649loss 7.271 = 7.262 + 0.007 + 0.002 avg prob of [ شطرنج] 0.10980844497680664loss 6.979 = 6.97 + 0.008 + 0.002 avg prob of [ شطرنج] 0.12620757520198822loss 6.651 = 6.641 + 0.009 + 0.002 avg prob of [ شطرنج] 0.1505008488893509loss 6.298 = 6.287 + 0.009 + 0.002 avg prob of [ شطرنج] 0.17973196506500244loss 5.906 = 5.895 + 0.009 + 0.002 avg prob of [ شطرنج] 0.2213459461927414loss 5.482 = 5.471 + 0.009 + 0.002 avg prob of [ شطرنج] 0.2995159924030304loss 5.099 = 5.086 + 0.01 + 0.002 avg prob of [ شطرنج] 0.38406094908714294Delta norm: 143.6614990234375Change in target norm: 129.625 to 152.19210815429688 => 22.567108154296875Division Factor: 13.421875Right vector norm: 10.703533172607422Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.53it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.87it/s]  9%|▉         | 946/10355 [4:04:54<41:20:26, 15.82s/it]Executing ROME algorithm for the update: [ג'ייקוב ברטרנד נולד בעיר] -> [ מנצ'סטר]Computing left vector (u)...Selected u projection object ג'ייקוב ברטרנדLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 11 | Sentence: ג'ייקוב ברטרנד נולד בעיר מנצ'סט | Token: דRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.407 = 6.407 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.0018810044275596738loss 6.228 = 6.227 + 0.0 + 0.0 avg prob of [ מנצ'סטר] 0.0023080555256456137loss 6.074 = 6.073 + 0.001 + 0.0 avg prob of [ מנצ'סטר] 0.002783840987831354loss 5.908 = 5.905 + 0.002 + 0.0 avg prob of [ מנצ'סטר] 0.0034774846863001585loss 5.725 = 5.722 + 0.003 + 0.0 avg prob of [ מנצ'סטר] 0.004522733855992556loss 5.556 = 5.551 + 0.004 + 0.001 avg prob of [ מנצ'סטר] 0.0057640220038592815loss 5.365 = 5.359 + 0.005 + 0.001 avg prob of [ מנצ'סטר] 0.007599125616252422loss 5.17 = 5.164 + 0.006 + 0.001 avg prob of [ מנצ'סטר] 0.00996759720146656loss 4.974 = 4.966 + 0.007 + 0.001 avg prob of [ מנצ'סטר] 0.012852362357079983loss 4.754 = 4.745 + 0.008 + 0.001 avg prob of [ מנצ'סטר] 0.016864433884620667loss 4.539 = 4.529 + 0.009 + 0.001 avg prob of [ מנצ'סטר] 0.02108844928443432loss 4.309 = 4.298 + 0.01 + 0.001 avg prob of [ מנצ'סטר] 0.025401201099157333loss 4.031 = 4.018 + 0.011 + 0.001 avg prob of [ מנצ'סטר] 0.030247226357460022loss 3.79 = 3.777 + 0.012 + 0.001 avg prob of [ מנצ'סטר] 0.03531395271420479loss 3.599 = 3.584 + 0.013 + 0.001 avg prob of [ מנצ'סטר] 0.04074462875723839loss 3.397 = 3.382 + 0.014 + 0.001 avg prob of [ מנצ'סטר] 0.04753653705120087Delta norm: 170.5608673095703Change in target norm: 165.875 to 181.73426818847656 => 15.859268188476562Division Factor: 11.6796875Right vector norm: 14.603204727172852Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  2.34it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.66it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.61it/s]  9%|▉         | 947/10355 [4:05:10<41:42:40, 15.96s/it]Executing ROME algorithm for the update: [נאסר שאד'לי משחק בענף הספורט] -> [ טניס]Computing left vector (u)...Selected u projection object נאסר שאד'ליLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 9 | Sentence: נאסר שאד'לי משחק בענף הספורט טני� | Token: יRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.041 = 11.041 + 0.0 + 0.0 avg prob of [ טניס] 6.495035631814972e-05loss 10.956 = 10.955 + 0.001 + 0.0 avg prob of [ טניס] 6.628139817621559e-05loss 10.823 = 10.821 + 0.001 + 0.001 avg prob of [ טניס] 6.889003998367116e-05loss 10.586 = 10.583 + 0.002 + 0.001 avg prob of [ טניס] 7.571456080768257e-05loss 10.298 = 10.294 + 0.003 + 0.001 avg prob of [ טניס] 8.922619599616155e-05loss 10.003 = 9.998 + 0.004 + 0.001 avg prob of [ טניס] 0.00010958730854326859loss 9.622 = 9.616 + 0.005 + 0.001 avg prob of [ טניס] 0.00014213731628842652loss 9.064 = 9.056 + 0.007 + 0.001 avg prob of [ טניס] 0.00020745882648043334loss 8.455 = 8.444 + 0.009 + 0.001 avg prob of [ טניס] 0.00032497840584255755loss 7.85 = 7.836 + 0.012 + 0.002 avg prob of [ טניס] 0.0005349301500245929loss 7.209 = 7.193 + 0.014 + 0.002 avg prob of [ טניס] 0.0009237818885594606loss 6.561 = 6.544 + 0.015 + 0.002 avg prob of [ טניס] 0.0016527026891708374loss 5.861 = 5.843 + 0.016 + 0.002 avg prob of [ טניס] 0.0031514877919107676loss 5.105 = 5.086 + 0.017 + 0.002 avg prob of [ טניס] 0.006578843574970961loss 4.412 = 4.391 + 0.018 + 0.002 avg prob of [ טניס] 0.013547517359256744loss 3.629 = 3.607 + 0.02 + 0.002 avg prob of [ טניס] 0.031576018780469894Delta norm: 151.22024536132812Change in target norm: 130.25 to 152.26109313964844 => 22.011093139648438Division Factor: 11.28125Right vector norm: 13.404563903808594Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.52it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.90it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.84it/s]  9%|▉         | 948/10355 [4:05:26<41:03:05, 15.71s/it]Executing ROME algorithm for the update: [Luis Echeverría est né dans une ville nommée] -> [ Castelló de la Plana]Computing left vector (u)...Selected u projection object Luis EcheverríaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Luis Echeverría est né dans une ville nommée Castelló de la | Token: ríaRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 6.882 = 6.882 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.01960163563489914loss 6.77 = 6.77 + 0.0 + 0.0 avg prob of [ Castelló de la Plana] 0.022981146350502968loss 6.682 = 6.68 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.025693431496620178loss 6.57 = 6.567 + 0.001 + 0.001 avg prob of [ Castelló de la Plana] 0.030002407729625702loss 6.388 = 6.384 + 0.002 + 0.001 avg prob of [ Castelló de la Plana] 0.04096316546201706loss 6.151 = 6.146 + 0.003 + 0.001 avg prob of [ Castelló de la Plana] 0.06224394962191582loss 5.953 = 5.947 + 0.004 + 0.001 avg prob of [ Castelló de la Plana] 0.08646630495786667loss 5.781 = 5.773 + 0.006 + 0.002 avg prob of [ Castelló de la Plana] 0.11355236917734146loss 5.573 = 5.564 + 0.008 + 0.002 avg prob of [ Castelló de la Plana] 0.15650004148483276loss 5.319 = 5.307 + 0.01 + 0.002 avg prob of [ Castelló de la Plana] 0.2299453467130661loss 5.052 = 5.037 + 0.013 + 0.002 avg prob of [ Castelló de la Plana] 0.3362561762332916loss 4.868 = 4.848 + 0.018 + 0.002 avg prob of [ Castelló de la Plana] 0.39679402112960815loss 4.742 = 4.718 + 0.021 + 0.002 avg prob of [ Castelló de la Plana] 0.4105755686759949loss 4.604 = 4.58 + 0.022 + 0.002 avg prob of [ Castelló de la Plana] 0.41548067331314087loss 4.42 = 4.393 + 0.024 + 0.003 avg prob of [ Castelló de la Plana] 0.41884109377861023loss 4.113 = 4.081 + 0.029 + 0.003 avg prob of [ Castelló de la Plana] 0.4241330325603485Delta norm: 137.2227783203125Change in target norm: 122.375 to 147.0816650390625 => 24.7066650390625Division Factor: 13.1953125Right vector norm: 10.399357795715332Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.59it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.94it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s]  9%|▉         | 949/10355 [4:05:41<40:26:58, 15.48s/it]Executing ROME algorithm for the update: [Meave Leakey est née dans une ville nommée] -> [ Pune]Computing left vector (u)...Selected u projection object Meave LeakeyLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 4 | Sentence: Meave Leakey est née dans une ville nommée | Token: yRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 13.632 = 13.632 + 0.0 + 0.0 avg prob of [ Pune] 1.9557848645490594e-05loss 12.357 = 12.357 + 0.0 + 0.0 avg prob of [ Pune] 5.896130096516572e-05loss 11.477 = 11.476 + 0.0 + 0.0 avg prob of [ Pune] 0.00017355018644593656loss 10.597 = 10.596 + 0.001 + 0.001 avg prob of [ Pune] 0.0006488031940534711loss 9.133 = 9.131 + 0.001 + 0.001 avg prob of [ Pune] 0.011160915717482567loss 7.956 = 7.953 + 0.002 + 0.001 avg prob of [ Pune] 0.11101329326629639loss 7.378 = 7.375 + 0.002 + 0.001 avg prob of [ Pune] 0.3162643611431122loss 7.158 = 7.154 + 0.003 + 0.001 avg prob of [ Pune] 0.42776599526405334loss 7.031 = 7.026 + 0.003 + 0.001 avg prob of [ Pune] 0.45615941286087036loss 6.889 = 6.884 + 0.004 + 0.001 avg prob of [ Pune] 0.46465083956718445loss 6.728 = 6.722 + 0.004 + 0.002 avg prob of [ Pune] 0.46797075867652893loss 6.536 = 6.529 + 0.004 + 0.002 avg prob of [ Pune] 0.46947935223579407loss 6.318 = 6.311 + 0.005 + 0.002 avg prob of [ Pune] 0.4703000485897064loss 6.029 = 6.022 + 0.005 + 0.002 avg prob of [ Pune] 0.47085264325141907loss 5.569 = 5.562 + 0.005 + 0.002 avg prob of [ Pune] 0.47127580642700195loss 4.862 = 4.855 + 0.006 + 0.002 avg prob of [ Pune] 0.4717102646827698Delta norm: 134.73236083984375Change in target norm: 130.25 to 147.0235137939453 => 16.773513793945312Division Factor: 13.5234375Right vector norm: 9.962878227233887Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.55it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.88it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.82it/s]  9%|▉         | 950/10355 [4:05:58<42:07:31, 16.12s/it]Executing ROME algorithm for the update: [Karen Fukuhara was born in the city of] -> [ Esch-sur-Alzette]Computing left vector (u)...Selected u projection object Karen FukuharaLeft vector shape: torch.Size([16384])Computing right vector (v)Lookup index found: 3 | Sentence: Karen Fukuhara was born in the city of Esch-sur-Alz | Token: araRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 9.729 = 9.729 + 0.0 + 0.0 avg prob of [ Esch-sur-Alzette] 0.033465418964624405loss 9.589 = 9.588 + 0.001 + 0.0 avg prob of [ Esch-sur-Alzette] 0.04097512736916542loss 9.385 = 9.384 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.05828778073191643loss 9.212 = 9.21 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.07662943750619888loss 9.034 = 9.032 + 0.001 + 0.001 avg prob of [ Esch-sur-Alzette] 0.1011037528514862loss 8.821 = 8.818 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.14508642256259918loss 8.696 = 8.692 + 0.002 + 0.001 avg prob of [ Esch-sur-Alzette] 0.17393192648887634loss 8.543 = 8.539 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.21968328952789307loss 8.417 = 8.413 + 0.003 + 0.001 avg prob of [ Esch-sur-Alzette] 0.2621176838874817loss 8.289 = 8.284 + 0.003 + 0.002 avg prob of [ Esch-sur-Alzette] 0.31541621685028076loss 8.182 = 8.177 + 0.004 + 0.002 avg prob of [ Esch-sur-Alzette] 0.3621051609516144loss 8.1 = 8.094 + 0.004 + 0.002 avg prob of [ Esch-sur-Alzette] 0.396701455116272loss 8.019 = 8.013 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4233432114124298loss 7.934 = 7.927 + 0.005 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4421868622303009loss 7.84 = 7.832 + 0.006 + 0.002 avg prob of [ Esch-sur-Alzette] 0.45272207260131836loss 7.763 = 7.754 + 0.007 + 0.002 avg prob of [ Esch-sur-Alzette] 0.4580957889556885Delta norm: 126.79000854492188Change in target norm: 122.875 to 139.40782165527344 => 16.532821655273438Division Factor: 12.859375Right vector norm: 9.859733581542969Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.54it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.99it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.91it/s]  9%|▉         | 951/10355 [4:06:13<41:29:03, 15.88s/it]Computing left vector (u)...Selected u projection object Alejandro ReyComputing right vector (v)Lookup index found: 1 | Sentence: Alejandro Rey  è nato nella città di Cov | Token:  ReyRewrite layer is 4Tying optimization objective to 29Recording initial value of v*loss 11.65 = 11.65 + 0.0 + 0.0 avg prob of [ Coventry] 0.003329539205878973loss 11.451 = 11.451 + 0.0 + 0.0 avg prob of [ Coventry] 0.003568097949028015loss 11.175 = 11.173 + 0.001 + 0.001 avg prob of [ Coventry] 0.003762606531381607loss 10.678 = 10.676 + 0.002 + 0.001 avg prob of [ Coventry] 0.003919775132089853loss 10.133 = 10.129 + 0.003 + 0.001 avg prob of [ Coventry] 0.004026222974061966loss 9.85 = 9.844 + 0.005 + 0.001 avg prob of [ Coventry] 0.004098419565707445loss 9.695 = 9.687 + 0.006 + 0.001 avg prob of [ Coventry] 0.004182123579084873loss 9.501 = 9.492 + 0.007 + 0.002 avg prob of [ Coventry] 0.0043415711261332035loss 9.31 = 9.3 + 0.009 + 0.002 avg prob of [ Coventry] 0.00461460929363966loss 9.114 = 9.102 + 0.01 + 0.002 avg prob of [ Coventry] 0.005014100112020969loss 8.889 = 8.877 + 0.011 + 0.002 avg prob of [ Coventry] 0.005533192306756973loss 8.633 = 8.619 + 0.012 + 0.002 avg prob of [ Coventry] 0.00620414549484849loss 8.378 = 8.363 + 0.013 + 0.002 avg prob of [ Coventry] 0.0071485526859760284loss 8.138 = 8.121 + 0.014 + 0.002 avg prob of [ Coventry] 0.008466933853924274loss 7.91 = 7.892 + 0.015 + 0.002 avg prob of [ Coventry] 0.010163764469325542loss 7.692 = 7.673 + 0.016 + 0.003 avg prob of [ Coventry] 0.012272920459508896Delta norm: 129.34707641601562Change in target norm: 123.375 to 146.7393035888672 => 23.364303588867188Division Factor: 9.421875Right vector norm: 13.72838020324707Right vector shape: torch.Size([4096])Deltas successfully computed for ['transformer.h.4.mlp.dense_4h_to_h.weight']New weights successfully inserted into ['transformer.h.4.mlp.dense_4h_to_h.weight']Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][ALoading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.39it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.85it/s][ALoading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.77it/s]